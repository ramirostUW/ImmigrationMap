// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"emU3S":[function(require,module,exports) {
var Refresh = require('react-refresh/runtime');
Refresh.injectIntoGlobalHook(window);
window.$RefreshReg$ = function() {
};
window.$RefreshSig$ = function() {
    return function(type) {
        return type;
    };
};

},{"react-refresh/runtime":"aeH4U"}],"aeH4U":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react-refresh-runtime.development.js');

},{"./cjs/react-refresh-runtime.development.js":"8alcJ"}],"8alcJ":[function(require,module,exports) {
/** @license React v0.9.0
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 60103;
    var REACT_PORTAL_TYPE = 60106;
    var REACT_FRAGMENT_TYPE = 60107;
    var REACT_STRICT_MODE_TYPE = 60108;
    var REACT_PROFILER_TYPE = 60114;
    var REACT_PROVIDER_TYPE = 60109;
    var REACT_CONTEXT_TYPE = 60110;
    var REACT_FORWARD_REF_TYPE = 60112;
    var REACT_SUSPENSE_TYPE = 60113;
    var REACT_SUSPENSE_LIST_TYPE = 60120;
    var REACT_MEMO_TYPE = 60115;
    var REACT_LAZY_TYPE = 60116;
    var REACT_BLOCK_TYPE = 60121;
    var REACT_SERVER_BLOCK_TYPE = 60122;
    var REACT_FUNDAMENTAL_TYPE = 60117;
    var REACT_SCOPE_TYPE = 60119;
    var REACT_OPAQUE_ID_TYPE = 60128;
    var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
    var REACT_OFFSCREEN_TYPE = 60130;
    var REACT_LEGACY_HIDDEN_TYPE = 60131;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor('react.element');
        REACT_PORTAL_TYPE = symbolFor('react.portal');
        REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
        REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
        REACT_PROFILER_TYPE = symbolFor('react.profiler');
        REACT_PROVIDER_TYPE = symbolFor('react.provider');
        REACT_CONTEXT_TYPE = symbolFor('react.context');
        REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
        REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
        REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
        REACT_MEMO_TYPE = symbolFor('react.memo');
        REACT_LAZY_TYPE = symbolFor('react.lazy');
        REACT_BLOCK_TYPE = symbolFor('react.block');
        REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
        REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
        REACT_SCOPE_TYPE = symbolFor('react.scope');
        REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
        REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
        REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map; // We never remove these associations.
    // It's OK to reference families, but use WeakMap/Set for types.
    var allFamiliesByID = new Map();
    var allFamiliesByType = new PossiblyWeakMap();
    var allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families
    // that have actually been edited here. This keeps checks fast.
    // $FlowIssue
    var updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.
    // It is an array of [Family, NextType] tuples.
    var pendingUpdates = []; // This is injected by the renderer via DevTools global hook.
    var helpersByRendererID = new Map();
    var helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.
    var mountedRoots = new Set(); // If a root captures an error, we remember it so we can retry on edit.
    var failedRoots = new Set(); // In environments that support WeakMap, we also remember the last element for every root.
    // It needs to be weak because we do this even for roots that failed to mount.
    // If there is no WeakMap, we won't attempt to do retrying.
    // $FlowIssue
    var rootElements = typeof WeakMap === 'function' ? new WeakMap() : null;
    var isPerformingRefresh = false;
    function computeFullKey(signature) {
        if (signature.fullKey !== null) return signature.fullKey;
        var fullKey = signature.ownKey;
        var hooks;
        try {
            hooks = signature.getCustomHooks();
        } catch (err) {
            // This can happen in an edge case, e.g. if expression like Foo.useSomething
            // depends on Foo which is lazily initialized during rendering.
            // In that case just assume we'll have to remount.
            signature.forceReset = true;
            signature.fullKey = fullKey;
            return fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if (typeof hook !== 'function') {
                // Something's wrong. Assume we need to remount.
                signature.forceReset = true;
                signature.fullKey = fullKey;
                return fullKey;
            }
            var nestedHookSignature = allSignaturesByType.get(hook);
            if (nestedHookSignature === undefined) continue;
            var nestedHookKey = computeFullKey(nestedHookSignature);
            if (nestedHookSignature.forceReset) signature.forceReset = true;
            fullKey += '\n---\n' + nestedHookKey;
        }
        signature.fullKey = fullKey;
        return fullKey;
    }
    function haveEqualSignatures(prevType, nextType) {
        var prevSignature = allSignaturesByType.get(prevType);
        var nextSignature = allSignaturesByType.get(nextType);
        if (prevSignature === undefined && nextSignature === undefined) return true;
        if (prevSignature === undefined || nextSignature === undefined) return false;
        if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) return false;
        if (nextSignature.forceReset) return false;
        return true;
    }
    function isReactClass(type) {
        return type.prototype && type.prototype.isReactComponent;
    }
    function canPreserveStateBetween(prevType, nextType) {
        if (isReactClass(prevType) || isReactClass(nextType)) return false;
        if (haveEqualSignatures(prevType, nextType)) return true;
        return false;
    }
    function resolveFamily(type) {
        // Only check updated types to keep lookups fast.
        return updatedFamiliesByType.get(type);
    } // If we didn't care about IE11, we could use new Map/Set(iterable).
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function performReactRefresh() {
        if (pendingUpdates.length === 0) return null;
        if (isPerformingRefresh) return null;
        isPerformingRefresh = true;
        try {
            var staleFamilies = new Set();
            var updatedFamilies = new Set();
            var updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0], nextType = _ref[1];
                // Now that we got a real edit, we can create associations
                // that will be read by the React reconciler.
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(nextType, family);
                family.current = nextType; // Determine whether this should be a re-render or a re-mount.
                if (canPreserveStateBetween(prevType, nextType)) updatedFamilies.add(family);
                else staleFamilies.add(family);
            }); // TODO: rename these fields to something more meaningful.
            var update = {
                updatedFamilies: updatedFamilies,
                // Families that will re-render preserving state
                staleFamilies: staleFamilies // Families that will be remounted
            };
            helpersByRendererID.forEach(function(helpers) {
                // Even if there are no roots, set the handler on first update.
                // This ensures that if *new* roots are mounted, they'll use the resolve handler.
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = false;
            var firstError = null; // We snapshot maps and sets that are mutated during commits.
            // If we don't do this, there is a risk they will be mutated while
            // we iterate over them. For example, trying to recover a failed root
            // may cause another root to be added to the failed list -- an infinite loop.
            var failedRootsSnapshot = cloneSet(failedRoots);
            var mountedRootsSnapshot = cloneSet(mountedRoots);
            var helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
                failedRoots.has(root);
                if (rootElements === null) return;
                if (!rootElements.has(root)) return;
                var element = rootElements.get(root);
                try {
                    helpers.scheduleRoot(root, element);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = false;
        }
    }
    function register(type, id) {
        if (type === null) return;
        if (typeof type !== 'function' && typeof type !== 'object') return;
         // This can happen in an edge case, e.g. if we register
        // return value of a HOC but it returns a cached component.
        // Ignore anything but the first registration for each type.
        if (allFamiliesByType.has(type)) return;
         // Create family or remember to update it.
        // None of this bookkeeping affects reconciliation
        // until the first performReactRefresh() call above.
        var family = allFamiliesByID.get(id);
        if (family === undefined) {
            family = {
                current: type
            };
            allFamiliesByID.set(id, family);
        } else pendingUpdates.push([
            family,
            type
        ]);
        allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.
        if (typeof type === 'object' && type !== null) switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                register(type.render, id + '$render');
                break;
            case REACT_MEMO_TYPE:
                register(type.type, id + '$type');
                break;
        }
    }
    function setSignature(type, key) {
        var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;
        allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
    } // This is lazily called during first render for a type.
    // It captures Hook list at that time so inline requires don't break comparisons.
    function collectCustomHooksForSignature(type) {
        var signature = allSignaturesByType.get(type);
        if (signature !== undefined) computeFullKey(signature);
    }
    function getFamilyByID(id) {
        return allFamiliesByID.get(id);
    }
    function getFamilyByType(type) {
        return allFamiliesByType.get(type);
    }
    function findAffectedHostInstances(families) {
        var affectedInstances = new Set();
        mountedRoots.forEach(function(root) {
            var helpers = helpersByRoot.get(root);
            if (helpers === undefined) throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
            var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);
            instancesForRoot.forEach(function(inst) {
                affectedInstances.add(inst);
            });
        });
        return affectedInstances;
    }
    function injectIntoGlobalHook(globalObject) {
        // For React Native, the global hook will be set up by require('react-devtools-core').
        // That code will run before us. So we need to monkeypatch functions on existing hook.
        // For React Web, the global hook will be set up by the extension.
        // This will also run before us.
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook === undefined) {
            // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.
            // Note that in this case it's important that renderer code runs *after* this method call.
            // Otherwise, the renderer will think that there is no global hook, and won't do the injection.
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: true,
                inject: function(injected) {
                    return nextID++;
                },
                onScheduleFiberRoot: function(id, root, children) {
                },
                onCommitFiberRoot: function(id, root, maybePriorityLevel, didError) {
                },
                onCommitFiberUnmount: function() {
                }
            };
        } // Here, we just want to get a reference to scheduleRefresh.
        var oldInject = hook.inject;
        hook.inject = function(injected) {
            var id = oldInject.apply(this, arguments);
            if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
            return id;
        }; // Do the same for any already injected roots.
        // This is useful if ReactDOM has already been initialized.
        // https://github.com/facebook/react/issues/17626
        hook.renderers.forEach(function(injected, id) {
            if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
        }); // We also want to track currently mounted roots.
        var oldOnCommitFiberRoot = hook.onCommitFiberRoot;
        var oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {
        };
        hook.onScheduleFiberRoot = function(id, root, children) {
            if (!isPerformingRefresh) {
                // If it was intentionally scheduled, don't attempt to restore.
                // This includes intentionally scheduled unmounts.
                failedRoots.delete(root);
                if (rootElements !== null) rootElements.set(root, children);
            }
            return oldOnScheduleFiberRoot.apply(this, arguments);
        };
        hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
            var helpers = helpersByRendererID.get(id);
            if (helpers === undefined) return;
            helpersByRoot.set(root, helpers);
            var current = root.current;
            var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.
            // This logic is copy-pasted from similar logic in the DevTools backend.
            // If this breaks with some refactoring, you'll want to update DevTools too.
            if (alternate !== null) {
                var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null;
                var isMounted = current.memoizedState != null && current.memoizedState.element != null;
                if (!wasMounted && isMounted) {
                    // Mount a new root.
                    mountedRoots.add(root);
                    failedRoots.delete(root);
                } else if (wasMounted && isMounted) ;
                else if (wasMounted && !isMounted) {
                    // Unmount an existing root.
                    mountedRoots.delete(root);
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                    else helpersByRoot.delete(root);
                } else if (!wasMounted && !isMounted) {
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                }
            } else // Mount a new root.
            mountedRoots.add(root);
            return oldOnCommitFiberRoot.apply(this, arguments);
        };
    }
    function hasUnrecoverableErrors() {
        // TODO: delete this after removing dependency in RN.
        return false;
    } // Exposed for testing.
    function _getMountedRootCount() {
        return mountedRoots.size;
    } // This is a wrapper over more primitive functions for setting signature.
    // Signatures let us decide whether the Hook order has changed on refresh.
    //
    // This function is intended to be used as a transform target, e.g.:
    // var _s = createSignatureFunctionForTransform()
    //
    // function Hello() {
    //   const [foo, setFoo] = useState(0);
    //   const value = useCustomHook();
    //   _s(); /* Second call triggers collecting the custom Hook list.
    //          * This doesn't happen during the module evaluation because we
    //          * don't want to change the module order with inline requires.
    //          * Next calls are noops. */
    //   return <h1>Hi</h1>;
    // }
    //
    // /* First call specifies the signature: */
    // _s(
    //   Hello,
    //   'useState{[foo, setFoo]}(0)',
    //   () => [useCustomHook], /* Lazy to avoid triggering inline requires */
    // );
    function createSignatureFunctionForTransform() {
        // We'll fill in the signature in two steps.
        // First, we'll know the signature itself. This happens outside the component.
        // Then, we'll know the references to custom Hooks. This happens inside the component.
        // After that, the returned function will be a fast path no-op.
        var status = 'needsSignature';
        var savedType;
        var hasCustomHooks;
        return function(type, key, forceReset, getCustomHooks) {
            switch(status){
                case 'needsSignature':
                    if (type !== undefined) {
                        // If we received an argument, this is the initial registration call.
                        savedType = type;
                        hasCustomHooks = typeof getCustomHooks === 'function';
                        setSignature(type, key, forceReset, getCustomHooks); // The next call we expect is from inside a function, to fill in the custom Hooks.
                        status = 'needsCustomHooks';
                    }
                    break;
                case 'needsCustomHooks':
                    if (hasCustomHooks) collectCustomHooksForSignature(savedType);
                    status = 'resolved';
                    break;
            }
            return type;
        };
    }
    function isLikelyComponentType(type) {
        switch(typeof type){
            case 'function':
                // First, deal with classes.
                if (type.prototype != null) {
                    if (type.prototype.isReactComponent) // React class.
                    return true;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (ownNames.length > 1 || ownNames[0] !== 'constructor') // This looks like a class.
                    return false;
                     // eslint-disable-next-line no-proto
                    if (type.prototype.__proto__ !== Object.prototype) // It has a superclass.
                    return false;
                     // Pass through.
                // This looks like a regular function with empty prototype.
                } // For plain functions and arrows, use name as a heuristic.
                var name = type.name || type.displayName;
                return typeof name === 'string' && /^[A-Z]/.test(name);
            case 'object':
                if (type != null) switch(type.$$typeof){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        // Definitely React components.
                        return true;
                    default:
                        return false;
                }
                return false;
            default:
                return false;
        }
    }
    exports._getMountedRootCount = _getMountedRootCount;
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = createSignatureFunctionForTransform;
    exports.findAffectedHostInstances = findAffectedHostInstances;
    exports.getFamilyByID = getFamilyByID;
    exports.getFamilyByType = getFamilyByType;
    exports.hasUnrecoverableErrors = hasUnrecoverableErrors;
    exports.injectIntoGlobalHook = injectIntoGlobalHook;
    exports.isLikelyComponentType = isLikelyComponentType;
    exports.performReactRefresh = performReactRefresh;
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"j1F46":[function(require,module,exports) {
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "4a236f9275d0a351";
module.bundle.HMR_BUNDLE_ID = "c9b2bbcd379dd93c";
"use strict";
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _createForOfIteratorHelper(o, allowArrayLike) {
    var it;
    if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i = 0;
            var F = function F() {
            };
            return {
                s: F,
                n: function n() {
                    if (i >= o.length) return {
                        done: true
                    };
                    return {
                        done: false,
                        value: o[i++]
                    };
                },
                e: function e(_e) {
                    throw _e;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {
        s: function s() {
            it = o[Symbol.iterator]();
        },
        n: function n() {
            var step = it.next();
            normalCompletion = step.done;
            return step;
        },
        e: function e(_e2) {
            didErr = true;
            err = _e2;
        },
        f: function f() {
            try {
                if (!normalCompletion && it.return != null) it.return();
            } finally{
                if (didErr) throw err;
            }
        }
    };
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: mixed;
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData,
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function accept(fn) {
            this._acceptCallbacks.push(fn || function() {
            });
        },
        dispose: function dispose(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, acceptedAssets, assetsToAccept;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || location.port;
} // eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';
    var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe
    ws.onmessage = function(event) {
        checkedAssets = {
        };
        acceptedAssets = {
        };
        assetsToAccept = [];
        var data = JSON.parse(event.data);
        if (data.type === 'update') {
            // Remove error overlay if there is one
            if (typeof document !== 'undefined') removeErrorOverlay();
            var assets = data.assets.filter(function(asset) {
                return asset.envHash === HMR_ENV_HASH;
            }); // Handle HMR Update
            var handled = assets.every(function(asset) {
                return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                assets.forEach(function(asset) {
                    hmrApply(module.bundle.root, asset);
                });
                for(var i = 0; i < assetsToAccept.length; i++){
                    var id = assetsToAccept[i][1];
                    if (!acceptedAssets[id]) hmrAcceptRun(assetsToAccept[i][0], id);
                }
            } else window.location.reload();
        }
        if (data.type === 'error') {
            // Log parcel errors to console
            var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi), _step;
            try {
                for(_iterator.s(); !(_step = _iterator.n()).done;){
                    var ansiDiagnostic = _step.value;
                    var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                    console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
                }
            } catch (err) {
                _iterator.e(err);
            } finally{
                _iterator.f();
            }
            if (typeof document !== 'undefined') {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    ws.onerror = function(e) {
        console.error(e.message);
    };
    ws.onclose = function() {
        console.warn('[parcel] 🚨 Connection to the HMR server was lost');
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log('[parcel] ✨ Error resolved');
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    var errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    var _iterator2 = _createForOfIteratorHelper(diagnostics), _step2;
    try {
        for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
            var diagnostic = _step2.value;
            var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;
            errorHTML += "\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          \uD83D\uDEA8 ".concat(diagnostic.message, "\n        </div>\n        <pre>").concat(stack, "</pre>\n        <div>\n          ").concat(diagnostic.hints.map(function(hint) {
                return '<div>💡 ' + hint + '</div>';
            }).join(''), "\n        </div>\n        ").concat(diagnostic.documentation ? "<div>\uD83D\uDCDD <a style=\"color: violet\" href=\"".concat(diagnostic.documentation, "\" target=\"_blank\">Learn more</a></div>") : '', "\n      </div>\n    ");
        }
    } catch (err) {
        _iterator2.e(err);
    } finally{
        _iterator2.f();
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrApply(bundle, asset) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') reloadCSS();
    else if (asset.type === 'js') {
        var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                var oldDeps = modules[asset.id][1];
                for(var dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    var id = oldDeps[dep];
                    var parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            var fn = new Function('require', 'module', 'exports', asset.output);
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id1) {
    var modules = bundle.modules;
    if (!modules) return;
    if (modules[id1]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        var deps = modules[id1][1];
        var orphans = [];
        for(var dep in deps){
            var parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id1];
        delete bundle.cache[id1]; // Now delete the orphans.
        orphans.forEach(function(id) {
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id1);
}
function hmrAcceptCheck(bundle, id, depsByBundle) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
     // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    var parents = getParents(module.bundle.root, id);
    var accepted = false;
    while(parents.length > 0){
        var v = parents.shift();
        var a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            var p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push.apply(parents, _toConsumableArray(p));
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle, id, depsByBundle) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToAccept.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) return true;
}
function hmrAcceptRun(bundle, id) {
    var cached = bundle.cache[id];
    bundle.hotData = {
    };
    if (cached && cached.hot) cached.hot.data = bundle.hotData;
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData);
    });
    delete bundle.cache[id];
    bundle(id);
    cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) // $FlowFixMe[method-unbinding]
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
    });
    acceptedAssets[id] = true;
}

},{}],"hD4hw":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$6930 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$6930.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactDom = require("react-dom");
var _reactDomDefault = parcelHelpers.interopDefault(_reactDom);
var _reactRouterDom = require("react-router-dom");
var _app = require("./App");
var _mongoose = require("mongoose");
var _mongooseDefault = parcelHelpers.interopDefault(_mongoose);
const app = document.getElementById("app");
_reactDomDefault.default.render(/*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactDefault.default.StrictMode, {
    children: /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactRouterDom.HashRouter, {
        children: /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_app.App, {
        }, void 0, false, {
            fileName: "src/index.js",
            lineNumber: 11,
            columnNumber: 17
        }, undefined)
    }, void 0, false, {
        fileName: "src/index.js",
        lineNumber: 11,
        columnNumber: 9
    }, undefined)
}, void 0, false, {
    fileName: "src/index.js",
    lineNumber: 10,
    columnNumber: 5
}, undefined), app);

  $parcel$ReactRefreshHelpers$6930.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"3jZUD","react":"4mchR","react-dom":"afyCw","react-router-dom":"16kZP","./App":"bUWNh","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"9pz13","mongoose":"jVQ7g"}],"3jZUD":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react-jsx-dev-runtime.development.js');

},{"./cjs/react-jsx-dev-runtime.development.js":"upOo4"}],"upOo4":[function(require,module,exports) {
/** @license React v17.0.2
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    var React = require('react');
    var _assign = require('object-assign');
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 60103;
    var REACT_PORTAL_TYPE = 60106;
    exports.Fragment = 60107;
    var REACT_STRICT_MODE_TYPE = 60108;
    var REACT_PROFILER_TYPE = 60114;
    var REACT_PROVIDER_TYPE = 60109;
    var REACT_CONTEXT_TYPE = 60110;
    var REACT_FORWARD_REF_TYPE = 60112;
    var REACT_SUSPENSE_TYPE = 60113;
    var REACT_SUSPENSE_LIST_TYPE = 60120;
    var REACT_MEMO_TYPE = 60115;
    var REACT_LAZY_TYPE = 60116;
    var REACT_BLOCK_TYPE = 60121;
    var REACT_SERVER_BLOCK_TYPE = 60122;
    var REACT_FUNDAMENTAL_TYPE = 60117;
    var REACT_SCOPE_TYPE = 60119;
    var REACT_OPAQUE_ID_TYPE = 60128;
    var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
    var REACT_OFFSCREEN_TYPE = 60130;
    var REACT_LEGACY_HIDDEN_TYPE = 60131;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor('react.element');
        REACT_PORTAL_TYPE = symbolFor('react.portal');
        exports.Fragment = symbolFor('react.fragment');
        REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
        REACT_PROFILER_TYPE = symbolFor('react.profiler');
        REACT_PROVIDER_TYPE = symbolFor('react.provider');
        REACT_CONTEXT_TYPE = symbolFor('react.context');
        REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
        REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
        REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
        REACT_MEMO_TYPE = symbolFor('react.memo');
        REACT_LAZY_TYPE = symbolFor('react.lazy');
        REACT_BLOCK_TYPE = symbolFor('react.block');
        REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
        REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
        REACT_SCOPE_TYPE = symbolFor('react.scope');
        REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
        REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
        REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }
    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning('error', format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        }
        var argsWithFormat = args.map(function(item) {
            return '' + item;
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    // Filter certain DOM attributes (e.g. src, href) if their values are empty strings.
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) return true;
        }
        return false;
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || '';
        return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }
    function getContextName(type) {
        return type.displayName || 'Context';
    }
    function getComponentName(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case exports.Fragment:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                return getComponentName(type.type);
            case REACT_BLOCK_TYPE:
                return getComponentName(type._render);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentName(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {
    }
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: _assign({
                }, props, {
                    value: prevLog
                }),
                info: _assign({
                }, props, {
                    value: prevInfo
                }),
                warn: _assign({
                }, props, {
                    value: prevWarn
                }),
                error: _assign({
                }, props, {
                    value: prevError
                }),
                group: _assign({
                }, props, {
                    value: prevGroup
                }),
                groupCollapsed: _assign({
                }, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: _assign({
                }, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0)
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_BLOCK_TYPE:
                return describeFunctionComponentFrame(type._render);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
        }
        return '';
    }
    var loggedTypeFailures = {
    };
    var ReactDebugCurrentFrame1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(Object.prototype.hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;
    var didWarnAboutStringRefs;
    didWarnAboutStringRefs = {
    };
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, 'ref')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, 'key')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function warnIfStringRefCannotBeAutoConverted(config, self) {
        if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
            var componentName = getComponentName(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error("Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref", getComponentName(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {
        }; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */ function jsxDEV(type, config, maybeKey, source, self) {
        var propName; // Reserved names are extracted
        var props = {
        };
        var key = null;
        var ref = null; // Currently, key can be spread in as a prop. This causes a potential
        // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
        // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
        // but as an intermediary step, we will use jsxDEV for everything except
        // <div {...props} key="Hi" />, because we aren't currently able to tell if
        // key is explicitly declared to be undefined or not.
        if (maybeKey !== undefined) key = '' + maybeKey;
        if (hasValidKey(config)) key = '' + config.key;
        if (hasValidRef(config)) {
            ref = config.ref;
            warnIfStringRefCannotBeAutoConverted(config, self);
        } // Remaining properties are added to a new props object
        for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
         // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner$1.current) {
            var name = getComponentName(ReactCurrentOwner$1.current.type);
            if (name) return '\n\nCheck the render method of `' + name + '`.';
        }
        return '';
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
        }
        return '';
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {
    };
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = '';
        if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error("Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.", currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== 'object') return;
        if (Array.isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === 'string') return;
        var propTypes;
        if (typeof type === 'function') propTypes = type.propTypes;
        else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentName(type);
            checkPropTypes(propTypes, element.props, 'prop', name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentName(type);
            error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
        }
        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== 'children' && key !== 'key') {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error('Invalid attribute `ref` supplied to `React.Fragment`.');
            setCurrentlyValidatingElement$1(null);
        }
    }
    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendum(source);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = 'null';
            else if (Array.isArray(type)) typeString = 'array';
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
                info = ' Did you accidentally export a JSX literal instead of a component?';
            } else typeString = typeof type;
            error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) {
            var children = props.children;
            if (children !== undefined) {
                if (isStaticChildren) {
                    if (Array.isArray(children)) {
                        for(var i = 0; i < children.length; i++)validateChildKeys(children[i], type);
                        if (Object.freeze) Object.freeze(children);
                    } else error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                } else validateChildKeys(children, type);
            }
        }
        if (type === exports.Fragment) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    } // These two functions exist to still get child warnings in dev
    var jsxDEV$1 = jsxWithValidation;
    exports.jsxDEV = jsxDEV$1;
})();

},{"react":"4mchR","object-assign":"iUUFa"}],"4mchR":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react.development.js');

},{"./cjs/react.development.js":"d4OQ6"}],"d4OQ6":[function(require,module,exports) {
/** @license React v17.0.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    var _assign = require('object-assign');
    // TODO: this is special because it gets imported during build.
    var ReactVersion = '17.0.2';
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 60103;
    var REACT_PORTAL_TYPE = 60106;
    exports.Fragment = 60107;
    exports.StrictMode = 60108;
    exports.Profiler = 60114;
    var REACT_PROVIDER_TYPE = 60109;
    var REACT_CONTEXT_TYPE = 60110;
    var REACT_FORWARD_REF_TYPE = 60112;
    exports.Suspense = 60113;
    var REACT_SUSPENSE_LIST_TYPE = 60120;
    var REACT_MEMO_TYPE = 60115;
    var REACT_LAZY_TYPE = 60116;
    var REACT_BLOCK_TYPE = 60121;
    var REACT_SERVER_BLOCK_TYPE = 60122;
    var REACT_FUNDAMENTAL_TYPE = 60117;
    var REACT_SCOPE_TYPE = 60119;
    var REACT_OPAQUE_ID_TYPE = 60128;
    var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
    var REACT_OFFSCREEN_TYPE = 60130;
    var REACT_LEGACY_HIDDEN_TYPE = 60131;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor('react.element');
        REACT_PORTAL_TYPE = symbolFor('react.portal');
        exports.Fragment = symbolFor('react.fragment');
        exports.StrictMode = symbolFor('react.strict_mode');
        exports.Profiler = symbolFor('react.profiler');
        REACT_PROVIDER_TYPE = symbolFor('react.provider');
        REACT_CONTEXT_TYPE = symbolFor('react.context');
        REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
        exports.Suspense = symbolFor('react.suspense');
        REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
        REACT_MEMO_TYPE = symbolFor('react.memo');
        REACT_LAZY_TYPE = symbolFor('react.lazy');
        REACT_BLOCK_TYPE = symbolFor('react.block');
        REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
        REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
        REACT_SCOPE_TYPE = symbolFor('react.scope');
        REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
        REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
        REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }
    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    /**
 * Keeps track of the current dispatcher.
 */ var ReactCurrentDispatcher = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    /**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */ var ReactCurrentBatchConfig = {
        transition: 0
    };
    /**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */ var ReactCurrentOwner = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    var ReactDebugCurrentFrame1 = {
    };
    var currentExtraStackFrame = null;
    function setExtraStackFrame(stack) {
        currentExtraStackFrame = stack;
    }
    ReactDebugCurrentFrame1.setExtraStackFrame = function(stack) {
        currentExtraStackFrame = stack;
    }; // Stack implementation injected by the current renderer.
    ReactDebugCurrentFrame1.getCurrentStack = null;
    ReactDebugCurrentFrame1.getStackAddendum = function() {
        var stack = ''; // Add an extra top frame while an element is being validated
        if (currentExtraStackFrame) stack += currentExtraStackFrame;
         // Delegate to the injected renderer-specific implementation
        var impl = ReactDebugCurrentFrame1.getCurrentStack;
        if (impl) stack += impl() || '';
        return stack;
    };
    /**
 * Used by act() to track whether you're inside an act() scope.
 */ var IsSomeRendererActing = {
        current: false
    };
    var ReactSharedInternals = {
        ReactCurrentDispatcher: ReactCurrentDispatcher,
        ReactCurrentBatchConfig: ReactCurrentBatchConfig,
        ReactCurrentOwner: ReactCurrentOwner,
        IsSomeRendererActing: IsSomeRendererActing,
        // Used by renderers to avoid bundling object-assign twice in UMD bundles:
        assign: _assign
    };
    ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame1;
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        printWarning('warn', format, args);
    }
    function error1(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning('error', format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        }
        var argsWithFormat = args.map(function(item) {
            return '' + item;
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var didWarnStateUpdateForUnmountedComponent = {
    };
    function warnNoop(publicInstance, callerName) {
        var _constructor = publicInstance.constructor;
        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
        var warningKey = componentName + "." + callerName;
        if (didWarnStateUpdateForUnmountedComponent[warningKey]) return;
        error1("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
    }
    /**
 * This is the abstract API for an update queue.
 */ var ReactNoopUpdateQueue = {
        /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */ isMounted: function(publicInstance) {
            return false;
        },
        /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, 'forceUpdate');
        },
        /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, 'replaceState');
        },
        /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */ enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, 'setState');
        }
    };
    var emptyObject = {
    };
    Object.freeze(emptyObject);
    /**
 * Base class helpers for the updating state of a component.
 */ function Component1(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
        // renderer.
        this.updater = updater || ReactNoopUpdateQueue;
    }
    Component1.prototype.isReactComponent = {
    };
    /**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */ Component1.prototype.setState = function(partialState, callback) {
        if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, 'setState');
    };
    /**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */ Component1.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
    };
    var deprecatedAPIs = {
        isMounted: [
            'isMounted',
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
        ],
        replaceState: [
            'replaceState',
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
        ]
    };
    var defineDeprecationWarning = function(methodName, info) {
        Object.defineProperty(Component1.prototype, methodName, {
            get: function() {
                warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
                return undefined;
            }
        });
    };
    for(var fnName in deprecatedAPIs)if (deprecatedAPIs.hasOwnProperty(fnName)) defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    function ComponentDummy() {
    }
    ComponentDummy.prototype = Component1.prototype;
    /**
 * Convenience component with default shallow equality check for sCU.
 */ function PureComponent(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
    _assign(pureComponentPrototype, Component1.prototype);
    pureComponentPrototype.isPureReactComponent = true;
    // an immutable object with a single mutable value
    function createRef() {
        var refObject = {
            current: null
        };
        Object.seal(refObject);
        return refObject;
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || '';
        return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }
    function getContextName(type) {
        return type.displayName || 'Context';
    }
    function getComponentName(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error1("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case exports.Fragment:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case exports.Profiler:
                return 'Profiler';
            case exports.StrictMode:
                return 'StrictMode';
            case exports.Suspense:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                return getComponentName(type.type);
            case REACT_BLOCK_TYPE:
                return getComponentName(type._render);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentName(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
    didWarnAboutStringRefs = {
    };
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, 'ref')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, 'key')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error1("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error1("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    function warnIfStringRefCannotBeAutoConverted(config) {
        if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
            var componentName = getComponentName(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error1("Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref", componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {
        }; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */ function createElement(type, config, children) {
        var propName; // Reserved names are extracted
        var props = {
        };
        var key = null;
        var ref = null;
        var self = null;
        var source = null;
        if (config != null) {
            if (hasValidRef(config)) {
                ref = config.ref;
                warnIfStringRefCannotBeAutoConverted(config);
            }
            if (hasValidKey(config)) key = '' + config.key;
            self = config.__self === undefined ? null : config.__self;
            source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            if (Object.freeze) Object.freeze(childArray);
            props.children = childArray;
        } // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    function cloneAndReplaceKey(oldElement, newKey) {
        var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
        return newElement;
    }
    /**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */ function cloneElement(element, config, children) {
        if (!!(element === null || element === undefined)) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
        var propName; // Original props are copied
        var props = _assign({
        }, element.props); // Reserved names are extracted
        var key = element.key;
        var ref = element.ref; // Self is preserved since the owner is preserved.
        var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
        // transpiler, and the original source is probably a better indicator of the
        // true owner.
        var source = element._source; // Owner will be preserved, unless ref is overridden
        var owner = element._owner;
        if (config != null) {
            if (hasValidRef(config)) {
                // Silently steal the ref from the parent.
                ref = config.ref;
                owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) key = '' + config.key;
             // Remaining properties override existing props
            var defaultProps;
            if (element.type && element.type.defaultProps) defaultProps = element.type.defaultProps;
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === undefined && defaultProps !== undefined) // Resolve default props
                props[propName] = defaultProps[propName];
                else props[propName] = config[propName];
            }
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            props.children = childArray;
        }
        return ReactElement(element.type, key, ref, self, source, owner, props);
    }
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    /**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */ function escape(key) {
        var escapeRegex = /[=:]/g;
        var escaperLookup = {
            '=': '=0',
            ':': '=2'
        };
        var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
        });
        return '$' + escapedString;
    }
    /**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */ var didWarnAboutMaps = false;
    var userProvidedKeyEscapeRegex = /\/+/g;
    function escapeUserProvidedKey(text) {
        return text.replace(userProvidedKeyEscapeRegex, '$&/');
    }
    /**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */ function getElementKey(element, index) {
        // Do some typechecking here since we call this blindly. We want to ensure
        // that we don't block potential future ES APIs.
        if (typeof element === 'object' && element !== null && element.key != null) // Explicit key
        return escape('' + element.key);
         // Implicit key determined by the index in the set
        return index.toString(36);
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        if (type === 'undefined' || type === 'boolean') // All of the above are perceived as null.
        children = null;
        var invokeCallback = false;
        if (children === null) invokeCallback = true;
        else switch(type){
            case 'string':
            case 'number':
                invokeCallback = true;
                break;
            case 'object':
                switch(children.$$typeof){
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                        invokeCallback = true;
                }
        }
        if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
            // so that it's consistent if the number of children grows:
            var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (Array.isArray(mappedChild)) {
                var escapedChildKey = '';
                if (childKey != null) escapedChildKey = escapeUserProvidedKey(childKey) + '/';
                mapIntoArray(mappedChild, array, escapedChildKey, '', function(c) {
                    return c;
                });
            } else if (mappedChild != null) {
                if (isValidElement(mappedChild)) mappedChild = cloneAndReplaceKey(mappedChild, // traverseAllChildren used to do for objects as children
                escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
                array.push(mappedChild);
            }
            return 1;
        }
        var child;
        var nextName;
        var subtreeCount = 0; // Count of children found in the current subtree.
        var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
        if (Array.isArray(children)) for(var i = 0; i < children.length; i++){
            child = children[i];
            nextName = nextNamePrefix + getElementKey(child, i);
            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
        }
        else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === 'function') {
                var iterableChildren = children;
                // Warn about using Maps as children
                if (iteratorFn === iterableChildren.entries) {
                    if (!didWarnAboutMaps) warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                    didWarnAboutMaps = true;
                }
                var iterator = iteratorFn.call(iterableChildren);
                var step;
                var ii = 0;
                while(!(step = iterator.next()).done){
                    child = step.value;
                    nextName = nextNamePrefix + getElementKey(child, ii++);
                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
                }
            } else if (type === 'object') {
                var childrenString = '' + children;
                throw Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). If you meant to render a collection of children, use an array instead.");
            }
        }
        return subtreeCount;
    }
    /**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */ function mapChildren(children, func, context) {
        if (children == null) return children;
        var result = [];
        var count = 0;
        mapIntoArray(children, result, '', '', function(child) {
            return func.call(context, child, count++);
        });
        return result;
    }
    /**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */ function countChildren(children) {
        var n = 0;
        mapChildren(children, function() {
            n++; // Don't return anything
        });
        return n;
    }
    /**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */ function forEachChildren(children, forEachFunc, forEachContext) {
        mapChildren(children, function() {
            forEachFunc.apply(this, arguments); // Don't return anything.
        }, forEachContext);
    }
    /**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */ function toArray(children) {
        return mapChildren(children, function(child) {
            return child;
        }) || [];
    }
    /**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */ function onlyChild(children) {
        if (!isValidElement(children)) throw Error("React.Children.only expected to receive a single React element child.");
        return children;
    }
    function createContext(defaultValue, calculateChangedBits) {
        if (calculateChangedBits === undefined) calculateChangedBits = null;
        else if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') error1("createContext: Expected the optional second argument to be a function. Instead received: %s", calculateChangedBits);
        var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            _calculateChangedBits: calculateChangedBits,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            _threadCount: 0,
            // These are circular
            Provider: null,
            Consumer: null
        };
        context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
        };
        var hasWarnedAboutUsingNestedContextConsumers = false;
        var hasWarnedAboutUsingConsumerProvider = false;
        var hasWarnedAboutDisplayNameOnConsumer = false;
        // A separate object, but proxies back to the original context object for
        // backwards compatibility. It has a different $$typeof, so we can properly
        // warn for the incorrect usage of Context as a Consumer.
        var Consumer = {
            $$typeof: REACT_CONTEXT_TYPE,
            _context: context,
            _calculateChangedBits: context._calculateChangedBits
        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here
        Object.defineProperties(Consumer, {
            Provider: {
                get: function() {
                    if (!hasWarnedAboutUsingConsumerProvider) {
                        hasWarnedAboutUsingConsumerProvider = true;
                        error1("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                    }
                    return context.Provider;
                },
                set: function(_Provider) {
                    context.Provider = _Provider;
                }
            },
            _currentValue: {
                get: function() {
                    return context._currentValue;
                },
                set: function(_currentValue) {
                    context._currentValue = _currentValue;
                }
            },
            _currentValue2: {
                get: function() {
                    return context._currentValue2;
                },
                set: function(_currentValue2) {
                    context._currentValue2 = _currentValue2;
                }
            },
            _threadCount: {
                get: function() {
                    return context._threadCount;
                },
                set: function(_threadCount) {
                    context._threadCount = _threadCount;
                }
            },
            Consumer: {
                get: function() {
                    if (!hasWarnedAboutUsingNestedContextConsumers) {
                        hasWarnedAboutUsingNestedContextConsumers = true;
                        error1("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                    }
                    return context.Consumer;
                }
            },
            displayName: {
                get: function() {
                    return context.displayName;
                },
                set: function(displayName) {
                    if (!hasWarnedAboutDisplayNameOnConsumer) {
                        warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                        hasWarnedAboutDisplayNameOnConsumer = true;
                    }
                }
            }
        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
        context.Consumer = Consumer;
        context._currentRenderer = null;
        context._currentRenderer2 = null;
        return context;
    }
    var Uninitialized = -1;
    var Pending = 0;
    var Resolved = 1;
    var Rejected = 2;
    function lazyInitializer(payload) {
        if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor(); // Transition to the next state.
            var pending = payload;
            pending._status = Pending;
            pending._result = thenable;
            thenable.then(function(moduleObject) {
                if (payload._status === Pending) {
                    var defaultExport = moduleObject.default;
                    if (defaultExport === undefined) error1("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
                    var resolved = payload;
                    resolved._status = Resolved;
                    resolved._result = defaultExport;
                }
            }, function(error) {
                if (payload._status === Pending) {
                    // Transition to the next state.
                    var rejected = payload;
                    rejected._status = Rejected;
                    rejected._result = error;
                }
            });
        }
        if (payload._status === Resolved) return payload._result;
        else throw payload._result;
    }
    function lazy(ctor) {
        var payload = {
            // We use these fields to store the result.
            _status: -1,
            _result: ctor
        };
        var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
        };
        // In production, this would just set it on the object.
        var defaultProps;
        var propTypes; // $FlowFixMe
        Object.defineProperties(lazyType, {
            defaultProps: {
                configurable: true,
                get: function() {
                    return defaultProps;
                },
                set: function(newDefaultProps) {
                    error1("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    defaultProps = newDefaultProps; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, 'defaultProps', {
                        enumerable: true
                    });
                }
            },
            propTypes: {
                configurable: true,
                get: function() {
                    return propTypes;
                },
                set: function(newPropTypes) {
                    error1("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    propTypes = newPropTypes; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, 'propTypes', {
                        enumerable: true
                    });
                }
            }
        });
        return lazyType;
    }
    function forwardRef(render) {
        if (render != null && render.$$typeof === REACT_MEMO_TYPE) error1("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
        else if (typeof render !== 'function') error1('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
        else if (render.length !== 0 && render.length !== 2) error1('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
        if (render != null) {
            if (render.defaultProps != null || render.propTypes != null) error1("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        }
        var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
        };
        var ownName;
        Object.defineProperty(elementType, 'displayName', {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name;
                if (render.displayName == null) render.displayName = name;
            }
        });
        return elementType;
    }
    // Filter certain DOM attributes (e.g. src, href) if their values are empty strings.
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === exports.Fragment || type === exports.Profiler || type === REACT_DEBUG_TRACING_MODE_TYPE || type === exports.StrictMode || type === exports.Suspense || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) return true;
        }
        return false;
    }
    function memo(type, compare) {
        if (!isValidElementType(type)) error1("memo: The first argument must be a component. Instead received: %s", type === null ? 'null' : typeof type);
        var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: compare === undefined ? null : compare
        };
        var ownName;
        Object.defineProperty(elementType, 'displayName', {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name;
                if (type.displayName == null) type.displayName = name;
            }
        });
        return elementType;
    }
    function resolveDispatcher() {
        var dispatcher = ReactCurrentDispatcher.current;
        if (!(dispatcher !== null)) throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        return dispatcher;
    }
    function useContext(Context, unstable_observedBits) {
        var dispatcher = resolveDispatcher();
        if (unstable_observedBits !== undefined) error1("useContext() second argument is reserved for future use in React. Passing it is not supported. You passed: %s.%s", unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? "\n\nDid you call array.map(useContext)? Calling Hooks inside a loop is not supported. Learn more at https://reactjs.org/link/rules-of-hooks" : '');
         // TODO: add a more generic warning for invalid values.
        if (Context._context !== undefined) {
            var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
            // and nobody should be using this in existing code.
            if (realContext.Consumer === Context) error1("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
            else if (realContext.Provider === Context) error1("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return dispatcher.useContext(Context, unstable_observedBits);
    }
    function useState(initialState) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useState(initialState);
    }
    function useReducer(reducer, initialArg, init) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useReducer(reducer, initialArg, init);
    }
    function useRef(initialValue) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useRef(initialValue);
    }
    function useEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useEffect(create, deps);
    }
    function useLayoutEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useLayoutEffect(create, deps);
    }
    function useCallback(callback, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useCallback(callback, deps);
    }
    function useMemo(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useMemo(create, deps);
    }
    function useImperativeHandle(ref, create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useImperativeHandle(ref, create, deps);
    }
    function useDebugValue(value, formatterFn) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDebugValue(value, formatterFn);
    }
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {
    }
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: _assign({
                }, props, {
                    value: prevLog
                }),
                info: _assign({
                }, props, {
                    value: prevInfo
                }),
                warn: _assign({
                }, props, {
                    value: prevWarn
                }),
                error: _assign({
                }, props, {
                    value: prevError
                }),
                group: _assign({
                }, props, {
                    value: prevGroup
                }),
                groupCollapsed: _assign({
                }, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: _assign({
                }, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error1("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher$1.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0)
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher$1.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case exports.Suspense:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_BLOCK_TYPE:
                return describeFunctionComponentFrame(type._render);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
        }
        return '';
    }
    var loggedTypeFailures = {
    };
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(Object.prototype.hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error1("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error1('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            setExtraStackFrame(stack);
        } else setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner.current) {
            var name = getComponentName(ReactCurrentOwner.current.type);
            if (name) return '\n\nCheck the render method of `' + name + '`.';
        }
        return '';
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
        }
        return '';
    }
    function getSourceInfoErrorAddendumForProps(elementProps) {
        if (elementProps !== null && elementProps !== undefined) return getSourceInfoErrorAddendum(elementProps.__source);
        return '';
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {
    };
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = '';
        if (element && element._owner && element._owner !== ReactCurrentOwner.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error1("Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.", currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== 'object') return;
        if (Array.isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === 'string') return;
        var propTypes;
        if (typeof type === 'function') propTypes = type.propTypes;
        else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentName(type);
            checkPropTypes(propTypes, element.props, 'prop', name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentName(type);
            error1('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
        }
        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) error1("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== 'children' && key !== 'key') {
                setCurrentlyValidatingElement$1(fragment);
                error1("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error1('Invalid attribute `ref` supplied to `React.Fragment`.');
            setCurrentlyValidatingElement$1(null);
        }
    }
    function createElementWithValidation(type, props, children) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = 'null';
            else if (Array.isArray(type)) typeString = 'array';
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
                info = ' Did you accidentally export a JSX literal instead of a component?';
            } else typeString = typeof type;
            error1("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], type);
        if (type === exports.Fragment) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    }
    var didWarnAboutDeprecatedCreateFactory = false;
    function createFactoryWithValidation(type) {
        var validatedFactory = createElementWithValidation.bind(null, type);
        validatedFactory.type = type;
        if (!didWarnAboutDeprecatedCreateFactory) {
            didWarnAboutDeprecatedCreateFactory = true;
            warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
        } // Legacy hook: remove it
        Object.defineProperty(validatedFactory, 'type', {
            enumerable: false,
            get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, 'type', {
                    value: type
                });
                return type;
            }
        });
        return validatedFactory;
    }
    function cloneElementWithValidation(element, props, children) {
        var newElement = cloneElement.apply(this, arguments);
        for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], newElement.type);
        validatePropTypes(newElement);
        return newElement;
    }
    try {
        var frozenObject = Object.freeze({
        });
        /* eslint-disable no-new */ new Map([
            [
                frozenObject,
                null
            ]
        ]);
        new Set([
            frozenObject
        ]);
    /* eslint-enable no-new */ } catch (e) {
    }
    var createElement$1 = createElementWithValidation;
    var cloneElement$1 = cloneElementWithValidation;
    var createFactory = createFactoryWithValidation;
    var Children = {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray: toArray,
        only: onlyChild
    };
    exports.Children = Children;
    exports.Component = Component1;
    exports.PureComponent = PureComponent;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
    exports.cloneElement = cloneElement$1;
    exports.createContext = createContext;
    exports.createElement = createElement$1;
    exports.createFactory = createFactory;
    exports.createRef = createRef;
    exports.forwardRef = forwardRef;
    exports.isValidElement = isValidElement;
    exports.lazy = lazy;
    exports.memo = memo;
    exports.useCallback = useCallback;
    exports.useContext = useContext;
    exports.useDebugValue = useDebugValue;
    exports.useEffect = useEffect;
    exports.useImperativeHandle = useImperativeHandle;
    exports.useLayoutEffect = useLayoutEffect;
    exports.useMemo = useMemo;
    exports.useReducer = useReducer;
    exports.useRef = useRef;
    exports.useState = useState;
    exports.version = ReactVersion;
})();

},{"object-assign":"iUUFa"}],"iUUFa":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/ 'use strict';
/* eslint-disable no-unused-vars */ var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
    if (val === null || val === undefined) throw new TypeError('Object.assign cannot be called with null or undefined');
    return Object(val);
}
function shouldUseNative() {
    try {
        if (!Object.assign) return false;
        // Detect buggy property enumeration order in older V8 versions.
        // https://bugs.chromium.org/p/v8/issues/detail?id=4118
        var test1 = "abc"; // eslint-disable-line no-new-wrappers
        test1[5] = 'de';
        if (Object.getOwnPropertyNames(test1)[0] === '5') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test2 = {
        };
        for(var i = 0; i < 10; i++)test2['_' + String.fromCharCode(i)] = i;
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
        });
        if (order2.join('') !== '0123456789') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test3 = {
        };
        'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
            test3[letter] = letter;
        });
        if (Object.keys(Object.assign({
        }, test3)).join('') !== 'abcdefghijklmnopqrst') return false;
        return true;
    } catch (err) {
        // We don't expect any of the above to throw, but better to be safe.
        return false;
    }
}
module.exports = shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = toObject(target);
    var symbols;
    for(var s = 1; s < arguments.length; s++){
        from = Object(arguments[s]);
        for(var key in from)if (hasOwnProperty.call(from, key)) to[key] = from[key];
        if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for(var i = 0; i < symbols.length; i++)if (propIsEnumerable.call(from, symbols[i])) to[symbols[i]] = from[symbols[i]];
        }
    }
    return to;
};

},{}],"afyCw":[function(require,module,exports) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require('./cjs/react-dom.development.js');

},{"./cjs/react-dom.development.js":"l2Fks"}],"l2Fks":[function(require,module,exports) {
/** @license React v17.0.2
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    var React = require('react');
    var _assign = require('object-assign');
    var Scheduler = require('scheduler');
    var tracing = require('scheduler/tracing');
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        printWarning('warn', format, args);
    }
    function error1(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning('error', format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        }
        var argsWithFormat = args.map(function(item) {
            return '' + item;
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    if (!React) throw Error("ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.");
    var FunctionComponent = 0;
    var ClassComponent = 1;
    var IndeterminateComponent = 2; // Before we know whether it is function or class
    var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
    var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
    var HostComponent = 5;
    var HostText = 6;
    var Fragment = 7;
    var Mode = 8;
    var ContextConsumer = 9;
    var ContextProvider = 10;
    var ForwardRef = 11;
    var Profiler = 12;
    var SuspenseComponent = 13;
    var MemoComponent = 14;
    var SimpleMemoComponent = 15;
    var LazyComponent = 16;
    var IncompleteClassComponent = 17;
    var DehydratedFragment = 18;
    var SuspenseListComponent = 19;
    var FundamentalComponent = 20;
    var ScopeComponent = 21;
    var Block = 22;
    var OffscreenComponent = 23;
    var LegacyHiddenComponent = 24;
    // Filter certain DOM attributes (e.g. src, href) if their values are empty strings.
    var enableProfilerTimer = true; // Record durations for commit and passive effects phases.
    var enableFundamentalAPI = false; // Experimental Scope support.
    var enableNewReconciler = false; // Errors that are thrown while unmounting (or after in the case of passive effects)
    var warnAboutStringRefs = false;
    var allNativeEvents = new Set();
    /**
 * Mapping from registration name to event name
 */ var registrationNameDependencies1 = {
    };
    /**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */ var possibleRegistrationNames1 = {
    }; // Trust the developer to only use possibleRegistrationNames in true
    function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies);
        registerDirectEvent(registrationName + 'Capture', dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
        if (registrationNameDependencies1[registrationName]) error1("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
        registrationNameDependencies1[registrationName] = dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames1[lowerCasedName] = registrationName;
        if (registrationName === 'onDoubleClick') possibleRegistrationNames1.ondblclick = registrationName;
        for(var i = 0; i < dependencies.length; i++)allNativeEvents.add(dependencies[i]);
    }
    var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');
    // A reserved attribute.
    // It is handled by React separately and shouldn't be written to the DOM.
    var RESERVED = 0; // A simple string attribute.
    // Attributes that aren't in the filter are presumed to have this type.
    var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
    // "enumerated" attributes with "true" and "false" as possible values.
    // When true, it should be set to a "true" string.
    // When false, it should be set to a "false" string.
    var BOOLEANISH_STRING = 2; // A real boolean attribute.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    // For any other value, should be present with that value.
    var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
    // When falsy, it should be removed.
    var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
    // When falsy, it should be removed.
    var POSITIVE_NUMERIC = 6;
    /* eslint-disable max-len */ var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    /* eslint-enable max-len */ var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var illegalAttributeNameCache = {
    };
    var validatedAttributeNameCache = {
    };
    function isAttributeNameSafe(attributeName) {
        if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) return true;
        if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return false;
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
        }
        illegalAttributeNameCache[attributeName] = true;
        error1('Invalid attribute name: `%s`', attributeName);
        return false;
    }
    function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null) return propertyInfo.type === RESERVED;
        if (isCustomComponentTag) return false;
        if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) return true;
        return false;
    }
    function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED) return false;
        switch(typeof value){
            case 'function':
            case 'symbol':
                // eslint-disable-line
                return true;
            case 'boolean':
                if (isCustomComponentTag) return false;
                if (propertyInfo !== null) return !propertyInfo.acceptsBooleans;
                else {
                    var prefix = name.toLowerCase().slice(0, 5);
                    return prefix !== 'data-' && prefix !== 'aria-';
                }
            default:
                return false;
        }
    }
    function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
        if (value === null || typeof value === 'undefined') return true;
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) return true;
        if (isCustomComponentTag) return false;
        if (propertyInfo !== null) switch(propertyInfo.type){
            case BOOLEAN:
                return !value;
            case OVERLOADED_BOOLEAN:
                return value === false;
            case NUMERIC:
                return isNaN(value);
            case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
        }
        return false;
    }
    function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
    }
    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
        this.attributeName = attributeName;
        this.attributeNamespace = attributeNamespace;
        this.mustUseProperty = mustUseProperty;
        this.propertyName = name;
        this.type = type;
        this.sanitizeURL = sanitizeURL;
        this.removeEmptyString = removeEmptyString;
    } // When adding attributes to this list, be sure to also add them to
    // the `possibleStandardNames` module to ensure casing and incorrect
    // name warnings.
    var properties = {
    }; // These props are reserved by React. They shouldn't be written to the DOM.
    var reservedProps = [
        'children',
        'dangerouslySetInnerHTML',
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        'defaultValue',
        'defaultChecked',
        'innerHTML',
        'suppressContentEditableWarning',
        'suppressHydrationWarning',
        'style'
    ];
    reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
    }); // A few React string attributes have a different name.
    // This is a mapping from React prop names to the attribute names.
    [
        [
            'acceptCharset',
            'accept-charset'
        ],
        [
            'className',
            'class'
        ],
        [
            'htmlFor',
            'for'
        ],
        [
            'httpEquiv',
            'http-equiv'
        ]
    ].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // These are "enumerated" HTML attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    [
        'contentEditable',
        'draggable',
        'spellCheck',
        'value'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
    }); // These are "enumerated" SVG attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    // Since these are SVG attributes, their attribute names are case-sensitive.
    [
        'autoReverse',
        'externalResourcesRequired',
        'focusable',
        'preserveAlpha'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
    }); // These are HTML boolean attributes.
    [
        'allowFullScreen',
        'async',
        // on the client side because the browsers are inconsistent. Instead we call focus().
        'autoFocus',
        'autoPlay',
        'controls',
        'default',
        'defer',
        'disabled',
        'disablePictureInPicture',
        'disableRemotePlayback',
        'formNoValidate',
        'hidden',
        'loop',
        'noModule',
        'noValidate',
        'open',
        'playsInline',
        'readOnly',
        'required',
        'reversed',
        'scoped',
        'seamless',
        'itemScope'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
    }); // These are the few React props that we set as DOM properties
    // rather than attributes. These are all booleans.
    [
        'checked',
        // disabled with `removeAttribute`. We have special logic for handling this.
        'multiple',
        'muted',
        'selected' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
    }); // These are HTML attributes that are "overloaded booleans": they behave like
    // booleans, but can also accept a string value.
    [
        'capture',
        'download' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
    }); // These are HTML attributes that must be positive numbers.
    [
        'cols',
        'rows',
        'size',
        'span' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
    }); // These are HTML attributes that must be numbers.
    [
        'rowSpan',
        'start'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
    });
    var CAMELIZE = /[\-\:]([a-z])/g;
    var capitalize = function(token) {
        return token[1].toUpperCase();
    }; // This is a list of all SVG attributes that need special casing, namespacing,
    // or boolean value assignment. Regular attributes that just accept strings
    // and have the same names are omitted, just like in the HTML attribute filter.
    // Some of these attributes can be hard to find. This list was created by
    // scraping the MDN documentation.
    [
        'accent-height',
        'alignment-baseline',
        'arabic-form',
        'baseline-shift',
        'cap-height',
        'clip-path',
        'clip-rule',
        'color-interpolation',
        'color-interpolation-filters',
        'color-profile',
        'color-rendering',
        'dominant-baseline',
        'enable-background',
        'fill-opacity',
        'fill-rule',
        'flood-color',
        'flood-opacity',
        'font-family',
        'font-size',
        'font-size-adjust',
        'font-stretch',
        'font-style',
        'font-variant',
        'font-weight',
        'glyph-name',
        'glyph-orientation-horizontal',
        'glyph-orientation-vertical',
        'horiz-adv-x',
        'horiz-origin-x',
        'image-rendering',
        'letter-spacing',
        'lighting-color',
        'marker-end',
        'marker-mid',
        'marker-start',
        'overline-position',
        'overline-thickness',
        'paint-order',
        'panose-1',
        'pointer-events',
        'rendering-intent',
        'shape-rendering',
        'stop-color',
        'stop-opacity',
        'strikethrough-position',
        'strikethrough-thickness',
        'stroke-dasharray',
        'stroke-dashoffset',
        'stroke-linecap',
        'stroke-linejoin',
        'stroke-miterlimit',
        'stroke-opacity',
        'stroke-width',
        'text-anchor',
        'text-decoration',
        'text-rendering',
        'underline-position',
        'underline-thickness',
        'unicode-bidi',
        'unicode-range',
        'units-per-em',
        'v-alphabetic',
        'v-hanging',
        'v-ideographic',
        'v-mathematical',
        'vector-effect',
        'vert-adv-y',
        'vert-origin-x',
        'vert-origin-y',
        'word-spacing',
        'writing-mode',
        'xmlns:xlink',
        'x-height' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // String SVG attributes with the xlink namespace.
    [
        'xlink:actuate',
        'xlink:arcrole',
        'xlink:role',
        'xlink:show',
        'xlink:title',
        'xlink:type' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, 'http://www.w3.org/1999/xlink', false, false);
    }); // String SVG attributes with the xml namespace.
    [
        'xml:base',
        'xml:lang',
        'xml:space' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, 'http://www.w3.org/XML/1998/namespace', false, false);
    }); // These attribute exists both in HTML and SVG.
    // The attribute name is case-sensitive in SVG so we can't just use
    // the React name like we do for attributes that exist only in HTML.
    [
        'tabIndex',
        'crossOrigin'
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
    }); // These attributes accept URLs. These must not allow javascript: URLS.
    // These will also need to accept Trusted Types object in the future.
    var xlinkHref = 'xlinkHref';
    properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, 'xlink:href', 'http://www.w3.org/1999/xlink', true, false);
    [
        'src',
        'href',
        'action',
        'formAction'
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
    });
    // and any newline or tab are filtered out as if they're not part of the URL.
    // https://url.spec.whatwg.org/#url-parsing
    // Tab or newline are defined as \r\n\t:
    // https://infra.spec.whatwg.org/#ascii-tab-or-newline
    // A C0 control is a code point in the range \u0000 NULL to \u001F
    // INFORMATION SEPARATOR ONE, inclusive:
    // https://infra.spec.whatwg.org/#c0-control-or-space
    /* eslint-disable max-len */ var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
    var didWarn = false;
    function sanitizeURL1(url) {
        if (!didWarn && isJavaScriptProtocol.test(url)) {
            didWarn = true;
            error1("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
        }
    }
    /**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */ function getValueForProperty(node, name, expected, propertyInfo) {
        if (propertyInfo.mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            return node[propertyName];
        } else {
            if (propertyInfo.sanitizeURL) // If we haven't fully disabled javascript: URLs, and if
            // the hydration is successful of a javascript: URL, we
            // still want to warn on the client.
            sanitizeURL1('' + expected);
            var attributeName = propertyInfo.attributeName;
            var stringValue = null;
            if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                    var value = node.getAttribute(attributeName);
                    if (value === '') return true;
                    if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return value;
                    if (value === '' + expected) return expected;
                    return value;
                }
            } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) // We had an attribute but shouldn't have had one, so read it
                // for the error message.
                return node.getAttribute(attributeName);
                if (propertyInfo.type === BOOLEAN) // If this was a boolean, it doesn't matter what the value is
                // the fact that we have it is the same as the expected.
                return expected;
                 // Even if this property uses a namespace we use getAttribute
                // because we assume its namespaced name is the same as our config.
                // To use getAttributeNS we need the local name which we don't have
                // in our config atm.
                stringValue = node.getAttribute(attributeName);
            }
            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return stringValue === null ? expected : stringValue;
            else if (stringValue === '' + expected) return expected;
            else return stringValue;
        }
    }
    /**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */ function getValueForAttribute(node, name, expected) {
        if (!isAttributeNameSafe(name)) return;
         // If the object is an opaque reference ID, it's expected that
        // the next prop is different than the server value, so just return
        // expected
        if (isOpaqueHydratingObject(expected)) return expected;
        if (!node.hasAttribute(name)) return expected === undefined ? undefined : null;
        var value = node.getAttribute(name);
        if (value === '' + expected) return expected;
        return value;
    }
    /**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */ function setValueForProperty(node, name, value, isCustomComponentTag) {
        var propertyInfo = getPropertyInfo(name);
        if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) return;
        if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) value = null;
         // If the prop isn't in the special list, treat it as a simple attribute.
        if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
                var _attributeName = name;
                if (value === null) node.removeAttribute(_attributeName);
                else node.setAttribute(_attributeName, '' + value);
            }
            return;
        }
        var mustUseProperty = propertyInfo.mustUseProperty;
        if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
                var type = propertyInfo.type;
                node[propertyName] = type === BOOLEAN ? false : '';
            } else // Contrary to `setAttribute`, object properties are properly
            // `toString`ed by IE8/9.
            node[propertyName] = value;
            return;
        } // The rest are treated as attributes with special cases.
        var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
        if (value === null) node.removeAttribute(attributeName);
        else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) // If attribute type is boolean, we know for sure it won't be an execution sink
            // and we won't require Trusted Type here.
            attributeValue = '';
            else {
                attributeValue = '' + value;
                if (propertyInfo.sanitizeURL) sanitizeURL1(attributeValue.toString());
            }
            if (attributeNamespace) node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            else node.setAttribute(attributeName, attributeValue);
        }
    }
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 60103;
    var REACT_PORTAL_TYPE = 60106;
    var REACT_FRAGMENT_TYPE = 60107;
    var REACT_STRICT_MODE_TYPE = 60108;
    var REACT_PROFILER_TYPE = 60114;
    var REACT_PROVIDER_TYPE = 60109;
    var REACT_CONTEXT_TYPE = 60110;
    var REACT_FORWARD_REF_TYPE = 60112;
    var REACT_SUSPENSE_TYPE = 60113;
    var REACT_SUSPENSE_LIST_TYPE = 60120;
    var REACT_MEMO_TYPE = 60115;
    var REACT_LAZY_TYPE = 60116;
    var REACT_BLOCK_TYPE = 60121;
    var REACT_SERVER_BLOCK_TYPE = 60122;
    var REACT_FUNDAMENTAL_TYPE = 60117;
    var REACT_SCOPE_TYPE = 60119;
    var REACT_OPAQUE_ID_TYPE = 60128;
    var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
    var REACT_OFFSCREEN_TYPE = 60130;
    var REACT_LEGACY_HIDDEN_TYPE = 60131;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor('react.element');
        REACT_PORTAL_TYPE = symbolFor('react.portal');
        REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
        REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
        REACT_PROFILER_TYPE = symbolFor('react.profiler');
        REACT_PROVIDER_TYPE = symbolFor('react.provider');
        REACT_CONTEXT_TYPE = symbolFor('react.context');
        REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
        REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
        REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
        REACT_MEMO_TYPE = symbolFor('react.memo');
        REACT_LAZY_TYPE = symbolFor('react.lazy');
        REACT_BLOCK_TYPE = symbolFor('react.block');
        REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
        REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
        REACT_SCOPE_TYPE = symbolFor('react.scope');
        REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
        REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
        REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }
    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {
    }
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: _assign({
                }, props, {
                    value: prevLog
                }),
                info: _assign({
                }, props, {
                    value: prevInfo
                }),
                warn: _assign({
                }, props, {
                    value: prevWarn
                }),
                error: _assign({
                }, props, {
                    value: prevError
                }),
                group: _assign({
                }, props, {
                    value: prevGroup
                }),
                groupCollapsed: _assign({
                }, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: _assign({
                }, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error1("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher1 = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix1;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix1 === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix1 = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix1 + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher1.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher1.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0)
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher1.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, true);
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_BLOCK_TYPE:
                return describeFunctionComponentFrame(type._render);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
        }
        return '';
    }
    function describeFiber(fiber) {
        var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
        var source = fiber._debugSource;
        switch(fiber.tag){
            case HostComponent:
                return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
                return describeBuiltInComponentFrame('Lazy');
            case SuspenseComponent:
                return describeBuiltInComponentFrame('Suspense');
            case SuspenseListComponent:
                return describeBuiltInComponentFrame('SuspenseList');
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
                return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
                return describeFunctionComponentFrame(fiber.type.render);
            case Block:
                return describeFunctionComponentFrame(fiber.type._render);
            case ClassComponent:
                return describeClassComponentFrame(fiber.type);
            default:
                return '';
        }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
        try {
            var info = '';
            var node = workInProgress;
            do {
                info += describeFiber(node);
                node = node.return;
            }while (node)
            return info;
        } catch (x) {
            return '\nError generating stack: ' + x.message + '\n' + x.stack;
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || '';
        return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }
    function getContextName(type) {
        return type.displayName || 'Context';
    }
    function getComponentName(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error1("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                return getComponentName(type.type);
            case REACT_BLOCK_TYPE:
                return getComponentName(type._render);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentName(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var ReactDebugCurrentFrame1 = ReactSharedInternals.ReactDebugCurrentFrame;
    var current1 = null;
    var isRendering = false;
    function getCurrentFiberOwnerNameInDevOrNull() {
        if (current1 === null) return null;
        var owner = current1._debugOwner;
        if (owner !== null && typeof owner !== 'undefined') return getComponentName(owner.type);
        return null;
    }
    function getCurrentFiberStackInDev() {
        if (current1 === null) return '';
         // Safe because if current fiber exists, we are reconciling,
        // and it is guaranteed to be the work-in-progress version.
        return getStackByFiberInDevAndProd(current1);
    }
    function resetCurrentFiber() {
        ReactDebugCurrentFrame1.getCurrentStack = null;
        current1 = null;
        isRendering = false;
    }
    function setCurrentFiber(fiber) {
        ReactDebugCurrentFrame1.getCurrentStack = getCurrentFiberStackInDev;
        current1 = fiber;
        isRendering = false;
    }
    function setIsRendering(rendering) {
        isRendering = rendering;
    }
    function getIsRendering() {
        return isRendering;
    }
    // Flow does not allow string concatenation of most non-string types. To work
    // around this limitation, we use an opaque type that can only be obtained by
    // passing the value through getToStringValue first.
    function toString(value) {
        return '' + value;
    }
    function getToStringValue(value) {
        switch(typeof value){
            case 'boolean':
            case 'number':
            case 'object':
            case 'string':
            case 'undefined':
                return value;
            default:
                // function, symbol are assigned as empty strings
                return '';
        }
    }
    var hasReadOnlyValue = {
        button: true,
        checkbox: true,
        image: true,
        hidden: true,
        radio: true,
        reset: true,
        submit: true
    };
    function checkControlledValueProps(tagName, props) {
        if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) error1("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
        if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) error1("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function isCheckable(elem) {
        var type = elem.type;
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
    }
    function getTracker(node) {
        return node._valueTracker;
    }
    function detachTracker(node) {
        node._valueTracker = null;
    }
    function getValueFromNode(node) {
        var value = '';
        if (!node) return value;
        if (isCheckable(node)) value = node.checked ? 'true' : 'false';
        else value = node.value;
        return value;
    }
    function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? 'checked' : 'value';
        var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
        // and don't track value will cause over reporting of changes,
        // but it's better then a hard failure
        // (needed for certain tests that spyOn input values and Safari)
        if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') return;
        var get = descriptor.get, set = descriptor.set;
        Object.defineProperty(node, valueField, {
            configurable: true,
            get: function() {
                return get.call(this);
            },
            set: function(value) {
                currentValue = '' + value;
                set.call(this, value);
            }
        }); // We could've passed this the first time
        // but it triggers a bug in IE11 and Edge 14/15.
        // Calling defineProperty() again should be equivalent.
        // https://github.com/facebook/react/issues/11768
        Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
        });
        var tracker = {
            getValue: function() {
                return currentValue;
            },
            setValue: function(value) {
                currentValue = '' + value;
            },
            stopTracking: function() {
                detachTracker(node);
                delete node[valueField];
            }
        };
        return tracker;
    }
    function track(node) {
        if (getTracker(node)) return;
         // TODO: Once it's just Fiber we can move this to node._wrapperState
        node._valueTracker = trackValueOnNode(node);
    }
    function updateValueIfChanged(node) {
        if (!node) return false;
        var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
        // that trying again will succeed
        if (!tracker) return true;
        var lastValue = tracker.getValue();
        var nextValue = getValueFromNode(node);
        if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
        }
        return false;
    }
    function getActiveElement(doc) {
        doc = doc || (typeof document !== 'undefined' ? document : undefined);
        if (typeof doc === 'undefined') return null;
        try {
            return doc.activeElement || doc.body;
        } catch (e) {
            return doc.body;
        }
    }
    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;
    function isControlled(props) {
        var usesChecked = props.type === 'checkbox' || props.type === 'radio';
        return usesChecked ? props.checked != null : props.value != null;
    }
    /**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */ function getHostProps(element, props) {
        var node = element;
        var checked = props.checked;
        var hostProps = _assign({
        }, props, {
            defaultChecked: undefined,
            defaultValue: undefined,
            value: undefined,
            checked: checked != null ? checked : node._wrapperState.initialChecked
        });
        return hostProps;
    }
    function initWrapperState(element, props) {
        checkControlledValueProps('input', props);
        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
            error1("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
            didWarnCheckedDefaultChecked = true;
        }
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
            error1("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
            didWarnValueDefaultValue = true;
        }
        var node = element;
        var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
        node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
        };
    }
    function updateChecked(element, props) {
        var node = element;
        var checked = props.checked;
        if (checked != null) setValueForProperty(node, 'checked', checked, false);
    }
    function updateWrapper(element, props) {
        var node = element;
        var controlled = isControlled(props);
        if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
            error1("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnUncontrolledToControlled = true;
        }
        if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
            error1("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnControlledToUncontrolled = true;
        }
        updateChecked(element, props);
        var value = getToStringValue(props.value);
        var type = props.type;
        if (value != null) {
            if (type === 'number') {
                if (value === 0 && node.value === '' || // eslint-disable-next-line
                node.value != value) node.value = toString(value);
            } else if (node.value !== toString(value)) node.value = toString(value);
        } else if (type === 'submit' || type === 'reset') {
            // Submit/reset inputs need the attribute removed completely to avoid
            // blank-text buttons.
            node.removeAttribute('value');
            return;
        }
        // When syncing the value attribute, the value comes from a cascade of
        // properties:
        //  1. The value React property
        //  2. The defaultValue React property
        //  3. Otherwise there should be no change
        if (props.hasOwnProperty('value')) setDefaultValue(node, props.type, value);
        else if (props.hasOwnProperty('defaultValue')) setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        // When syncing the checked attribute, it only changes when it needs
        // to be removed, such as transitioning from a checkbox into a text input
        if (props.checked == null && props.defaultChecked != null) node.defaultChecked = !!props.defaultChecked;
    }
    function postMountWrapper(element, props, isHydrating) {
        var node = element; // Do not assign value if it is already set. This prevents user text input
        // from being lost during SSR hydration.
        if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
            var type = props.type;
            var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
            // default value provided by the browser. See: #12872
            if (isButton && (props.value === undefined || props.value === null)) return;
            var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
            // from being lost during SSR hydration.
            if (!isHydrating) // When syncing the value attribute, the value property should use
            // the wrapperState._initialValue property. This uses:
            //
            //   1. The value React property when present
            //   2. The defaultValue React property when present
            //   3. An empty string
            {
                if (initialValue !== node.value) node.value = initialValue;
            }
            // Otherwise, the value attribute is synchronized to the property,
            // so we assign defaultValue to the same thing as the value property
            // assignment step above.
            node.defaultValue = initialValue;
        } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
        // this is needed to work around a chrome bug where setting defaultChecked
        // will sometimes influence the value of checked (even after detachment).
        // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
        // We need to temporarily unset name to avoid disrupting radio button groups.
        var name = node.name;
        if (name !== '') node.name = '';
        // When syncing the checked attribute, both the checked property and
        // attribute are assigned at the same time using defaultChecked. This uses:
        //
        //   1. The checked React property when present
        //   2. The defaultChecked React property when present
        //   3. Otherwise, false
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !!node._wrapperState.initialChecked;
        if (name !== '') node.name = name;
    }
    function restoreControlledState(element, props) {
        var node = element;
        updateWrapper(node, props);
        updateNamedCousins(node, props);
    }
    function updateNamedCousins(rootNode, props) {
        var name = props.name;
        if (props.type === 'radio' && name != null) {
            var queryRoot = rootNode;
            while(queryRoot.parentNode)queryRoot = queryRoot.parentNode;
             // If `rootNode.form` was non-null, then we could try `form.elements`,
            // but that sometimes behaves strangely in IE8. We could also try using
            // `form.getElementsByName`, but that will only return direct children
            // and won't include inputs that use the HTML5 `form=` attribute. Since
            // the input might not even be in a form. It might not even be in the
            // document. Let's just use the local `querySelectorAll` to ensure we don't
            // miss anything.
            var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
            for(var i = 0; i < group.length; i++){
                var otherNode = group[i];
                if (otherNode === rootNode || otherNode.form !== rootNode.form) continue;
                 // This will throw if radio buttons rendered by different copies of React
                // and the same name are rendered into the same form (same as #1939).
                // That's probably okay; we don't support it just as we don't support
                // mixing React radio buttons with non-React ones.
                var otherProps = getFiberCurrentPropsFromNode(otherNode);
                if (!otherProps) throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                 // We need update the tracked value on the named cousin since the value
                // was changed but the input saw no event or value set
                updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
                // was previously checked to update will cause it to be come re-checked
                // as appropriate.
                updateWrapper(otherNode, otherProps);
            }
        }
    } // In Chrome, assigning defaultValue to certain input types triggers input validation.
    // For number inputs, the display value loses trailing decimal points. For email inputs,
    // Chrome raises "The specified value <x> is not a valid email address".
    //
    // Here we check to see if the defaultValue has actually changed, avoiding these problems
    // when the user is inputting text
    //
    // https://github.com/facebook/react/issues/7253
    function setDefaultValue(node, type, value) {
        if (type !== 'number' || getActiveElement(node.ownerDocument) !== node) {
            if (value == null) node.defaultValue = toString(node._wrapperState.initialValue);
            else if (node.defaultValue !== toString(value)) node.defaultValue = toString(value);
        }
    }
    var didWarnSelectedSetOnOption = false;
    var didWarnInvalidChild = false;
    function flattenChildren(children) {
        var content = ''; // Flatten children. We'll warn if they are invalid
        // during validateProps() which runs for hydration too.
        // Note that this would throw on non-element objects.
        // Elements are stringified (which is normally irrelevant
        // but matters for <fbt>).
        React.Children.forEach(children, function(child) {
            if (child == null) return;
            content += child; // Note: we don't warn about invalid children here.
        // Instead, this is done separately below so that
        // it happens during the hydration code path too.
        });
        return content;
    }
    /**
 * Implements an <option> host component that warns when `selected` is set.
 */ function validateProps(element, props) {
        // This mirrors the code path above, but runs for hydration too.
        // Warn about invalid children here so that client and hydration are consistent.
        // TODO: this seems like it could cause a DEV-only throw for hydration
        // if children contains a non-element object. We should try to avoid that.
        if (typeof props.children === 'object' && props.children !== null) React.Children.forEach(props.children, function(child) {
            if (child == null) return;
            if (typeof child === 'string' || typeof child === 'number') return;
            if (typeof child.type !== 'string') return;
            if (!didWarnInvalidChild) {
                didWarnInvalidChild = true;
                error1('Only strings and numbers are supported as <option> children.');
            }
        });
         // TODO: Remove support for `selected` in <option>.
        if (props.selected != null && !didWarnSelectedSetOnOption) {
            error1("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
            didWarnSelectedSetOnOption = true;
        }
    }
    function postMountWrapper$1(element, props) {
        // value="" should make a value attribute (#6219)
        if (props.value != null) element.setAttribute('value', toString(getToStringValue(props.value)));
    }
    function getHostProps$1(element, props) {
        var hostProps = _assign({
            children: undefined
        }, props);
        var content = flattenChildren(props.children);
        if (content) hostProps.children = content;
        return hostProps;
    }
    var didWarnValueDefaultValue$1;
    didWarnValueDefaultValue$1 = false;
    function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        if (ownerName) return '\n\nCheck the render method of `' + ownerName + '`.';
        return '';
    }
    var valuePropNames = [
        'value',
        'defaultValue'
    ];
    /**
 * Validation function for `value` and `defaultValue`.
 */ function checkSelectPropTypes(props) {
        checkControlledValueProps('select', props);
        for(var i = 0; i < valuePropNames.length; i++){
            var propName = valuePropNames[i];
            if (props[propName] == null) continue;
            var isArray = Array.isArray(props[propName]);
            if (props.multiple && !isArray) error1("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
            else if (!props.multiple && isArray) error1("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
        }
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
        var options = node.options;
        if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {
            };
            for(var i = 0; i < selectedValues.length; i++)// Prefix to avoid chaos with special keys.
            selectedValue['$' + selectedValues[i]] = true;
            for(var _i = 0; _i < options.length; _i++){
                var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
                if (options[_i].selected !== selected) options[_i].selected = selected;
                if (selected && setDefaultSelected) options[_i].defaultSelected = true;
            }
        } else {
            // Do not set `select.value` as exact behavior isn't consistent across all
            // browsers for all cases.
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for(var _i2 = 0; _i2 < options.length; _i2++){
                if (options[_i2].value === _selectedValue) {
                    options[_i2].selected = true;
                    if (setDefaultSelected) options[_i2].defaultSelected = true;
                    return;
                }
                if (defaultSelected === null && !options[_i2].disabled) defaultSelected = options[_i2];
            }
            if (defaultSelected !== null) defaultSelected.selected = true;
        }
    }
    /**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */ function getHostProps$2(element, props) {
        return _assign({
        }, props, {
            value: undefined
        });
    }
    function initWrapperState$1(element, props) {
        var node = element;
        checkSelectPropTypes(props);
        node._wrapperState = {
            wasMultiple: !!props.multiple
        };
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
            error1("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
            didWarnValueDefaultValue$1 = true;
        }
    }
    function postMountWrapper$2(element, props) {
        var node = element;
        node.multiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
    }
    function postUpdateWrapper(element, props) {
        var node = element;
        var wasMultiple = node._wrapperState.wasMultiple;
        node._wrapperState.wasMultiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (wasMultiple !== !!props.multiple) {
            // For simplicity, reapply `defaultValue` if `multiple` is toggled.
            if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
            else // Revert the select back to its default unselected state.
            updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
        }
    }
    function restoreControlledState$1(element, props) {
        var node = element;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
    }
    var didWarnValDefaultVal = false;
    /**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */ function getHostProps$3(element, props) {
        var node = element;
        if (!(props.dangerouslySetInnerHTML == null)) throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
         // Always set children to the same thing. In IE9, the selection range will
        // get reset if `textContent` is mutated.  We could add a check in setTextContent
        // to only set the value if/when the value differs from the node value (which would
        // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
        // solution. The value can be a boolean or object so that's why it's forced
        // to be a string.
        var hostProps = _assign({
        }, props, {
            value: undefined,
            defaultValue: undefined,
            children: toString(node._wrapperState.initialValue)
        });
        return hostProps;
    }
    function initWrapperState$2(element, props) {
        var node = element;
        checkControlledValueProps('textarea', props);
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
            error1("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component');
            didWarnValDefaultVal = true;
        }
        var initialValue = props.value; // Only bother fetching default value if we're going to use it
        if (initialValue == null) {
            var children = props.children, defaultValue = props.defaultValue;
            if (children != null) {
                error1("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
                if (!(defaultValue == null)) throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                if (Array.isArray(children)) {
                    if (!(children.length <= 1)) throw Error("<textarea> can only have at most one child.");
                    children = children[0];
                }
                defaultValue = children;
            }
            if (defaultValue == null) defaultValue = '';
            initialValue = defaultValue;
        }
        node._wrapperState = {
            initialValue: getToStringValue(initialValue)
        };
    }
    function updateWrapper$1(element, props) {
        var node = element;
        var value = getToStringValue(props.value);
        var defaultValue = getToStringValue(props.defaultValue);
        if (value != null) {
            // Cast `value` to a string to ensure the value is set correctly. While
            // browsers typically do this as necessary, jsdom doesn't.
            var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed
            if (newValue !== node.value) node.value = newValue;
            if (props.defaultValue == null && node.defaultValue !== newValue) node.defaultValue = newValue;
        }
        if (defaultValue != null) node.defaultValue = toString(defaultValue);
    }
    function postMountWrapper$3(element, props) {
        var node = element; // This is in postMount because we need access to the DOM node, which is not
        // available until after the component has mounted.
        var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
        // initial value. In IE10/IE11 there is a bug where the placeholder attribute
        // will populate textContent as well.
        // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
        if (textContent === node._wrapperState.initialValue) {
            if (textContent !== '' && textContent !== null) node.value = textContent;
        }
    }
    function restoreControlledState$2(element, props) {
        // DOM component is still mounted; update
        updateWrapper$1(element, props);
    }
    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
    var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
    var Namespaces = {
        html: HTML_NAMESPACE,
        mathml: MATH_NAMESPACE,
        svg: SVG_NAMESPACE
    }; // Assumes there is no parent namespace.
    function getIntrinsicNamespace(type) {
        switch(type){
            case 'svg':
                return SVG_NAMESPACE;
            case 'math':
                return MATH_NAMESPACE;
            default:
                return HTML_NAMESPACE;
        }
    }
    function getChildNamespace(parentNamespace, type) {
        if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) // No (or default) parent namespace: potential entry point.
        return getIntrinsicNamespace(type);
        if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') // We're leaving SVG.
        return HTML_NAMESPACE;
         // By default, pass namespace below.
        return parentNamespace;
    }
    /* globals MSApp */ /**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */ var createMicrosoftUnsafeLocalFunction = function(func) {
        if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) return function(arg0, arg1, arg2, arg3) {
            MSApp.execUnsafeLocalFunction(function() {
                return func(arg0, arg1, arg2, arg3);
            });
        };
        else return func;
    };
    var reusableSVGContainer;
    /**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */ var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
        if (node.namespaceURI === Namespaces.svg) {
            if (!('innerHTML' in node)) {
                // IE does not have innerHTML for SVG nodes, so instead we inject the
                // new markup in a temp node and then move the child nodes across into
                // the target node
                reusableSVGContainer = reusableSVGContainer || document.createElement('div');
                reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
                var svgNode = reusableSVGContainer.firstChild;
                while(node.firstChild)node.removeChild(node.firstChild);
                while(svgNode.firstChild)node.appendChild(svgNode.firstChild);
                return;
            }
        }
        node.innerHTML = html;
    });
    /**
 * HTML nodeType values that represent the type of the node
 */ var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    var DOCUMENT_NODE = 9;
    var DOCUMENT_FRAGMENT_NODE = 11;
    /**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */ var setTextContent = function(node, text) {
        if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
                firstChild.nodeValue = text;
                return;
            }
        }
        node.textContent = text;
    };
    // List derived from Gecko source code:
    // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
    var shorthandToLonghand = {
        animation: [
            'animationDelay',
            'animationDirection',
            'animationDuration',
            'animationFillMode',
            'animationIterationCount',
            'animationName',
            'animationPlayState',
            'animationTimingFunction'
        ],
        background: [
            'backgroundAttachment',
            'backgroundClip',
            'backgroundColor',
            'backgroundImage',
            'backgroundOrigin',
            'backgroundPositionX',
            'backgroundPositionY',
            'backgroundRepeat',
            'backgroundSize'
        ],
        backgroundPosition: [
            'backgroundPositionX',
            'backgroundPositionY'
        ],
        border: [
            'borderBottomColor',
            'borderBottomStyle',
            'borderBottomWidth',
            'borderImageOutset',
            'borderImageRepeat',
            'borderImageSlice',
            'borderImageSource',
            'borderImageWidth',
            'borderLeftColor',
            'borderLeftStyle',
            'borderLeftWidth',
            'borderRightColor',
            'borderRightStyle',
            'borderRightWidth',
            'borderTopColor',
            'borderTopStyle',
            'borderTopWidth'
        ],
        borderBlockEnd: [
            'borderBlockEndColor',
            'borderBlockEndStyle',
            'borderBlockEndWidth'
        ],
        borderBlockStart: [
            'borderBlockStartColor',
            'borderBlockStartStyle',
            'borderBlockStartWidth'
        ],
        borderBottom: [
            'borderBottomColor',
            'borderBottomStyle',
            'borderBottomWidth'
        ],
        borderColor: [
            'borderBottomColor',
            'borderLeftColor',
            'borderRightColor',
            'borderTopColor'
        ],
        borderImage: [
            'borderImageOutset',
            'borderImageRepeat',
            'borderImageSlice',
            'borderImageSource',
            'borderImageWidth'
        ],
        borderInlineEnd: [
            'borderInlineEndColor',
            'borderInlineEndStyle',
            'borderInlineEndWidth'
        ],
        borderInlineStart: [
            'borderInlineStartColor',
            'borderInlineStartStyle',
            'borderInlineStartWidth'
        ],
        borderLeft: [
            'borderLeftColor',
            'borderLeftStyle',
            'borderLeftWidth'
        ],
        borderRadius: [
            'borderBottomLeftRadius',
            'borderBottomRightRadius',
            'borderTopLeftRadius',
            'borderTopRightRadius'
        ],
        borderRight: [
            'borderRightColor',
            'borderRightStyle',
            'borderRightWidth'
        ],
        borderStyle: [
            'borderBottomStyle',
            'borderLeftStyle',
            'borderRightStyle',
            'borderTopStyle'
        ],
        borderTop: [
            'borderTopColor',
            'borderTopStyle',
            'borderTopWidth'
        ],
        borderWidth: [
            'borderBottomWidth',
            'borderLeftWidth',
            'borderRightWidth',
            'borderTopWidth'
        ],
        columnRule: [
            'columnRuleColor',
            'columnRuleStyle',
            'columnRuleWidth'
        ],
        columns: [
            'columnCount',
            'columnWidth'
        ],
        flex: [
            'flexBasis',
            'flexGrow',
            'flexShrink'
        ],
        flexFlow: [
            'flexDirection',
            'flexWrap'
        ],
        font: [
            'fontFamily',
            'fontFeatureSettings',
            'fontKerning',
            'fontLanguageOverride',
            'fontSize',
            'fontSizeAdjust',
            'fontStretch',
            'fontStyle',
            'fontVariant',
            'fontVariantAlternates',
            'fontVariantCaps',
            'fontVariantEastAsian',
            'fontVariantLigatures',
            'fontVariantNumeric',
            'fontVariantPosition',
            'fontWeight',
            'lineHeight'
        ],
        fontVariant: [
            'fontVariantAlternates',
            'fontVariantCaps',
            'fontVariantEastAsian',
            'fontVariantLigatures',
            'fontVariantNumeric',
            'fontVariantPosition'
        ],
        gap: [
            'columnGap',
            'rowGap'
        ],
        grid: [
            'gridAutoColumns',
            'gridAutoFlow',
            'gridAutoRows',
            'gridTemplateAreas',
            'gridTemplateColumns',
            'gridTemplateRows'
        ],
        gridArea: [
            'gridColumnEnd',
            'gridColumnStart',
            'gridRowEnd',
            'gridRowStart'
        ],
        gridColumn: [
            'gridColumnEnd',
            'gridColumnStart'
        ],
        gridColumnGap: [
            'columnGap'
        ],
        gridGap: [
            'columnGap',
            'rowGap'
        ],
        gridRow: [
            'gridRowEnd',
            'gridRowStart'
        ],
        gridRowGap: [
            'rowGap'
        ],
        gridTemplate: [
            'gridTemplateAreas',
            'gridTemplateColumns',
            'gridTemplateRows'
        ],
        listStyle: [
            'listStyleImage',
            'listStylePosition',
            'listStyleType'
        ],
        margin: [
            'marginBottom',
            'marginLeft',
            'marginRight',
            'marginTop'
        ],
        marker: [
            'markerEnd',
            'markerMid',
            'markerStart'
        ],
        mask: [
            'maskClip',
            'maskComposite',
            'maskImage',
            'maskMode',
            'maskOrigin',
            'maskPositionX',
            'maskPositionY',
            'maskRepeat',
            'maskSize'
        ],
        maskPosition: [
            'maskPositionX',
            'maskPositionY'
        ],
        outline: [
            'outlineColor',
            'outlineStyle',
            'outlineWidth'
        ],
        overflow: [
            'overflowX',
            'overflowY'
        ],
        padding: [
            'paddingBottom',
            'paddingLeft',
            'paddingRight',
            'paddingTop'
        ],
        placeContent: [
            'alignContent',
            'justifyContent'
        ],
        placeItems: [
            'alignItems',
            'justifyItems'
        ],
        placeSelf: [
            'alignSelf',
            'justifySelf'
        ],
        textDecoration: [
            'textDecorationColor',
            'textDecorationLine',
            'textDecorationStyle'
        ],
        textEmphasis: [
            'textEmphasisColor',
            'textEmphasisStyle'
        ],
        transition: [
            'transitionDelay',
            'transitionDuration',
            'transitionProperty',
            'transitionTimingFunction'
        ],
        wordWrap: [
            'overflowWrap'
        ]
    };
    /**
 * CSS properties which accept numbers but are not in units of "px".
 */ var isUnitlessNumber = {
        animationIterationCount: true,
        borderImageOutset: true,
        borderImageSlice: true,
        borderImageWidth: true,
        boxFlex: true,
        boxFlexGroup: true,
        boxOrdinalGroup: true,
        columnCount: true,
        columns: true,
        flex: true,
        flexGrow: true,
        flexPositive: true,
        flexShrink: true,
        flexNegative: true,
        flexOrder: true,
        gridArea: true,
        gridRow: true,
        gridRowEnd: true,
        gridRowSpan: true,
        gridRowStart: true,
        gridColumn: true,
        gridColumnEnd: true,
        gridColumnSpan: true,
        gridColumnStart: true,
        fontWeight: true,
        lineClamp: true,
        lineHeight: true,
        opacity: true,
        order: true,
        orphans: true,
        tabSize: true,
        widows: true,
        zIndex: true,
        zoom: true,
        // SVG-related properties
        fillOpacity: true,
        floodOpacity: true,
        stopOpacity: true,
        strokeDasharray: true,
        strokeDashoffset: true,
        strokeMiterlimit: true,
        strokeOpacity: true,
        strokeWidth: true
    };
    /**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */ function prefixKey(prefix, key) {
        return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    /**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */ var prefixes1 = [
        'Webkit',
        'ms',
        'Moz',
        'O'
    ]; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
    // infinite loop, because it iterates over the newly added props too.
    Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes1.forEach(function(prefix) {
            isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
        });
    });
    /**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */ function dangerousStyleValue(name, value, isCustomProperty) {
        // Note that we've removed escapeTextForBrowser() calls here since the
        // whole string will be escaped when the attribute is injected into
        // the markup. If you provide unsafe user data here they can inject
        // arbitrary CSS which may be problematic (I couldn't repro this):
        // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
        // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
        // This is not an XSS hole but instead a potential CSS injection issue
        // which has lead to a greater discussion about how we're going to
        // trust URLs moving forward. See #2115901
        var isEmpty = value == null || typeof value === 'boolean' || value === '';
        if (isEmpty) return '';
        if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
        return ('' + value).trim();
    }
    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    /**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */ function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
    }
    var warnValidStyle = function() {
    };
    // 'msTransform' is correct, but the other prefixes should be capitalized
    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
    var msPattern$1 = /^-ms-/;
    var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon
    var badStyleValueWithSemicolonPattern = /;\s*$/;
    var warnedStyleNames = {
    };
    var warnedStyleValues = {
    };
    var warnedForNaNValue = false;
    var warnedForInfinityValue = false;
    var camelize = function(string) {
        return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
        });
    };
    var warnHyphenatedStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error1('Unsupported style property %s. Did you mean %s?', name, // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
        // is converted to lowercase `ms`.
        camelize(name.replace(msPattern$1, 'ms-')));
    };
    var warnBadVendoredStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error1('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
    };
    var warnStyleValueWithSemicolon = function(name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) return;
        warnedStyleValues[value] = true;
        error1("Style property values shouldn't contain a semicolon. Try \"%s: %s\" instead.", name, value.replace(badStyleValueWithSemicolonPattern, ''));
    };
    var warnStyleValueIsNaN = function(name, value) {
        if (warnedForNaNValue) return;
        warnedForNaNValue = true;
        error1('`NaN` is an invalid value for the `%s` css style property.', name);
    };
    var warnStyleValueIsInfinity = function(name, value) {
        if (warnedForInfinityValue) return;
        warnedForInfinityValue = true;
        error1('`Infinity` is an invalid value for the `%s` css style property.', name);
    };
    warnValidStyle = function(name, value) {
        if (name.indexOf('-') > -1) warnHyphenatedStyleName(name);
        else if (badVendoredStyleNamePattern.test(name)) warnBadVendoredStyleName(name);
        else if (badStyleValueWithSemicolonPattern.test(value)) warnStyleValueWithSemicolon(name, value);
        if (typeof value === 'number') {
            if (isNaN(value)) warnStyleValueIsNaN(name, value);
            else if (!isFinite(value)) warnStyleValueIsInfinity(name, value);
        }
    };
    var warnValidStyle$1 = warnValidStyle;
    /**
 * Operations for dealing with CSS properties.
 */ /**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */ function createDangerousStringForStyles(styles) {
        var serialized = '';
        var delimiter = '';
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var styleValue = styles[styleName];
            if (styleValue != null) {
                var isCustomProperty = styleName.indexOf('--') === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ';';
            }
        }
        return serialized || null;
    }
    /**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */ function setValueForStyles(node, styles) {
        var style = node.style;
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var isCustomProperty = styleName.indexOf('--') === 0;
            if (!isCustomProperty) warnValidStyle$1(styleName, styles[styleName]);
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            if (styleName === 'float') styleName = 'cssFloat';
            if (isCustomProperty) style.setProperty(styleName, styleValue);
            else style[styleName] = styleValue;
        }
    }
    function isValueEmpty(value) {
        return value == null || typeof value === 'boolean' || value === '';
    }
    /**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */ function expandShorthandMap(styles) {
        var expanded = {
        };
        for(var key in styles){
            var longhands = shorthandToLonghand[key] || [
                key
            ];
            for(var i = 0; i < longhands.length; i++)expanded[longhands[i]] = key;
        }
        return expanded;
    }
    /**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */ function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
        if (!nextStyles) return;
        var expandedUpdates = expandShorthandMap(styleUpdates);
        var expandedStyles = expandShorthandMap(nextStyles);
        var warnedAbout = {
        };
        for(var key in expandedUpdates){
            var originalKey = expandedUpdates[key];
            var correctOriginalKey = expandedStyles[key];
            if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + ',' + correctOriginalKey;
                if (warnedAbout[warningKey]) continue;
                warnedAbout[warningKey] = true;
                error1("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
            }
        }
    }
    // For HTML, certain tags should omit their close tag. We keep a list for
    // those special-case tags.
    var omittedCloseTags = {
        area: true,
        base: true,
        br: true,
        col: true,
        embed: true,
        hr: true,
        img: true,
        input: true,
        keygen: true,
        link: true,
        meta: true,
        param: true,
        source: true,
        track: true,
        wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.
    };
    // `omittedCloseTags` except that `menuitem` should still have its closing tag.
    var voidElementTags = _assign({
        menuitem: true
    }, omittedCloseTags);
    var HTML = '__html';
    function assertValidProps(tag, props) {
        if (!props) return;
         // Note the use of `==` which checks for null or undefined.
        if (voidElementTags[tag]) {
            if (!(props.children == null && props.dangerouslySetInnerHTML == null)) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
        }
        if (props.dangerouslySetInnerHTML != null) {
            if (!(props.children == null)) throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            if (!(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML)) throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) error1("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
        if (!(props.style == null || typeof props.style === 'object')) throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
    }
    function isCustomComponent(tagName, props) {
        if (tagName.indexOf('-') === -1) return typeof props.is === 'string';
        switch(tagName){
            // These are reserved SVG and MathML elements.
            // We don't mind this list too much because we expect it to never grow.
            // The alternative is to track the namespace in a few places which is convoluted.
            // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph':
                return false;
            default:
                return true;
        }
    }
    // When adding attributes to the HTML or SVG allowed attribute list, be sure to
    // also add them to this module to ensure casing and incorrect name
    // warnings.
    var possibleStandardNames = {
        // HTML
        accept: 'accept',
        acceptcharset: 'acceptCharset',
        'accept-charset': 'acceptCharset',
        accesskey: 'accessKey',
        action: 'action',
        allowfullscreen: 'allowFullScreen',
        alt: 'alt',
        as: 'as',
        async: 'async',
        autocapitalize: 'autoCapitalize',
        autocomplete: 'autoComplete',
        autocorrect: 'autoCorrect',
        autofocus: 'autoFocus',
        autoplay: 'autoPlay',
        autosave: 'autoSave',
        capture: 'capture',
        cellpadding: 'cellPadding',
        cellspacing: 'cellSpacing',
        challenge: 'challenge',
        charset: 'charSet',
        checked: 'checked',
        children: 'children',
        cite: 'cite',
        class: 'className',
        classid: 'classID',
        classname: 'className',
        cols: 'cols',
        colspan: 'colSpan',
        content: 'content',
        contenteditable: 'contentEditable',
        contextmenu: 'contextMenu',
        controls: 'controls',
        controlslist: 'controlsList',
        coords: 'coords',
        crossorigin: 'crossOrigin',
        dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
        data: 'data',
        datetime: 'dateTime',
        default: 'default',
        defaultchecked: 'defaultChecked',
        defaultvalue: 'defaultValue',
        defer: 'defer',
        dir: 'dir',
        disabled: 'disabled',
        disablepictureinpicture: 'disablePictureInPicture',
        disableremoteplayback: 'disableRemotePlayback',
        download: 'download',
        draggable: 'draggable',
        enctype: 'encType',
        enterkeyhint: 'enterKeyHint',
        for: 'htmlFor',
        form: 'form',
        formmethod: 'formMethod',
        formaction: 'formAction',
        formenctype: 'formEncType',
        formnovalidate: 'formNoValidate',
        formtarget: 'formTarget',
        frameborder: 'frameBorder',
        headers: 'headers',
        height: 'height',
        hidden: 'hidden',
        high: 'high',
        href: 'href',
        hreflang: 'hrefLang',
        htmlfor: 'htmlFor',
        httpequiv: 'httpEquiv',
        'http-equiv': 'httpEquiv',
        icon: 'icon',
        id: 'id',
        innerhtml: 'innerHTML',
        inputmode: 'inputMode',
        integrity: 'integrity',
        is: 'is',
        itemid: 'itemID',
        itemprop: 'itemProp',
        itemref: 'itemRef',
        itemscope: 'itemScope',
        itemtype: 'itemType',
        keyparams: 'keyParams',
        keytype: 'keyType',
        kind: 'kind',
        label: 'label',
        lang: 'lang',
        list: 'list',
        loop: 'loop',
        low: 'low',
        manifest: 'manifest',
        marginwidth: 'marginWidth',
        marginheight: 'marginHeight',
        max: 'max',
        maxlength: 'maxLength',
        media: 'media',
        mediagroup: 'mediaGroup',
        method: 'method',
        min: 'min',
        minlength: 'minLength',
        multiple: 'multiple',
        muted: 'muted',
        name: 'name',
        nomodule: 'noModule',
        nonce: 'nonce',
        novalidate: 'noValidate',
        open: 'open',
        optimum: 'optimum',
        pattern: 'pattern',
        placeholder: 'placeholder',
        playsinline: 'playsInline',
        poster: 'poster',
        preload: 'preload',
        profile: 'profile',
        radiogroup: 'radioGroup',
        readonly: 'readOnly',
        referrerpolicy: 'referrerPolicy',
        rel: 'rel',
        required: 'required',
        reversed: 'reversed',
        role: 'role',
        rows: 'rows',
        rowspan: 'rowSpan',
        sandbox: 'sandbox',
        scope: 'scope',
        scoped: 'scoped',
        scrolling: 'scrolling',
        seamless: 'seamless',
        selected: 'selected',
        shape: 'shape',
        size: 'size',
        sizes: 'sizes',
        span: 'span',
        spellcheck: 'spellCheck',
        src: 'src',
        srcdoc: 'srcDoc',
        srclang: 'srcLang',
        srcset: 'srcSet',
        start: 'start',
        step: 'step',
        style: 'style',
        summary: 'summary',
        tabindex: 'tabIndex',
        target: 'target',
        title: 'title',
        type: 'type',
        usemap: 'useMap',
        value: 'value',
        width: 'width',
        wmode: 'wmode',
        wrap: 'wrap',
        // SVG
        about: 'about',
        accentheight: 'accentHeight',
        'accent-height': 'accentHeight',
        accumulate: 'accumulate',
        additive: 'additive',
        alignmentbaseline: 'alignmentBaseline',
        'alignment-baseline': 'alignmentBaseline',
        allowreorder: 'allowReorder',
        alphabetic: 'alphabetic',
        amplitude: 'amplitude',
        arabicform: 'arabicForm',
        'arabic-form': 'arabicForm',
        ascent: 'ascent',
        attributename: 'attributeName',
        attributetype: 'attributeType',
        autoreverse: 'autoReverse',
        azimuth: 'azimuth',
        basefrequency: 'baseFrequency',
        baselineshift: 'baselineShift',
        'baseline-shift': 'baselineShift',
        baseprofile: 'baseProfile',
        bbox: 'bbox',
        begin: 'begin',
        bias: 'bias',
        by: 'by',
        calcmode: 'calcMode',
        capheight: 'capHeight',
        'cap-height': 'capHeight',
        clip: 'clip',
        clippath: 'clipPath',
        'clip-path': 'clipPath',
        clippathunits: 'clipPathUnits',
        cliprule: 'clipRule',
        'clip-rule': 'clipRule',
        color: 'color',
        colorinterpolation: 'colorInterpolation',
        'color-interpolation': 'colorInterpolation',
        colorinterpolationfilters: 'colorInterpolationFilters',
        'color-interpolation-filters': 'colorInterpolationFilters',
        colorprofile: 'colorProfile',
        'color-profile': 'colorProfile',
        colorrendering: 'colorRendering',
        'color-rendering': 'colorRendering',
        contentscripttype: 'contentScriptType',
        contentstyletype: 'contentStyleType',
        cursor: 'cursor',
        cx: 'cx',
        cy: 'cy',
        d: 'd',
        datatype: 'datatype',
        decelerate: 'decelerate',
        descent: 'descent',
        diffuseconstant: 'diffuseConstant',
        direction: 'direction',
        display: 'display',
        divisor: 'divisor',
        dominantbaseline: 'dominantBaseline',
        'dominant-baseline': 'dominantBaseline',
        dur: 'dur',
        dx: 'dx',
        dy: 'dy',
        edgemode: 'edgeMode',
        elevation: 'elevation',
        enablebackground: 'enableBackground',
        'enable-background': 'enableBackground',
        end: 'end',
        exponent: 'exponent',
        externalresourcesrequired: 'externalResourcesRequired',
        fill: 'fill',
        fillopacity: 'fillOpacity',
        'fill-opacity': 'fillOpacity',
        fillrule: 'fillRule',
        'fill-rule': 'fillRule',
        filter: 'filter',
        filterres: 'filterRes',
        filterunits: 'filterUnits',
        floodopacity: 'floodOpacity',
        'flood-opacity': 'floodOpacity',
        floodcolor: 'floodColor',
        'flood-color': 'floodColor',
        focusable: 'focusable',
        fontfamily: 'fontFamily',
        'font-family': 'fontFamily',
        fontsize: 'fontSize',
        'font-size': 'fontSize',
        fontsizeadjust: 'fontSizeAdjust',
        'font-size-adjust': 'fontSizeAdjust',
        fontstretch: 'fontStretch',
        'font-stretch': 'fontStretch',
        fontstyle: 'fontStyle',
        'font-style': 'fontStyle',
        fontvariant: 'fontVariant',
        'font-variant': 'fontVariant',
        fontweight: 'fontWeight',
        'font-weight': 'fontWeight',
        format: 'format',
        from: 'from',
        fx: 'fx',
        fy: 'fy',
        g1: 'g1',
        g2: 'g2',
        glyphname: 'glyphName',
        'glyph-name': 'glyphName',
        glyphorientationhorizontal: 'glyphOrientationHorizontal',
        'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
        glyphorientationvertical: 'glyphOrientationVertical',
        'glyph-orientation-vertical': 'glyphOrientationVertical',
        glyphref: 'glyphRef',
        gradienttransform: 'gradientTransform',
        gradientunits: 'gradientUnits',
        hanging: 'hanging',
        horizadvx: 'horizAdvX',
        'horiz-adv-x': 'horizAdvX',
        horizoriginx: 'horizOriginX',
        'horiz-origin-x': 'horizOriginX',
        ideographic: 'ideographic',
        imagerendering: 'imageRendering',
        'image-rendering': 'imageRendering',
        in2: 'in2',
        in: 'in',
        inlist: 'inlist',
        intercept: 'intercept',
        k1: 'k1',
        k2: 'k2',
        k3: 'k3',
        k4: 'k4',
        k: 'k',
        kernelmatrix: 'kernelMatrix',
        kernelunitlength: 'kernelUnitLength',
        kerning: 'kerning',
        keypoints: 'keyPoints',
        keysplines: 'keySplines',
        keytimes: 'keyTimes',
        lengthadjust: 'lengthAdjust',
        letterspacing: 'letterSpacing',
        'letter-spacing': 'letterSpacing',
        lightingcolor: 'lightingColor',
        'lighting-color': 'lightingColor',
        limitingconeangle: 'limitingConeAngle',
        local: 'local',
        markerend: 'markerEnd',
        'marker-end': 'markerEnd',
        markerheight: 'markerHeight',
        markermid: 'markerMid',
        'marker-mid': 'markerMid',
        markerstart: 'markerStart',
        'marker-start': 'markerStart',
        markerunits: 'markerUnits',
        markerwidth: 'markerWidth',
        mask: 'mask',
        maskcontentunits: 'maskContentUnits',
        maskunits: 'maskUnits',
        mathematical: 'mathematical',
        mode: 'mode',
        numoctaves: 'numOctaves',
        offset: 'offset',
        opacity: 'opacity',
        operator: 'operator',
        order: 'order',
        orient: 'orient',
        orientation: 'orientation',
        origin: 'origin',
        overflow: 'overflow',
        overlineposition: 'overlinePosition',
        'overline-position': 'overlinePosition',
        overlinethickness: 'overlineThickness',
        'overline-thickness': 'overlineThickness',
        paintorder: 'paintOrder',
        'paint-order': 'paintOrder',
        panose1: 'panose1',
        'panose-1': 'panose1',
        pathlength: 'pathLength',
        patterncontentunits: 'patternContentUnits',
        patterntransform: 'patternTransform',
        patternunits: 'patternUnits',
        pointerevents: 'pointerEvents',
        'pointer-events': 'pointerEvents',
        points: 'points',
        pointsatx: 'pointsAtX',
        pointsaty: 'pointsAtY',
        pointsatz: 'pointsAtZ',
        prefix: 'prefix',
        preservealpha: 'preserveAlpha',
        preserveaspectratio: 'preserveAspectRatio',
        primitiveunits: 'primitiveUnits',
        property: 'property',
        r: 'r',
        radius: 'radius',
        refx: 'refX',
        refy: 'refY',
        renderingintent: 'renderingIntent',
        'rendering-intent': 'renderingIntent',
        repeatcount: 'repeatCount',
        repeatdur: 'repeatDur',
        requiredextensions: 'requiredExtensions',
        requiredfeatures: 'requiredFeatures',
        resource: 'resource',
        restart: 'restart',
        result: 'result',
        results: 'results',
        rotate: 'rotate',
        rx: 'rx',
        ry: 'ry',
        scale: 'scale',
        security: 'security',
        seed: 'seed',
        shaperendering: 'shapeRendering',
        'shape-rendering': 'shapeRendering',
        slope: 'slope',
        spacing: 'spacing',
        specularconstant: 'specularConstant',
        specularexponent: 'specularExponent',
        speed: 'speed',
        spreadmethod: 'spreadMethod',
        startoffset: 'startOffset',
        stddeviation: 'stdDeviation',
        stemh: 'stemh',
        stemv: 'stemv',
        stitchtiles: 'stitchTiles',
        stopcolor: 'stopColor',
        'stop-color': 'stopColor',
        stopopacity: 'stopOpacity',
        'stop-opacity': 'stopOpacity',
        strikethroughposition: 'strikethroughPosition',
        'strikethrough-position': 'strikethroughPosition',
        strikethroughthickness: 'strikethroughThickness',
        'strikethrough-thickness': 'strikethroughThickness',
        string: 'string',
        stroke: 'stroke',
        strokedasharray: 'strokeDasharray',
        'stroke-dasharray': 'strokeDasharray',
        strokedashoffset: 'strokeDashoffset',
        'stroke-dashoffset': 'strokeDashoffset',
        strokelinecap: 'strokeLinecap',
        'stroke-linecap': 'strokeLinecap',
        strokelinejoin: 'strokeLinejoin',
        'stroke-linejoin': 'strokeLinejoin',
        strokemiterlimit: 'strokeMiterlimit',
        'stroke-miterlimit': 'strokeMiterlimit',
        strokewidth: 'strokeWidth',
        'stroke-width': 'strokeWidth',
        strokeopacity: 'strokeOpacity',
        'stroke-opacity': 'strokeOpacity',
        suppresscontenteditablewarning: 'suppressContentEditableWarning',
        suppresshydrationwarning: 'suppressHydrationWarning',
        surfacescale: 'surfaceScale',
        systemlanguage: 'systemLanguage',
        tablevalues: 'tableValues',
        targetx: 'targetX',
        targety: 'targetY',
        textanchor: 'textAnchor',
        'text-anchor': 'textAnchor',
        textdecoration: 'textDecoration',
        'text-decoration': 'textDecoration',
        textlength: 'textLength',
        textrendering: 'textRendering',
        'text-rendering': 'textRendering',
        to: 'to',
        transform: 'transform',
        typeof: 'typeof',
        u1: 'u1',
        u2: 'u2',
        underlineposition: 'underlinePosition',
        'underline-position': 'underlinePosition',
        underlinethickness: 'underlineThickness',
        'underline-thickness': 'underlineThickness',
        unicode: 'unicode',
        unicodebidi: 'unicodeBidi',
        'unicode-bidi': 'unicodeBidi',
        unicoderange: 'unicodeRange',
        'unicode-range': 'unicodeRange',
        unitsperem: 'unitsPerEm',
        'units-per-em': 'unitsPerEm',
        unselectable: 'unselectable',
        valphabetic: 'vAlphabetic',
        'v-alphabetic': 'vAlphabetic',
        values: 'values',
        vectoreffect: 'vectorEffect',
        'vector-effect': 'vectorEffect',
        version: 'version',
        vertadvy: 'vertAdvY',
        'vert-adv-y': 'vertAdvY',
        vertoriginx: 'vertOriginX',
        'vert-origin-x': 'vertOriginX',
        vertoriginy: 'vertOriginY',
        'vert-origin-y': 'vertOriginY',
        vhanging: 'vHanging',
        'v-hanging': 'vHanging',
        videographic: 'vIdeographic',
        'v-ideographic': 'vIdeographic',
        viewbox: 'viewBox',
        viewtarget: 'viewTarget',
        visibility: 'visibility',
        vmathematical: 'vMathematical',
        'v-mathematical': 'vMathematical',
        vocab: 'vocab',
        widths: 'widths',
        wordspacing: 'wordSpacing',
        'word-spacing': 'wordSpacing',
        writingmode: 'writingMode',
        'writing-mode': 'writingMode',
        x1: 'x1',
        x2: 'x2',
        x: 'x',
        xchannelselector: 'xChannelSelector',
        xheight: 'xHeight',
        'x-height': 'xHeight',
        xlinkactuate: 'xlinkActuate',
        'xlink:actuate': 'xlinkActuate',
        xlinkarcrole: 'xlinkArcrole',
        'xlink:arcrole': 'xlinkArcrole',
        xlinkhref: 'xlinkHref',
        'xlink:href': 'xlinkHref',
        xlinkrole: 'xlinkRole',
        'xlink:role': 'xlinkRole',
        xlinkshow: 'xlinkShow',
        'xlink:show': 'xlinkShow',
        xlinktitle: 'xlinkTitle',
        'xlink:title': 'xlinkTitle',
        xlinktype: 'xlinkType',
        'xlink:type': 'xlinkType',
        xmlbase: 'xmlBase',
        'xml:base': 'xmlBase',
        xmllang: 'xmlLang',
        'xml:lang': 'xmlLang',
        xmlns: 'xmlns',
        'xml:space': 'xmlSpace',
        xmlnsxlink: 'xmlnsXlink',
        'xmlns:xlink': 'xmlnsXlink',
        xmlspace: 'xmlSpace',
        y1: 'y1',
        y2: 'y2',
        y: 'y',
        ychannelselector: 'yChannelSelector',
        z: 'z',
        zoomandpan: 'zoomAndPan'
    };
    var ariaProperties = {
        'aria-current': 0,
        // state
        'aria-details': 0,
        'aria-disabled': 0,
        // state
        'aria-hidden': 0,
        // state
        'aria-invalid': 0,
        // state
        'aria-keyshortcuts': 0,
        'aria-label': 0,
        'aria-roledescription': 0,
        // Widget Attributes
        'aria-autocomplete': 0,
        'aria-checked': 0,
        'aria-expanded': 0,
        'aria-haspopup': 0,
        'aria-level': 0,
        'aria-modal': 0,
        'aria-multiline': 0,
        'aria-multiselectable': 0,
        'aria-orientation': 0,
        'aria-placeholder': 0,
        'aria-pressed': 0,
        'aria-readonly': 0,
        'aria-required': 0,
        'aria-selected': 0,
        'aria-sort': 0,
        'aria-valuemax': 0,
        'aria-valuemin': 0,
        'aria-valuenow': 0,
        'aria-valuetext': 0,
        // Live Region Attributes
        'aria-atomic': 0,
        'aria-busy': 0,
        'aria-live': 0,
        'aria-relevant': 0,
        // Drag-and-Drop Attributes
        'aria-dropeffect': 0,
        'aria-grabbed': 0,
        // Relationship Attributes
        'aria-activedescendant': 0,
        'aria-colcount': 0,
        'aria-colindex': 0,
        'aria-colspan': 0,
        'aria-controls': 0,
        'aria-describedby': 0,
        'aria-errormessage': 0,
        'aria-flowto': 0,
        'aria-labelledby': 0,
        'aria-owns': 0,
        'aria-posinset': 0,
        'aria-rowcount': 0,
        'aria-rowindex': 0,
        'aria-rowspan': 0,
        'aria-setsize': 0
    };
    var warnedProperties = {
    };
    var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
    function validateProperty(tagName, name) {
        if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) return true;
        if (rARIACamel.test(name)) {
            var ariaName = 'aria-' + name.slice(4).toLowerCase();
            var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (correctName == null) {
                error1('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
                warnedProperties[name] = true;
                return true;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== correctName) {
                error1('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
                warnedProperties[name] = true;
                return true;
            }
        }
        if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase();
            var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (standardName == null) {
                warnedProperties[name] = true;
                return false;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== standardName) {
                error1('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
                warnedProperties[name] = true;
                return true;
            }
        }
        return true;
    }
    function warnInvalidARIAProps(type, props) {
        var invalidProps = [];
        for(var key in props){
            var isValid = validateProperty(type, key);
            if (!isValid) invalidProps.push(key);
        }
        var unknownPropString = invalidProps.map(function(prop) {
            return '`' + prop + '`';
        }).join(', ');
        if (invalidProps.length === 1) error1("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        else if (invalidProps.length > 1) error1("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
    }
    function validateProperties(type, props) {
        if (isCustomComponent(type, props)) return;
        warnInvalidARIAProps(type, props);
    }
    var didWarnValueNull = false;
    function validateProperties$1(type, props) {
        if (type !== 'input' && type !== 'textarea' && type !== 'select') return;
        if (props != null && props.value === null && !didWarnValueNull) {
            didWarnValueNull = true;
            if (type === 'select' && props.multiple) error1("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
            else error1("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
        }
    }
    var validateProperty$1 = function() {
    };
    var warnedProperties$1 = {
    };
    var _hasOwnProperty = Object.prototype.hasOwnProperty;
    var EVENT_NAME_REGEX = /^on./;
    var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
    var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    validateProperty$1 = function(tagName, name, value, eventRegistry) {
        if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) return true;
        var lowerCasedName = name.toLowerCase();
        if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
            error1("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
            warnedProperties$1[name] = true;
            return true;
        } // We can't rely on the event system being injected on the server.
        if (eventRegistry != null) {
            var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies.hasOwnProperty(name)) return true;
            var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
            if (registrationName != null) {
                error1('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
                warnedProperties$1[name] = true;
                return true;
            }
            if (EVENT_NAME_REGEX.test(name)) {
                error1('Unknown event handler property `%s`. It will be ignored.', name);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (EVENT_NAME_REGEX.test(name)) {
            // If no event plugins have been injected, we are in a server environment.
            // So we can't tell if the event name is correct for sure, but we can filter
            // out known bad ones like `onclick`. We can't suggest a specific replacement though.
            if (INVALID_EVENT_NAME_REGEX.test(name)) error1("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
            warnedProperties$1[name] = true;
            return true;
        } // Let the ARIA attribute hook validate ARIA attributes
        if (rARIA$1.test(name) || rARIACamel$1.test(name)) return true;
        if (lowerCasedName === 'innerhtml') {
            error1("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === 'aria') {
            error1("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
            error1("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === 'number' && isNaN(value)) {
            error1("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
            warnedProperties$1[name] = true;
            return true;
        }
        var propertyInfo = getPropertyInfo(name);
        var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.
        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name) {
                error1('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (!isReserved && name !== lowerCasedName) {
            // Unknown attributes should have lowercase casing since that's how they
            // will be cased anyway with server rendering.
            error1("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            if (value) error1("Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()}.", value, name, name, value, name);
            else error1("Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", value, name, name, value, name, name, name);
            warnedProperties$1[name] = true;
            return true;
        } // Now that we've validated casing, do not validate
        // data types for reserved props
        if (isReserved) return true;
         // Warn when a known attribute is a bad type
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            warnedProperties$1[name] = true;
            return false;
        } // Warn when passing the strings 'false' or 'true' into a boolean prop
        if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
            error1("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
            warnedProperties$1[name] = true;
            return true;
        }
        return true;
    };
    var warnUnknownProperties = function(type, props, eventRegistry) {
        var unknownProps = [];
        for(var key in props){
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            if (!isValid) unknownProps.push(key);
        }
        var unknownPropString = unknownProps.map(function(prop) {
            return '`' + prop + '`';
        }).join(', ');
        if (unknownProps.length === 1) error1("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        else if (unknownProps.length > 1) error1("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
    };
    function validateProperties$2(type, props, eventRegistry) {
        if (isCustomComponent(type, props)) return;
        warnUnknownProperties(type, props, eventRegistry);
    }
    var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
    var IS_NON_DELEGATED = 2;
    var IS_CAPTURE_PHASE = 4;
    var IS_REPLAYED = 16;
    // set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
    // we call willDeferLaterForLegacyFBSupport, thus not bailing out
    // will result in endless cycles like an infinite loop.
    // We also don't want to defer during event replaying.
    var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
    /**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */ function getEventTarget(nativeEvent) {
        // Fallback to nativeEvent.srcElement for IE9
        // https://github.com/facebook/react/issues/12506
        var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963
        if (target.correspondingUseElement) target = target.correspondingUseElement;
         // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
        // @see http://www.quirksmode.org/js/events_properties.html
        return target.nodeType === TEXT_NODE ? target.parentNode : target;
    }
    var restoreImpl = null;
    var restoreTarget = null;
    var restoreQueue = null;
    function restoreStateOfTarget(target) {
        // We perform this translation at the end of the event loop so that we
        // always receive the correct fiber here
        var internalInstance = getInstanceFromNode(target);
        if (!internalInstance) // Unmounted
        return;
        if (!(typeof restoreImpl === 'function')) throw Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.
        if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
        }
    }
    function setRestoreImplementation(impl) {
        restoreImpl = impl;
    }
    function enqueueStateRestore(target) {
        if (restoreTarget) {
            if (restoreQueue) restoreQueue.push(target);
            else restoreQueue = [
                target
            ];
        } else restoreTarget = target;
    }
    function needsStateRestore() {
        return restoreTarget !== null || restoreQueue !== null;
    }
    function restoreStateIfNeeded() {
        if (!restoreTarget) return;
        var target = restoreTarget;
        var queuedTargets = restoreQueue;
        restoreTarget = null;
        restoreQueue = null;
        restoreStateOfTarget(target);
        if (queuedTargets) for(var i = 0; i < queuedTargets.length; i++)restoreStateOfTarget(queuedTargets[i]);
    }
    // the renderer. Such as when we're dispatching events or if third party
    // libraries need to call batchedUpdates. Eventually, this API will go away when
    // everything is batched by default. We'll then have a similar API to opt-out of
    // scheduled work and instead do synchronous work.
    // Defaults
    var batchedUpdatesImpl = function(fn, bookkeeping) {
        return fn(bookkeeping);
    };
    var discreteUpdatesImpl = function(fn, a, b, c, d) {
        return fn(a, b, c, d);
    };
    var flushDiscreteUpdatesImpl = function() {
    };
    var batchedEventUpdatesImpl = batchedUpdatesImpl;
    var isInsideEventHandler = false;
    var isBatchingEventUpdates = false;
    function finishEventHandler() {
        // Here we wait until all updates have propagated, which is important
        // when using controlled components within layers:
        // https://github.com/facebook/react/issues/1698
        // Then we restore state of any controlled component.
        var controlledComponentsHavePendingUpdates = needsStateRestore();
        if (controlledComponentsHavePendingUpdates) {
            // If a controlled event was fired, we may need to restore the state of
            // the DOM node back to the controlled value. This is necessary when React
            // bails out of the update without touching the DOM.
            flushDiscreteUpdatesImpl();
            restoreStateIfNeeded();
        }
    }
    function batchedUpdates(fn, bookkeeping) {
        if (isInsideEventHandler) // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(bookkeeping);
        isInsideEventHandler = true;
        try {
            return batchedUpdatesImpl(fn, bookkeeping);
        } finally{
            isInsideEventHandler = false;
            finishEventHandler();
        }
    }
    function batchedEventUpdates(fn, a, b) {
        if (isBatchingEventUpdates) // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(a, b);
        isBatchingEventUpdates = true;
        try {
            return batchedEventUpdatesImpl(fn, a, b);
        } finally{
            isBatchingEventUpdates = false;
            finishEventHandler();
        }
    }
    function discreteUpdates(fn, a, b, c, d) {
        var prevIsInsideEventHandler = isInsideEventHandler;
        isInsideEventHandler = true;
        try {
            return discreteUpdatesImpl(fn, a, b, c, d);
        } finally{
            isInsideEventHandler = prevIsInsideEventHandler;
            if (!isInsideEventHandler) finishEventHandler();
        }
    }
    function flushDiscreteUpdatesIfNeeded(timeStamp) {
        if (!isInsideEventHandler) flushDiscreteUpdatesImpl();
    }
    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
        batchedUpdatesImpl = _batchedUpdatesImpl;
        discreteUpdatesImpl = _discreteUpdatesImpl;
        flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
        batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
    }
    function isInteractive(tag) {
        return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }
    function shouldPreventMouseEvent(name, type, props) {
        switch(name){
            case 'onClick':
            case 'onClickCapture':
            case 'onDoubleClick':
            case 'onDoubleClickCapture':
            case 'onMouseDown':
            case 'onMouseDownCapture':
            case 'onMouseMove':
            case 'onMouseMoveCapture':
            case 'onMouseUp':
            case 'onMouseUpCapture':
            case 'onMouseEnter':
                return !!(props.disabled && isInteractive(type));
            default:
                return false;
        }
    }
    /**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */ function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (stateNode === null) // Work in progress (ex: onload events in incremental mode).
        return null;
        var props = getFiberCurrentPropsFromNode(stateNode);
        if (props === null) // Work in progress.
        return null;
        var listener = props[registrationName];
        if (shouldPreventMouseEvent(registrationName, inst.type, props)) return null;
        if (!(!listener || typeof listener === 'function')) throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
        return listener;
    }
    var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
    if (canUseDOM) try {
        var options1 = {
        }; // $FlowFixMe: Ignore Flow complaining about needing a value
        Object.defineProperty(options1, 'passive', {
            get: function() {
                passiveBrowserEventsSupported = true;
            }
        });
        window.addEventListener('test', options1, options1);
        window.removeEventListener('test', options1, options1);
    } catch (e1) {
        passiveBrowserEventsSupported = false;
    }
    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
        var funcArgs = Array.prototype.slice.call(arguments, 3);
        try {
            func.apply(context, funcArgs);
        } catch (error) {
            this.onError(error);
        }
    }
    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
    // In DEV mode, we swap out invokeGuardedCallback for a special version
    // that plays more nicely with the browser's DevTools. The idea is to preserve
    // "Pause on exceptions" behavior. Because React wraps all user-provided
    // functions in invokeGuardedCallback, and the production version of
    // invokeGuardedCallback uses a try-catch, all user exceptions are treated
    // like caught exceptions, and the DevTools won't pause unless the developer
    // takes the extra step of enabling pause on caught exceptions. This is
    // unintuitive, though, because even though React has caught the error, from
    // the developer's perspective, the error is uncaught.
    //
    // To preserve the expected "Pause on exceptions" behavior, we don't use a
    // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
    // DOM node, and call the user-provided callback from inside an event handler
    // for that fake event. If the callback throws, the error is "captured" using
    // a global event handler. But because the error happens in a different
    // event loop context, it does not interrupt the normal program flow.
    // Effectively, this gives us try-catch behavior without actually using
    // try-catch. Neat!
    // Check that the browser supports the APIs we need to implement our special
    // DEV version of invokeGuardedCallback
    if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');
        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
            // If document doesn't exist we know for sure we will crash in this method
            // when we call document.createEvent(). However this can cause confusing
            // errors: https://github.com/facebookincubator/create-react-app/issues/3482
            // So we preemptively throw with a better message instead.
            if (!(typeof document !== 'undefined')) throw Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
            var evt = document.createEvent('Event');
            var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
            // set this to true at the beginning, then set it to false right after
            // calling the function. If the function errors, `didError` will never be
            // set to false. This strategy works even if the browser is flaky and
            // fails to call our global error handler, because it doesn't rely on
            // the error event at all.
            var didError = true; // Keeps track of the value of window.event so that we can reset it
            // during the callback to let user code access window.event in the
            // browsers that support it.
            var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
            // dispatching: https://github.com/facebook/react/issues/13688
            var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');
            function restoreAfterDispatch() {
                // We immediately remove the callback from event listeners so that
                // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
                // nested call would trigger the fake event handlers of any call higher
                // in the stack.
                fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
                // window.event assignment in both IE <= 10 as they throw an error
                // "Member not found" in strict mode, and in Firefox which does not
                // support window.event.
                if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) window.event = windowEvent;
            } // Create an event handler for our fake event. We will synchronously
            // dispatch our fake event using `dispatchEvent`. Inside the handler, we
            // call the user-provided callback.
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            function callCallback() {
                didCall = true;
                restoreAfterDispatch();
                func.apply(context, funcArgs);
                didError = false;
            } // Create a global error event handler. We use this to capture the value
            // that was thrown. It's possible that this error handler will fire more
            // than once; for example, if non-React code also calls `dispatchEvent`
            // and a handler for that event throws. We should be resilient to most of
            // those cases. Even if our error event handler fires more than once, the
            // last error event is always used. If the callback actually does error,
            // we know that the last error event is the correct one, because it's not
            // possible for anything else to have happened in between our callback
            // erroring and the code that follows the `dispatchEvent` call below. If
            // the callback doesn't error, but the error event was fired, we know to
            // ignore it because `didError` will be false, as described above.
            var error; // Use this to track whether the error event is ever called.
            var didSetError = false;
            var isCrossOriginError = false;
            function handleWindowError(event) {
                error = event.error;
                didSetError = true;
                if (error === null && event.colno === 0 && event.lineno === 0) isCrossOriginError = true;
                if (event.defaultPrevented) {
                    // Some other error handler has prevented default.
                    // Browsers silence the error report if this happens.
                    // We'll remember this to later decide whether to log it or not.
                    if (error != null && typeof error === 'object') try {
                        error._suppressLogging = true;
                    } catch (inner) {
                    }
                }
            } // Create a fake event type.
            var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers
            window.addEventListener('error', handleWindowError);
            fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
            // errors, it will trigger our global error handler.
            evt.initEvent(evtType, false, false);
            fakeNode.dispatchEvent(evt);
            if (windowEventDescriptor) Object.defineProperty(window, 'event', windowEventDescriptor);
            if (didCall && didError) {
                if (!didSetError) // The callback errored, but the error event never fired.
                error = new Error("An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the \"Pause on exceptions\" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.");
                else if (isCrossOriginError) error = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                this.onError(error);
            } // Remove our event listeners
            window.removeEventListener('error', handleWindowError);
            if (!didCall) {
                // Something went really wrong, and our event was not dispatched.
                // https://github.com/facebook/react/issues/16734
                // https://github.com/facebook/react/issues/16585
                // Fall back to the production implementation.
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
            }
        };
    }
    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
    var hasError = false;
    var caughtError = null; // Used by event system to capture/rethrow the first error.
    var hasRethrowError = false;
    var rethrowError = null;
    var reporter = {
        onError: function(error) {
            hasError = true;
            caughtError = error;
        }
    };
    /**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        hasError = false;
        caughtError = null;
        invokeGuardedCallbackImpl$1.apply(reporter, arguments);
    }
    /**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        invokeGuardedCallback.apply(this, arguments);
        if (hasError) {
            var error = clearCaughtError();
            if (!hasRethrowError) {
                hasRethrowError = true;
                rethrowError = error;
            }
        }
    }
    /**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */ function rethrowCaughtError() {
        if (hasRethrowError) {
            var error = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error;
        }
    }
    function hasCaughtError() {
        return hasError;
    }
    function clearCaughtError() {
        if (hasError) {
            var error = caughtError;
            hasError = false;
            caughtError = null;
            return error;
        } else throw Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    /**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */ function get1(key) {
        return key._reactInternals;
    }
    function has1(key) {
        return key._reactInternals !== undefined;
    }
    function set1(key, value) {
        key._reactInternals = value;
    }
    // Don't change these two values. They're used by React Dev Tools.
    var NoFlags = /*                      */ 0;
    var PerformedWork = /*                */ 1; // You can change the rest (and add more).
    var Placement = /*                    */ 2;
    var Update = /*                       */ 4;
    var PlacementAndUpdate = /*           */ 6;
    var Deletion = /*                     */ 8;
    var ContentReset = /*                 */ 16;
    var Callback = /*                     */ 32;
    var DidCapture = /*                   */ 64;
    var Ref = /*                          */ 128;
    var Snapshot = /*                     */ 256;
    var Passive = /*                      */ 512; // TODO (effects) Remove this bit once the new reconciler is synced to the old.
    var PassiveUnmountPendingDev = /*     */ 8192;
    var Hydrating = /*                    */ 1024;
    var HydratingAndUpdate = /*           */ 1028; // Passive & Update & Callback & Ref & Snapshot
    var LifecycleEffectMask = /*          */ 932; // Union of all host effects
    var HostEffectMask = /*               */ 2047; // These are not really side effects, but we still reuse this field.
    var Incomplete = /*                   */ 2048;
    var ShouldCapture = /*                */ 4096;
    var ForceUpdateForLegacySuspense = /* */ 16384; // Static tags describe aspects of a fiber that are not specific to a render,
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    function getNearestMountedFiber(fiber) {
        var node = fiber;
        var nearestMounted = fiber;
        if (!fiber.alternate) {
            // If there is no alternate, this might be a new tree that isn't inserted
            // yet. If it is, then it will have a pending insertion effect on it.
            var nextNode = node;
            do {
                node = nextNode;
                if ((node.flags & (Placement | Hydrating)) !== NoFlags) // This is an insertion or in-progress hydration. The nearest possible
                // mounted fiber is the parent but we need to continue to figure out
                // if that one is still mounted.
                nearestMounted = node.return;
                nextNode = node.return;
            }while (nextNode)
        } else while(node.return)node = node.return;
        if (node.tag === HostRoot) // TODO: Check if this was a nested HostRoot when used with
        // renderContainerIntoSubtree.
        return nearestMounted;
         // If we didn't hit the root, that means that we're in an disconnected tree
        // that has been unmounted.
        return null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
        if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
                var current = fiber.alternate;
                if (current !== null) suspenseState = current.memoizedState;
            }
            if (suspenseState !== null) return suspenseState.dehydrated;
        }
        return null;
    }
    function getContainerFromFiber(fiber) {
        return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
    }
    function isFiberMounted(fiber) {
        return getNearestMountedFiber(fiber) === fiber;
    }
    function isMounted(component) {
        var owner = ReactCurrentOwner.current;
        if (owner !== null && owner.tag === ClassComponent) {
            var ownerFiber = owner;
            var instance = ownerFiber.stateNode;
            if (!instance._warnedAboutRefsInRender) error1("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentName(ownerFiber.type) || 'A component');
            instance._warnedAboutRefsInRender = true;
        }
        var fiber = get1(component);
        if (!fiber) return false;
        return getNearestMountedFiber(fiber) === fiber;
    }
    function assertIsMounted(fiber) {
        if (!(getNearestMountedFiber(fiber) === fiber)) throw Error("Unable to find node on an unmounted component.");
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            // If there is no alternate, then we only need to check if it is mounted.
            var nearestMounted = getNearestMountedFiber(fiber);
            if (!(nearestMounted !== null)) throw Error("Unable to find node on an unmounted component.");
            if (nearestMounted !== fiber) return null;
            return fiber;
        } // If we have two possible branches, we'll walk backwards up to the root
        // to see what path the root points to. On the way we may hit one of the
        // special cases and we'll deal with them.
        var a = fiber;
        var b = alternate;
        while(true){
            var parentA = a.return;
            if (parentA === null) break;
            var parentB = parentA.alternate;
            if (parentB === null) {
                // There is no alternate. This is an unusual case. Currently, it only
                // happens when a Suspense component is hidden. An extra fragment fiber
                // is inserted in between the Suspense fiber and its children. Skip
                // over this extra fragment fiber and proceed to the next parent.
                var nextParent = parentA.return;
                if (nextParent !== null) {
                    a = b = nextParent;
                    continue;
                } // If there's no parent, we're at the root.
                break;
            } // If both copies of the parent fiber point to the same child, we can
            // assume that the child is current. This happens when we bailout on low
            // priority: the bailed out fiber's child reuses the current child.
            if (parentA.child === parentB.child) {
                var child = parentA.child;
                while(child){
                    if (child === a) {
                        // We've determined that A is the current branch.
                        assertIsMounted(parentA);
                        return fiber;
                    }
                    if (child === b) {
                        // We've determined that B is the current branch.
                        assertIsMounted(parentA);
                        return alternate;
                    }
                    child = child.sibling;
                } // We should never have an alternate for any mounting node. So the only
                throw Error("Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) {
                // The return pointer of A and the return pointer of B point to different
                // fibers. We assume that return pointers never criss-cross, so A must
                // belong to the child set of A.return, and B must belong to the child
                // set of B.return.
                a = parentA;
                b = parentB;
            } else {
                // The return pointers point to the same fiber. We'll have to use the
                // default, slow path: scan the child sets of each parent alternate to see
                // which child belongs to which set.
                //
                // Search parent A's child set
                var didFindChild = false;
                var _child = parentA.child;
                while(_child){
                    if (_child === a) {
                        didFindChild = true;
                        a = parentA;
                        b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = true;
                        b = parentA;
                        a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    // Search parent B's child set
                    _child = parentB.child;
                    while(_child){
                        if (_child === a) {
                            didFindChild = true;
                            a = parentB;
                            b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = true;
                            b = parentB;
                            a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    if (!didFindChild) throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
            }
            if (!(a.alternate === b)) throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        } // If the root is not a host container, we're in a disconnected tree. I.e.
        // unmounted.
        if (!(a.tag === HostRoot)) throw Error("Unable to find node on an unmounted component.");
        if (a.stateNode.current === a) // We've determined that A is the current branch.
        return fiber;
         // Otherwise B has to be current branch.
        return alternate;
    }
    function findCurrentHostFiber(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        if (!currentParent) return null;
         // Next we'll drill down this component to find the first HostComponent/Text.
        var node = currentParent;
        while(true){
            if (node.tag === HostComponent || node.tag === HostText) return node;
            else if (node.child) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === currentParent) return null;
            while(!node.sibling){
                if (!node.return || node.return === currentParent) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        } // Flow needs the return null here, but ESLint complains about it.
        // eslint-disable-next-line no-unreachable
        return null;
    }
    function findCurrentHostFiberWithNoPortals(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        if (!currentParent) return null;
         // Next we'll drill down this component to find the first HostComponent/Text.
        var node = currentParent;
        while(true){
            if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI) return node;
            else if (node.child && node.tag !== HostPortal) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === currentParent) return null;
            while(!node.sibling){
                if (!node.return || node.return === currentParent) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        } // Flow needs the return null here, but ESLint complains about it.
        // eslint-disable-next-line no-unreachable
        return null;
    }
    function doesFiberContain(parentFiber, childFiber) {
        var node = childFiber;
        var parentFiberAlternate = parentFiber.alternate;
        while(node !== null){
            if (node === parentFiber || node === parentFiberAlternate) return true;
            node = node.return;
        }
        return false;
    }
    var attemptUserBlockingHydration;
    function setAttemptUserBlockingHydration(fn) {
        attemptUserBlockingHydration = fn;
    }
    var attemptContinuousHydration;
    function setAttemptContinuousHydration(fn) {
        attemptContinuousHydration = fn;
    }
    var attemptHydrationAtCurrentPriority;
    function setAttemptHydrationAtCurrentPriority(fn) {
        attemptHydrationAtCurrentPriority = fn;
    }
    var attemptHydrationAtPriority;
    function setAttemptHydrationAtPriority(fn) {
        attemptHydrationAtPriority = fn;
    } // TODO: Upgrade this definition once we're on a newer version of Flow that
    var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.
    var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
    // if the last target was dehydrated.
    var queuedFocus = null;
    var queuedDrag = null;
    var queuedMouse = null; // For pointer events there can be one latest event per pointerId.
    var queuedPointers = new Map();
    var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.
    var queuedExplicitHydrationTargets = [];
    function hasQueuedDiscreteEvents() {
        return queuedDiscreteEvents.length > 0;
    }
    var discreteReplayableEvents = [
        'mousedown',
        'mouseup',
        'touchcancel',
        'touchend',
        'touchstart',
        'auxclick',
        'dblclick',
        'pointercancel',
        'pointerdown',
        'pointerup',
        'dragend',
        'dragstart',
        'drop',
        'compositionend',
        'compositionstart',
        'keydown',
        'keypress',
        'keyup',
        'input',
        'textInput',
        'copy',
        'cut',
        'paste',
        'click',
        'change',
        'contextmenu',
        'reset',
        'submit'
    ];
    function isReplayableDiscreteEvent(eventType) {
        return discreteReplayableEvents.indexOf(eventType) > -1;
    }
    function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        return {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags | IS_REPLAYED,
            nativeEvent: nativeEvent,
            targetContainers: [
                targetContainer
            ]
        };
    }
    function queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
        queuedDiscreteEvents.push(queuedEvent);
    } // Resets the replaying for this type of continuous event to no event.
    function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch(domEventName){
            case 'focusin':
            case 'focusout':
                queuedFocus = null;
                break;
            case 'dragenter':
            case 'dragleave':
                queuedDrag = null;
                break;
            case 'mouseover':
            case 'mouseout':
                queuedMouse = null;
                break;
            case 'pointerover':
            case 'pointerout':
                var pointerId = nativeEvent.pointerId;
                queuedPointers.delete(pointerId);
                break;
            case 'gotpointercapture':
            case 'lostpointercapture':
                var _pointerId = nativeEvent.pointerId;
                queuedPointerCaptures.delete(_pointerId);
                break;
        }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
                var _fiber2 = getInstanceFromNode(blockedOn);
                if (_fiber2 !== null) // Attempt to increase the priority of this target.
                attemptContinuousHydration(_fiber2);
            }
            return queuedEvent;
        } // If we have already queued this exact event, then it's because
        // the different event systems have different DOM event listeners.
        // We can accumulate the flags, and the targetContainers, and
        // store a single event to be replayed.
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        var targetContainers = existingQueuedEvent.targetContainers;
        if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) targetContainers.push(targetContainer);
        return existingQueuedEvent;
    }
    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // These set relatedTarget to null because the replayed event will be treated as if we
        // moved from outside the window (no target) onto the target once it hydrates.
        // Instead of mutating we could clone the event.
        switch(domEventName){
            case 'focusin':
                var focusEvent = nativeEvent;
                queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
                return true;
            case 'dragenter':
                var dragEvent = nativeEvent;
                queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
                return true;
            case 'mouseover':
                var mouseEvent = nativeEvent;
                queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
                return true;
            case 'pointerover':
                var pointerEvent = nativeEvent;
                var pointerId = pointerEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
                return true;
            case 'gotpointercapture':
                var _pointerEvent = nativeEvent;
                var _pointerId2 = _pointerEvent.pointerId;
                queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
                return true;
        }
        return false;
    } // Check if this target is unblocked. Returns true if it's unblocked.
    function attemptExplicitHydrationTarget(queuedTarget) {
        // TODO: This function shares a lot of logic with attemptToDispatchEvent.
        // Try to unify them. It's a bit tricky since it would require two return
        // values.
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) {
                        // We're blocked on hydrating this boundary.
                        // Increase its priority.
                        queuedTarget.blockedOn = instance;
                        attemptHydrationAtPriority(queuedTarget.lanePriority, function() {
                            Scheduler.unstable_runWithPriority(queuedTarget.priority, function() {
                                attemptHydrationAtCurrentPriority(nearestMounted);
                            });
                        });
                        return;
                    }
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (root.hydrate) {
                        queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
                        // a root other than sync.
                        return;
                    }
                }
            }
        }
        queuedTarget.blockedOn = null;
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (queuedEvent.blockedOn !== null) return false;
        var targetContainers = queuedEvent.targetContainers;
        while(targetContainers.length > 0){
            var targetContainer = targetContainers[0];
            var nextBlockedOn = attemptToDispatchEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn !== null) {
                // We're still blocked. Try again later.
                var _fiber3 = getInstanceFromNode(nextBlockedOn);
                if (_fiber3 !== null) attemptContinuousHydration(_fiber3);
                queuedEvent.blockedOn = nextBlockedOn;
                return false;
            } // This target container was successfully dispatched. Try the next.
            targetContainers.shift();
        }
        return true;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        if (attemptReplayContinuousQueuedEvent(queuedEvent)) map.delete(key);
    }
    function replayUnblockedEvents() {
        hasScheduledReplayAttempt = false; // First replay discrete events.
        while(queuedDiscreteEvents.length > 0){
            var nextDiscreteEvent = queuedDiscreteEvents[0];
            if (nextDiscreteEvent.blockedOn !== null) {
                // We're still blocked.
                // Increase the priority of this boundary to unblock
                // the next discrete event.
                var _fiber4 = getInstanceFromNode(nextDiscreteEvent.blockedOn);
                if (_fiber4 !== null) attemptUserBlockingHydration(_fiber4);
                break;
            }
            var targetContainers = nextDiscreteEvent.targetContainers;
            while(targetContainers.length > 0){
                var targetContainer = targetContainers[0];
                var nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.domEventName, nextDiscreteEvent.eventSystemFlags, targetContainer, nextDiscreteEvent.nativeEvent);
                if (nextBlockedOn !== null) {
                    // We're still blocked. Try again later.
                    nextDiscreteEvent.blockedOn = nextBlockedOn;
                    break;
                } // This target container was successfully dispatched. Try the next.
                targetContainers.shift();
            }
            if (nextDiscreteEvent.blockedOn === null) // We've successfully replayed the first event. Let's try the next one.
            queuedDiscreteEvents.shift();
        } // Next replay any continuous events.
        if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) queuedFocus = null;
        if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) queuedDrag = null;
        if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) queuedMouse = null;
        queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
        queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
                hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
                // now unblocked. This first might not actually be unblocked yet.
                // We could check it early to avoid scheduling an unnecessary callback.
                Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
            }
        }
    }
    function retryIfBlockedOn(unblocked) {
        // Mark anything that was blocked on this as no longer blocked
        // and eligible for a replay.
        if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
            // worth it because we expect very few discrete events to queue up and once
            // we are actually fully unblocked it will be fast to replay them.
            for(var i = 1; i < queuedDiscreteEvents.length; i++){
                var queuedEvent = queuedDiscreteEvents[i];
                if (queuedEvent.blockedOn === unblocked) queuedEvent.blockedOn = null;
            }
        }
        if (queuedFocus !== null) scheduleCallbackIfUnblocked(queuedFocus, unblocked);
        if (queuedDrag !== null) scheduleCallbackIfUnblocked(queuedDrag, unblocked);
        if (queuedMouse !== null) scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        var unblock = function(queuedEvent) {
            return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
        };
        queuedPointers.forEach(unblock);
        queuedPointerCaptures.forEach(unblock);
        for(var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++){
            var queuedTarget = queuedExplicitHydrationTargets[_i];
            if (queuedTarget.blockedOn === unblocked) queuedTarget.blockedOn = null;
        }
        while(queuedExplicitHydrationTargets.length > 0){
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) break;
            else {
                attemptExplicitHydrationTarget(nextExplicitTarget);
                if (nextExplicitTarget.blockedOn === null) // We're unblocked.
                queuedExplicitHydrationTargets.shift();
            }
        }
    }
    var DiscreteEvent = 0;
    var UserBlockingEvent = 1;
    var ContinuousEvent = 2;
    /**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */ function makePrefixMap(styleProp, eventName) {
        var prefixes = {
        };
        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes['Webkit' + styleProp] = 'webkit' + eventName;
        prefixes['Moz' + styleProp] = 'moz' + eventName;
        return prefixes;
    }
    /**
 * A list of event names to a configurable list of vendor prefixes.
 */ var vendorPrefixes = {
        animationend: makePrefixMap('Animation', 'AnimationEnd'),
        animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
        animationstart: makePrefixMap('Animation', 'AnimationStart'),
        transitionend: makePrefixMap('Transition', 'TransitionEnd')
    };
    /**
 * Event names that have already been detected and prefixed (if applicable).
 */ var prefixedEventNames = {
    };
    /**
 * Element to check for prefixes on.
 */ var style1 = {
    };
    /**
 * Bootstrap if a DOM exists.
 */ if (canUseDOM) {
        style1 = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
        // the un-prefixed "animation" and "transition" properties are defined on the
        // style object but the events that fire will still be prefixed, so we need
        // to check if the un-prefixed events are usable, and if not remove them from the map.
        if (!('AnimationEvent' in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
        } // Same as above
        if (!('TransitionEvent' in window)) delete vendorPrefixes.transitionend.transition;
    }
    /**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */ function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
        else if (!vendorPrefixes[eventName]) return eventName;
        var prefixMap = vendorPrefixes[eventName];
        for(var styleProp in prefixMap){
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style1) return prefixedEventNames[eventName] = prefixMap[styleProp];
        }
        return eventName;
    }
    var ANIMATION_END = getVendorPrefixedEventName('animationend');
    var ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');
    var ANIMATION_START = getVendorPrefixedEventName('animationstart');
    var TRANSITION_END = getVendorPrefixedEventName('transitionend');
    var topLevelEventsToReactNames = new Map();
    var eventPriorities = new Map(); // We store most of the events in this module in pairs of two strings so we can re-use
    // the code required to apply the same logic for event prioritization and that of the
    // SimpleEventPlugin. This complicates things slightly, but the aim is to reduce code
    // duplication (for which there would be quite a bit). For the events that are not needed
    // for the SimpleEventPlugin (otherDiscreteEvents) we process them separately as an
    // array of top level events.
    // Lastly, we ignore prettier so we can keep the formatting sane.
    // prettier-ignore
    var discreteEventPairsForSimpleEventPlugin = [
        'cancel',
        'cancel',
        'click',
        'click',
        'close',
        'close',
        'contextmenu',
        'contextMenu',
        'copy',
        'copy',
        'cut',
        'cut',
        'auxclick',
        'auxClick',
        'dblclick',
        'doubleClick',
        'dragend',
        'dragEnd',
        'dragstart',
        'dragStart',
        'drop',
        'drop',
        'focusin',
        'focus',
        'focusout',
        'blur',
        'input',
        'input',
        'invalid',
        'invalid',
        'keydown',
        'keyDown',
        'keypress',
        'keyPress',
        'keyup',
        'keyUp',
        'mousedown',
        'mouseDown',
        'mouseup',
        'mouseUp',
        'paste',
        'paste',
        'pause',
        'pause',
        'play',
        'play',
        'pointercancel',
        'pointerCancel',
        'pointerdown',
        'pointerDown',
        'pointerup',
        'pointerUp',
        'ratechange',
        'rateChange',
        'reset',
        'reset',
        'seeked',
        'seeked',
        'submit',
        'submit',
        'touchcancel',
        'touchCancel',
        'touchend',
        'touchEnd',
        'touchstart',
        'touchStart',
        'volumechange',
        'volumeChange'
    ];
    var otherDiscreteEvents = [
        'change',
        'selectionchange',
        'textInput',
        'compositionstart',
        'compositionend',
        'compositionupdate'
    ];
    var userBlockingPairsForSimpleEventPlugin = [
        'drag',
        'drag',
        'dragenter',
        'dragEnter',
        'dragexit',
        'dragExit',
        'dragleave',
        'dragLeave',
        'dragover',
        'dragOver',
        'mousemove',
        'mouseMove',
        'mouseout',
        'mouseOut',
        'mouseover',
        'mouseOver',
        'pointermove',
        'pointerMove',
        'pointerout',
        'pointerOut',
        'pointerover',
        'pointerOver',
        'scroll',
        'scroll',
        'toggle',
        'toggle',
        'touchmove',
        'touchMove',
        'wheel',
        'wheel'
    ]; // prettier-ignore
    var continuousPairsForSimpleEventPlugin = [
        'abort',
        'abort',
        ANIMATION_END,
        'animationEnd',
        ANIMATION_ITERATION,
        'animationIteration',
        ANIMATION_START,
        'animationStart',
        'canplay',
        'canPlay',
        'canplaythrough',
        'canPlayThrough',
        'durationchange',
        'durationChange',
        'emptied',
        'emptied',
        'encrypted',
        'encrypted',
        'ended',
        'ended',
        'error',
        'error',
        'gotpointercapture',
        'gotPointerCapture',
        'load',
        'load',
        'loadeddata',
        'loadedData',
        'loadedmetadata',
        'loadedMetadata',
        'loadstart',
        'loadStart',
        'lostpointercapture',
        'lostPointerCapture',
        'playing',
        'playing',
        'progress',
        'progress',
        'seeking',
        'seeking',
        'stalled',
        'stalled',
        'suspend',
        'suspend',
        'timeupdate',
        'timeUpdate',
        TRANSITION_END,
        'transitionEnd',
        'waiting',
        'waiting'
    ];
    /**
 * Turns
 * ['abort', ...]
 *
 * into
 *
 * topLevelEventsToReactNames = new Map([
 *   ['abort', 'onAbort'],
 * ]);
 *
 * and registers them.
 */ function registerSimplePluginEventsAndSetTheirPriorities(eventTypes, priority) {
        // As the event types are in pairs of two, we need to iterate
        // through in twos. The events are in pairs of two to save code
        // and improve init perf of processing this array, as it will
        // result in far fewer object allocations and property accesses
        // if we only use three arrays to process all the categories of
        // instead of tuples.
        for(var i = 0; i < eventTypes.length; i += 2){
            var topEvent = eventTypes[i];
            var event = eventTypes[i + 1];
            var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
            var reactName = 'on' + capitalizedEvent;
            eventPriorities.set(topEvent, priority);
            topLevelEventsToReactNames.set(topEvent, reactName);
            registerTwoPhaseEvent(reactName, [
                topEvent
            ]);
        }
    }
    function setEventPriorities(eventTypes, priority) {
        for(var i = 0; i < eventTypes.length; i++)eventPriorities.set(eventTypes[i], priority);
    }
    function getEventPriorityForPluginSystem(domEventName) {
        var priority = eventPriorities.get(domEventName); // Default to a ContinuousEvent. Note: we might
        // want to warn if we can't detect the priority
        // for the event.
        return priority === undefined ? ContinuousEvent : priority;
    }
    function registerSimpleEvents() {
        registerSimplePluginEventsAndSetTheirPriorities(discreteEventPairsForSimpleEventPlugin, DiscreteEvent);
        registerSimplePluginEventsAndSetTheirPriorities(userBlockingPairsForSimpleEventPlugin, UserBlockingEvent);
        registerSimplePluginEventsAndSetTheirPriorities(continuousPairsForSimpleEventPlugin, ContinuousEvent);
        setEventPriorities(otherDiscreteEvents, DiscreteEvent);
    }
    var Scheduler_now = Scheduler.unstable_now;
    // Provide explicit error message when production+profiling bundle of e.g.
    // react-dom is used with production (non-profiling) bundle of
    // scheduler/tracing
    if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
    // ascending numbers so we can compare them like numbers. They start at 90 to
    // avoid clashing with Scheduler's priorities.
    var ImmediatePriority = 99;
    var UserBlockingPriority = 98;
    var NormalPriority = 97;
    var LowPriority = 96;
    var IdlePriority = 95; // NoPriority is the absence of priority. Also React-only.
    var NoPriority = 90;
    var initialTimeMs = Scheduler_now(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.
    var SyncLanePriority = 15;
    var SyncBatchedLanePriority = 14;
    var InputDiscreteHydrationLanePriority = 13;
    var InputDiscreteLanePriority = 12;
    var InputContinuousHydrationLanePriority = 11;
    var InputContinuousLanePriority = 10;
    var DefaultHydrationLanePriority = 9;
    var DefaultLanePriority = 8;
    var TransitionHydrationPriority = 7;
    var TransitionPriority = 6;
    var RetryLanePriority = 5;
    var SelectiveHydrationLanePriority = 4;
    var IdleHydrationLanePriority = 3;
    var IdleLanePriority = 2;
    var OffscreenLanePriority = 1;
    var NoLanePriority = 0;
    var TotalLanes = 31;
    var NoLanes = /*                        */ 0;
    var NoLane = /*                          */ 0;
    var SyncLane = /*                        */ 1;
    var SyncBatchedLane = /*                 */ 2;
    var InputDiscreteHydrationLane = /*      */ 4;
    var InputDiscreteLanes = /*                    */ 24;
    var InputContinuousHydrationLane = /*           */ 32;
    var InputContinuousLanes = /*                  */ 192;
    var DefaultHydrationLane = /*            */ 256;
    var DefaultLanes = /*                   */ 3584;
    var TransitionHydrationLane = /*                */ 4096;
    var TransitionLanes = /*                       */ 4186112;
    var RetryLanes = /*                            */ 62914560;
    var SomeRetryLane = /*                  */ 33554432;
    var SelectiveHydrationLane = /*          */ 67108864;
    var NonIdleLanes = /*                                 */ 134217727;
    var IdleHydrationLane = /*               */ 134217728;
    var IdleLanes = /*                             */ 805306368;
    var OffscreenLane = /*                   */ 1073741824;
    var NoTimestamp = -1;
    function setCurrentUpdateLanePriority(newLanePriority) {
    } // "Registers" used to "return" multiple values
    // Used by getHighestPriorityLanes and getNextLanes:
    var return_highestLanePriority = DefaultLanePriority;
    function getHighestPriorityLanes(lanes) {
        if ((SyncLane & lanes) !== NoLanes) {
            return_highestLanePriority = SyncLanePriority;
            return SyncLane;
        }
        if ((SyncBatchedLane & lanes) !== NoLanes) {
            return_highestLanePriority = SyncBatchedLanePriority;
            return SyncBatchedLane;
        }
        if ((InputDiscreteHydrationLane & lanes) !== NoLanes) {
            return_highestLanePriority = InputDiscreteHydrationLanePriority;
            return InputDiscreteHydrationLane;
        }
        var inputDiscreteLanes = InputDiscreteLanes & lanes;
        if (inputDiscreteLanes !== NoLanes) {
            return_highestLanePriority = InputDiscreteLanePriority;
            return inputDiscreteLanes;
        }
        if ((lanes & InputContinuousHydrationLane) !== NoLanes) {
            return_highestLanePriority = InputContinuousHydrationLanePriority;
            return InputContinuousHydrationLane;
        }
        var inputContinuousLanes = InputContinuousLanes & lanes;
        if (inputContinuousLanes !== NoLanes) {
            return_highestLanePriority = InputContinuousLanePriority;
            return inputContinuousLanes;
        }
        if ((lanes & DefaultHydrationLane) !== NoLanes) {
            return_highestLanePriority = DefaultHydrationLanePriority;
            return DefaultHydrationLane;
        }
        var defaultLanes = DefaultLanes & lanes;
        if (defaultLanes !== NoLanes) {
            return_highestLanePriority = DefaultLanePriority;
            return defaultLanes;
        }
        if ((lanes & TransitionHydrationLane) !== NoLanes) {
            return_highestLanePriority = TransitionHydrationPriority;
            return TransitionHydrationLane;
        }
        var transitionLanes = TransitionLanes & lanes;
        if (transitionLanes !== NoLanes) {
            return_highestLanePriority = TransitionPriority;
            return transitionLanes;
        }
        var retryLanes = RetryLanes & lanes;
        if (retryLanes !== NoLanes) {
            return_highestLanePriority = RetryLanePriority;
            return retryLanes;
        }
        if (lanes & SelectiveHydrationLane) {
            return_highestLanePriority = SelectiveHydrationLanePriority;
            return SelectiveHydrationLane;
        }
        if ((lanes & IdleHydrationLane) !== NoLanes) {
            return_highestLanePriority = IdleHydrationLanePriority;
            return IdleHydrationLane;
        }
        var idleLanes = IdleLanes & lanes;
        if (idleLanes !== NoLanes) {
            return_highestLanePriority = IdleLanePriority;
            return idleLanes;
        }
        if ((OffscreenLane & lanes) !== NoLanes) {
            return_highestLanePriority = OffscreenLanePriority;
            return OffscreenLane;
        }
        error1('Should have found matching lanes. This is a bug in React.');
        return_highestLanePriority = DefaultLanePriority;
        return lanes;
    }
    function schedulerPriorityToLanePriority(schedulerPriorityLevel) {
        switch(schedulerPriorityLevel){
            case ImmediatePriority:
                return SyncLanePriority;
            case UserBlockingPriority:
                return InputContinuousLanePriority;
            case NormalPriority:
            case LowPriority:
                // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
                return DefaultLanePriority;
            case IdlePriority:
                return IdleLanePriority;
            default:
                return NoLanePriority;
        }
    }
    function lanePriorityToSchedulerPriority(lanePriority) {
        switch(lanePriority){
            case SyncLanePriority:
            case SyncBatchedLanePriority:
                return ImmediatePriority;
            case InputDiscreteHydrationLanePriority:
            case InputDiscreteLanePriority:
            case InputContinuousHydrationLanePriority:
            case InputContinuousLanePriority:
                return UserBlockingPriority;
            case DefaultHydrationLanePriority:
            case DefaultLanePriority:
            case TransitionHydrationPriority:
            case TransitionPriority:
            case SelectiveHydrationLanePriority:
            case RetryLanePriority:
                return NormalPriority;
            case IdleHydrationLanePriority:
            case IdleLanePriority:
            case OffscreenLanePriority:
                return IdlePriority;
            case NoLanePriority:
                return NoPriority;
            default:
                throw Error("Invalid update priority: " + lanePriority + ". This is a bug in React.");
        }
    }
    function getNextLanes(root, wipLanes) {
        // Early bailout if there's no pending work left.
        var pendingLanes = root.pendingLanes;
        if (pendingLanes === NoLanes) {
            return_highestLanePriority = NoLanePriority;
            return NoLanes;
        }
        var nextLanes = NoLanes;
        var nextLanePriority = NoLanePriority;
        var expiredLanes = root.expiredLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes; // Check if any work has expired.
        if (expiredLanes !== NoLanes) {
            nextLanes = expiredLanes;
            nextLanePriority = return_highestLanePriority = SyncLanePriority;
        } else {
            // Do not work on any idle work until all the non-idle work has finished,
            // even if the work is suspended.
            var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
            if (nonIdlePendingLanes !== NoLanes) {
                var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
                if (nonIdleUnblockedLanes !== NoLanes) {
                    nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
                    nextLanePriority = return_highestLanePriority;
                } else {
                    var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                    if (nonIdlePingedLanes !== NoLanes) {
                        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
                        nextLanePriority = return_highestLanePriority;
                    }
                }
            } else {
                // The only remaining work is Idle.
                var unblockedLanes = pendingLanes & ~suspendedLanes;
                if (unblockedLanes !== NoLanes) {
                    nextLanes = getHighestPriorityLanes(unblockedLanes);
                    nextLanePriority = return_highestLanePriority;
                } else if (pingedLanes !== NoLanes) {
                    nextLanes = getHighestPriorityLanes(pingedLanes);
                    nextLanePriority = return_highestLanePriority;
                }
            }
        }
        if (nextLanes === NoLanes) // This should only be reachable if we're suspended
        // TODO: Consider warning in this path if a fallback timer is not scheduled.
        return NoLanes;
         // If there are higher priority lanes, we'll include them even if they
        // are suspended.
        nextLanes = pendingLanes & getEqualOrHigherPriorityLanes(nextLanes); // If we're already in the middle of a render, switching lanes will interrupt
        // it and we'll lose our progress. We should only do this if the new lanes are
        // higher priority.
        if (wipLanes !== NoLanes && wipLanes !== nextLanes && // bother waiting until the root is complete.
        (wipLanes & suspendedLanes) === NoLanes) {
            getHighestPriorityLanes(wipLanes);
            var wipLanePriority = return_highestLanePriority;
            if (nextLanePriority <= wipLanePriority) return wipLanes;
            else return_highestLanePriority = nextLanePriority;
        } // Check for entangled lanes and add them to the batch.
        //
        // A lane is said to be entangled with another when it's not allowed to render
        // in a batch that does not also include the other lane. Typically we do this
        // when multiple updates have the same source, and we only want to respond to
        // the most recent event from that source.
        //
        // Note that we apply entanglements *after* checking for partial work above.
        // This means that if a lane is entangled during an interleaved event while
        // it's already rendering, we won't interrupt it. This is intentional, since
        // entanglement is usually "best effort": we'll try our best to render the
        // lanes in the same batch, but it's not worth throwing out partially
        // completed work in order to do it.
        //
        // For those exceptions where entanglement is semantically important, like
        // useMutableSource, we should ensure that there is no partial work at the
        // time we apply the entanglement.
        var entangledLanes = root.entangledLanes;
        if (entangledLanes !== NoLanes) {
            var entanglements = root.entanglements;
            var lanes = nextLanes & entangledLanes;
            while(lanes > 0){
                var index = pickArbitraryLaneIndex(lanes);
                var lane = 1 << index;
                nextLanes |= entanglements[index];
                lanes &= ~lane;
            }
        }
        return nextLanes;
    }
    function getMostRecentEventTime(root, lanes) {
        var eventTimes = root.eventTimes;
        var mostRecentEventTime = NoTimestamp;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var eventTime = eventTimes[index];
            if (eventTime > mostRecentEventTime) mostRecentEventTime = eventTime;
            lanes &= ~lane;
        }
        return mostRecentEventTime;
    }
    function computeExpirationTime(lane, currentTime) {
        // TODO: Expiration heuristic is constant per lane, so could use a map.
        getHighestPriorityLanes(lane);
        var priority = return_highestLanePriority;
        if (priority >= InputContinuousLanePriority) // User interactions should expire slightly more quickly.
        //
        // NOTE: This is set to the corresponding constant as in Scheduler.js. When
        // we made it larger, a product metric in www regressed, suggesting there's
        // a user interaction that's being starved by a series of synchronous
        // updates. If that theory is correct, the proper solution is to fix the
        // starvation. However, this scenario supports the idea that expiration
        // times are an important safeguard when starvation does happen.
        //
        // Also note that, in the case of user input specifically, this will soon no
        // longer be an issue because we plan to make user input synchronous by
        // default (until you enter `startTransition`, of course.)
        //
        // If weren't planning to make these updates synchronous soon anyway, I
        // would probably make this number a configurable parameter.
        return currentTime + 250;
        else if (priority >= TransitionPriority) return currentTime + 5000;
        else // Anything idle priority or lower should never expire.
        return NoTimestamp;
    }
    function markStarvedLanesAsExpired(root, currentTime) {
        // TODO: This gets called every time we yield. We can optimize by storing
        // the earliest expiration time on the root. Then use that to quickly bail out
        // of this function.
        var pendingLanes = root.pendingLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes;
        var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
        // expiration time. If so, we'll assume the update is being starved and mark
        // it as expired to force it to finish.
        var lanes = pendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var expirationTime = expirationTimes[index];
            if (expirationTime === NoTimestamp) // Found a pending lane with no expiration time. If it's not suspended, or
            // if it's pinged, assume it's CPU-bound. Compute a new expiration time
            // using the current time.
            {
                if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) // Assumes timestamps are monotonically increasing.
                expirationTimes[index] = computeExpirationTime(lane, currentTime);
            } else if (expirationTime <= currentTime) // This lane expired
            root.expiredLanes |= lane;
            lanes &= ~lane;
        }
    } // This returns the highest priority pending lanes regardless of whether they
    function getLanesToRetrySynchronouslyOnError(root) {
        var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;
        if (everythingButOffscreen !== NoLanes) return everythingButOffscreen;
        if (everythingButOffscreen & OffscreenLane) return OffscreenLane;
        return NoLanes;
    }
    function returnNextLanesPriority() {
        return return_highestLanePriority;
    }
    function includesNonIdleWork(lanes) {
        return (lanes & NonIdleLanes) !== NoLanes;
    }
    function includesOnlyRetries(lanes) {
        return (lanes & RetryLanes) === lanes;
    }
    function includesOnlyTransitions(lanes) {
        return (lanes & TransitionLanes) === lanes;
    } // To ensure consistency across multiple updates in the same event, this should
    // be a pure function, so that it always returns the same lane for given inputs.
    function findUpdateLane(lanePriority, wipLanes) {
        switch(lanePriority){
            case NoLanePriority:
                break;
            case SyncLanePriority:
                return SyncLane;
            case SyncBatchedLanePriority:
                return SyncBatchedLane;
            case InputDiscreteLanePriority:
                var _lane = pickArbitraryLane(InputDiscreteLanes & ~wipLanes);
                if (_lane === NoLane) // Shift to the next priority level
                return findUpdateLane(InputContinuousLanePriority, wipLanes);
                return _lane;
            case InputContinuousLanePriority:
                var _lane2 = pickArbitraryLane(InputContinuousLanes & ~wipLanes);
                if (_lane2 === NoLane) // Shift to the next priority level
                return findUpdateLane(DefaultLanePriority, wipLanes);
                return _lane2;
            case DefaultLanePriority:
                var _lane3 = pickArbitraryLane(DefaultLanes & ~wipLanes);
                if (_lane3 === NoLane) {
                    // If all the default lanes are already being worked on, look for a
                    // lane in the transition range.
                    _lane3 = pickArbitraryLane(TransitionLanes & ~wipLanes);
                    if (_lane3 === NoLane) // All the transition lanes are taken, too. This should be very
                    // rare, but as a last resort, pick a default lane. This will have
                    // the effect of interrupting the current work-in-progress render.
                    _lane3 = pickArbitraryLane(DefaultLanes);
                }
                return _lane3;
            case TransitionPriority:
            case RetryLanePriority:
                break;
            case IdleLanePriority:
                var lane = pickArbitraryLane(IdleLanes & ~wipLanes);
                if (lane === NoLane) lane = pickArbitraryLane(IdleLanes);
                return lane;
        }
        throw Error("Invalid update priority: " + lanePriority + ". This is a bug in React.");
    } // To ensure consistency across multiple updates in the same event, this should
    // be pure function, so that it always returns the same lane for given inputs.
    function findTransitionLane(wipLanes, pendingLanes) {
        // First look for lanes that are completely unclaimed, i.e. have no
        // pending work.
        var lane = pickArbitraryLane(TransitionLanes & ~pendingLanes);
        if (lane === NoLane) {
            // If all lanes have pending work, look for a lane that isn't currently
            // being worked on.
            lane = pickArbitraryLane(TransitionLanes & ~wipLanes);
            if (lane === NoLane) // If everything is being worked on, pick any lane. This has the
            // effect of interrupting the current work-in-progress.
            lane = pickArbitraryLane(TransitionLanes);
        }
        return lane;
    } // To ensure consistency across multiple updates in the same event, this should
    // be pure function, so that it always returns the same lane for given inputs.
    function findRetryLane(wipLanes) {
        // This is a fork of `findUpdateLane` designed specifically for Suspense
        // "retries" — a special update that attempts to flip a Suspense boundary
        // from its placeholder state to its primary/resolved state.
        var lane = pickArbitraryLane(RetryLanes & ~wipLanes);
        if (lane === NoLane) lane = pickArbitraryLane(RetryLanes);
        return lane;
    }
    function getHighestPriorityLane(lanes) {
        return lanes & -lanes;
    }
    function getLowestPriorityLane(lanes) {
        // This finds the most significant non-zero bit.
        var index = 31 - clz32(lanes);
        return index < 0 ? NoLanes : 1 << index;
    }
    function getEqualOrHigherPriorityLanes(lanes) {
        return (getLowestPriorityLane(lanes) << 1) - 1;
    }
    function pickArbitraryLane(lanes) {
        // This wrapper function gets inlined. Only exists so to communicate that it
        // doesn't matter which bit is selected; you can pick any bit without
        // affecting the algorithms where its used. Here I'm using
        // getHighestPriorityLane because it requires the fewest operations.
        return getHighestPriorityLane(lanes);
    }
    function pickArbitraryLaneIndex(lanes) {
        return 31 - clz32(lanes);
    }
    function laneToIndex(lane) {
        return pickArbitraryLaneIndex(lane);
    }
    function includesSomeLane(a, b) {
        return (a & b) !== NoLanes;
    }
    function isSubsetOfLanes(set, subset) {
        return (set & subset) === subset;
    }
    function mergeLanes(a, b) {
        return a | b;
    }
    function removeLanes(set, subset) {
        return set & ~subset;
    } // Seems redundant, but it changes the type from a single lane (used for
    // updates) to a group of lanes (used for flushing work).
    function laneToLanes(lane) {
        return lane;
    }
    function higherPriorityLane(a, b) {
        // This works because the bit ranges decrease in priority as you go left.
        return a !== NoLane && a < b ? a : b;
    }
    function createLaneMap(initial) {
        // Intentionally pushing one by one.
        // https://v8.dev/blog/elements-kinds#avoid-creating-holes
        var laneMap = [];
        for(var i = 0; i < TotalLanes; i++)laneMap.push(initial);
        return laneMap;
    }
    function markRootUpdated(root, updateLane, eventTime) {
        root.pendingLanes |= updateLane; // TODO: Theoretically, any update to any lane can unblock any other lane. But
        // it's not practical to try every single possible combination. We need a
        // heuristic to decide which lanes to attempt to render, and in which batches.
        // For now, we use the same heuristic as in the old ExpirationTimes model:
        // retry any lane at equal or lower priority, but don't try updates at higher
        // priority without also including the lower priority updates. This works well
        // when considering updates across different priority levels, but isn't
        // sufficient for updates within the same priority, since we want to treat
        // those updates as parallel.
        // Unsuspend any update at equal or lower priority.
        var higherPriorityLanes = updateLane - 1; // Turns 0b1000 into 0b0111
        root.suspendedLanes &= higherPriorityLanes;
        root.pingedLanes &= higherPriorityLanes;
        var eventTimes = root.eventTimes;
        var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
        // recent event, and we assume time is monotonically increasing.
        eventTimes[index] = eventTime;
    }
    function markRootSuspended(root, suspendedLanes) {
        root.suspendedLanes |= suspendedLanes;
        root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.
        var expirationTimes = root.expirationTimes;
        var lanes = suspendedLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootPinged(root, pingedLanes, eventTime) {
        root.pingedLanes |= root.suspendedLanes & pingedLanes;
    }
    function markDiscreteUpdatesExpired(root) {
        root.expiredLanes |= InputDiscreteLanes & root.pendingLanes;
    }
    function hasDiscreteLanes(lanes) {
        return (lanes & InputDiscreteLanes) !== NoLanes;
    }
    function markRootMutableRead(root, updateLane) {
        root.mutableReadLanes |= updateLane & root.pendingLanes;
    }
    function markRootFinished(root, remainingLanes) {
        var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
        root.pendingLanes = remainingLanes; // Let's try everything again
        root.suspendedLanes = 0;
        root.pingedLanes = 0;
        root.expiredLanes &= remainingLanes;
        root.mutableReadLanes &= remainingLanes;
        root.entangledLanes &= remainingLanes;
        var entanglements = root.entanglements;
        var eventTimes = root.eventTimes;
        var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work
        var lanes = noLongerPendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            entanglements[index] = NoLanes;
            eventTimes[index] = NoTimestamp;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootEntangled(root, entangledLanes) {
        root.entangledLanes |= entangledLanes;
        var entanglements = root.entanglements;
        var lanes = entangledLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            entanglements[index] |= entangledLanes;
            lanes &= ~lane;
        }
    }
    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros. Only used on lanes, so assume input is an integer.
    // Based on:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
    var log = Math.log;
    var LN2 = Math.LN2;
    function clz32Fallback(lanes) {
        if (lanes === 0) return 32;
        return 31 - (log(lanes) / LN2 | 0) | 0;
    }
    // Intentionally not named imports because Rollup would use dynamic dispatch for
    var UserBlockingPriority$1 = Scheduler.unstable_UserBlockingPriority, runWithPriority = Scheduler.unstable_runWithPriority; // TODO: can we stop exporting these?
    var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
    // We'd like to remove this but it's not clear if this is safe.
    function setEnabled(enabled) {
        _enabled = !!enabled;
    }
    function isEnabled() {
        return _enabled;
    }
    function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
        var eventPriority = getEventPriorityForPluginSystem(domEventName);
        var listenerWrapper;
        switch(eventPriority){
            case DiscreteEvent:
                listenerWrapper = dispatchDiscreteEvent;
                break;
            case UserBlockingEvent:
                listenerWrapper = dispatchUserBlockingUpdate;
                break;
            case ContinuousEvent:
            default:
                listenerWrapper = dispatchEvent;
                break;
        }
        return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
    }
    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
        discreteUpdates(dispatchEvent, domEventName, eventSystemFlags, container, nativeEvent);
    }
    function dispatchUserBlockingUpdate(domEventName, eventSystemFlags, container, nativeEvent) {
        runWithPriority(UserBlockingPriority$1, dispatchEvent.bind(null, domEventName, eventSystemFlags, container, nativeEvent));
    }
    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (!_enabled) return;
        var allowReplay = true;
        // TODO: replaying capture phase events is currently broken
        // because we used to do it during top-level native bubble handlers
        // but now we use different bubble and capture handlers.
        // In eager mode, we attach capture listeners early, so we need
        // to filter them out until we fix the logic to handle them correctly.
        // This could've been outside the flag but I put it inside to reduce risk.
        allowReplay = (eventSystemFlags & IS_CAPTURE_PHASE) === 0;
        if (allowReplay && hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(domEventName)) {
            // If we already have a queue of discrete events, and this is another discrete
            // event, then we can't dispatch it regardless of its target, since they
            // need to dispatch in order.
            queueDiscreteEvent(null, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            return;
        }
        var blockedOn = attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
        if (blockedOn === null) {
            // We successfully dispatched this event.
            if (allowReplay) clearIfContinuousEvent(domEventName, nativeEvent);
            return;
        }
        if (allowReplay) {
            if (isReplayableDiscreteEvent(domEventName)) {
                // This this to be replayed later once the target is available.
                queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
                return;
            }
            if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) return;
             // We need to clear only if we didn't queue because
            // queueing is accummulative.
            clearIfContinuousEvent(domEventName, nativeEvent);
        } // This is not replayable so we'll invoke it but without a target,
        // in case the event system needs to trace it.
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
    } // Attempt dispatching an event. Returns a SuspenseInstance or Container if it's blocked.
    function attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // TODO: Warn if _enabled is false.
        var nativeEventTarget = getEventTarget(nativeEvent);
        var targetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) // This tree has been unmounted already. Dispatch without a target.
            targetInst = null;
            else {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) // Queue the event to be replayed later. Abort dispatching since we
                    // don't want this event dispatched twice through the event system.
                    // TODO: If this is the first discrete event in the queue. Schedule an increased
                    // priority for this boundary.
                    return instance;
                     // This shouldn't happen, something went wrong but to avoid blocking
                    // the whole system, dispatch the event without a target.
                    // TODO: Warn.
                    targetInst = null;
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (root.hydrate) // If this happens during a replay something went wrong and it might block
                    // the whole system.
                    return getContainerFromFiber(nearestMounted);
                    targetInst = null;
                } else if (nearestMounted !== targetInst) // If we get an event (ex: img onload) before committing that
                // component's mount, ignore it for now (that is, treat it as if it was an
                // event on a non-React tree). We might also consider queueing events and
                // dispatching them after the mount.
                targetInst = null;
            }
        }
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer); // We're not blocked on anything.
        return null;
    }
    function addEventBubbleListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, false);
        return listener;
    }
    function addEventCaptureListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, true);
        return listener;
    }
    function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            capture: true,
            passive: passive
        });
        return listener;
    }
    function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            passive: passive
        });
        return listener;
    }
    /**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */ var root1 = null;
    var startText = null;
    var fallbackText = null;
    function initialize(nativeEventTarget) {
        root1 = nativeEventTarget;
        startText = getText();
        return true;
    }
    function reset() {
        root1 = null;
        startText = null;
        fallbackText = null;
    }
    function getData() {
        if (fallbackText) return fallbackText;
        var start;
        var startValue = startText;
        var startLength = startValue.length;
        var end;
        var endValue = getText();
        var endLength = endValue.length;
        for(start = 0; start < startLength; start++){
            if (startValue[start] !== endValue[start]) break;
        }
        var minEnd = startLength - start;
        for(end = 1; end <= minEnd; end++){
            if (startValue[startLength - end] !== endValue[endLength - end]) break;
        }
        var sliceTail = end > 1 ? 1 - end : undefined;
        fallbackText = endValue.slice(start, sliceTail);
        return fallbackText;
    }
    function getText() {
        if ('value' in root1) return root1.value;
        return root1.textContent;
    }
    /**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */ function getEventCharCode(nativeEvent) {
        var charCode;
        var keyCode = nativeEvent.keyCode;
        if ('charCode' in nativeEvent) {
            charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.
            if (charCode === 0 && keyCode === 13) charCode = 13;
        } else // IE8 does not implement `charCode`, but `keyCode` has the correct value.
        charCode = keyCode;
         // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
        // report Enter as charCode 10 when ctrl is pressed.
        if (charCode === 10) charCode = 13;
         // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
        // Must not discard the (non-)printable Enter-key.
        if (charCode >= 32 || charCode === 13) return charCode;
        return 0;
    }
    function functionThatReturnsTrue() {
        return true;
    }
    function functionThatReturnsFalse() {
        return false;
    } // This is intentionally a factory so that we have different returned constructors.
    // If we had a single constructor, it would be megamorphic and engines would deopt.
    function createSyntheticEvent(Interface) {
        /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   */ function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for(var _propName in Interface){
                if (!Interface.hasOwnProperty(_propName)) continue;
                var normalize = Interface[_propName];
                if (normalize) this[_propName] = normalize(nativeEvent);
                else this[_propName] = nativeEvent[_propName];
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) this.isDefaultPrevented = functionThatReturnsTrue;
            else this.isDefaultPrevented = functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
        }
        _assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
                this.defaultPrevented = true;
                var event = this.nativeEvent;
                if (!event) return;
                if (event.preventDefault) event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.returnValue !== 'unknown') event.returnValue = false;
                this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
                var event = this.nativeEvent;
                if (!event) return;
                if (event.stopPropagation) event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.cancelBubble !== 'unknown') // The ChangeEventPlugin registers a "propertychange" event for
                // IE. This event does not support bubbling or cancelling, and
                // any references to cancelBubble throw "Member not found".  A
                // typeof check of "unknown" circumvents this issue (and is also
                // IE specific).
                event.cancelBubble = true;
                this.isPropagationStopped = functionThatReturnsTrue;
            },
            /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */ persist: function() {
            },
            /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */ isPersistent: functionThatReturnsTrue
        });
        return SyntheticBaseEvent;
    }
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
    };
    var SyntheticEvent = createSyntheticEvent(EventInterface);
    var UIEventInterface = _assign({
    }, EventInterface, {
        view: 0,
        detail: 0
    });
    var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
    var lastMovementX;
    var lastMovementY;
    var lastMouseEvent;
    function updateMouseMovementPolyfillState(event) {
        if (event !== lastMouseEvent) {
            if (lastMouseEvent && event.type === 'mousemove') {
                lastMovementX = event.screenX - lastMouseEvent.screenX;
                lastMovementY = event.screenY - lastMouseEvent.screenY;
            } else {
                lastMovementX = 0;
                lastMovementY = 0;
            }
            lastMouseEvent = event;
        }
    }
    /**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var MouseEventInterface = _assign({
    }, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
            if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
            return event.relatedTarget;
        },
        movementX: function(event) {
            if ('movementX' in event) return event.movementX;
            updateMouseMovementPolyfillState(event);
            return lastMovementX;
        },
        movementY: function(event) {
            if ('movementY' in event) return event.movementY;
             // Don't need to call updateMouseMovementPolyfillState() here
            // because it's guaranteed to have already run when movementX
            // was copied.
            return lastMovementY;
        }
    });
    var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
    /**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var DragEventInterface = _assign({
    }, MouseEventInterface, {
        dataTransfer: 0
    });
    var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
    /**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var FocusEventInterface = _assign({
    }, UIEventInterface, {
        relatedTarget: 0
    });
    var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */ var AnimationEventInterface = _assign({
    }, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */ var ClipboardEventInterface = _assign({
    }, EventInterface, {
        clipboardData: function(event) {
            return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
        }
    });
    var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */ var CompositionEventInterface = _assign({
    }, EventInterface, {
        data: 0
    });
    var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */ // Happens to share the same list for now.
    var SyntheticInputEvent = SyntheticCompositionEvent;
    /**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var normalizeKey = {
        Esc: 'Escape',
        Spacebar: ' ',
        Left: 'ArrowLeft',
        Up: 'ArrowUp',
        Right: 'ArrowRight',
        Down: 'ArrowDown',
        Del: 'Delete',
        Win: 'OS',
        Menu: 'ContextMenu',
        Apps: 'ContextMenu',
        Scroll: 'ScrollLock',
        MozPrintableKey: 'Unidentified'
    };
    /**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var translateToKey = {
        '8': 'Backspace',
        '9': 'Tab',
        '12': 'Clear',
        '13': 'Enter',
        '16': 'Shift',
        '17': 'Control',
        '18': 'Alt',
        '19': 'Pause',
        '20': 'CapsLock',
        '27': 'Escape',
        '32': ' ',
        '33': 'PageUp',
        '34': 'PageDown',
        '35': 'End',
        '36': 'Home',
        '37': 'ArrowLeft',
        '38': 'ArrowUp',
        '39': 'ArrowRight',
        '40': 'ArrowDown',
        '45': 'Insert',
        '46': 'Delete',
        '112': 'F1',
        '113': 'F2',
        '114': 'F3',
        '115': 'F4',
        '116': 'F5',
        '117': 'F6',
        '118': 'F7',
        '119': 'F8',
        '120': 'F9',
        '121': 'F10',
        '122': 'F11',
        '123': 'F12',
        '144': 'NumLock',
        '145': 'ScrollLock',
        '224': 'Meta'
    };
    /**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */ function getEventKey(nativeEvent) {
        if (nativeEvent.key) {
            // Normalize inconsistent values reported by browsers due to
            // implementations of a working draft specification.
            // FireFox implements `key` but returns `MozPrintableKey` for all
            // printable characters (normalized to `Unidentified`), ignore it.
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== 'Unidentified') return key;
        } // Browser does not implement `key`, polyfill as much of it as we can.
        if (nativeEvent.type === 'keypress') {
            var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
            // thus be captured by `keypress`, no other non-printable key should.
            return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
        }
        if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') // While user keyboard layout determines the actual meaning of each
        // `keyCode` value, almost all function keys have a universal value.
        return translateToKey[nativeEvent.keyCode] || 'Unidentified';
        return '';
    }
    /**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */ var modifierKeyToProp = {
        Alt: 'altKey',
        Control: 'ctrlKey',
        Meta: 'metaKey',
        Shift: 'shiftKey'
    }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
    // getModifierState. If getModifierState is not supported, we map it to a set of
    // modifier keys exposed by the event. In this case, Lock-keys are not supported.
    function modifierStateGetter(keyArg) {
        var syntheticEvent = this;
        var nativeEvent = syntheticEvent.nativeEvent;
        if (nativeEvent.getModifierState) return nativeEvent.getModifierState(keyArg);
        var keyProp = modifierKeyToProp[keyArg];
        return keyProp ? !!nativeEvent[keyProp] : false;
    }
    function getEventModifierState(nativeEvent) {
        return modifierStateGetter;
    }
    /**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var KeyboardEventInterface = _assign({
    }, UIEventInterface, {
        key: getEventKey,
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        // Legacy Interface
        charCode: function(event) {
            // `charCode` is the result of a KeyPress event and represents the value of
            // the actual printable character.
            // KeyPress is deprecated, but its replacement is not yet final and not
            // implemented in any major browser. Only KeyPress has charCode.
            if (event.type === 'keypress') return getEventCharCode(event);
            return 0;
        },
        keyCode: function(event) {
            // `keyCode` is the result of a KeyDown/Up event and represents the value of
            // physical keyboard key.
            // The actual meaning of the value depends on the users' keyboard layout
            // which cannot be detected. Assuming that it is a US keyboard layout
            // provides a surprisingly accurate mapping for US and European users.
            // Due to this, it is left to the user to implement at this time.
            if (event.type === 'keydown' || event.type === 'keyup') return event.keyCode;
            return 0;
        },
        which: function(event) {
            // `which` is an alias for either `keyCode` or `charCode` depending on the
            // type of the event.
            if (event.type === 'keypress') return getEventCharCode(event);
            if (event.type === 'keydown' || event.type === 'keyup') return event.keyCode;
            return 0;
        }
    });
    var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
    /**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */ var PointerEventInterface = _assign({
    }, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
    });
    var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
    /**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */ var TouchEventInterface = _assign({
    }, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
    });
    var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */ var TransitionEventInterface = _assign({
    }, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
    /**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var WheelEventInterface = _assign({
    }, MouseEventInterface, {
        deltaX: function(event) {
            return 'deltaX' in event ? event.deltaX : 'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
        },
        deltaY: function(event) {
            return 'deltaY' in event ? event.deltaY : 'wheelDeltaY' in event ? -event.wheelDeltaY : 'wheelDelta' in event ? -event.wheelDelta : 0;
        },
        deltaZ: 0,
        // Browsers without "deltaMode" is reporting in raw wheel delta where one
        // notch on the scroll is always +/- 120, roughly equivalent to pixels.
        // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
        // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
        deltaMode: 0
    });
    var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
    var END_KEYCODES = [
        9,
        13,
        27,
        32
    ]; // Tab, Return, Esc, Space
    var START_KEYCODE = 229;
    var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
    var documentMode = null;
    if (canUseDOM && 'documentMode' in document) documentMode = document.documentMode;
     // Webkit offers a very useful `textInput` event that can be used to
    // directly represent `beforeInput`. The IE `textinput` event is not as
    // useful, so we don't use it.
    var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
    // by the native compositionend event may be incorrect. Japanese ideographic
    // spaces, for instance (\u3000) are not recorded correctly.
    var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
    function registerEvents() {
        registerTwoPhaseEvent('onBeforeInput', [
            'compositionend',
            'keypress',
            'textInput',
            'paste'
        ]);
        registerTwoPhaseEvent('onCompositionEnd', [
            'compositionend',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
        registerTwoPhaseEvent('onCompositionStart', [
            'compositionstart',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
        registerTwoPhaseEvent('onCompositionUpdate', [
            'compositionupdate',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
    } // Track whether we've ever handled a keypress on the space key.
    var hasSpaceKeypress = false;
    /**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */ function isKeypressCommand(nativeEvent) {
        return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    /**
 * Translate native top level events into event types.
 */ function getCompositionEventType(domEventName) {
        switch(domEventName){
            case 'compositionstart':
                return 'onCompositionStart';
            case 'compositionend':
                return 'onCompositionEnd';
            case 'compositionupdate':
                return 'onCompositionUpdate';
        }
    }
    /**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 */ function isFallbackCompositionStart(domEventName, nativeEvent) {
        return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;
    }
    /**
 * Does our fallback mode think that this event is the end of composition?
 */ function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch(domEventName){
            case 'keyup':
                // Command keys insert or clear IME input.
                return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case 'keydown':
                // Expect IME keyCode on each keydown. If we get any other
                // code we must have exited earlier.
                return nativeEvent.keyCode !== START_KEYCODE;
            case 'keypress':
            case 'mousedown':
            case 'focusout':
                // Events are not possible without cancelling IME.
                return true;
            default:
                return false;
        }
    }
    /**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */ function getDataFromCustomEvent(nativeEvent) {
        var detail = nativeEvent.detail;
        if (typeof detail === 'object' && 'data' in detail) return detail.data;
        return null;
    }
    /**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */ function isUsingKoreanIME(nativeEvent) {
        return nativeEvent.locale === 'ko';
    } // Track the current IME composition status, if any.
    var isComposing = false;
    /**
 * @return {?object} A SyntheticCompositionEvent.
 */ function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var eventType;
        var fallbackData;
        if (canUseCompositionEvent) eventType = getCompositionEventType(domEventName);
        else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) eventType = 'onCompositionStart';
        } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) eventType = 'onCompositionEnd';
        if (!eventType) return null;
        if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            // The current composition is stored statically and must not be
            // overwritten while composition continues.
            if (!isComposing && eventType === 'onCompositionStart') isComposing = initialize(nativeEventTarget);
            else if (eventType === 'onCompositionEnd') {
                if (isComposing) fallbackData = getData();
            }
        }
        var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
        if (listeners.length > 0) {
            var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            if (fallbackData) // Inject data generated from fallback path into the synthetic event.
            // This matches the property of native CompositionEventInterface.
            event.data = fallbackData;
            else {
                var customData = getDataFromCustomEvent(nativeEvent);
                if (customData !== null) event.data = customData;
            }
        }
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch(domEventName){
            case 'compositionend':
                return getDataFromCustomEvent(nativeEvent);
            case 'keypress':
                /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */ var which = nativeEvent.which;
                if (which !== SPACEBAR_CODE) return null;
                hasSpaceKeypress = true;
                return SPACEBAR_CHAR;
            case 'textInput':
                // Record the characters to be added to the DOM.
                var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
                // it at the keypress level and bail immediately. Android Chrome
                // doesn't give us keycodes, so we need to ignore it.
                if (chars === SPACEBAR_CHAR && hasSpaceKeypress) return null;
                return chars;
            default:
                // For other native event types, do nothing.
                return null;
        }
    }
    /**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 */ function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        // If we are currently composing (IME) and using a fallback to do so,
        // try to extract the composed characters from the fallback object.
        // If composition event is available, we extract a string only at
        // compositionevent, otherwise extract it at fallback events.
        if (isComposing) {
            if (domEventName === 'compositionend' || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
                var chars = getData();
                reset();
                isComposing = false;
                return chars;
            }
            return null;
        }
        switch(domEventName){
            case 'paste':
                // If a paste event occurs after a keypress, throw out the input
                // chars. Paste events should not lead to BeforeInput events.
                return null;
            case 'keypress':
                /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */ if (!isKeypressCommand(nativeEvent)) {
                    // IE fires the `keypress` event when a user types an emoji via
                    // Touch keyboard of Windows.  In such a case, the `char` property
                    // holds an emoji character like `\uD83D\uDE0A`.  Because its length
                    // is 2, the property `which` does not represent an emoji correctly.
                    // In such a case, we directly return the `char` property instead of
                    // using `which`.
                    if (nativeEvent.char && nativeEvent.char.length > 1) return nativeEvent.char;
                    else if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
                }
                return null;
            case 'compositionend':
                return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
                return null;
        }
    }
    /**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */ function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var chars;
        if (canUseTextInputEvent) chars = getNativeBeforeInputChars(domEventName, nativeEvent);
        else chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
         // If no characters are being inserted, no BeforeInput event should
        // be fired.
        if (!chars) return null;
        var listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');
        if (listeners.length > 0) {
            var event = new SyntheticInputEvent('onBeforeInput', 'beforeinput', null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            event.data = chars;
        }
    }
    /**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */ function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    }
    /**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */ var supportedInputTypes = {
        color: true,
        date: true,
        datetime: true,
        'datetime-local': true,
        email: true,
        month: true,
        number: true,
        password: true,
        range: true,
        search: true,
        tel: true,
        text: true,
        time: true,
        url: true,
        week: true
    };
    function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        if (nodeName === 'input') return !!supportedInputTypes[elem.type];
        if (nodeName === 'textarea') return true;
        return false;
    }
    /**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */ function isEventSupported(eventNameSuffix) {
        if (!canUseDOM) return false;
        var eventName = 'on' + eventNameSuffix;
        var isSupported = eventName in document;
        if (!isSupported) {
            var element = document.createElement('div');
            element.setAttribute(eventName, 'return;');
            isSupported = typeof element[eventName] === 'function';
        }
        return isSupported;
    }
    function registerEvents$1() {
        registerTwoPhaseEvent('onChange', [
            'change',
            'click',
            'focusin',
            'focusout',
            'input',
            'keydown',
            'keyup',
            'selectionchange'
        ]);
    }
    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        // Flag this event loop as needing state restore.
        enqueueStateRestore(target);
        var listeners = accumulateTwoPhaseListeners(inst, 'onChange');
        if (listeners.length > 0) {
            var event = new SyntheticEvent('onChange', 'change', null, nativeEvent, target);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
        }
    }
    /**
 * For IE shims
 */ var activeElement = null;
    var activeElementInst = null;
    /**
 * SECTION: handle `change` event
 */ function shouldUseChangeEvent(elem) {
        var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }
    function manualDispatchChangeEvent(nativeEvent) {
        var dispatchQueue = [];
        createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
        // other events and have it go through ReactBrowserEventEmitter. Since it
        // doesn't, we manually listen for the events and so we have to enqueue and
        // process the abstract event manually.
        //
        // Batching is necessary here in order to ensure that all event handlers run
        // before the next rerender (including event handlers attached to ancestor
        // elements instead of directly on the input). Without this, controlled
        // components don't work properly in conjunction with event bubbling because
        // the component is rerendered and the value reverted before all the event
        // handlers can run. See https://github.com/facebook/react/issues/708.
        batchedUpdates(runEventInBatch, dispatchQueue);
    }
    function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
        if (domEventName === 'change') return targetInst;
    }
    /**
 * SECTION: handle `input` event
 */ var isInputEventSupported = false;
    if (canUseDOM) // IE9 claims to support the input event but fails to trigger it when
    // deleting text, so we ignore its input events.
    isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
    /**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */ function startWatchingForValueChange(target, targetInst) {
        activeElement = target;
        activeElementInst = targetInst;
        activeElement.attachEvent('onpropertychange', handlePropertyChange);
    }
    /**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */ function stopWatchingForValueChange() {
        if (!activeElement) return;
        activeElement.detachEvent('onpropertychange', handlePropertyChange);
        activeElement = null;
        activeElementInst = null;
    }
    /**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */ function handlePropertyChange(nativeEvent) {
        if (nativeEvent.propertyName !== 'value') return;
        if (getInstIfValueChanged(activeElementInst)) manualDispatchChangeEvent(nativeEvent);
    }
    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        if (domEventName === 'focusin') {
            // In IE9, propertychange fires for most input events but is buggy and
            // doesn't fire when text is deleted, but conveniently, selectionchange
            // appears to fire in all of the remaining cases so we catch those and
            // forward the event if the value has changed
            // In either case, we don't want to call the event handler if the value
            // is changed from JS so we redefine a setter for `.value` that updates
            // our activeElementValue variable, allowing us to ignore those changes
            //
            // stopWatching() should be a noop here but we call it just in case we
            // missed a blur event somehow.
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
        } else if (domEventName === 'focusout') stopWatchingForValueChange();
    } // For IE8 and IE9.
    function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
        if (domEventName === 'selectionchange' || domEventName === 'keyup' || domEventName === 'keydown') // On the selectionchange event, the target is just document which isn't
        // helpful for us so just check activeElement instead.
        //
        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
        // propertychange on the first input event after setting `value` from a
        // script and fires only keydown, keypress, keyup. Catching keyup usually
        // gets it and catching keydown lets us fire an event for the first
        // keystroke if user does a key repeat (it'll be a little delayed: right
        // before the second keystroke). Other input methods (e.g., paste) seem to
        // fire selectionchange normally.
        return getInstIfValueChanged(activeElementInst);
    }
    /**
 * SECTION: handle `click` event
 */ function shouldUseClickEvent(elem) {
        // Use the `click` event to detect changes to checkbox and radio inputs.
        // This approach works across all browsers, whereas `change` does not fire
        // until `blur` in IE8.
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
        if (domEventName === 'click') return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if (domEventName === 'input' || domEventName === 'change') return getInstIfValueChanged(targetInst);
    }
    function handleControlledInputBlur(node) {
        var state = node._wrapperState;
        if (!state || !state.controlled || node.type !== 'number') return;
        // If controlled, assign the value attribute to the current value on blur
        setDefaultValue(node, 'number', node.value);
    }
    /**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */ function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        var getTargetInstFunc, handleEventFunc;
        if (shouldUseChangeEvent(targetNode)) getTargetInstFunc = getTargetInstForChangeEvent;
        else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                handleEventFunc = handleEventsForInputEventPolyfill;
            }
        } else if (shouldUseClickEvent(targetNode)) getTargetInstFunc = getTargetInstForClickEvent;
        if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
                createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
                return;
            }
        }
        if (handleEventFunc) handleEventFunc(domEventName, targetNode, targetInst);
         // When blurring, set the value attribute for number inputs
        if (domEventName === 'focusout') handleControlledInputBlur(targetNode);
    }
    function registerEvents$2() {
        registerDirectEvent('onMouseEnter', [
            'mouseout',
            'mouseover'
        ]);
        registerDirectEvent('onMouseLeave', [
            'mouseout',
            'mouseover'
        ]);
        registerDirectEvent('onPointerEnter', [
            'pointerout',
            'pointerover'
        ]);
        registerDirectEvent('onPointerLeave', [
            'pointerout',
            'pointerover'
        ]);
    }
    /**
 * For almost every interaction we care about, there will be both a top-level
 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
 * we do not extract duplicate events. However, moving the mouse into the
 * browser from outside will not fire a `mouseout` event. In this case, we use
 * the `mouseover` top-level event.
 */ function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var isOverEvent = domEventName === 'mouseover' || domEventName === 'pointerover';
        var isOutEvent = domEventName === 'mouseout' || domEventName === 'pointerout';
        if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0) {
            // If this is an over event with a target, we might have already dispatched
            // the event in the out event of the other target. If this is replayed,
            // then it's because we couldn't dispatch against this target previously
            // so we have to do it now instead.
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
                // If the related node is managed by React, we can assume that we have
                // already dispatched the corresponding events during its mouseout.
                if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) return;
            }
        }
        if (!isOutEvent && !isOverEvent) // Must not be a mouse or pointer in or out - ignoring.
        return;
        var win; // TODO: why is this nullable in the types but we read from it?
        if (nativeEventTarget.window === nativeEventTarget) // `nativeEventTarget` is probably a window object.
        win = nativeEventTarget;
        else {
            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
            var doc = nativeEventTarget.ownerDocument;
            if (doc) win = doc.defaultView || doc.parentWindow;
            else win = window;
        }
        var from;
        var to;
        if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to = _related ? getClosestInstanceFromNode(_related) : null;
            if (to !== null) {
                var nearestMounted = getNearestMountedFiber(to);
                if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) to = null;
            }
        } else {
            // Moving to a node from outside the window.
            from = null;
            to = targetInst;
        }
        if (from === to) // Nothing pertains to our managed components.
        return;
        var SyntheticEventCtor = SyntheticMouseEvent;
        var leaveEventType = 'onMouseLeave';
        var enterEventType = 'onMouseEnter';
        var eventTypePrefix = 'mouse';
        if (domEventName === 'pointerout' || domEventName === 'pointerover') {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = 'onPointerLeave';
            enterEventType = 'onPointerEnter';
            eventTypePrefix = 'pointer';
        }
        var fromNode = from == null ? win : getNodeFromInstance(from);
        var toNode = to == null ? win : getNodeFromInstance(to);
        var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + 'leave', from, nativeEvent, nativeEventTarget);
        leave.target = fromNode;
        leave.relatedTarget = toNode;
        var enter = null; // We should only process this nativeEvent if we are processing
        // the first ancestor. Next time, we will ignore the event.
        var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + 'enter', to, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
        }
        accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
    }
    /**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */ function is(x, y) {
        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
        ;
    }
    var objectIs = typeof Object.is === 'function' ? Object.is : is;
    var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
    /**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */ function shallowEqual(objA, objB) {
        if (objectIs(objA, objB)) return true;
        if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) return false;
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return false;
         // Test for A's keys different from B.
        for(var i = 0; i < keysA.length; i++){
            if (!hasOwnProperty$2.call(objB, keysA[i]) || !objectIs(objA[keysA[i]], objB[keysA[i]])) return false;
        }
        return true;
    }
    /**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */ function getLeafNode(node) {
        while(node && node.firstChild)node = node.firstChild;
        return node;
    }
    /**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */ function getSiblingNode(node) {
        while(node){
            if (node.nextSibling) return node.nextSibling;
            node = node.parentNode;
        }
    }
    /**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */ function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        var nodeStart = 0;
        var nodeEnd = 0;
        while(node){
            if (node.nodeType === TEXT_NODE) {
                nodeEnd = nodeStart + node.textContent.length;
                if (nodeStart <= offset && nodeEnd >= offset) return {
                    node: node,
                    offset: offset - nodeStart
                };
                nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
        }
    }
    /**
 * @param {DOMElement} outerNode
 * @return {?object}
 */ function getOffsets(outerNode) {
        var ownerDocument = outerNode.ownerDocument;
        var win = ownerDocument && ownerDocument.defaultView || window;
        var selection = win.getSelection && win.getSelection();
        if (!selection || selection.rangeCount === 0) return null;
        var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
        // up/down buttons on an <input type="number">. Anonymous divs do not seem to
        // expose properties, triggering a "Permission denied error" if any of its
        // properties are accessed. The only seemingly possible way to avoid erroring
        // is to access a property that typically works for non-anonymous divs and
        // catch any error that may otherwise arise. See
        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
        try {
            /* eslint-disable no-unused-expressions */ anchorNode.nodeType;
            focusNode.nodeType;
        /* eslint-enable no-unused-expressions */ } catch (e) {
            return null;
        }
        return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
    }
    /**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */ function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
        var length = 0;
        var start = -1;
        var end = -1;
        var indexWithinAnchor = 0;
        var indexWithinFocus = 0;
        var node = outerNode;
        var parentNode = null;
        outer: while(true){
            var next = null;
            while(true){
                if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) start = length + anchorOffset;
                if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) end = length + focusOffset;
                if (node.nodeType === TEXT_NODE) length += node.nodeValue.length;
                if ((next = node.firstChild) === null) break;
                 // Moving from `node` to its first child `next`.
                parentNode = node;
                node = next;
            }
            while(true){
                if (node === outerNode) break outer;
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) start = length;
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) end = length;
                if ((next = node.nextSibling) !== null) break;
                node = parentNode;
                parentNode = node.parentNode;
            } // Moving from `node` to its next sibling `next`.
            node = next;
        }
        if (start === -1 || end === -1) // This should never happen. (Would happen if the anchor/focus nodes aren't
        // actually inside the passed-in node.)
        return null;
        return {
            start: start,
            end: end
        };
    }
    /**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */ function setOffsets(node, offsets) {
        var doc = node.ownerDocument || document;
        var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
        // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
        // fails when pasting 100+ items)
        if (!win.getSelection) return;
        var selection = win.getSelection();
        var length = node.textContent.length;
        var start = Math.min(offsets.start, length);
        var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
        // Flip backward selections, so we can set with a single range.
        if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
        }
        var startMarker = getNodeForCharacterOffset(node, start);
        var endMarker = getNodeForCharacterOffset(node, end);
        if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) return;
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start > end) {
                selection.addRange(range);
                selection.extend(endMarker.node, endMarker.offset);
            } else {
                range.setEnd(endMarker.node, endMarker.offset);
                selection.addRange(range);
            }
        }
    }
    function isTextNode(node) {
        return node && node.nodeType === TEXT_NODE;
    }
    function containsNode(outerNode, innerNode) {
        if (!outerNode || !innerNode) return false;
        else if (outerNode === innerNode) return true;
        else if (isTextNode(outerNode)) return false;
        else if (isTextNode(innerNode)) return containsNode(outerNode, innerNode.parentNode);
        else if ('contains' in outerNode) return outerNode.contains(innerNode);
        else if (outerNode.compareDocumentPosition) return !!(outerNode.compareDocumentPosition(innerNode) & 16);
        else return false;
    }
    function isInDocument(node) {
        return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
    }
    function isSameOriginFrame(iframe) {
        try {
            // Accessing the contentDocument of a HTMLIframeElement can cause the browser
            // to throw, e.g. if it has a cross-origin src attribute.
            // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
            // iframe.contentDocument.defaultView;
            // A safety way is to access one of the cross origin properties: Window or Location
            // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
            // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
            return typeof iframe.contentWindow.location.href === 'string';
        } catch (err) {
            return false;
        }
    }
    function getActiveElementDeep() {
        var win = window;
        var element = getActiveElement();
        while(element instanceof win.HTMLIFrameElement){
            if (isSameOriginFrame(element)) win = element.contentWindow;
            else return element;
            element = getActiveElement(win.document);
        }
        return element;
    }
    /**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */ /**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */ function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
    }
    function getSelectionInformation() {
        var focusedElem = getActiveElementDeep();
        return {
            focusedElem: focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
        };
    }
    /**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */ function restoreSelection(priorSelectionInformation) {
        var curFocusedElem = getActiveElementDeep();
        var priorFocusedElem = priorSelectionInformation.focusedElem;
        var priorSelectionRange = priorSelectionInformation.selectionRange;
        if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) setSelection(priorFocusedElem, priorSelectionRange);
             // Focusing a node can change the scroll position, which is undesirable
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while(ancestor = ancestor.parentNode)if (ancestor.nodeType === ELEMENT_NODE) ancestors.push({
                element: ancestor,
                left: ancestor.scrollLeft,
                top: ancestor.scrollTop
            });
            if (typeof priorFocusedElem.focus === 'function') priorFocusedElem.focus();
            for(var i = 0; i < ancestors.length; i++){
                var info = ancestors[i];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
            }
        }
    }
    /**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */ function getSelection(input) {
        var selection;
        if ('selectionStart' in input) // Modern browser with input or textarea.
        selection = {
            start: input.selectionStart,
            end: input.selectionEnd
        };
        else // Content editable or old IE textarea.
        selection = getOffsets(input);
        return selection || {
            start: 0,
            end: 0
        };
    }
    /**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */ function setSelection(input, offsets) {
        var start = offsets.start;
        var end = offsets.end;
        if (end === undefined) end = start;
        if ('selectionStart' in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
        } else setOffsets(input, offsets);
    }
    var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;
    function registerEvents$3() {
        registerTwoPhaseEvent('onSelect', [
            'focusout',
            'contextmenu',
            'dragend',
            'focusin',
            'keydown',
            'keyup',
            'mousedown',
            'mouseup',
            'selectionchange'
        ]);
    }
    var activeElement$1 = null;
    var activeElementInst$1 = null;
    var lastSelection = null;
    var mouseDown = false;
    /**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 */ function getSelection$1(node) {
        if ('selectionStart' in node && hasSelectionCapabilities(node)) return {
            start: node.selectionStart,
            end: node.selectionEnd
        };
        else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
                anchorNode: selection.anchorNode,
                anchorOffset: selection.anchorOffset,
                focusNode: selection.focusNode,
                focusOffset: selection.focusOffset
            };
        }
    }
    /**
 * Get document associated with the event target.
 */ function getEventTargetDocument(eventTarget) {
        return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
    }
    /**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */ function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        // Ensure we have the right element, and that the user is not dragging a
        // selection (this matches native `select` event behavior). In HTML5, select
        // fires only on input and textarea thus if there's no focused element we
        // won't dispatch.
        var doc = getEventTargetDocument(nativeEventTarget);
        if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) return;
         // Only fire when selection has actually changed.
        var currentSelection = getSelection$1(activeElement$1);
        if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, 'onSelect');
            if (listeners.length > 0) {
                var event = new SyntheticEvent('onSelect', 'select', null, nativeEvent, nativeEventTarget);
                dispatchQueue.push({
                    event: event,
                    listeners: listeners
                });
                event.target = activeElement$1;
            }
        }
    }
    /**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */ function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        switch(domEventName){
            // Track the input node that has focus.
            case 'focusin':
                if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
                    activeElement$1 = targetNode;
                    activeElementInst$1 = targetInst;
                    lastSelection = null;
                }
                break;
            case 'focusout':
                activeElement$1 = null;
                activeElementInst$1 = null;
                lastSelection = null;
                break;
            // Don't fire the event while the user is dragging. This matches the
            // semantics of the native select event.
            case 'mousedown':
                mouseDown = true;
                break;
            case 'contextmenu':
            case 'mouseup':
            case 'dragend':
                mouseDown = false;
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                break;
            // Chrome and IE fire non-standard event when selection is changed (and
            // sometimes when it hasn't). IE's event fires out of order with respect
            // to key and input events on deletion, so we discard it.
            //
            // Firefox doesn't support selectionchange, so check selection status
            // after each key entry. The selection changes after keydown and before
            // keyup, but we check on keydown as well in the case of holding down a
            // key, when multiple keydown events are fired but only one keyup is.
            // This is also our approach for IE handling, for the reason above.
            case 'selectionchange':
                if (skipSelectionChangeEvent) break;
            // falls through
            case 'keydown':
            case 'keyup':
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
        }
    }
    function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var reactName = topLevelEventsToReactNames.get(domEventName);
        if (reactName === undefined) return;
        var SyntheticEventCtor = SyntheticEvent;
        var reactEventType = domEventName;
        switch(domEventName){
            case 'keypress':
                // Firefox creates a keypress event for function keys too. This removes
                // the unwanted keypress events. Enter is however both printable and
                // non-printable. One would expect Tab to be as well (but it isn't).
                if (getEventCharCode(nativeEvent) === 0) return;
            /* falls through */ case 'keydown':
            case 'keyup':
                SyntheticEventCtor = SyntheticKeyboardEvent;
                break;
            case 'focusin':
                reactEventType = 'focus';
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'focusout':
                reactEventType = 'blur';
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'beforeblur':
            case 'afterblur':
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'click':
                // Firefox creates a click event on right mouse clicks. This removes the
                // unwanted click events.
                if (nativeEvent.button === 2) return;
            /* falls through */ case 'auxclick':
            case 'dblclick':
            case 'mousedown':
            case 'mousemove':
            case 'mouseup':
            /* falls through */ case 'mouseout':
            case 'mouseover':
            case 'contextmenu':
                SyntheticEventCtor = SyntheticMouseEvent;
                break;
            case 'drag':
            case 'dragend':
            case 'dragenter':
            case 'dragexit':
            case 'dragleave':
            case 'dragover':
            case 'dragstart':
            case 'drop':
                SyntheticEventCtor = SyntheticDragEvent;
                break;
            case 'touchcancel':
            case 'touchend':
            case 'touchmove':
            case 'touchstart':
                SyntheticEventCtor = SyntheticTouchEvent;
                break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
                SyntheticEventCtor = SyntheticAnimationEvent;
                break;
            case TRANSITION_END:
                SyntheticEventCtor = SyntheticTransitionEvent;
                break;
            case 'scroll':
                SyntheticEventCtor = SyntheticUIEvent;
                break;
            case 'wheel':
                SyntheticEventCtor = SyntheticWheelEvent;
                break;
            case 'copy':
            case 'cut':
            case 'paste':
                SyntheticEventCtor = SyntheticClipboardEvent;
                break;
            case 'gotpointercapture':
            case 'lostpointercapture':
            case 'pointercancel':
            case 'pointerdown':
            case 'pointermove':
            case 'pointerout':
            case 'pointerover':
            case 'pointerup':
                SyntheticEventCtor = SyntheticPointerEvent;
                break;
        }
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        // Some events don't bubble in the browser.
        // In the past, React has always bubbled them, but this can be surprising.
        // We're going to try aligning closer to the browser behavior by not bubbling
        // them in React either. We'll start by not bubbling onScroll, and then expand.
        var accumulateTargetOnly = !inCapturePhase && // nonDelegatedEvents list in DOMPluginEventSystem.
        // Then we can remove this special list.
        // This is a breaking change that can wait until React 18.
        domEventName === 'scroll';
        var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
        if (_listeners.length > 0) {
            // Intentionally create event lazily.
            var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: _event,
                listeners: _listeners
            });
        }
    }
    // TODO: remove top-level side effect.
    registerSimpleEvents();
    registerEvents$2();
    registerEvents$1();
    registerEvents$3();
    registerEvents();
    function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        // TODO: we should remove the concept of a "SimpleEventPlugin".
        // This is the basic functionality of the event system. All
        // the other plugins are essentially polyfills. So the plugin
        // should probably be inlined somewhere and have its logic
        // be core the to event system. This would potentially allow
        // us to ship builds of React without the polyfilled plugins below.
        extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
        // event's native "bubble" phase, which means that we're
        // not in the capture phase. That's because we emulate
        // the capture phase here still. This is a trade-off,
        // because in an ideal world we would not emulate and use
        // the phases properly, like we do with the SimpleEvent
        // plugin. However, the plugins below either expect
        // emulation (EnterLeave) or use state localized to that
        // plugin (BeforeInput, Change, Select). The state in
        // these modules complicates things, as you'll essentially
        // get the case where the capture phase event might change
        // state, only for the following bubble event to come in
        // later and not trigger anything as the state now
        // invalidates the heuristics of the event plugin. We
        // could alter all these plugins to work in such ways, but
        // that might cause other unknown side-effects that we
        // can't forsee right now.
        if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
    } // List of events that need to be individually attached to media elements.
    var mediaEventTypes = [
        'abort',
        'canplay',
        'canplaythrough',
        'durationchange',
        'emptied',
        'encrypted',
        'ended',
        'error',
        'loadeddata',
        'loadedmetadata',
        'loadstart',
        'pause',
        'play',
        'playing',
        'progress',
        'ratechange',
        'seeked',
        'seeking',
        'stalled',
        'suspend',
        'timeupdate',
        'volumechange',
        'waiting'
    ]; // We should not delegate these events to the container, but rather
    // set them on the actual target element itself. This is primarily
    // because these events do not consistently bubble in the DOM.
    var nonDelegatedEvents = new Set([
        'cancel',
        'close',
        'invalid',
        'load',
        'scroll',
        'toggle'
    ].concat(mediaEventTypes));
    function executeDispatch(event, listener, currentTarget) {
        var type = event.type || 'unknown-event';
        event.currentTarget = currentTarget;
        invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
        event.currentTarget = null;
    }
    function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
        var previousInstance;
        if (inCapturePhase) for(var i = dispatchListeners.length - 1; i >= 0; i--){
            var _dispatchListeners$i = dispatchListeners[i], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
            if (instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, listener, currentTarget);
            previousInstance = instance;
        }
        else for(var _i = 0; _i < dispatchListeners.length; _i++){
            var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
            if (_instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, _listener, _currentTarget);
            previousInstance = _instance;
        }
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        for(var i = 0; i < dispatchQueue.length; i++){
            var _dispatchQueue$i = dispatchQueue[i], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
        } // This would be a good time to rethrow if any of the event handlers threw.
        rethrowCaughtError();
    }
    function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var nativeEventTarget = getEventTarget(nativeEvent);
        var dispatchQueue = [];
        extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        processDispatchQueue(dispatchQueue, eventSystemFlags);
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
        var isCapturePhaseListener = false;
        var listenerSet = getEventListenerSet(targetElement);
        var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
        if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
        }
    }
    var listeningMarker = '_reactListening' + Math.random().toString(36).slice(2);
    function listenToAllSupportedEvents(rootContainerElement) {
        if (rootContainerElement[listeningMarker]) // Performance optimization: don't iterate through events
        // for the same portal container or root node more than once.
        // TODO: once we remove the flag, we may be able to also
        // remove some of the bookkeeping maps used for laziness.
        return;
        rootContainerElement[listeningMarker] = true;
        allNativeEvents.forEach(function(domEventName) {
            if (!nonDelegatedEvents.has(domEventName)) listenToNativeEvent(domEventName, false, rootContainerElement, null);
            listenToNativeEvent(domEventName, true, rootContainerElement, null);
        });
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, rootContainerElement, targetElement) {
        var eventSystemFlags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
        var target = rootContainerElement; // selectionchange needs to be attached to the document
        // otherwise it won't capture incoming events that are only
        // triggered on the document directly.
        if (domEventName === 'selectionchange' && rootContainerElement.nodeType !== DOCUMENT_NODE) target = rootContainerElement.ownerDocument;
         // If the event can be delegated (or is capture phase), we can
        // register it to the root container. Otherwise, we should
        // register the event to the target element and mark it as
        // a non-delegated event.
        if (targetElement !== null && !isCapturePhaseListener && nonDelegatedEvents.has(domEventName)) {
            // For all non-delegated events, apart from scroll, we attach
            // their event listeners to the respective elements that their
            // events fire on. That means we can skip this step, as event
            // listener has already been added previously. However, we
            // special case the scroll event because the reality is that any
            // element can scroll.
            // TODO: ideally, we'd eventually apply the same logic to all
            // events from the nonDelegatedEvents list. Then we can remove
            // this special case and use the same logic for all events.
            if (domEventName !== 'scroll') return;
            eventSystemFlags |= IS_NON_DELEGATED;
            target = targetElement;
        }
        var listenerSet = getEventListenerSet(target);
        var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener); // If the listener entry is empty or we should upgrade, then
        // we need to trap an event listener onto the target.
        if (!listenerSet.has(listenerSetKey)) {
            if (isCapturePhaseListener) eventSystemFlags |= IS_CAPTURE_PHASE;
            addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
        }
    }
    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
        var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
        // active and not passive.
        var isPassiveListener = undefined;
        if (passiveBrowserEventsSupported) // Browsers introduced an intervention, making these events
        // passive by default on document. React doesn't bind them
        // to document anymore, but changing this now would undo
        // the performance wins from the change. So we emulate
        // the existing behavior manually on the roots now.
        // https://github.com/facebook/react/issues/19651
        {
            if (domEventName === 'touchstart' || domEventName === 'touchmove' || domEventName === 'wheel') isPassiveListener = true;
        }
        var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we
        if (isCapturePhaseListener) {
            if (isPassiveListener !== undefined) unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            else unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
        } else if (isPassiveListener !== undefined) unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
        else unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
    }
    function isMatchingRootContainer(grandContainer, targetContainer) {
        return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
    }
    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var ancestorInst = targetInst;
        if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we
            if (targetInst !== null) {
                // The below logic attempts to work out if we need to change
                // the target fiber to a different ancestor. We had similar logic
                // in the legacy event system, except the big difference between
                // systems is that the modern event system now has an event listener
                // attached to each React Root and React Portal Root. Together,
                // the DOM nodes representing these roots are the "rootContainer".
                // To figure out which ancestor instance we should use, we traverse
                // up the fiber tree from the target instance and attempt to find
                // root boundaries that match that of our current "rootContainer".
                // If we find that "rootContainer", we find the parent fiber
                // sub-tree for that root and make that our ancestor instance.
                var node = targetInst;
                mainLoop: while(true){
                    if (node === null) return;
                    var nodeTag = node.tag;
                    if (nodeTag === HostRoot || nodeTag === HostPortal) {
                        var container = node.stateNode.containerInfo;
                        if (isMatchingRootContainer(container, targetContainerNode)) break;
                        if (nodeTag === HostPortal) {
                            // The target is a portal, but it's not the rootContainer we're looking for.
                            // Normally portals handle their own events all the way down to the root.
                            // So we should be able to stop now. However, we don't know if this portal
                            // was part of *our* root.
                            var grandNode = node.return;
                            while(grandNode !== null){
                                var grandTag = grandNode.tag;
                                if (grandTag === HostRoot || grandTag === HostPortal) {
                                    var grandContainer = grandNode.stateNode.containerInfo;
                                    if (isMatchingRootContainer(grandContainer, targetContainerNode)) // This is the rootContainer we're looking for and we found it as
                                    // a parent of the Portal. That means we can ignore it because the
                                    // Portal will bubble through to us.
                                    return;
                                }
                                grandNode = grandNode.return;
                            }
                        } // Now we need to find it's corresponding host fiber in the other
                        // tree. To do this we can use getClosestInstanceFromNode, but we
                        // need to validate that the fiber is a host instance, otherwise
                        // we need to traverse up through the DOM till we find the correct
                        // node that is from the other tree.
                        while(container !== null){
                            var parentNode = getClosestInstanceFromNode(container);
                            if (parentNode === null) return;
                            var parentTag = parentNode.tag;
                            if (parentTag === HostComponent || parentTag === HostText) {
                                node = ancestorInst = parentNode;
                                continue mainLoop;
                            }
                            container = container.parentNode;
                        }
                    }
                    node = node.return;
                }
            }
        }
        batchedEventUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
        });
    }
    function createDispatchListener(instance, listener, currentTarget) {
        return {
            instance: instance,
            listener: listener,
            currentTarget: currentTarget
        };
    }
    function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly) {
        var captureName = reactName !== null ? reactName + 'Capture' : null;
        var reactEventName = inCapturePhase ? captureName : reactName;
        var listeners = [];
        var instance = targetFiber;
        var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                lastHostComponent = stateNode; // createEventHandle listeners
                if (reactEventName !== null) {
                    var listener = getListener(instance, reactEventName);
                    if (listener != null) listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                }
            } // If we are only accumulating events for the target, then we don't
            // continue to propagate through the React fiber tree to find other
            // listeners.
            if (accumulateTargetOnly) break;
            instance = instance.return;
        }
        return listeners;
    } // We should only use this function for:
    // - BeforeInputEventPlugin
    // - ChangeEventPlugin
    // - SelectEventPlugin
    // This is because we only process these plugins
    // in the bubble phase, so we need to accumulate two
    // phase event listeners (via emulation).
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
        var captureName = reactName + 'Capture';
        var listeners = [];
        var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                var captureListener = getListener(instance, captureName);
                if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                var bubbleListener = getListener(instance, reactName);
                if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
            }
            instance = instance.return;
        }
        return listeners;
    }
    function getParent(inst) {
        if (inst === null) return null;
        do inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
        while (inst && inst.tag !== HostComponent)
        if (inst) return inst;
        return null;
    }
    /**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */ function getLowestCommonAncestor(instA, instB) {
        var nodeA = instA;
        var nodeB = instB;
        var depthA = 0;
        for(var tempA = nodeA; tempA; tempA = getParent(tempA))depthA++;
        var depthB = 0;
        for(var tempB = nodeB; tempB; tempB = getParent(tempB))depthB++;
         // If A is deeper, crawl up.
        while(depthA - depthB > 0){
            nodeA = getParent(nodeA);
            depthA--;
        } // If B is deeper, crawl up.
        while(depthB - depthA > 0){
            nodeB = getParent(nodeB);
            depthB--;
        } // Walk in lockstep until we find a match.
        var depth = depthA;
        while(depth--){
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) return nodeA;
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
        }
        return null;
    }
    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        var registrationName = event._reactName;
        var listeners = [];
        var instance = target;
        while(instance !== null){
            if (instance === common) break;
            var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) break;
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                if (inCapturePhase) {
                    var captureListener = getListener(instance, registrationName);
                    if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                } else if (!inCapturePhase) {
                    var bubbleListener = getListener(instance, registrationName);
                    if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
            }
            instance = instance.return;
        }
        if (listeners.length !== 0) dispatchQueue.push({
            event: event,
            listeners: listeners
        });
    } // We should only use this function for:
    // - EnterLeaveEventPlugin
    // This is because we only process this plugin
    // in the bubble phase, so we need to accumulate two
    // phase event listeners.
    function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
        var common = from && to ? getLowestCommonAncestor(from, to) : null;
        if (from !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
        if (to !== null && enterEvent !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
    }
    function getListenerSetKey(domEventName, capture) {
        return domEventName + "__" + (capture ? 'capture' : 'bubble');
    }
    var didWarnInvalidHydration = false;
    var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
    var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
    var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
    var AUTOFOCUS = 'autoFocus';
    var CHILDREN = 'children';
    var STYLE = 'style';
    var HTML$1 = '__html';
    var HTML_NAMESPACE$1 = Namespaces.html;
    var warnedUnknownTags;
    var suppressHydrationWarning;
    var validatePropertiesInDevelopment;
    var warnForTextDifference;
    var warnForPropDifference;
    var warnForExtraAttributes;
    var warnForInvalidEventListener;
    var canDiffStyleForHydrationWarning;
    var normalizeMarkupForTextOrAttribute;
    var normalizeHTML;
    warnedUnknownTags = {
        // There are working polyfills for <dialog>. Let people use it.
        dialog: true,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: true
    };
    validatePropertiesInDevelopment = function(type, props) {
        validateProperties(type, props);
        validateProperties$1(type, props);
        validateProperties$2(type, props, {
            registrationNameDependencies: registrationNameDependencies1,
            possibleRegistrationNames: possibleRegistrationNames1
        });
    }; // IE 11 parses & normalizes the style attribute as opposed to other
    // browsers. It adds spaces and sorts the properties in some
    // non-alphabetical order. Handling that would require sorting CSS
    // properties in the client & server versions or applying
    // `expectedStyle` to a temporary DOM node to read its `style` attribute
    // normalized. Since it only affects IE, we're skipping style warnings
    // in that browser completely in favor of doing all that work.
    // See https://github.com/facebook/react/issues/11807
    canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode; // HTML parsing normalizes CR and CRLF to LF.
    // It also can turn \u0000 into \uFFFD inside attributes.
    // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
    // If we have a mismatch, it might be caused by that.
    // We will still patch up in this case but not fire the warning.
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
    var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
    normalizeMarkupForTextOrAttribute = function(markup) {
        var markupString = typeof markup === 'string' ? markup : '' + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
    };
    warnForTextDifference = function(serverText, clientText) {
        if (didWarnInvalidHydration) return;
        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
        var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
        if (normalizedServerText === normalizedClientText) return;
        didWarnInvalidHydration = true;
        error1('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
    };
    warnForPropDifference = function(propName, serverValue, clientValue) {
        if (didWarnInvalidHydration) return;
        var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
        var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
        if (normalizedServerValue === normalizedClientValue) return;
        didWarnInvalidHydration = true;
        error1('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
    };
    warnForExtraAttributes = function(attributeNames) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        var names = [];
        attributeNames.forEach(function(name) {
            names.push(name);
        });
        error1('Extra attributes from the server: %s', names);
    };
    warnForInvalidEventListener = function(registrationName, listener) {
        if (listener === false) error1("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
        else error1('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }; // Parse the HTML and read it back to normalize the HTML string so that it
    // can be used for comparison.
    normalizeHTML = function(parent, html) {
        // We could have created a separate document here to avoid
        // re-initializing custom elements if they exist. But this breaks
        // how <noscript> is being handled. So we use the same document.
        // See the discussion in https://github.com/facebook/react/pull/11157.
        var testElement = parent.namespaceURI === HTML_NAMESPACE$1 ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        testElement.innerHTML = html;
        return testElement.innerHTML;
    };
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
    }
    function noop() {
    }
    function trapClickOnNonInteractiveElement(node) {
        // Mobile Safari does not fire properly bubble click events on
        // non-interactive elements, which means delegated click listeners do not
        // fire. The workaround for this bug involves attaching an empty click
        // listener on the target node.
        // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
        // Just set it using the onclick property so that we don't have to manage any
        // bookkeeping for it. Not sure if we need to clear it when the listener is
        // removed.
        // TODO: Only do this for the relevant Safaris maybe?
        node.onclick = noop;
    }
    function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
        for(var propKey in nextProps){
            if (!nextProps.hasOwnProperty(propKey)) continue;
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                if (nextHtml != null) setInnerHTML(domElement, nextHtml);
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === 'string') {
                    // Avoid setting initial textContent when the text is empty. In IE11 setting
                    // textContent on a <textarea> will cause the placeholder to not
                    // show within the <textarea> until it has been focused and blurred again.
                    // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                    var canSetTextContent = tag !== 'textarea' || nextProp !== '';
                    if (canSetTextContent) setTextContent(domElement, nextProp);
                } else if (typeof nextProp === 'number') setTextContent(domElement, '' + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies1.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
            } else if (nextProp != null) setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
        }
    }
    function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
        // TODO: Handle wasCustomComponentTag
        for(var i = 0; i < updatePayload.length; i += 2){
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) setValueForStyles(domElement, propValue);
            else if (propKey === DANGEROUSLY_SET_INNER_HTML) setInnerHTML(domElement, propValue);
            else if (propKey === CHILDREN) setTextContent(domElement, propValue);
            else setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
    }
    function createElement(type, props, rootContainerElement, parentNamespace) {
        var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
        // tags get no namespace.
        var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
        var domElement;
        var namespaceURI = parentNamespace;
        if (namespaceURI === HTML_NAMESPACE$1) namespaceURI = getIntrinsicNamespace(type);
        if (namespaceURI === HTML_NAMESPACE$1) {
            isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
            // allow <SVG> or <mATH>.
            if (!isCustomComponentTag && type !== type.toLowerCase()) error1("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
            if (type === 'script') {
                // Create the script via .innerHTML so its "parser-inserted" flag is
                // set to true and it does not execute
                var div = ownerDocument.createElement('div');
                div.innerHTML = "<script></script>"; // eslint-disable-line
                // This is guaranteed to yield a script element.
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
            } else if (typeof props.is === 'string') // $FlowIssue `createElement` should be updated for Web Components
            domElement = ownerDocument.createElement(type, {
                is: props.is
            });
            else {
                // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
                // See discussion in https://github.com/facebook/react/pull/6896
                // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
                // attributes on `select`s needs to be added before `option`s are inserted.
                // This prevents:
                // - a bug where the `select` does not scroll to the correct option because singular
                //  `select` elements automatically pick the first item #13222
                // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
                // See https://github.com/facebook/react/issues/13222
                // and https://github.com/facebook/react/issues/14239
                if (type === 'select') {
                    var node = domElement;
                    if (props.multiple) node.multiple = true;
                    else if (props.size) // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
                    // it is possible that no option is selected.
                    //
                    // This is only necessary when a select in "single selection mode".
                    node.size = props.size;
                }
            }
        } else domElement = ownerDocument.createElementNS(namespaceURI, type);
        if (namespaceURI === HTML_NAMESPACE$1) {
            if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                error1("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
            }
        }
        return domElement;
    }
    function createTextNode(text, rootContainerElement) {
        return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
    }
    function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
        var isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        var props;
        switch(tag){
            case 'dialog':
                listenToNonDelegatedEvent('cancel', domElement);
                listenToNonDelegatedEvent('close', domElement);
                props = rawProps;
                break;
            case 'iframe':
            case 'object':
            case 'embed':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent('load', domElement);
                props = rawProps;
                break;
            case 'video':
            case 'audio':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                props = rawProps;
                break;
            case 'source':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent('error', domElement);
                props = rawProps;
                break;
            case 'img':
            case 'image':
            case 'link':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent('error', domElement);
                listenToNonDelegatedEvent('load', domElement);
                props = rawProps;
                break;
            case 'details':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent('toggle', domElement);
                props = rawProps;
                break;
            case 'input':
                initWrapperState(domElement, rawProps);
                props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'option':
                validateProps(domElement, rawProps);
                props = getHostProps$1(domElement, rawProps);
                break;
            case 'select':
                initWrapperState$1(domElement, rawProps);
                props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'textarea':
                initWrapperState$2(domElement, rawProps);
                props = getHostProps$3(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            default:
                props = rawProps;
        }
        assertValidProps(tag, props);
        setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
        switch(tag){
            case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, false);
                break;
            case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case 'option':
                postMountWrapper$1(domElement, rawProps);
                break;
            case 'select':
                postMountWrapper$2(domElement, rawProps);
                break;
            default:
                if (typeof props.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
    } // Calculate the diff between the two objects.
    function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
        validatePropertiesInDevelopment(tag, nextRawProps);
        var updatePayload = null;
        var lastProps;
        var nextProps;
        switch(tag){
            case 'input':
                lastProps = getHostProps(domElement, lastRawProps);
                nextProps = getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
            case 'option':
                lastProps = getHostProps$1(domElement, lastRawProps);
                nextProps = getHostProps$1(domElement, nextRawProps);
                updatePayload = [];
                break;
            case 'select':
                lastProps = getHostProps$2(domElement, lastRawProps);
                nextProps = getHostProps$2(domElement, nextRawProps);
                updatePayload = [];
                break;
            case 'textarea':
                lastProps = getHostProps$3(domElement, lastRawProps);
                nextProps = getHostProps$3(domElement, nextRawProps);
                updatePayload = [];
                break;
            default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        assertValidProps(tag, nextProps);
        var propKey;
        var styleName;
        var styleUpdates = null;
        for(propKey in lastProps){
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) continue;
            if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for(styleName in lastStyle)if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) styleUpdates = {
                    };
                    styleUpdates[styleName] = '';
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies1.hasOwnProperty(propKey)) // This is a special case. If any listener updates we need to ensure
            // that the "current" fiber pointer gets updated so we need a commit
            // to update this element.
            {
                if (!updatePayload) updatePayload = [];
            } else // For all other deleted properties we add it to the queue. We use
            // the allowed property list in the commit phase instead.
            (updatePayload = updatePayload || []).push(propKey, null);
        }
        for(propKey in nextProps){
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : undefined;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) continue;
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                if (lastProp) {
                    // Unset styles on `lastProp` but not on `nextProp`.
                    for(styleName in lastProp)if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                        if (!styleUpdates) styleUpdates = {
                        };
                        styleUpdates[styleName] = '';
                    }
                     // Update styles that changed since `lastProp`.
                    for(styleName in nextProp)if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                        if (!styleUpdates) styleUpdates = {
                        };
                        styleUpdates[styleName] = nextProp[styleName];
                    }
                } else {
                    // Relies on `updateStylesByID` not mutating `styleUpdates`.
                    if (!styleUpdates) {
                        if (!updatePayload) updatePayload = [];
                        updatePayload.push(propKey, styleUpdates);
                    }
                    styleUpdates = nextProp;
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                var lastHtml = lastProp ? lastProp[HTML$1] : undefined;
                if (nextHtml != null) {
                    if (lastHtml !== nextHtml) (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === 'string' || typeof nextProp === 'number') (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (registrationNameDependencies1.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    // We eagerly listen to this even though we haven't committed yet.
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
                if (!updatePayload && lastProp !== nextProp) // This is a special case. If any listener updates we need to ensure
                // that the "current" props pointer gets updated so we need a commit
                // to update this element.
                updatePayload = [];
            } else if (typeof nextProp === 'object' && nextProp !== null && nextProp.$$typeof === REACT_OPAQUE_ID_TYPE) // If we encounter useOpaqueReference's opaque object, this means we are hydrating.
            // In this case, call the opaque object's toString function which generates a new client
            // ID so client and server IDs match and throws to rerender.
            nextProp.toString();
            else // For any other property we always add it to the queue and then we
            // filter it out using the allowed property list during the commit.
            (updatePayload = updatePayload || []).push(propKey, nextProp);
        }
        if (styleUpdates) {
            validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
        }
        return updatePayload;
    } // Apply the diff.
    function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
        // Update checked *before* name.
        // In the middle of an update, it is possible to have multiple checked.
        // When a checked radio tries to change name, browser makes another radio's checked false.
        if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) updateChecked(domElement, nextRawProps);
        var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
        var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.
        updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
        // changed.
        switch(tag){
            case 'input':
                // Update the wrapper around inputs *after* updating props. This has to
                // happen after `updateDOMProperties`. Otherwise HTML5 input validations
                // raise warnings and prevent the new value from being assigned.
                updateWrapper(domElement, nextRawProps);
                break;
            case 'textarea':
                updateWrapper$1(domElement, nextRawProps);
                break;
            case 'select':
                // <select> value update needs to occur after <option> children
                // reconciliation
                postUpdateWrapper(domElement, nextRawProps);
                break;
        }
    }
    function getPossibleStandardName(propName) {
        var lowerCasedName = propName.toLowerCase();
        if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) return null;
        return possibleStandardNames[lowerCasedName] || null;
    }
    function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
        var isCustomComponentTag;
        var extraAttributeNames;
        suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING] === true;
        isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        switch(tag){
            case 'dialog':
                listenToNonDelegatedEvent('cancel', domElement);
                listenToNonDelegatedEvent('close', domElement);
                break;
            case 'iframe':
            case 'object':
            case 'embed':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent('load', domElement);
                break;
            case 'video':
            case 'audio':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                break;
            case 'source':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent('error', domElement);
                break;
            case 'img':
            case 'image':
            case 'link':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent('error', domElement);
                listenToNonDelegatedEvent('load', domElement);
                break;
            case 'details':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent('toggle', domElement);
                break;
            case 'input':
                initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'option':
                validateProps(domElement, rawProps);
                break;
            case 'select':
                initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'textarea':
                initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
        }
        assertValidProps(tag, rawProps);
        extraAttributeNames = new Set();
        var attributes = domElement.attributes;
        for(var _i = 0; _i < attributes.length; _i++){
            var name = attributes[_i].name.toLowerCase();
            switch(name){
                // Built-in SSR attribute is allowed
                case 'data-reactroot':
                    break;
                // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                case 'value':
                    break;
                case 'checked':
                    break;
                case 'selected':
                    break;
                default:
                    // Intentionally use the original name.
                    // See discussion in https://github.com/facebook/react/pull/10676.
                    extraAttributeNames.add(attributes[_i].name);
            }
        }
        var updatePayload = null;
        for(var propKey in rawProps){
            if (!rawProps.hasOwnProperty(propKey)) continue;
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
                // For text content children we compare against textContent. This
                // might match additional HTML that is hidden when we read it using
                // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
                // satisfies our requirement. Our requirement is not to produce perfect
                // HTML and attributes. Ideally we should preserve structure but it's
                // ok not to if the visible content is still enough to indicate what
                // even listeners these nodes might be wired up to.
                // TODO: Warn if there is more than a single textNode as a child.
                // TODO: Should we use domElement.firstChild.nodeValue to compare?
                if (typeof nextProp === 'string') {
                    if (domElement.textContent !== nextProp) {
                        if (!suppressHydrationWarning) warnForTextDifference(domElement.textContent, nextProp);
                        updatePayload = [
                            CHILDREN,
                            nextProp
                        ];
                    }
                } else if (typeof nextProp === 'number') {
                    if (domElement.textContent !== '' + nextProp) {
                        if (!suppressHydrationWarning) warnForTextDifference(domElement.textContent, nextProp);
                        updatePayload = [
                            CHILDREN,
                            '' + nextProp
                        ];
                    }
                }
            } else if (registrationNameDependencies1.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
            } else if (typeof isCustomComponentTag === 'boolean') {
                // Validate that the properties correspond to their expected values.
                var serverValue = void 0;
                var propertyInfo = getPropertyInfo(propKey);
                if (suppressHydrationWarning) ;
                else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // TODO: Only ignore them on controlled tags.
                propKey === 'value' || propKey === 'checked' || propKey === 'selected') ;
                else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                    var serverHTML = domElement.innerHTML;
                    var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                    if (nextHtml != null) {
                        var expectedHTML = normalizeHTML(domElement, nextHtml);
                        if (expectedHTML !== serverHTML) warnForPropDifference(propKey, serverHTML, expectedHTML);
                    }
                } else if (propKey === STYLE) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey);
                    if (canDiffStyleForHydrationWarning) {
                        var expectedStyle = createDangerousStringForStyles(nextProp);
                        serverValue = domElement.getAttribute('style');
                        if (expectedStyle !== serverValue) warnForPropDifference(propKey, serverValue, expectedStyle);
                    }
                } else if (isCustomComponentTag) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey.toLowerCase());
                    serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    if (nextProp !== serverValue) warnForPropDifference(propKey, serverValue, nextProp);
                } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                    var isMismatchDueToBadCasing = false;
                    if (propertyInfo !== null) {
                        // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propertyInfo.attributeName);
                        serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                    } else {
                        var ownNamespace = parentNamespace;
                        if (ownNamespace === HTML_NAMESPACE$1) ownNamespace = getIntrinsicNamespace(tag);
                        if (ownNamespace === HTML_NAMESPACE$1) // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propKey.toLowerCase());
                        else {
                            var standardName = getPossibleStandardName(propKey);
                            if (standardName !== null && standardName !== propKey) {
                                // If an SVG prop is supplied with bad casing, it will
                                // be successfully parsed from HTML, but will produce a mismatch
                                // (and would be incorrectly rendered on the client).
                                // However, we already warn about bad casing elsewhere.
                                // So we'll skip the misleading extra mismatch warning in this case.
                                isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.
                                extraAttributeNames.delete(standardName);
                            } // $FlowFixMe - Should be inferred as not undefined.
                            extraAttributeNames.delete(propKey);
                        }
                        serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    }
                    if (nextProp !== serverValue && !isMismatchDueToBadCasing) warnForPropDifference(propKey, serverValue, nextProp);
                }
            }
        }
        // $FlowFixMe - Should be inferred as not undefined.
        if (extraAttributeNames.size > 0 && !suppressHydrationWarning) // $FlowFixMe - Should be inferred as not undefined.
        warnForExtraAttributes(extraAttributeNames);
        switch(tag){
            case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, true);
                break;
            case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case 'select':
            case 'option':
                break;
            default:
                if (typeof rawProps.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        return updatePayload;
    }
    function diffHydratedText(textNode, text) {
        var isDifferent = textNode.nodeValue !== text;
        return isDifferent;
    }
    function warnForUnmatchedText(textNode, text) {
        warnForTextDifference(textNode.nodeValue, text);
    }
    function warnForDeletedHydratableElement(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error1('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
    }
    function warnForDeletedHydratableText(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error1('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedElement(parentNode, tag, props) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error1('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedText(parentNode, text) {
        if (text === '') // We expect to insert empty text nodes since they're not represented in
        // the HTML.
        // TODO: Remove this special case if we can just avoid inserting empty
        // text nodes.
        return;
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error1('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
    }
    function restoreControlledState$3(domElement, tag, props) {
        switch(tag){
            case 'input':
                restoreControlledState(domElement, props);
                return;
            case 'textarea':
                restoreControlledState$2(domElement, props);
                return;
            case 'select':
                restoreControlledState$1(domElement, props);
                return;
        }
    }
    var validateDOMNesting = function() {
    };
    var updatedAncestorInfo = function() {
    };
    // This validation code was written based on the HTML5 parsing spec:
    // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    //
    // Note: this does not catch all invalid nesting, nor does it try to (as it's
    // not clear what practical benefit doing so provides); instead, we warn only
    // for cases where the parser will give a parse tree differing from what React
    // intended. For example, <b><div></div></b> is invalid but we don't warn
    // because it still parses correctly; we do warn for other cases like nested
    // <p> tags where the beginning of the second element implicitly closes the
    // first, causing a confusing mess.
    // https://html.spec.whatwg.org/multipage/syntax.html#special
    var specialTags = [
        'address',
        'applet',
        'area',
        'article',
        'aside',
        'base',
        'basefont',
        'bgsound',
        'blockquote',
        'body',
        'br',
        'button',
        'caption',
        'center',
        'col',
        'colgroup',
        'dd',
        'details',
        'dir',
        'div',
        'dl',
        'dt',
        'embed',
        'fieldset',
        'figcaption',
        'figure',
        'footer',
        'form',
        'frame',
        'frameset',
        'h1',
        'h2',
        'h3',
        'h4',
        'h5',
        'h6',
        'head',
        'header',
        'hgroup',
        'hr',
        'html',
        'iframe',
        'img',
        'input',
        'isindex',
        'li',
        'link',
        'listing',
        'main',
        'marquee',
        'menu',
        'menuitem',
        'meta',
        'nav',
        'noembed',
        'noframes',
        'noscript',
        'object',
        'ol',
        'p',
        'param',
        'plaintext',
        'pre',
        'script',
        'section',
        'select',
        'source',
        'style',
        'summary',
        'table',
        'tbody',
        'td',
        'template',
        'textarea',
        'tfoot',
        'th',
        'thead',
        'title',
        'tr',
        'track',
        'ul',
        'wbr',
        'xmp'
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    var inScopeTags = [
        'applet',
        'caption',
        'html',
        'table',
        'td',
        'th',
        'marquee',
        'object',
        'template',
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        'foreignObject',
        'desc',
        'title'
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
    var buttonScopeTags = inScopeTags.concat([
        'button'
    ]); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
    var impliedEndTags = [
        'dd',
        'dt',
        'li',
        'option',
        'optgroup',
        'p',
        'rp',
        'rt'
    ];
    var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
    };
    updatedAncestorInfo = function(oldInfo, tag) {
        var ancestorInfo = _assign({
        }, oldInfo || emptyAncestorInfo);
        var info = {
            tag: tag
        };
        if (inScopeTags.indexOf(tag) !== -1) {
            ancestorInfo.aTagInScope = null;
            ancestorInfo.buttonTagInScope = null;
            ancestorInfo.nobrTagInScope = null;
        }
        if (buttonScopeTags.indexOf(tag) !== -1) ancestorInfo.pTagInButtonScope = null;
         // See rules for 'li', 'dd', 'dt' start tags in
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
            ancestorInfo.listItemTagAutoclosing = null;
            ancestorInfo.dlItemTagAutoclosing = null;
        }
        ancestorInfo.current = info;
        if (tag === 'form') ancestorInfo.formTag = info;
        if (tag === 'a') ancestorInfo.aTagInScope = info;
        if (tag === 'button') ancestorInfo.buttonTagInScope = info;
        if (tag === 'nobr') ancestorInfo.nobrTagInScope = info;
        if (tag === 'p') ancestorInfo.pTagInButtonScope = info;
        if (tag === 'li') ancestorInfo.listItemTagAutoclosing = info;
        if (tag === 'dd' || tag === 'dt') ancestorInfo.dlItemTagAutoclosing = info;
        return ancestorInfo;
    };
    /**
   * Returns whether
   */ var isTagValidWithParent = function(tag, parentTag) {
        // First, let's check if we're in an unusual parsing mode...
        switch(parentTag){
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
            case 'select':
                return tag === 'option' || tag === 'optgroup' || tag === '#text';
            case 'optgroup':
                return tag === 'option' || tag === '#text';
            // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
            // but
            case 'option':
                return tag === '#text';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
            // No special behavior since these rules fall back to "in body" mode for
            // all except special table nodes which cause bad parsing behavior anyway.
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
            case 'tr':
                return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
            case 'tbody':
            case 'thead':
            case 'tfoot':
                return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
            case 'colgroup':
                return tag === 'col' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
            case 'table':
                return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
            case 'head':
                return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
            case 'html':
                return tag === 'head' || tag === 'body' || tag === 'frameset';
            case 'frameset':
                return tag === 'frame';
            case '#document':
                return tag === 'html';
        } // Probably in the "in body" parsing mode, so we outlaw only tag combos
        // where the parsing rules cause implicit opens or closes to be added.
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        switch(tag){
            case 'h1':
            case 'h2':
            case 'h3':
            case 'h4':
            case 'h5':
            case 'h6':
                return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
            case 'rp':
            case 'rt':
                return impliedEndTags.indexOf(parentTag) === -1;
            case 'body':
            case 'caption':
            case 'col':
            case 'colgroup':
            case 'frameset':
            case 'frame':
            case 'head':
            case 'html':
            case 'tbody':
            case 'td':
            case 'tfoot':
            case 'th':
            case 'thead':
            case 'tr':
                // These tags are only valid with a few parents that have special child
                // parsing rules -- if we're down here, then none of those matched and
                // so we allow it only if we don't know what the parent is, as all other
                // cases are invalid.
                return parentTag == null;
        }
        return true;
    };
    /**
   * Returns whether
   */ var findInvalidAncestorForTag = function(tag, ancestorInfo) {
        switch(tag){
            case 'address':
            case 'article':
            case 'aside':
            case 'blockquote':
            case 'center':
            case 'details':
            case 'dialog':
            case 'dir':
            case 'div':
            case 'dl':
            case 'fieldset':
            case 'figcaption':
            case 'figure':
            case 'footer':
            case 'header':
            case 'hgroup':
            case 'main':
            case 'menu':
            case 'nav':
            case 'ol':
            case 'p':
            case 'section':
            case 'summary':
            case 'ul':
            case 'pre':
            case 'listing':
            case 'table':
            case 'hr':
            case 'xmp':
            case 'h1':
            case 'h2':
            case 'h3':
            case 'h4':
            case 'h5':
            case 'h6':
                return ancestorInfo.pTagInButtonScope;
            case 'form':
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case 'li':
                return ancestorInfo.listItemTagAutoclosing;
            case 'dd':
            case 'dt':
                return ancestorInfo.dlItemTagAutoclosing;
            case 'button':
                return ancestorInfo.buttonTagInScope;
            case 'a':
                // Spec says something about storing a list of markers, but it sounds
                // equivalent to this check.
                return ancestorInfo.aTagInScope;
            case 'nobr':
                return ancestorInfo.nobrTagInScope;
        }
        return null;
    };
    var didWarn$1 = {
    };
    validateDOMNesting = function(childTag, childText, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        if (childText != null) {
            if (childTag != null) error1('validateDOMNesting: when childText is passed, childTag should be null');
            childTag = '#text';
        }
        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var invalidParentOrAncestor = invalidParent || invalidAncestor;
        if (!invalidParentOrAncestor) return;
        var ancestorTag = invalidParentOrAncestor.tag;
        var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;
        if (didWarn$1[warnKey]) return;
        didWarn$1[warnKey] = true;
        var tagDisplayName = childTag;
        var whitespaceInfo = '';
        if (childTag === '#text') {
            if (/\S/.test(childText)) tagDisplayName = 'Text nodes';
            else {
                tagDisplayName = 'Whitespace text nodes';
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
            }
        } else tagDisplayName = '<' + childTag + '>';
        if (invalidParent) {
            var info = '';
            if (ancestorTag === 'table' && childTag === 'tr') info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
            error1('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);
        } else error1("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
    };
    var SUPPRESS_HYDRATION_WARNING$1;
    SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
    var SUSPENSE_START_DATA = '$';
    var SUSPENSE_END_DATA = '/$';
    var SUSPENSE_PENDING_START_DATA = '$?';
    var SUSPENSE_FALLBACK_START_DATA = '$!';
    var STYLE$1 = 'style';
    var eventsEnabled = null;
    var selectionInformation = null;
    function shouldAutoFocusHostComponent(type, props) {
        switch(type){
            case 'button':
            case 'input':
            case 'select':
            case 'textarea':
                return !!props.autoFocus;
        }
        return false;
    }
    function getRootHostContext(rootContainerInstance) {
        var type;
        var namespace;
        var nodeType = rootContainerInstance.nodeType;
        switch(nodeType){
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE:
                type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
                var root = rootContainerInstance.documentElement;
                namespace = root ? root.namespaceURI : getChildNamespace(null, '');
                break;
            default:
                var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
                var ownNamespace = container.namespaceURI || null;
                type = container.tagName;
                namespace = getChildNamespace(ownNamespace, type);
                break;
        }
        var validatedTag = type.toLowerCase();
        var ancestorInfo = updatedAncestorInfo(null, validatedTag);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getChildHostContext(parentHostContext, type, rootContainerInstance) {
        var parentHostContextDev = parentHostContext;
        var namespace = getChildNamespace(parentHostContextDev.namespace, type);
        var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getPublicInstance(instance) {
        return instance;
    }
    function prepareForCommit(containerInfo) {
        eventsEnabled = isEnabled();
        selectionInformation = getSelectionInformation();
        var activeInstance = null;
        setEnabled(false);
        return activeInstance;
    }
    function resetAfterCommit(containerInfo) {
        restoreSelection(selectionInformation);
        setEnabled(eventsEnabled);
        eventsEnabled = null;
        selectionInformation = null;
    }
    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var parentNamespace;
        // TODO: take namespace into account when validating.
        var hostContextDev = hostContext;
        validateDOMNesting(type, null, hostContextDev.ancestorInfo);
        if (typeof props.children === 'string' || typeof props.children === 'number') {
            var string = '' + props.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        parentNamespace = hostContextDev.namespace;
        var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
        precacheFiberNode(internalInstanceHandle, domElement);
        updateFiberProps(domElement, props);
        return domElement;
    }
    function appendInitialChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
        setInitialProperties(domElement, type, props, rootContainerInstance);
        return shouldAutoFocusHostComponent(type, props);
    }
    function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
        var hostContextDev = hostContext;
        if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
            var string = '' + newProps.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        return diffProperties(domElement, type, oldProps, newProps);
    }
    function shouldSetTextContent(type, props) {
        return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
    }
    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        var hostContextDev = hostContext;
        validateDOMNesting(null, text, hostContextDev.ancestorInfo);
        var textNode = createTextNode(text, rootContainerInstance);
        precacheFiberNode(internalInstanceHandle, textNode);
        return textNode;
    }
    // if a component just imports ReactDOM (e.g. for findDOMNode).
    // Some environments might not have setTimeout or clearTimeout.
    var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
    var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
    var noTimeout = -1; // -------------------
    function commitMount(domElement, type, newProps, internalInstanceHandle) {
        // Despite the naming that might imply otherwise, this method only
        // fires if there is an `Update` effect scheduled during mounting.
        // This happens if `finalizeInitialChildren` returns `true` (which it
        // does to implement the `autoFocus` attribute on the client). But
        // there are also other cases when this might happen (such as patching
        // up text content during hydration mismatch). So we'll check this again.
        if (shouldAutoFocusHostComponent(type, newProps)) domElement.focus();
    }
    function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
        // Update the props handle so that we know which props are the ones with
        // with current event handlers.
        updateFiberProps(domElement, newProps); // Apply the diff to the DOM node.
        updateProperties(domElement, updatePayload, type, oldProps, newProps);
    }
    function resetTextContent(domElement) {
        setTextContent(domElement, '');
    }
    function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
    }
    function appendChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function appendChildToContainer(container, child) {
        var parentNode;
        if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
        } else {
            parentNode = container;
            parentNode.appendChild(child);
        } // This container might be used for a portal.
        // If something inside a portal is clicked, that click should bubble
        // through the React tree. However, on Mobile Safari the click would
        // never bubble through the *DOM* tree unless an ancestor with onclick
        // event exists. So we wouldn't see it and dispatch it.
        // This is why we ensure that non React root containers have inline onclick
        // defined.
        // https://github.com/facebook/react/issues/11918
        var reactRootContainer = container._reactRootContainer;
        if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(parentNode);
    }
    function insertBefore(parentInstance, child, beforeChild) {
        parentInstance.insertBefore(child, beforeChild);
    }
    function insertInContainerBefore(container, child, beforeChild) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.insertBefore(child, beforeChild);
        else container.insertBefore(child, beforeChild);
    }
    function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.removeChild(child);
        else container.removeChild(child);
    }
    function hideInstance(instance) {
        var style = instance.style;
        if (typeof style.setProperty === 'function') style.setProperty('display', 'none', 'important');
        else style.display = 'none';
    }
    function hideTextInstance(textInstance) {
        textInstance.nodeValue = '';
    }
    function unhideInstance(instance, props) {
        var styleProp = props[STYLE$1];
        var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
        instance.style.display = dangerousStyleValue('display', display);
    }
    function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
    }
    function clearContainer(container) {
        if (container.nodeType === ELEMENT_NODE) container.textContent = '';
        else if (container.nodeType === DOCUMENT_NODE) {
            var body = container.body;
            if (body != null) body.textContent = '';
        }
    } // -------------------
    function canHydrateInstance(instance, type, props) {
        if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) return null;
         // This has now been refined to an element node.
        return instance;
    }
    function canHydrateTextInstance(instance, text) {
        if (text === '' || instance.nodeType !== TEXT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a text node.
        return instance;
    }
    function isSuspenseInstancePending(instance) {
        return instance.data === SUSPENSE_PENDING_START_DATA;
    }
    function isSuspenseInstanceFallback(instance) {
        return instance.data === SUSPENSE_FALLBACK_START_DATA;
    }
    function getNextHydratable(node) {
        // Skip non-hydratable nodes.
        for(; node != null; node = node.nextSibling){
            var nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) break;
        }
        return node;
    }
    function getNextHydratableSibling(instance) {
        return getNextHydratable(instance.nextSibling);
    }
    function getFirstHydratableChild(parentInstance) {
        return getNextHydratable(parentInstance.firstChild);
    }
    function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
        // get attached.
        updateFiberProps(instance, props);
        var parentNamespace;
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
        return diffHydratedProperties(instance, type, props, parentNamespace);
    }
    function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
        precacheFiberNode(internalInstanceHandle, textInstance);
        return diffHydratedText(textInstance, text);
    }
    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) return getNextHydratableSibling(node);
                    else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) depth++;
            }
            node = node.nextSibling;
        } // TODO: Warn, we didn't find the end comment boundary.
        return null;
    } // Returns the SuspenseInstance if this node is a direct child of a
    // SuspenseInstance. I.e. if its previous sibling is a Comment with
    // SUSPENSE_x_START_DATA. Otherwise, null.
    function getParentSuspenseInstance(targetInstance) {
        var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                    if (depth === 0) return node;
                    else depth--;
                } else if (data === SUSPENSE_END_DATA) depth++;
            }
            node = node.previousSibling;
        }
        return null;
    }
    function commitHydratedContainer(container) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
        warnForUnmatchedText(textInstance, text);
    }
    function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForUnmatchedText(textInstance, text);
    }
    function didNotHydrateContainerInstance(parentContainer, instance) {
        if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentContainer, instance);
        else if (instance.nodeType === COMMENT_NODE) ;
        else warnForDeletedHydratableText(parentContainer, instance);
    }
    function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentInstance, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentInstance, instance);
        }
    }
    function didNotFindHydratableContainerInstance(parentContainer, type, props) {
        warnForInsertedHydratedElement(parentContainer, type);
    }
    function didNotFindHydratableContainerTextInstance(parentContainer, text) {
        warnForInsertedHydratedText(parentContainer, text);
    }
    function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedElement(parentInstance, type);
    }
    function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedText(parentInstance, text);
    }
    function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
        parentProps[SUPPRESS_HYDRATION_WARNING$1];
    }
    var clientId = 0;
    function makeClientIdInDEV(warnOnAccessInDEV) {
        var id = 'r:' + (clientId++).toString(36);
        return {
            toString: function() {
                warnOnAccessInDEV();
                return id;
            },
            valueOf: function() {
                warnOnAccessInDEV();
                return id;
            }
        };
    }
    function isOpaqueHydratingObject(value) {
        return value !== null && typeof value === 'object' && value.$$typeof === REACT_OPAQUE_ID_TYPE;
    }
    function makeOpaqueHydratingObject(attemptToReadValue) {
        return {
            $$typeof: REACT_OPAQUE_ID_TYPE,
            toString: attemptToReadValue,
            valueOf: attemptToReadValue
        };
    }
    function preparePortalMount(portalInstance) {
        listenToAllSupportedEvents(portalInstance);
    }
    var randomKey = Math.random().toString(36).slice(2);
    var internalInstanceKey = '__reactFiber$' + randomKey;
    var internalPropsKey = '__reactProps$' + randomKey;
    var internalContainerInstanceKey = '__reactContainer$' + randomKey;
    var internalEventHandlersKey = '__reactEvents$' + randomKey;
    function precacheFiberNode(hostInst, node) {
        node[internalInstanceKey] = hostInst;
    }
    function markContainerAsRoot(hostRoot, node) {
        node[internalContainerInstanceKey] = hostRoot;
    }
    function unmarkContainerAsRoot(node) {
        node[internalContainerInstanceKey] = null;
    }
    function isContainerMarkedAsRoot(node) {
        return !!node[internalContainerInstanceKey];
    } // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
    // If the target node is part of a hydrated or not yet rendered subtree, then
    // this may also return a SuspenseComponent or HostRoot to indicate that.
    // Conceptually the HostRoot fiber is a child of the Container node. So if you
    // pass the Container node as the targetNode, you will not actually get the
    // HostRoot back. To get to the HostRoot, you need to pass a child of it.
    // The same thing applies to Suspense boundaries.
    function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst) // Don't return HostRoot or SuspenseComponent here.
        return targetInst;
         // If the direct event target isn't a React owned DOM node, we need to look
        // to see if one of its parents is a React owned DOM node.
        var parentNode = targetNode.parentNode;
        while(parentNode){
            // We'll check if this is a container root that could include
            // React nodes in the future. We need to check this first because
            // if we're a child of a dehydrated container, we need to first
            // find that inner container before moving on to finding the parent
            // instance. Note that we don't check this field on  the targetNode
            // itself because the fibers are conceptually between the container
            // node and the first child. It isn't surrounding the container node.
            // If it's not a container, we check if it's an instance.
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
                // Since this wasn't the direct target of the event, we might have
                // stepped past dehydrated DOM nodes to get here. However they could
                // also have been non-React nodes. We need to answer which one.
                // If we the instance doesn't have any children, then there can't be
                // a nested suspense boundary within it. So we can use this as a fast
                // bailout. Most of the time, when people add non-React children to
                // the tree, it is using a ref to a child-less DOM node.
                // Normally we'd only need to check one of the fibers because if it
                // has ever gone from having children to deleting them or vice versa
                // it would have deleted the dehydrated boundary nested inside already.
                // However, since the HostRoot starts out with an alternate it might
                // have one on the alternate so we need to check in case this was a
                // root.
                var alternate = targetInst.alternate;
                if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                    // Next we need to figure out if the node that skipped past is
                    // nested within a dehydrated boundary and if so, which one.
                    var suspenseInstance = getParentSuspenseInstance(targetNode);
                    while(suspenseInstance !== null){
                        // We found a suspense instance. That means that we haven't
                        // hydrated it yet. Even though we leave the comments in the
                        // DOM after hydrating, and there are boundaries in the DOM
                        // that could already be hydrated, we wouldn't have found them
                        // through this pass since if the target is hydrated it would
                        // have had an internalInstanceKey on it.
                        // Let's get the fiber associated with the SuspenseComponent
                        // as the deepest instance.
                        var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                        if (targetSuspenseInst) return targetSuspenseInst;
                         // If we don't find a Fiber on the comment, it might be because
                        // we haven't gotten to hydrate it yet. There might still be a
                        // parent boundary that hasn't above this one so we need to find
                        // the outer most that is known.
                        suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
                    // host component also hasn't hydrated yet. We can return it
                    // below since it will bail out on the isMounted check later.
                    }
                }
                return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
        }
        return null;
    }
    /**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */ function getInstanceFromNode(node) {
        var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
        if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) return inst;
            else return null;
        }
        return null;
    }
    /**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */ function getNodeFromInstance(inst) {
        if (inst.tag === HostComponent || inst.tag === HostText) // In Fiber this, is just the state node right now. We assume it will be
        // a host component or host text.
        return inst.stateNode;
         // Without this first invariant, passing a non-DOM-component triggers the next
        throw Error("getNodeFromInstance: Invalid argument.");
    }
    function getFiberCurrentPropsFromNode(node) {
        return node[internalPropsKey] || null;
    }
    function updateFiberProps(node, props) {
        node[internalPropsKey] = props;
    }
    function getEventListenerSet(node) {
        var elementListenerSet = node[internalEventHandlersKey];
        if (elementListenerSet === undefined) elementListenerSet = node[internalEventHandlersKey] = new Set();
        return elementListenerSet;
    }
    var loggedTypeFailures = {
    };
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(Object.prototype.hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error1("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error1('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var valueStack = [];
    var fiberStack;
    fiberStack = [];
    var index1 = -1;
    function createCursor(defaultValue) {
        return {
            current: defaultValue
        };
    }
    function pop(cursor, fiber) {
        if (index1 < 0) {
            error1('Unexpected pop.');
            return;
        }
        if (fiber !== fiberStack[index1]) error1('Unexpected Fiber popped.');
        cursor.current = valueStack[index1];
        valueStack[index1] = null;
        fiberStack[index1] = null;
        index1--;
    }
    function push(cursor, value, fiber) {
        index1++;
        valueStack[index1] = cursor.current;
        fiberStack[index1] = fiber;
        cursor.current = value;
    }
    var warnedAboutMissingGetChildContext;
    warnedAboutMissingGetChildContext = {
    };
    var emptyContextObject = {
    };
    Object.freeze(emptyContextObject);
    var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.
    var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
    // We use this to get access to the parent context after we have already
    // pushed the next context provider, and now need to merge their contexts.
    var previousContext = emptyContextObject;
    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
        if (didPushOwnContextIfProvider && isContextProvider(Component)) // If the fiber is a context provider itself, when we read its context
        // we may have already pushed its own child context on the stack. A context
        // provider should not "see" its own child context. Therefore we read the
        // previous (parent) context instead for a context provider.
        return previousContext;
        return contextStackCursor.current;
    }
    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
    }
    function getMaskedContext(workInProgress, unmaskedContext) {
        var type = workInProgress.type;
        var contextTypes = type.contextTypes;
        if (!contextTypes) return emptyContextObject;
         // Avoid recreating masked context unless unmasked context has changed.
        // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
        // This may trigger infinite loops if componentWillReceiveProps calls setState.
        var instance = workInProgress.stateNode;
        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
        var context = {
        };
        for(var key in contextTypes)context[key] = unmaskedContext[key];
        var name = getComponentName(type) || 'Unknown';
        checkPropTypes(contextTypes, context, 'context', name);
        // Context is created before the class component is instantiated so check for instance.
        if (instance) cacheContext(workInProgress, unmaskedContext, context);
        return context;
    }
    function hasContextChanged() {
        return didPerformWorkStackCursor.current;
    }
    function isContextProvider(type) {
        var childContextTypes = type.childContextTypes;
        return childContextTypes !== null && childContextTypes !== undefined;
    }
    function popContext(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function pushTopLevelContextObject(fiber, context, didChange) {
        if (!(contextStackCursor.current === emptyContextObject)) throw Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
    }
    function processChildContext(fiber, type, parentContext) {
        var instance = fiber.stateNode;
        var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
        // It has only been added in Fiber to match the (unintentional) behavior in Stack.
        if (typeof instance.getChildContext !== 'function') {
            var componentName = getComponentName(type) || 'Unknown';
            if (!warnedAboutMissingGetChildContext[componentName]) {
                warnedAboutMissingGetChildContext[componentName] = true;
                error1("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
            }
            return parentContext;
        }
        var childContext = instance.getChildContext();
        for(var contextKey in childContext){
            if (!(contextKey in childContextTypes)) throw Error((getComponentName(type) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes.");
        }
        var name = getComponentName(type) || 'Unknown';
        checkPropTypes(childContextTypes, childContext, 'child context', name);
        return _assign({
        }, parentContext, childContext);
    }
    function pushContextProvider(workInProgress) {
        var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
        // If the instance does not exist yet, we will push null at first,
        // and replace it on the stack later when invalidating the context.
        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
        // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
        previousContext = contextStackCursor.current;
        push(contextStackCursor, memoizedMergedChildContext, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
    }
    function invalidateContextProvider(workInProgress, type, didChange) {
        var instance = workInProgress.stateNode;
        if (!instance) throw Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (didChange) {
            // Merge parent and own context.
            // Skip this if we're not updating due to sCU.
            // This avoids unnecessarily recomputing memoized values.
            var mergedContext = processChildContext(workInProgress, type, previousContext);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
            // It is important to unwind the context in the reverse order.
            pop(didPerformWorkStackCursor, workInProgress);
            pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.
            push(contextStackCursor, mergedContext, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        } else {
            pop(didPerformWorkStackCursor, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        }
    }
    function findCurrentUnmaskedContext(fiber) {
        // Currently this is only used with renderSubtreeIntoContainer; not sure if it
        // makes sense elsewhere
        if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) throw Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var node = fiber;
        do {
            switch(node.tag){
                case HostRoot:
                    return node.stateNode.context;
                case ClassComponent:
                    var Component = node.type;
                    if (isContextProvider(Component)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
                    break;
            }
            node = node.return;
        }while (node !== null)
        throw Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    var LegacyRoot = 0;
    var BlockingRoot = 1;
    var ConcurrentRoot = 2;
    var rendererID = null;
    var injectedHook = null;
    var hasLoggedError = false;
    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';
    function injectInternals(internals) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') // No DevTools
        return false;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled) // This isn't a real property on the hook, but it can be set to opt out
        // of DevTools integration and associated warnings and logs.
        // https://github.com/facebook/react/issues/3877
        return true;
        if (!hook.supportsFiber) {
            error1("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            return true;
        }
        try {
            rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.
            injectedHook = hook;
        } catch (err) {
            error1('React instrumentation encountered an error: %s.', err);
        } // DevTools exists
        return true;
    }
    function onScheduleRoot(root, children) {
        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') try {
            injectedHook.onScheduleFiberRoot(rendererID, root, children);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error1('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onCommitRoot(root, priorityLevel) {
        if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') try {
            var didError = (root.current.flags & DidCapture) === DidCapture;
            if (enableProfilerTimer) injectedHook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);
            else injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error1('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onCommitUnmount(fiber) {
        if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') try {
            injectedHook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error1('React instrumentation encountered an error: %s', err);
            }
        }
    }
    var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority, Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback, Scheduler_cancelCallback = Scheduler.unstable_cancelCallback, Scheduler_shouldYield = Scheduler.unstable_shouldYield, Scheduler_requestPaint = Scheduler.unstable_requestPaint, Scheduler_now$1 = Scheduler.unstable_now, Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel, Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority, Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority, Scheduler_NormalPriority = Scheduler.unstable_NormalPriority, Scheduler_LowPriority = Scheduler.unstable_LowPriority, Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;
    // Provide explicit error message when production+profiling bundle of e.g.
    // react-dom is used with production (non-profiling) bundle of
    // scheduler/tracing
    if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
    var fakeCallbackNode = {
    }; // Except for NoPriority, these correspond to Scheduler priorities. We use
    // ascending numbers so we can compare them like numbers. They start at 90 to
    // avoid clashing with Scheduler's priorities.
    var ImmediatePriority$1 = 99;
    var UserBlockingPriority$2 = 98;
    var NormalPriority$1 = 97;
    var LowPriority$1 = 96;
    var IdlePriority$1 = 95; // NoPriority is the absence of priority. Also React-only.
    var NoPriority$1 = 90;
    var shouldYield = Scheduler_shouldYield;
    var requestPaint = Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : function() {
    };
    var syncQueue = null;
    var immediateQueueCallbackNode = null;
    var isFlushingSyncQueue = false;
    var initialTimeMs$1 = Scheduler_now$1(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.
    // This will be the case for modern browsers that support `performance.now`. In
    // older browsers, Scheduler falls back to `Date.now`, which returns a Unix
    // timestamp. In that case, subtract the module initialization time to simulate
    // the behavior of performance.now and keep our times small enough to fit
    // within 32 bits.
    // TODO: Consider lifting this into Scheduler.
    var now = initialTimeMs$1 < 10000 ? Scheduler_now$1 : function() {
        return Scheduler_now$1() - initialTimeMs$1;
    };
    function getCurrentPriorityLevel() {
        switch(Scheduler_getCurrentPriorityLevel()){
            case Scheduler_ImmediatePriority:
                return ImmediatePriority$1;
            case Scheduler_UserBlockingPriority:
                return UserBlockingPriority$2;
            case Scheduler_NormalPriority:
                return NormalPriority$1;
            case Scheduler_LowPriority:
                return LowPriority$1;
            case Scheduler_IdlePriority:
                return IdlePriority$1;
            default:
                throw Error("Unknown priority level.");
        }
    }
    function reactPriorityToSchedulerPriority(reactPriorityLevel) {
        switch(reactPriorityLevel){
            case ImmediatePriority$1:
                return Scheduler_ImmediatePriority;
            case UserBlockingPriority$2:
                return Scheduler_UserBlockingPriority;
            case NormalPriority$1:
                return Scheduler_NormalPriority;
            case LowPriority$1:
                return Scheduler_LowPriority;
            case IdlePriority$1:
                return Scheduler_IdlePriority;
            default:
                throw Error("Unknown priority level.");
        }
    }
    function runWithPriority$1(reactPriorityLevel, fn) {
        var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
        return Scheduler_runWithPriority(priorityLevel, fn);
    }
    function scheduleCallback(reactPriorityLevel, callback, options) {
        var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
        return Scheduler_scheduleCallback(priorityLevel, callback, options);
    }
    function scheduleSyncCallback(callback) {
        // Push this callback into an internal queue. We'll flush these either in
        // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
        if (syncQueue === null) {
            syncQueue = [
                callback
            ]; // Flush the queue in the next tick, at the earliest.
            immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
        } else // Push onto existing queue. Don't need to schedule a callback because
        // we already scheduled one when we created the queue.
        syncQueue.push(callback);
        return fakeCallbackNode;
    }
    function cancelCallback(callbackNode) {
        if (callbackNode !== fakeCallbackNode) Scheduler_cancelCallback(callbackNode);
    }
    function flushSyncCallbackQueue() {
        if (immediateQueueCallbackNode !== null) {
            var node = immediateQueueCallbackNode;
            immediateQueueCallbackNode = null;
            Scheduler_cancelCallback(node);
        }
        flushSyncCallbackQueueImpl();
    }
    function flushSyncCallbackQueueImpl() {
        if (!isFlushingSyncQueue && syncQueue !== null) {
            // Prevent re-entrancy.
            isFlushingSyncQueue = true;
            var i = 0;
            try {
                var _isSync2 = true;
                var _queue = syncQueue;
                runWithPriority$1(ImmediatePriority$1, function() {
                    for(; i < _queue.length; i++){
                        var callback = _queue[i];
                        do callback = callback(_isSync2);
                        while (callback !== null)
                    }
                });
                syncQueue = null;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                if (syncQueue !== null) syncQueue = syncQueue.slice(i + 1);
                 // Resume flushing in the next tick
                Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
                throw error;
            } finally{
                isFlushingSyncQueue = false;
            }
        }
    }
    // TODO: this is special because it gets imported during build.
    var ReactVersion = '17.0.2';
    var NoMode = 0;
    var StrictMode = 1; // TODO: Remove BlockingMode and ConcurrentMode by reading from the root
    // tag instead
    var BlockingMode = 2;
    var ConcurrentMode = 4;
    var ProfileMode = 8;
    var DebugTracingMode = 16;
    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
    var NoTransition = 0;
    function requestCurrentTransition() {
        return ReactCurrentBatchConfig.transition;
    }
    var ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function(fiber, instance) {
        },
        flushPendingUnsafeLifecycleWarnings: function() {
        },
        recordLegacyContextWarning: function(fiber, instance) {
        },
        flushLegacyContextWarning: function() {
        },
        discardPendingWarnings: function() {
        }
    };
    var findStrictRoot = function(fiber) {
        var maybeStrictRoot = null;
        var node = fiber;
        while(node !== null){
            if (node.mode & StrictMode) maybeStrictRoot = node;
            node = node.return;
        }
        return maybeStrictRoot;
    };
    var setToSortedString = function(set) {
        var array = [];
        set.forEach(function(value) {
            array.push(value);
        });
        return array.sort().join(', ');
    };
    var pendingComponentWillMountWarnings = [];
    var pendingUNSAFE_ComponentWillMountWarnings = [];
    var pendingComponentWillReceivePropsWarnings = [];
    var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    var pendingComponentWillUpdateWarnings = [];
    var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.
    var didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
        // Dedup strategy: Warn once per component.
        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) return;
        if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) pendingComponentWillMountWarnings.push(fiber);
        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === 'function') pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
        if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) pendingComponentWillReceivePropsWarnings.push(fiber);
        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
        if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) pendingComponentWillUpdateWarnings.push(fiber);
        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === 'function') pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
        // We do an initial pass to gather component names
        var componentWillMountUniqueNames = new Set();
        if (pendingComponentWillMountWarnings.length > 0) {
            pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillMountWarnings = [];
        }
        var UNSAFE_componentWillMountUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
            pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillMountWarnings = [];
        }
        var componentWillReceivePropsUniqueNames = new Set();
        if (pendingComponentWillReceivePropsWarnings.length > 0) {
            pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillReceivePropsWarnings = [];
        }
        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
            pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        }
        var componentWillUpdateUniqueNames = new Set();
        if (pendingComponentWillUpdateWarnings.length > 0) {
            pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillUpdateWarnings = [];
        }
        var UNSAFE_componentWillUpdateUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
            pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
        } // Finally, we flush all the warnings
        // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'
        if (UNSAFE_componentWillMountUniqueNames.size > 0) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            error1("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
        }
        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
            error1("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
        }
        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
            error1("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
        }
        if (componentWillMountUniqueNames.size > 0) {
            var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
            warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
        }
        if (componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
            warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
        }
        if (componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
            warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
        }
    };
    var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.
    var didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
        var strictRoot = findStrictRoot(fiber);
        if (strictRoot === null) {
            error1("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
            return;
        } // Dedup strategy: Warn once per component.
        if (didWarnAboutLegacyContext.has(fiber.type)) return;
        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
            if (warningsForRoot === undefined) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
            }
            warningsForRoot.push(fiber);
        }
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function() {
        pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
            if (fiberArray.length === 0) return;
            var firstFiber = fiberArray[0];
            var uniqueNames = new Set();
            fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutLegacyContext.add(fiber.type);
            });
            var sortedNames = setToSortedString(uniqueNames);
            try {
                setCurrentFiber(firstFiber);
                error1("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
            } finally{
                resetCurrentFiber();
            }
        });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function() {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
    };
    function resolveDefaultProps(Component, baseProps) {
        if (Component && Component.defaultProps) {
            // Resolve default props. Taken from ReactElement
            var props = _assign({
            }, baseProps);
            var defaultProps = Component.defaultProps;
            for(var propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
            return props;
        }
        return baseProps;
    }
    // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111
    var MAX_SIGNED_31_BIT_INT = 1073741823;
    var valueCursor = createCursor(null);
    var rendererSigil;
    // Use this to detect multiple renderers using the same context
    rendererSigil = {
    };
    var currentlyRenderingFiber = null;
    var lastContextDependency = null;
    var lastContextWithAllBitsObserved = null;
    var isDisallowedContextReadInDEV = false;
    function resetContextDependencies() {
        // This is called right before React yields execution, to ensure `readContext`
        // cannot be called outside the render phase.
        currentlyRenderingFiber = null;
        lastContextDependency = null;
        lastContextWithAllBitsObserved = null;
        isDisallowedContextReadInDEV = false;
    }
    function enterDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = true;
    }
    function exitDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = false;
    }
    function pushProvider(providerFiber, nextValue) {
        var context = providerFiber.type._context;
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) error1("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
        context._currentRenderer = rendererSigil;
    }
    function popProvider(providerFiber) {
        var currentValue = valueCursor.current;
        pop(valueCursor, providerFiber);
        var context = providerFiber.type._context;
        context._currentValue = currentValue;
    }
    function calculateChangedBits(context, newValue, oldValue) {
        if (objectIs(oldValue, newValue)) // No change
        return 0;
        else {
            var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
            if ((changedBits & MAX_SIGNED_31_BIT_INT) !== changedBits) error1("calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: %s", changedBits);
            return changedBits | 0;
        }
    }
    function scheduleWorkOnParentPath(parent, renderLanes) {
        // Update the child lanes of all the ancestors, including the alternates.
        var node = parent;
        while(node !== null){
            var alternate = node.alternate;
            if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
                node.childLanes = mergeLanes(node.childLanes, renderLanes);
                if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            else break;
            node = node.return;
        }
    }
    function propagateContextChange(workInProgress, context, changedBits, renderLanes) {
        var fiber = workInProgress.child;
        if (fiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
        fiber.return = workInProgress;
        while(fiber !== null){
            var nextFiber = void 0; // Visit this fiber.
            var list = fiber.dependencies;
            if (list !== null) {
                nextFiber = fiber.child;
                var dependency = list.firstContext;
                while(dependency !== null){
                    // Check if the context matches.
                    if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
                        // Match! Schedule an update on this fiber.
                        if (fiber.tag === ClassComponent) {
                            // Schedule a force update on the work-in-progress.
                            var update = createUpdate(NoTimestamp, pickArbitraryLane(renderLanes));
                            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
                            // update to the current fiber, too, which means it will persist even if
                            // this render is thrown away. Since it's a race condition, not sure it's
                            // worth fixing.
                            enqueueUpdate(fiber, update);
                        }
                        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
                        var alternate = fiber.alternate;
                        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
                        scheduleWorkOnParentPath(fiber.return, renderLanes); // Mark the updated lanes on the list, too.
                        list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
                        break;
                    }
                    dependency = dependency.next;
                }
            } else if (fiber.tag === ContextProvider) // Don't scan deeper if this is a matching provider
            nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
            else // Traverse down.
            nextFiber = fiber.child;
            if (nextFiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
            nextFiber.return = fiber;
            else {
                // No child. Traverse to next sibling.
                nextFiber = fiber;
                while(nextFiber !== null){
                    if (nextFiber === workInProgress) {
                        // We're back to the root of this subtree. Exit.
                        nextFiber = null;
                        break;
                    }
                    var sibling = nextFiber.sibling;
                    if (sibling !== null) {
                        // Set the return pointer of the sibling to the work-in-progress fiber.
                        sibling.return = nextFiber.return;
                        nextFiber = sibling;
                        break;
                    } // No more siblings. Traverse up.
                    nextFiber = nextFiber.return;
                }
            }
            fiber = nextFiber;
        }
    }
    function prepareToReadContext(workInProgress, renderLanes) {
        currentlyRenderingFiber = workInProgress;
        lastContextDependency = null;
        lastContextWithAllBitsObserved = null;
        var dependencies = workInProgress.dependencies;
        if (dependencies !== null) {
            var firstContext = dependencies.firstContext;
            if (firstContext !== null) {
                if (includesSomeLane(dependencies.lanes, renderLanes)) // Context list has a pending update. Mark that this fiber performed work.
                markWorkInProgressReceivedUpdate();
                 // Reset the work-in-progress list
                dependencies.firstContext = null;
            }
        }
    }
    function readContext(context, observedBits) {
        // This warning would fire if you read context inside a Hook like useMemo.
        // Unlike the class check below, it's not enforced in production for perf.
        if (isDisallowedContextReadInDEV) error1("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        if (lastContextWithAllBitsObserved === context) ;
        else if (observedBits === false || observedBits === 0) ;
        else {
            var resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.
            if (typeof observedBits !== 'number' || observedBits === MAX_SIGNED_31_BIT_INT) {
                // Observe all updates.
                lastContextWithAllBitsObserved = context;
                resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
            } else resolvedObservedBits = observedBits;
            var contextItem = {
                context: context,
                observedBits: resolvedObservedBits,
                next: null
            };
            if (lastContextDependency === null) {
                if (!(currentlyRenderingFiber !== null)) throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                 // This is the first dependency for this component. Create a new list.
                lastContextDependency = contextItem;
                currentlyRenderingFiber.dependencies = {
                    lanes: NoLanes,
                    firstContext: contextItem,
                    responders: null
                };
            } else // Append a new context item.
            lastContextDependency = lastContextDependency.next = contextItem;
        }
        return context._currentValue;
    }
    var UpdateState = 0;
    var ReplaceState = 1;
    var ForceUpdate = 2;
    var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
    // It should only be read right after calling `processUpdateQueue`, via
    // `checkHasForceUpdateAfterProcessing`.
    var hasForceUpdate = false;
    var didWarnUpdateInsideUpdate;
    var currentlyProcessingQueue;
    didWarnUpdateInsideUpdate = false;
    currentlyProcessingQueue = null;
    function initializeUpdateQueue(fiber) {
        var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
                pending: null
            },
            effects: null
        };
        fiber.updateQueue = queue;
    }
    function cloneUpdateQueue(current, workInProgress) {
        // Clone the update queue from current. Unless it's already a clone.
        var queue = workInProgress.updateQueue;
        var currentQueue = current.updateQueue;
        if (queue === currentQueue) {
            var clone = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: currentQueue.firstBaseUpdate,
                lastBaseUpdate: currentQueue.lastBaseUpdate,
                shared: currentQueue.shared,
                effects: currentQueue.effects
            };
            workInProgress.updateQueue = clone;
        }
    }
    function createUpdate(eventTime, lane) {
        var update = {
            eventTime: eventTime,
            lane: lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
        };
        return update;
    }
    function enqueueUpdate(fiber, update) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return;
        var sharedQueue = updateQueue.shared;
        var pending = sharedQueue.pending;
        if (pending === null) // This is the first update. Create a circular list.
        update.next = update;
        else {
            update.next = pending.next;
            pending.next = update;
        }
        sharedQueue.pending = update;
        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
            error1("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
            didWarnUpdateInsideUpdate = true;
        }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
        // Captured updates are updates that are thrown by a child during the render
        // phase. They should be discarded if the render is aborted. Therefore,
        // we should only put them on the work-in-progress queue, not the current one.
        var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.
        var current = workInProgress.alternate;
        if (current !== null) {
            var currentQueue = current.updateQueue;
            if (queue === currentQueue) {
                // The work-in-progress queue is the same as current. This happens when
                // we bail out on a parent fiber that then captures an error thrown by
                // a child. Since we want to append the update only to the work-in
                // -progress queue, we need to clone the updates. We usually clone during
                // processUpdateQueue, but that didn't happen in this case because we
                // skipped over the parent when we bailed out.
                var newFirst = null;
                var newLast = null;
                var firstBaseUpdate = queue.firstBaseUpdate;
                if (firstBaseUpdate !== null) {
                    // Loop through the updates and clone them.
                    var update = firstBaseUpdate;
                    do {
                        var clone = {
                            eventTime: update.eventTime,
                            lane: update.lane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        if (newLast === null) newFirst = newLast = clone;
                        else {
                            newLast.next = clone;
                            newLast = clone;
                        }
                        update = update.next;
                    }while (update !== null) // Append the captured update the end of the cloned list.
                    if (newLast === null) newFirst = newLast = capturedUpdate;
                    else {
                        newLast.next = capturedUpdate;
                        newLast = capturedUpdate;
                    }
                } else // There are no base updates.
                newFirst = newLast = capturedUpdate;
                queue = {
                    baseState: currentQueue.baseState,
                    firstBaseUpdate: newFirst,
                    lastBaseUpdate: newLast,
                    shared: currentQueue.shared,
                    effects: currentQueue.effects
                };
                workInProgress.updateQueue = queue;
                return;
            }
        } // Append the update to the end of the list.
        var lastBaseUpdate = queue.lastBaseUpdate;
        if (lastBaseUpdate === null) queue.firstBaseUpdate = capturedUpdate;
        else lastBaseUpdate.next = capturedUpdate;
        queue.lastBaseUpdate = capturedUpdate;
    }
    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
        switch(update.tag){
            case ReplaceState:
                var payload = update.payload;
                if (typeof payload === 'function') {
                    enterDisallowedContextReadInDEV();
                    var nextState = payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictMode) {
                        disableLogs();
                        try {
                            payload.call(instance, prevState, nextProps);
                        } finally{
                            reenableLogs();
                        }
                    }
                    exitDisallowedContextReadInDEV();
                    return nextState;
                } // State object
                return payload;
            case CaptureUpdate:
                workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
            // Intentional fallthrough
            case UpdateState:
                var _payload = update.payload;
                var partialState;
                if (typeof _payload === 'function') {
                    enterDisallowedContextReadInDEV();
                    partialState = _payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictMode) {
                        disableLogs();
                        try {
                            _payload.call(instance, prevState, nextProps);
                        } finally{
                            reenableLogs();
                        }
                    }
                    exitDisallowedContextReadInDEV();
                } else // Partial state object
                partialState = _payload;
                if (partialState === null || partialState === undefined) // Null and undefined are treated as no-ops.
                return prevState;
                 // Merge the partial state and the previous state.
                return _assign({
                }, prevState, partialState);
            case ForceUpdate:
                hasForceUpdate = true;
                return prevState;
        }
        return prevState;
    }
    function processUpdateQueue(workInProgress, props, instance, renderLanes) {
        // This is always non-null on a ClassComponent or HostRoot
        var queue = workInProgress.updateQueue;
        hasForceUpdate = false;
        currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate;
        var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.
        var pendingQueue = queue.shared.pending;
        if (pendingQueue !== null) {
            queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
            // and last so that it's non-circular.
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null; // Append pending updates to base queue
            if (lastBaseUpdate === null) firstBaseUpdate = firstPendingUpdate;
            else lastBaseUpdate.next = firstPendingUpdate;
            lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
            // we need to transfer the updates to that queue, too. Because the base
            // queue is a singly-linked list with no cycles, we can append to both
            // lists and take advantage of structural sharing.
            // TODO: Pass `current` as argument
            var current = workInProgress.alternate;
            if (current !== null) {
                // This is always non-null on a ClassComponent or HostRoot
                var currentQueue = current.updateQueue;
                var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
                if (currentLastBaseUpdate !== lastBaseUpdate) {
                    if (currentLastBaseUpdate === null) currentQueue.firstBaseUpdate = firstPendingUpdate;
                    else currentLastBaseUpdate.next = firstPendingUpdate;
                    currentQueue.lastBaseUpdate = lastPendingUpdate;
                }
            }
        } // These values may change as we process the queue.
        if (firstBaseUpdate !== null) {
            // Iterate through the list of updates to compute the result.
            var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
            // from the original lanes.
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update = firstBaseUpdate;
            do {
                var updateLane = update.lane;
                var updateEventTime = update.eventTime;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        eventTime: updateEventTime,
                        lane: updateLane,
                        tag: update.tag,
                        payload: update.payload,
                        callback: update.callback,
                        next: null
                    };
                    if (newLastBaseUpdate === null) {
                        newFirstBaseUpdate = newLastBaseUpdate = clone;
                        newBaseState = newState;
                    } else newLastBaseUpdate = newLastBaseUpdate.next = clone;
                     // Update the remaining priority in the queue.
                    newLanes = mergeLanes(newLanes, updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newLastBaseUpdate !== null) {
                        var _clone = {
                            eventTime: updateEventTime,
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                    } // Process this update.
                    newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
                    var callback = update.callback;
                    if (callback !== null) {
                        workInProgress.flags |= Callback;
                        var effects = queue.effects;
                        if (effects === null) queue.effects = [
                            update
                        ];
                        else effects.push(update);
                    }
                }
                update = update.next;
                if (update === null) {
                    pendingQueue = queue.shared.pending;
                    if (pendingQueue === null) break;
                    else {
                        // An update was scheduled from inside a reducer. Add the new
                        // pending updates to the end of the list and keep processing.
                        var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
                        // unravel them when transferring them to the base queue.
                        var _firstPendingUpdate = _lastPendingUpdate.next;
                        _lastPendingUpdate.next = null;
                        update = _firstPendingUpdate;
                        queue.lastBaseUpdate = _lastPendingUpdate;
                        queue.shared.pending = null;
                    }
                }
            }while (true)
            if (newLastBaseUpdate === null) newBaseState = newState;
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate; // Set the remaining expiration time to be whatever is remaining in the queue.
            // This should be fine because the only two other things that contribute to
            // expiration time are props and context. We're already in the middle of the
            // begin phase by the time we start processing the queue, so we've already
            // dealt with the props. Context in components that specify
            // shouldComponentUpdate is tricky; but we'll have to account for
            // that regardless.
            markSkippedUpdateLanes(newLanes);
            workInProgress.lanes = newLanes;
            workInProgress.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
    }
    function callCallback1(callback, context) {
        if (!(typeof callback === 'function')) throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
        callback.call(context);
    }
    function resetHasForceUpdateBeforeProcessing() {
        hasForceUpdate = false;
    }
    function checkHasForceUpdateAfterProcessing() {
        return hasForceUpdate;
    }
    function commitUpdateQueue(finishedWork, finishedQueue, instance) {
        // Commit the effects
        var effects = finishedQueue.effects;
        finishedQueue.effects = null;
        if (effects !== null) for(var i = 0; i < effects.length; i++){
            var effect = effects[i];
            var callback = effect.callback;
            if (callback !== null) {
                effect.callback = null;
                callCallback1(callback, instance);
            }
        }
    }
    var fakeInternalInstance = {
    };
    var isArray1 = Array.isArray; // React.Component uses a shared frozen object by default.
    // We'll use it to determine whether we need to initialize legacy refs.
    var emptyRefsObject = new React.Component().refs;
    var didWarnAboutStateAssignmentForComponent;
    var didWarnAboutUninitializedState;
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
    var didWarnAboutLegacyLifecyclesAndDerivedState;
    var didWarnAboutUndefinedDerivedState;
    var warnOnUndefinedDerivedState;
    var warnOnInvalidCallback;
    var didWarnAboutDirectlyAssigningPropsToState;
    var didWarnAboutContextTypeAndContextTypes;
    var didWarnAboutInvalidateContextType;
    didWarnAboutStateAssignmentForComponent = new Set();
    didWarnAboutUninitializedState = new Set();
    didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    didWarnAboutDirectlyAssigningPropsToState = new Set();
    didWarnAboutUndefinedDerivedState = new Set();
    didWarnAboutContextTypeAndContextTypes = new Set();
    didWarnAboutInvalidateContextType = new Set();
    var didWarnOnInvalidCallback = new Set();
    warnOnInvalidCallback = function(callback, callerName) {
        if (callback === null || typeof callback === 'function') return;
        var key = callerName + '_' + callback;
        if (!didWarnOnInvalidCallback.has(key)) {
            didWarnOnInvalidCallback.add(key);
            error1("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
        }
    };
    warnOnUndefinedDerivedState = function(type, partialState) {
        if (partialState === undefined) {
            var componentName = getComponentName(type) || 'Component';
            if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error1("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
            }
        }
    }; // This is so gross but it's at least non-critical and can be removed if
    // it causes problems. This is meant to give a nicer error message for
    // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
    // ...)) which otherwise throws a "_processChildContext is not a function"
    // exception.
    Object.defineProperty(fakeInternalInstance, '_processChildContext', {
        enumerable: false,
        value: function() {
            throw Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
    });
    Object.freeze(fakeInternalInstance);
    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress.memoizedState;
        if (workInProgress.mode & StrictMode) {
            disableLogs();
            try {
                // Invoke the function an extra time to help detect side-effects.
                getDerivedStateFromProps(nextProps, prevState);
            } finally{
                reenableLogs();
            }
        }
        var partialState = getDerivedStateFromProps(nextProps, prevState);
        warnOnUndefinedDerivedState(ctor, partialState);
        var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({
        }, prevState, partialState);
        workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
        // base state.
        if (workInProgress.lanes === NoLanes) {
            // Queue is always non-null for classes
            var updateQueue = workInProgress.updateQueue;
            updateQueue.baseState = memoizedState;
        }
    }
    var classComponentUpdater = {
        isMounted: isMounted,
        enqueueSetState: function(inst, payload, callback) {
            var fiber = get1(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'setState');
                update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
        },
        enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get1(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ReplaceState;
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'replaceState');
                update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
        },
        enqueueForceUpdate: function(inst, callback) {
            var fiber = get1(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ForceUpdate;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'forceUpdate');
                update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
        }
    };
    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress.stateNode;
        if (typeof instance.shouldComponentUpdate === 'function') {
            if (workInProgress.mode & StrictMode) {
                disableLogs();
                try {
                    // Invoke the function an extra time to help detect side-effects.
                    instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally{
                    reenableLogs();
                }
            }
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            if (shouldUpdate === undefined) error1("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentName(ctor) || 'Component');
            return shouldUpdate;
        }
        if (ctor.prototype && ctor.prototype.isPureReactComponent) return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
        return true;
    }
    function checkClassInstance(workInProgress, ctor, newProps) {
        var instance = workInProgress.stateNode;
        var name = getComponentName(ctor) || 'Component';
        var renderPresent = instance.render;
        if (!renderPresent) {
            if (ctor.prototype && typeof ctor.prototype.render === 'function') error1("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
            else error1("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
        }
        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) error1("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) error1("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
        if (instance.propTypes) error1("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
        if (instance.contextType) error1("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
        if (instance.contextTypes) error1("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
        if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
            didWarnAboutContextTypeAndContextTypes.add(ctor);
            error1("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
        }
        if (typeof instance.componentShouldUpdate === 'function') error1("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') error1("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentName(ctor) || 'A pure component');
        if (typeof instance.componentDidUnmount === 'function') error1("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
        if (typeof instance.componentDidReceiveProps === 'function') error1("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
        if (typeof instance.componentWillRecieveProps === 'function') error1("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
        if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') error1("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
        var hasMutatedProps = instance.props !== newProps;
        if (instance.props !== undefined && hasMutatedProps) error1("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
        if (instance.defaultProps) error1("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
        if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
            error1("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentName(ctor));
        }
        if (typeof instance.getDerivedStateFromProps === 'function') error1("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof instance.getDerivedStateFromError === 'function') error1("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof ctor.getSnapshotBeforeUpdate === 'function') error1("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
        var _state = instance.state;
        if (_state && (typeof _state !== 'object' || isArray1(_state))) error1('%s.state: must be set to an object or null', name);
        if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') error1("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
    }
    function adoptClassInstance(workInProgress, instance) {
        instance.updater = classComponentUpdater;
        workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates
        set1(instance, workInProgress);
        instance._reactInternalInstance = fakeInternalInstance;
    }
    function constructClassInstance(workInProgress, ctor, props) {
        var isLegacyContextConsumer = false;
        var unmaskedContext = emptyContextObject;
        var context = emptyContextObject;
        var contextType = ctor.contextType;
        if ('contextType' in ctor) {
            var isValid = contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>
            if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = '';
                if (contextType === undefined) addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                else if (typeof contextType !== 'object') addendum = ' However, it is set to a ' + typeof contextType + '.';
                else if (contextType.$$typeof === REACT_PROVIDER_TYPE) addendum = ' Did you accidentally pass the Context.Provider instead?';
                else if (contextType._context !== undefined) // <Context.Consumer>
                addendum = ' Did you accidentally pass the Context.Consumer instead?';
                else addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
                error1("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentName(ctor) || 'Component', addendum);
            }
        }
        if (typeof contextType === 'object' && contextType !== null) context = readContext(contextType);
        else {
            unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
            context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
        } // Instantiate twice to help detect side-effects.
        if (workInProgress.mode & StrictMode) {
            disableLogs();
            try {
                new ctor(props, context); // eslint-disable-line no-new
            } finally{
                reenableLogs();
            }
        }
        var instance = new ctor(props, context);
        var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
        adoptClassInstance(workInProgress, instance);
        if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
            var componentName = getComponentName(ctor) || 'Component';
            if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error1("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? 'null' : 'undefined', componentName);
            }
        } // If new component APIs are defined, "unsafe" lifecycles won't be called.
        // Warn about these lifecycles if they are present.
        // Don't warn about react-lifecycles-compat polyfilled methods though.
        if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
            var foundWillMountName = null;
            var foundWillReceivePropsName = null;
            var foundWillUpdateName = null;
            if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) foundWillMountName = 'componentWillMount';
            else if (typeof instance.UNSAFE_componentWillMount === 'function') foundWillMountName = 'UNSAFE_componentWillMount';
            if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) foundWillReceivePropsName = 'componentWillReceiveProps';
            else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
            if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) foundWillUpdateName = 'componentWillUpdate';
            else if (typeof instance.UNSAFE_componentWillUpdate === 'function') foundWillUpdateName = 'UNSAFE_componentWillUpdate';
            if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentName(ctor) || 'Component';
                var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                    didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                    error1("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
                }
            }
        }
        // ReactFiberContext usually updates this cache but can't for newly-created instances.
        if (isLegacyContextConsumer) cacheContext(workInProgress, unmaskedContext, context);
        return instance;
    }
    function callComponentWillMount(workInProgress, instance) {
        var oldState = instance.state;
        if (typeof instance.componentWillMount === 'function') instance.componentWillMount();
        if (typeof instance.UNSAFE_componentWillMount === 'function') instance.UNSAFE_componentWillMount();
        if (oldState !== instance.state) {
            error1("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentName(workInProgress.type) || 'Component');
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        var oldState = instance.state;
        if (typeof instance.componentWillReceiveProps === 'function') instance.componentWillReceiveProps(newProps, nextContext);
        if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        if (instance.state !== oldState) {
            var componentName = getComponentName(workInProgress.type) || 'Component';
            if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error1("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    } // Invokes the mount life-cycles on a previously never rendered instance.
    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        checkClassInstance(workInProgress, ctor, newProps);
        var instance = workInProgress.stateNode;
        instance.props = newProps;
        instance.state = workInProgress.memoizedState;
        instance.refs = emptyRefsObject;
        initializeUpdateQueue(workInProgress);
        var contextType = ctor.contextType;
        if (typeof contextType === 'object' && contextType !== null) instance.context = readContext(contextType);
        else {
            var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            instance.context = getMaskedContext(workInProgress, unmaskedContext);
        }
        if (instance.state === newProps) {
            var componentName = getComponentName(ctor) || 'Component';
            if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error1("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
            }
        }
        if (workInProgress.mode & StrictMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
        ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        instance.state = workInProgress.memoizedState;
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress.memoizedState;
        } // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
            callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
            // process them now.
            processUpdateQueue(workInProgress, newProps, instance, renderLanes);
            instance.state = workInProgress.memoizedState;
        }
        if (typeof instance.componentDidMount === 'function') workInProgress.flags |= Update;
    }
    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        var oldProps = workInProgress.memoizedProps;
        instance.props = oldProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === 'object' && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
            if (oldProps !== newProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === 'function') workInProgress.flags |= Update;
            return false;
        }
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
                if (typeof instance.componentWillMount === 'function') instance.componentWillMount();
                if (typeof instance.UNSAFE_componentWillMount === 'function') instance.UNSAFE_componentWillMount();
            }
            if (typeof instance.componentDidMount === 'function') workInProgress.flags |= Update;
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === 'function') workInProgress.flags |= Update;
             // If shouldComponentUpdate returned false, we should still update the
            // memoized state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    } // Invokes the update life-cycles and returns false if it shouldn't rerender.
    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        cloneUpdateQueue(current, workInProgress);
        var unresolvedOldProps = workInProgress.memoizedProps;
        var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
        instance.props = oldProps;
        var unresolvedNewProps = workInProgress.pendingProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === 'object' && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
                if (typeof instance.componentWillUpdate === 'function') instance.componentWillUpdate(newProps, newState, nextContext);
                if (typeof instance.UNSAFE_componentWillUpdate === 'function') instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
            }
            if (typeof instance.componentDidUpdate === 'function') workInProgress.flags |= Update;
            if (typeof instance.getSnapshotBeforeUpdate === 'function') workInProgress.flags |= Snapshot;
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized props/state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    }
    var didWarnAboutMaps;
    var didWarnAboutGenerators;
    var didWarnAboutStringRefs;
    var ownerHasKeyUseWarning;
    var ownerHasFunctionTypeWarning;
    var warnForMissingKey = function(child, returnFiber) {
    };
    didWarnAboutMaps = false;
    didWarnAboutGenerators = false;
    didWarnAboutStringRefs = {
    };
    /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */ ownerHasKeyUseWarning = {
    };
    ownerHasFunctionTypeWarning = {
    };
    warnForMissingKey = function(child, returnFiber) {
        if (child === null || typeof child !== 'object') return;
        if (!child._store || child._store.validated || child.key != null) return;
        if (!(typeof child._store === 'object')) throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        child._store.validated = true;
        var componentName = getComponentName(returnFiber.type) || 'Component';
        if (ownerHasKeyUseWarning[componentName]) return;
        ownerHasKeyUseWarning[componentName] = true;
        error1("Each child in a list should have a unique \"key\" prop. See https://reactjs.org/link/warning-keys for more information.");
    };
    var isArray$1 = Array.isArray;
    function coerceRef(returnFiber, current, element) {
        var mixedRef = element.ref;
        if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
            // TODO: Clean this up once we turn on the string ref warning for
            // everyone, because the strict mode case will no longer be relevant
            if ((returnFiber.mode & StrictMode || warnAboutStringRefs) && // because these cannot be automatically converted to an arrow function
            // using a codemod. Therefore, we don't have to warn about string refs again.
            !(element._owner && element._self && element._owner.stateNode !== element._self)) {
                var componentName = getComponentName(returnFiber.type) || 'Component';
                if (!didWarnAboutStringRefs[componentName]) {
                    error1("A string ref, \"%s\", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref", mixedRef);
                    didWarnAboutStringRefs[componentName] = true;
                }
            }
            if (element._owner) {
                var owner = element._owner;
                var inst;
                if (owner) {
                    var ownerFiber = owner;
                    if (!(ownerFiber.tag === ClassComponent)) throw Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                    inst = ownerFiber.stateNode;
                }
                if (!inst) throw Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
                var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref
                if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) return current.ref;
                var ref = function(value) {
                    var refs = inst.refs;
                    if (refs === emptyRefsObject) // This is a lazy pooled frozen object, so we need to initialize.
                    refs = inst.refs = {
                    };
                    if (value === null) delete refs[stringRef];
                    else refs[stringRef] = value;
                };
                ref._stringRef = stringRef;
                return ref;
            } else {
                if (!(typeof mixedRef === 'string')) throw Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
                if (!element._owner) throw Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information.");
            }
        }
        return mixedRef;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        if (returnFiber.type !== 'textarea') throw Error("Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild) + "). If you meant to render a collection of children, use an array instead.");
    }
    function warnOnFunctionType(returnFiber) {
        var componentName = getComponentName(returnFiber.type) || 'Component';
        if (ownerHasFunctionTypeWarning[componentName]) return;
        ownerHasFunctionTypeWarning[componentName] = true;
        error1("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
    } // We avoid inlining this to avoid potential deopts from using try/catch.
    // to be able to optimize each path individually by branching early. This needs
    // a compiler or we can do it manually. Helpers that don't need this branching
    // live outside of this function.
    function ChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) // Noop.
            return;
             // Deletions are added in reversed order so we add it to the front.
            // At this point, the return fiber's effect list is empty except for
            // deletions, so we can just append the deletion to the list. The remaining
            // effects aren't added until the complete phase. Once we implement
            // resuming, this may not be true.
            var last = returnFiber.lastEffect;
            if (last !== null) {
                last.nextEffect = childToDelete;
                returnFiber.lastEffect = childToDelete;
            } else returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
            childToDelete.nextEffect = null;
            childToDelete.flags = Deletion;
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) // Noop.
            return null;
             // TODO: For the shouldClone case, this could be micro-optimized a bit by
            // assuming that after the first child we've already added everything.
            var childToDelete = currentFirstChild;
            while(childToDelete !== null){
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
            }
            return null;
        }
        function mapRemainingChildren(returnFiber, currentFirstChild) {
            // Add the remaining children to a temporary map so that we can find them by
            // keys quickly. Implicit (null) keys get added to this set with their index
            // instead.
            var existingChildren = new Map();
            var existingChild = currentFirstChild;
            while(existingChild !== null){
                if (existingChild.key !== null) existingChildren.set(existingChild.key, existingChild);
                else existingChildren.set(existingChild.index, existingChild);
                existingChild = existingChild.sibling;
            }
            return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
            // We currently set sibling to null and index to 0 here because it is easy
            // to forget to do before returning it. E.g. for the single child case.
            var clone = createWorkInProgress(fiber, pendingProps);
            clone.index = 0;
            clone.sibling = null;
            return clone;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) // Noop.
            return lastPlacedIndex;
            var current = newFiber.alternate;
            if (current !== null) {
                var oldIndex = current.index;
                if (oldIndex < lastPlacedIndex) {
                    // This is a move.
                    newFiber.flags = Placement;
                    return lastPlacedIndex;
                } else // This item can stay in place.
                return oldIndex;
            } else {
                // This is an insertion.
                newFiber.flags = Placement;
                return lastPlacedIndex;
            }
        }
        function placeSingleChild(newFiber) {
            // This is simpler for the single child case. We only need to do a
            // placement for inserting new children.
            if (shouldTrackSideEffects && newFiber.alternate === null) newFiber.flags = Placement;
            return newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, lanes) {
            if (current === null || current.tag !== HostText) {
                // Insert
                var created = createFiberFromText(textContent, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, textContent);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateElement(returnFiber, current, element, lanes) {
            if (current !== null) {
                if (current.elementType === element.type || isCompatibleFamilyForHotReloading(current, element)) {
                    // Move based on index
                    var existing = useFiber(current, element.props);
                    existing.ref = coerceRef(returnFiber, current, element);
                    existing.return = returnFiber;
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                    return existing;
                }
            } // Insert
            var created = createFiberFromElement(element, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current, element);
            created.return = returnFiber;
            return created;
        }
        function updatePortal(returnFiber, current, portal, lanes) {
            if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
                // Insert
                var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, portal.children || []);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateFragment(returnFiber, current, fragment, lanes, key) {
            if (current === null || current.tag !== Fragment) {
                // Insert
                var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, fragment);
                existing.return = returnFiber;
                return existing;
            }
        }
        function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === 'string' || typeof newChild === 'number') {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                        _created.ref = coerceRef(returnFiber, null, newChild);
                        _created.return = returnFiber;
                        return _created;
                    case REACT_PORTAL_TYPE:
                        var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                        _created2.return = returnFiber;
                        return _created2;
                }
                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                    var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                    _created3.return = returnFiber;
                    return _created3;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            // Update the fiber if the keys match, otherwise return null.
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === 'string' || typeof newChild === 'number') {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                if (key !== null) return null;
                return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        if (newChild.key === key) {
                            if (newChild.type === REACT_FRAGMENT_TYPE) return updateFragment(returnFiber, oldFiber, newChild.props.children, lanes, key);
                            return updateElement(returnFiber, oldFiber, newChild, lanes);
                        } else return null;
                    case REACT_PORTAL_TYPE:
                        if (newChild.key === key) return updatePortal(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                }
                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                    if (key !== null) return null;
                    return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === 'string' || typeof newChild === 'number') {
                // Text nodes don't have keys, so we neither have to check the old nor
                // new node for the key. If both are text nodes, they match.
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        if (newChild.type === REACT_FRAGMENT_TYPE) return updateFragment(returnFiber, _matchedFiber, newChild.props.children, lanes, newChild.key);
                        return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                    case REACT_PORTAL_TYPE:
                        var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                }
                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                    var _matchedFiber3 = existingChildren.get(newIdx) || null;
                    return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        /**
   * Warns if there is a duplicate or missing key
   */ function warnOnInvalidKey(child, knownKeys, returnFiber) {
            if (typeof child !== 'object' || child === null) return knownKeys;
            switch(child.$$typeof){
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                    warnForMissingKey(child, returnFiber);
                    var key = child.key;
                    if (typeof key !== 'string') break;
                    if (knownKeys === null) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    error1("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.", key);
                    break;
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            // First, validate keys.
            var knownKeys = null;
            for(var i = 0; i < newChildren.length; i++){
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for(; oldFiber !== null && newIdx < newChildren.length; newIdx++){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; newIdx < newChildren.length; newIdx++){
                    var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                    if (_newFiber === null) continue;
                    lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber;
                    else previousNewFiber.sibling = _newFiber;
                    previousNewFiber = _newFiber;
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; newIdx < newChildren.length; newIdx++){
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
                if (_newFiber2 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber2.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber2;
                    else previousNewFiber.sibling = _newFiber2;
                    previousNewFiber = _newFiber2;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            // This is the same implementation as reconcileChildrenArray(),
            // but using the iterator instead.
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (!(typeof iteratorFn === 'function')) throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
            // We don't support rendering Generators because it's a mutation.
            // See https://github.com/facebook/react/issues/12995
            if (typeof Symbol === 'function' && newChildrenIterable[Symbol.toStringTag] === 'Generator') {
                if (!didWarnAboutGenerators) error1("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                didWarnAboutGenerators = true;
            } // Warn about using Maps as children
            if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) error1("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                didWarnAboutMaps = true;
            } // First, validate keys.
            // We'll get a different iterator later for the main pass.
            var _newChildren = iteratorFn.call(newChildrenIterable);
            if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for(; !_step.done; _step = _newChildren.next()){
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (!(newChildren != null)) throw Error("An iterable object provided no iterator.");
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for(; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (step.done) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; !step.done; newIdx++, step = newChildren.next()){
                    var _newFiber3 = createChild(returnFiber, step.value, lanes);
                    if (_newFiber3 === null) continue;
                    lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber3;
                    else previousNewFiber.sibling = _newFiber3;
                    previousNewFiber = _newFiber3;
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; !step.done; newIdx++, step = newChildren.next()){
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
                if (_newFiber4 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber4.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber4;
                    else previousNewFiber.sibling = _newFiber4;
                    previousNewFiber = _newFiber4;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            return resultingFirstChild;
        }
        function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            // There's no need to check for keys on text nodes since we don't have a
            // way to define them.
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
                // We already have an existing node so let's just update it and delete
                // the rest.
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, textContent);
                existing.return = returnFiber;
                return existing;
            } // The existing first child is not a text node so we need to create one
            // and delete the existing ones.
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        }
        function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
            var key = element.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    switch(child.tag){
                        case Fragment:
                            if (element.type === REACT_FRAGMENT_TYPE) {
                                deleteRemainingChildren(returnFiber, child.sibling);
                                var existing = useFiber(child, element.props.children);
                                existing.return = returnFiber;
                                existing._debugSource = element._source;
                                existing._debugOwner = element._owner;
                                return existing;
                            }
                            break;
                        case Block:
                        // We intentionally fallthrough here if enableBlocksAPI is not on.
                        // eslint-disable-next-lined no-fallthrough
                        default:
                            if (child.elementType === element.type || isCompatibleFamilyForHotReloading(child, element)) {
                                deleteRemainingChildren(returnFiber, child.sibling);
                                var _existing3 = useFiber(child, element.props);
                                _existing3.ref = coerceRef(returnFiber, child, element);
                                _existing3.return = returnFiber;
                                _existing3._debugSource = element._source;
                                _existing3._debugOwner = element._owner;
                                return _existing3;
                            }
                            break;
                    } // Didn't match.
                    deleteRemainingChildren(returnFiber, child);
                    break;
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
                created.return = returnFiber;
                return created;
            } else {
                var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
                _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
                _created4.return = returnFiber;
                return _created4;
            }
        }
        function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, portal.children || []);
                        existing.return = returnFiber;
                        return existing;
                    } else {
                        deleteRemainingChildren(returnFiber, child);
                        break;
                    }
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        } // This API will tag the children with the side-effect of the reconciliation
        // itself. They will be added to the side-effect list as we pass through the
        // children and the parent.
        function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
            // This function is not recursive.
            // If the top level item is an array, we treat it as a set of children,
            // not as a fragment. Nested arrays on the other hand will be treated as
            // fragment nodes. Recursion happens at the normal flow.
            // Handle top level unkeyed fragments as if they were arrays.
            // This leads to an ambiguity between <>{[...]}</> and <>...</>.
            // We treat the ambiguous cases above the same.
            var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) newChild = newChild.props.children;
             // Handle object types
            var isObject = typeof newChild === 'object' && newChild !== null;
            if (isObject) switch(newChild.$$typeof){
                case REACT_ELEMENT_TYPE:
                    return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                case REACT_PORTAL_TYPE:
                    return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
            }
            if (typeof newChild === 'string' || typeof newChild === 'number') return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));
            if (isArray$1(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
            if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
            if (isObject) throwOnInvalidObjectType(returnFiber, newChild);
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) // If the new child is undefined, and the return fiber is a composite
            // component, throw an error. If Fiber return types are disabled,
            // we already threw above.
            switch(returnFiber.tag){
                case ClassComponent:
                    var instance = returnFiber.stateNode;
                    if (instance.render._isMockFunction) break;
                // Intentionally fall through to the next case, which handles both
                // functions and classes
                // eslint-disable-next-lined no-fallthrough
                case Block:
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent:
                    throw Error((getComponentName(returnFiber.type) || 'Component') + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.");
            }
             // Remaining cases are all treated as empty.
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return reconcileChildFibers;
    }
    var reconcileChildFibers1 = ChildReconciler(true);
    var mountChildFibers = ChildReconciler(false);
    function cloneChildFibers(current, workInProgress) {
        if (!(current === null || workInProgress.child === current.child)) throw Error("Resuming work not yet implemented.");
        if (workInProgress.child === null) return;
        var currentChild = workInProgress.child;
        var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
        workInProgress.child = newChild;
        newChild.return = workInProgress;
        while(currentChild.sibling !== null){
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress;
        }
        newChild.sibling = null;
    } // Reset a workInProgress child set to prepare it for a second pass.
    function resetChildFibers(workInProgress, lanes) {
        var child = workInProgress.child;
        while(child !== null){
            resetWorkInProgress(child, lanes);
            child = child.sibling;
        }
    }
    var NO_CONTEXT = {
    };
    var contextStackCursor$1 = createCursor(NO_CONTEXT);
    var contextFiberStackCursor = createCursor(NO_CONTEXT);
    var rootInstanceStackCursor = createCursor(NO_CONTEXT);
    function requiredContext(c) {
        if (!(c !== NO_CONTEXT)) throw Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c;
    }
    function getRootHostContainer() {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        return rootInstance;
    }
    function pushHostContainer(fiber, nextRootInstance) {
        // Push current root instance onto the stack;
        // This allows us to reset root when portals are popped.
        push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
        // However, we can't just call getRootHostContext() and push it because
        // we'd have a different number of entries on the stack depending on
        // whether getRootHostContext() throws somewhere in renderer code or not.
        // So we push an empty value first. This lets us safely unwind on errors.
        push(contextStackCursor$1, NO_CONTEXT, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.
        pop(contextStackCursor$1, fiber);
        push(contextStackCursor$1, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        var context = requiredContext(contextStackCursor$1.current);
        return context;
    }
    function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        var context = requiredContext(contextStackCursor$1.current);
        var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.
        if (context === nextContext) return;
         // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor$1, nextContext, fiber);
    }
    function popHostContext(fiber) {
        // Do not pop unless this Fiber provided the current context.
        // pushHostContext() only pushes Fibers that provide unique contexts.
        if (contextFiberStackCursor.current !== fiber) return;
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
    }
    var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
    // inherited deeply down the subtree. The upper bits only affect
    // this immediate suspense boundary and gets reset each new
    // boundary or suspense list.
    var SubtreeSuspenseContextMask = 1; // Subtree Flags:
    // InvisibleParentSuspenseContext indicates that one of our parent Suspense
    // boundaries is not currently showing visible main content.
    // Either because it is already showing a fallback or is not mounted at all.
    // We can use this to determine if it is desirable to trigger a fallback at
    // the parent. If not, then we might need to trigger undesirable boundaries
    // and/or suspend the commit to avoid hiding the parent content.
    var InvisibleParentSuspenseContext = 1; // Shallow Flags:
    // ForceSuspenseFallback can be used by SuspenseList to force newly added
    // items into their fallback state during one of the render passes.
    var ForceSuspenseFallback = 2;
    var suspenseStackCursor = createCursor(DefaultSuspenseContext);
    function hasSuspenseContext(parentContext, flag) {
        return (parentContext & flag) !== 0;
    }
    function setDefaultShallowSuspenseContext(parentContext) {
        return parentContext & SubtreeSuspenseContextMask;
    }
    function setShallowSuspenseContext(parentContext, shallowContext) {
        return parentContext & SubtreeSuspenseContextMask | shallowContext;
    }
    function addSubtreeSuspenseContext(parentContext, subtreeContext) {
        return parentContext | subtreeContext;
    }
    function pushSuspenseContext(fiber, newContext) {
        push(suspenseStackCursor, newContext, fiber);
    }
    function popSuspenseContext(fiber) {
        pop(suspenseStackCursor, fiber);
    }
    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
        // If it was the primary children that just suspended, capture and render the
        // fallback. Otherwise, don't capture and bubble to the next boundary.
        var nextState = workInProgress.memoizedState;
        if (nextState !== null) {
            if (nextState.dehydrated !== null) // A dehydrated boundary always captures.
            return true;
            return false;
        }
        var props = workInProgress.memoizedProps; // In order to capture, the Suspense component must have a fallback prop.
        if (props.fallback === undefined) return false;
         // Regular boundaries always capture.
        if (props.unstable_avoidThisFallback !== true) return true;
         // If it's a boundary we should avoid, then we prefer to bubble up to the
        // parent boundary if it is currently invisible.
        if (hasInvisibleParent) return false;
         // If the parent is not able to handle it, we must handle it.
        return true;
    }
    function findFirstSuspended(row) {
        var node = row;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                    var dehydrated = state.dehydrated;
                    if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) return node;
                }
            } else if (node.tag === SuspenseListComponent && // keep track of whether it suspended or not.
            node.memoizedProps.revealOrder !== undefined) {
                var didSuspend = (node.flags & DidCapture) !== NoFlags;
                if (didSuspend) return node;
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === row) return null;
            while(node.sibling === null){
                if (node.return === null || node.return === row) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return null;
    }
    var NoFlags$1 = /*  */ 0; // Represents whether effect should fire.
    var HasEffect = /* */ 1; // Represents the phase in which the effect (not the clean-up) fires.
    var Layout = /*    */ 2;
    var Passive$1 = /*   */ 4;
    // This may have been an insertion or a hydration.
    var hydrationParentFiber = null;
    var nextHydratableInstance = null;
    var isHydrating1 = false;
    function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        nextHydratableInstance = getFirstHydratableChild(parentInstance);
        hydrationParentFiber = fiber;
        isHydrating1 = true;
        return true;
    }
    function deleteHydratableInstance(returnFiber, instance) {
        switch(returnFiber.tag){
            case HostRoot:
                didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
                break;
            case HostComponent:
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
                break;
        }
        var childToDelete = createFiberFromHostInstanceForDeletion();
        childToDelete.stateNode = instance;
        childToDelete.return = returnFiber;
        childToDelete.flags = Deletion; // This might seem like it belongs on progressedFirstDeletion. However,
        // these children are not part of the reconciliation list of children.
        // Even if we abort and rereconcile the children, that will try to hydrate
        // again and the nodes are still in the host tree so these will be
        // recreated.
        if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = childToDelete;
            returnFiber.lastEffect = childToDelete;
        } else returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.flags = fiber.flags & ~Hydrating | Placement;
        switch(returnFiber.tag){
            case HostRoot:
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch(fiber.tag){
                    case HostComponent:
                        var type = fiber.type;
                        var props = fiber.pendingProps;
                        didNotFindHydratableContainerInstance(parentContainer, type);
                        break;
                    case HostText:
                        var text = fiber.pendingProps;
                        didNotFindHydratableContainerTextInstance(parentContainer, text);
                        break;
                }
                break;
            case HostComponent:
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch(fiber.tag){
                    case HostComponent:
                        var _type = fiber.type;
                        var _props = fiber.pendingProps;
                        didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type);
                        break;
                    case HostText:
                        var _text = fiber.pendingProps;
                        didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                        break;
                    case SuspenseComponent:
                        didNotFindHydratableSuspenseInstance(parentType, parentProps);
                        break;
                }
                break;
            default:
                return;
        }
    }
    function tryHydrate(fiber, nextInstance) {
        switch(fiber.tag){
            case HostComponent:
                var type = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type);
                if (instance !== null) {
                    fiber.stateNode = instance;
                    return true;
                }
                return false;
            case HostText:
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                    fiber.stateNode = textInstance;
                    return true;
                }
                return false;
            case SuspenseComponent:
                return false;
            default:
                return false;
        }
    }
    function tryToClaimNextHydratableInstance(fiber) {
        if (!isHydrating1) return;
        var nextInstance = nextHydratableInstance;
        if (!nextInstance) {
            // Nothing to hydrate. Make it an insertion.
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating1 = false;
            hydrationParentFiber = fiber;
            return;
        }
        var firstAttemptedInstance = nextInstance;
        if (!tryHydrate(fiber, nextInstance)) {
            // If we can't hydrate this instance let's try the next one.
            // We use this as a heuristic. It's based on intuition and not data so it
            // might be flawed or unnecessary.
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                // Nothing to hydrate. Make it an insertion.
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating1 = false;
                hydrationParentFiber = fiber;
                return;
            } // We matched the next one, we'll now assume that the first one was
            // superfluous and we'll delete it. Since we can't eagerly delete it
            // we'll have to schedule a deletion. To do that, this node needs a dummy
            // fiber associated with it.
            deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
        }
        hydrationParentFiber = fiber;
        nextHydratableInstance = getFirstHydratableChild(nextInstance);
    }
    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
        var instance = fiber.stateNode;
        var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber); // TODO: Type this specific to this type of component.
        fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update.
        if (updatePayload !== null) return true;
        return false;
    }
    function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode;
        var textContent = fiber.memoizedProps;
        var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
        if (shouldUpdate) {
            // We assume that prepareToHydrateHostTextInstance is called in a context where the
            // hydration parent is the parent host component of this host text.
            var returnFiber = hydrationParentFiber;
            if (returnFiber !== null) switch(returnFiber.tag){
                case HostRoot:
                    var parentContainer = returnFiber.stateNode.containerInfo;
                    didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                    break;
                case HostComponent:
                    var parentType = returnFiber.type;
                    var parentProps = returnFiber.memoizedProps;
                    var parentInstance = returnFiber.stateNode;
                    didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                    break;
            }
        }
        return shouldUpdate;
    }
    function skipPastDehydratedSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
    }
    function popToNextHostParent(fiber) {
        var parent = fiber.return;
        while(parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent)parent = parent.return;
        hydrationParentFiber = parent;
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) // We're deeper than the current hydration context, inside an inserted
        // tree.
        return false;
        if (!isHydrating1) {
            // If we're not currently hydrating but we're in a hydration context, then
            // we were an insertion and now need to pop up reenter hydration of our
            // siblings.
            popToNextHostParent(fiber);
            isHydrating1 = true;
            return false;
        }
        var type = fiber.type; // If we have any remaining hydratable nodes, we need to delete them now.
        // We only do this deeper than head and body since they tend to have random
        // other nodes in them. We also ignore components with pure text content in
        // side of them.
        // TODO: Better heuristic.
        if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
            var nextInstance = nextHydratableInstance;
            while(nextInstance){
                deleteHydratableInstance(fiber, nextInstance);
                nextInstance = getNextHydratableSibling(nextInstance);
            }
        }
        popToNextHostParent(fiber);
        if (fiber.tag === SuspenseComponent) nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
        else nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
        return true;
    }
    function resetHydrationState() {
        hydrationParentFiber = null;
        nextHydratableInstance = null;
        isHydrating1 = false;
    }
    function getIsHydrating() {
        return isHydrating1;
    }
    // and should be reset before starting a new render.
    // This tracks which mutable sources need to be reset after a render.
    var workInProgressSources = [];
    var rendererSigil$1;
    // Used to detect multiple renderers using the same mutable source.
    rendererSigil$1 = {
    };
    function markSourceAsDirty(mutableSource) {
        workInProgressSources.push(mutableSource);
    }
    function resetWorkInProgressVersions() {
        for(var i = 0; i < workInProgressSources.length; i++){
            var mutableSource = workInProgressSources[i];
            mutableSource._workInProgressVersionPrimary = null;
        }
        workInProgressSources.length = 0;
    }
    function getWorkInProgressVersion(mutableSource) {
        return mutableSource._workInProgressVersionPrimary;
    }
    function setWorkInProgressVersion(mutableSource, version) {
        mutableSource._workInProgressVersionPrimary = version;
        workInProgressSources.push(mutableSource);
    }
    function warnAboutMultipleRenderersDEV(mutableSource) {
        if (mutableSource._currentPrimaryRenderer == null) mutableSource._currentPrimaryRenderer = rendererSigil$1;
        else if (mutableSource._currentPrimaryRenderer !== rendererSigil$1) error1("Detected multiple renderers concurrently rendering the same mutable source. This is currently unsupported.");
    } // Eager reads the version of a mutable source and stores it on the root.
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
    var didWarnAboutMismatchedHooksForComponent;
    var didWarnAboutUseOpaqueIdentifier;
    didWarnAboutUseOpaqueIdentifier = {
    };
    didWarnAboutMismatchedHooksForComponent = new Set();
    // These are set right before calling the component.
    var renderLanes1 = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
    // the work-in-progress hook.
    var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
    // current hook list is the list that belongs to the current fiber. The
    // work-in-progress hook list is a new list that will be added to the
    // work-in-progress fiber.
    var currentHook1 = null;
    var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
    // does not get reset if we do another render pass; only when we're completely
    // finished evaluating this component. This is an optimization so we know
    // whether we need to clear render phase updates after a throw.
    var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
    // gets reset after each attempt.
    // TODO: Maybe there's some way to consolidate this with
    // `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.
    var didScheduleRenderPhaseUpdateDuringThisPass = false;
    var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook
    var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
    // The list stores the order of hooks used during the initial render (mount).
    // Subsequent renders (updates) reference this list.
    var hookTypesDev = null;
    var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
    // the dependencies for Hooks that need them (e.g. useEffect or useMemo).
    // When true, such Hooks will always be "remounted". Only used during hot reload.
    var ignorePreviousDependencies = false;
    function mountHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev === null) hookTypesDev = [
            hookName
        ];
        else hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev !== null) {
            hookTypesUpdateIndexDev++;
            if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) warnOnHookMismatchInDev(hookName);
        }
    }
    function checkDepsAreArrayDev(deps) {
        if (deps !== undefined && deps !== null && !Array.isArray(deps)) // Verify deps, but only on mount to avoid extra checks.
        // It's unlikely their type would change as usually you define them inline.
        error1("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
    }
    function warnOnHookMismatchInDev(currentHookName) {
        var componentName = getComponentName(currentlyRenderingFiber$1.type);
        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
            didWarnAboutMismatchedHooksForComponent.add(componentName);
            if (hookTypesDev !== null) {
                var table = '';
                var secondColumnStart = 30;
                for(var i = 0; i <= hookTypesUpdateIndexDev; i++){
                    var oldHookName = hookTypesDev[i];
                    var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                    var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
                    // lol @ IE not supporting String#repeat
                    while(row.length < secondColumnStart)row += ' ';
                    row += newHookName + '\n';
                    table += row;
                }
                error1("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
            }
        }
    }
    function throwInvalidHookError() {
        throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies) // Only true when this component is being hot reloaded.
        return false;
        if (prevDeps === null) {
            error1("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            return false;
        }
        // Don't bother comparing lengths in prod because these arrays should be
        // passed inline.
        if (nextDeps.length !== prevDeps.length) error1("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
        for(var i = 0; i < prevDeps.length && i < nextDeps.length; i++){
            if (objectIs(nextDeps[i], prevDeps[i])) continue;
            return false;
        }
        return true;
    }
    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
        renderLanes1 = nextRenderLanes;
        currentlyRenderingFiber$1 = workInProgress;
        hookTypesDev = current !== null ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1; // Used for hot reloading:
        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.lanes = NoLanes; // The following should have already been reset
        if (current !== null && current.memoizedState !== null) ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
        else if (hookTypesDev !== null) // This dispatcher handles an edge case where a component is updating,
        // but no stateful hooks have been used.
        // We want to match the production code behavior (which will use HooksDispatcherOnMount),
        // but with the extra DEV validation to ensure hooks ordering hasn't changed.
        // This dispatcher does that.
        ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
        else ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
        var children = Component(props, secondArg); // Check if there was a render phase update
        if (didScheduleRenderPhaseUpdateDuringThisPass) {
            // Keep rendering in a loop for as long as render phase updates continue to
            // be scheduled. Use a counter to prevent infinite loops.
            var numberOfReRenders = 0;
            do {
                didScheduleRenderPhaseUpdateDuringThisPass = false;
                if (!(numberOfReRenders < RE_RENDER_LIMIT)) throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                numberOfReRenders += 1;
                // Even when hot reloading, allow dependencies to stabilize
                // after first render to prevent infinite render phase updates.
                ignorePreviousDependencies = false;
                currentHook1 = null;
                workInProgressHook = null;
                workInProgress.updateQueue = null;
                // Also validate hook order for cascading updates.
                hookTypesUpdateIndexDev = -1;
                ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
                children = Component(props, secondArg);
            }while (didScheduleRenderPhaseUpdateDuringThisPass)
        } // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrancy.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        workInProgress._debugHookTypes = hookTypesDev;
        // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
        var didRenderTooFewHooks = currentHook1 !== null && currentHook1.next !== null;
        renderLanes1 = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook1 = null;
        workInProgressHook = null;
        currentHookNameInDev = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        didScheduleRenderPhaseUpdate = false;
        if (!!didRenderTooFewHooks) throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        return children;
    }
    function bailoutHooks(current, workInProgress, lanes) {
        workInProgress.updateQueue = current.updateQueue;
        workInProgress.flags &= ~(Passive | Update);
        current.lanes = removeLanes(current.lanes, lanes);
    }
    function resetHooksAfterThrow() {
        // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrancy.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        if (didScheduleRenderPhaseUpdate) {
            // There were render phase updates. These are only valid for this render
            // phase, which we are now aborting. Remove the updates from the queues so
            // they do not persist to the next render. Do not remove updates from hooks
            // that weren't processed.
            //
            // Only reset the updates from the queue if it has a clone. If it does
            // not have a clone, that means it wasn't processed, and the updates were
            // scheduled before we entered the render phase.
            var hook = currentlyRenderingFiber$1.memoizedState;
            while(hook !== null){
                var queue = hook.queue;
                if (queue !== null) queue.pending = null;
                hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
        }
        renderLanes1 = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook1 = null;
        workInProgressHook = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        isUpdatingOpaqueValueInRenderPhase = false;
        didScheduleRenderPhaseUpdateDuringThisPass = false;
    }
    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        if (workInProgressHook === null) // This is the first hook in the list
        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
        else // Append to the end of the list
        workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }
    function updateWorkInProgressHook() {
        // This function is used both for updates and for re-renders triggered by a
        // render phase update. It assumes there is either a current hook we can
        // clone, or a work-in-progress hook from a previous render pass that we can
        // use as a base. When we reach the end of the base list, we must switch to
        // the dispatcher used for mounts.
        var nextCurrentHook;
        if (currentHook1 === null) {
            var current = currentlyRenderingFiber$1.alternate;
            if (current !== null) nextCurrentHook = current.memoizedState;
            else nextCurrentHook = null;
        } else nextCurrentHook = currentHook1.next;
        var nextWorkInProgressHook;
        if (workInProgressHook === null) nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
        else nextWorkInProgressHook = workInProgressHook.next;
        if (nextWorkInProgressHook !== null) {
            // There's already a work-in-progress. Reuse it.
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook1 = nextCurrentHook;
        } else {
            // Clone from the current hook.
            if (!(nextCurrentHook !== null)) throw Error("Rendered more hooks than during the previous render.");
            currentHook1 = nextCurrentHook;
            var newHook = {
                memoizedState: currentHook1.memoizedState,
                baseState: currentHook1.baseState,
                baseQueue: currentHook1.baseQueue,
                queue: currentHook1.queue,
                next: null
            };
            if (workInProgressHook === null) // This is the first hook in the list.
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            else // Append to the end of the list.
            workInProgressHook = workInProgressHook.next = newHook;
        }
        return workInProgressHook;
    }
    function createFunctionComponentUpdateQueue() {
        return {
            lastEffect: null
        };
    }
    function basicStateReducer(state, action) {
        // $FlowFixMe: Flow doesn't like mixed types
        return typeof action === 'function' ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook();
        var initialState;
        if (init !== undefined) initialState = init(initialArg);
        else initialState = initialArg;
        hook.memoizedState = hook.baseState = initialState;
        var queue = hook.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
        };
        var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (!(queue !== null)) throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        queue.lastRenderedReducer = reducer;
        var current = currentHook1; // The last rebase update that is NOT part of the base state.
        var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.
        var pendingQueue = queue.pending;
        if (pendingQueue !== null) {
            // We have new updates that haven't been processed yet.
            // We'll add them to the base queue.
            if (baseQueue !== null) {
                // Merge the pending queue and the base queue.
                var baseFirst = baseQueue.next;
                var pendingFirst = pendingQueue.next;
                baseQueue.next = pendingFirst;
                pendingQueue.next = baseFirst;
            }
            if (current.baseQueue !== baseQueue) // Internal invariant that should never happen, but feasibly could in
            // the future if we implement resuming, or some form of that.
            error1("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
            current.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
        }
        if (baseQueue !== null) {
            // We have a queue to process.
            var first = baseQueue.next;
            var newState = current.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update = first;
            do {
                var updateLane = update.lane;
                if (!isSubsetOfLanes(renderLanes1, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        lane: updateLane,
                        action: update.action,
                        eagerReducer: update.eagerReducer,
                        eagerState: update.eagerState,
                        next: null
                    };
                    if (newBaseQueueLast === null) {
                        newBaseQueueFirst = newBaseQueueLast = clone;
                        newBaseState = newState;
                    } else newBaseQueueLast = newBaseQueueLast.next = clone;
                     // Update the remaining priority in the queue.
                    // TODO: Don't need to accumulate this. Instead, we can remove
                    // renderLanes from the original lanes.
                    currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                    markSkippedUpdateLanes(updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newBaseQueueLast !== null) {
                        var _clone = {
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            action: update.action,
                            eagerReducer: update.eagerReducer,
                            eagerState: update.eagerState,
                            next: null
                        };
                        newBaseQueueLast = newBaseQueueLast.next = _clone;
                    } // Process this update.
                    if (update.eagerReducer === reducer) // If this update was processed eagerly, and its reducer matches the
                    // current reducer, we can use the eagerly computed state.
                    newState = update.eagerState;
                    else {
                        var action = update.action;
                        newState = reducer(newState, action);
                    }
                }
                update = update.next;
            }while (update !== null && update !== first)
            if (newBaseQueueLast === null) newBaseState = newState;
            else newBaseQueueLast.next = newBaseQueueFirst;
             // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
        }
        var dispatch = queue.dispatch;
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function rerenderReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (!(queue !== null)) throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
        // work-in-progress hook.
        var dispatch = queue.dispatch;
        var lastRenderPhaseUpdate = queue.pending;
        var newState = hook.memoizedState;
        if (lastRenderPhaseUpdate !== null) {
            // The queue doesn't persist past this render pass.
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update = firstRenderPhaseUpdate;
            do {
                // Process this render phase update. We don't have to check the
                // priority because it will always be the same as the current
                // render's.
                var action = update.action;
                newState = reducer(newState, action);
                update = update.next;
            }while (update !== firstRenderPhaseUpdate) // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
            // the base state unless the queue is empty.
            // TODO: Not sure if this is the desired semantics, but it's what we
            // do for gDSFP. I can't remember why.
            if (hook.baseQueue === null) hook.baseState = newState;
            queue.lastRenderedState = newState;
        }
        return [
            newState,
            dispatch
        ];
    }
    function readFromUnsubcribedMutableSource(root, source, getSnapshot) {
        warnAboutMultipleRenderersDEV(source);
        var getVersion = source._getVersion;
        var version = getVersion(source._source); // Is it safe for this component to read from this source during the current render?
        var isSafeToReadFromSource = false; // Check the version first.
        // If this render has already been started with a specific version,
        // we can use it alone to determine if we can safely read from the source.
        var currentRenderVersion = getWorkInProgressVersion(source);
        if (currentRenderVersion !== null) // It's safe to read if the store hasn't been mutated since the last time
        // we read something.
        isSafeToReadFromSource = currentRenderVersion === version;
        else {
            // If there's no version, then this is the first time we've read from the
            // source during the current render pass, so we need to do a bit more work.
            // What we need to determine is if there are any hooks that already
            // subscribed to the source, and if so, whether there are any pending
            // mutations that haven't been synchronized yet.
            //
            // If there are no pending mutations, then `root.mutableReadLanes` will be
            // empty, and we know we can safely read.
            //
            // If there *are* pending mutations, we may still be able to safely read
            // if the currently rendering lanes are inclusive of the pending mutation
            // lanes, since that guarantees that the value we're about to read from
            // the source is consistent with the values that we read during the most
            // recent mutation.
            isSafeToReadFromSource = isSubsetOfLanes(renderLanes1, root.mutableReadLanes);
            if (isSafeToReadFromSource) // If it's safe to read from this source during the current render,
            // store the version in case other components read from it.
            // A changed version number will let those components know to throw and restart the render.
            setWorkInProgressVersion(source, version);
        }
        if (isSafeToReadFromSource) {
            var snapshot = getSnapshot(source._source);
            if (typeof snapshot === 'function') error1("Mutable source should not return a function as the snapshot value. Functions may close over mutable values and cause tearing.");
            return snapshot;
        } else {
            // This handles the special case of a mutable source being shared between renderers.
            // In that case, if the source is mutated between the first and second renderer,
            // The second renderer don't know that it needs to reset the WIP version during unwind,
            // (because the hook only marks sources as dirty if it's written to their WIP version).
            // That would cause this tear check to throw again and eventually be visible to the user.
            // We can avoid this infinite loop by explicitly marking the source as dirty.
            //
            // This can lead to tearing in the first renderer when it resumes,
            // but there's nothing we can do about that (short of throwing here and refusing to continue the render).
            markSourceAsDirty(source);
            throw Error("Cannot read from mutable source during the current render without tearing. This is a bug in React. Please file an issue.");
        }
    }
    function useMutableSource(hook, source, getSnapshot, subscribe) {
        var root = getWorkInProgressRoot();
        if (!(root !== null)) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        var getVersion = source._getVersion;
        var version = getVersion(source._source);
        var dispatcher = ReactCurrentDispatcher$1.current; // eslint-disable-next-line prefer-const
        var _dispatcher$useState = dispatcher.useState(function() {
            return readFromUnsubcribedMutableSource(root, source, getSnapshot);
        }), currentSnapshot = _dispatcher$useState[0], setSnapshot = _dispatcher$useState[1];
        var snapshot = currentSnapshot; // Grab a handle to the state hook as well.
        // We use it to clear the pending update queue if we have a new source.
        var stateHook = workInProgressHook;
        var memoizedState = hook.memoizedState;
        var refs = memoizedState.refs;
        var prevGetSnapshot = refs.getSnapshot;
        var prevSource = memoizedState.source;
        var prevSubscribe = memoizedState.subscribe;
        var fiber = currentlyRenderingFiber$1;
        hook.memoizedState = {
            refs: refs,
            source: source,
            subscribe: subscribe
        }; // Sync the values needed by our subscription handler after each commit.
        dispatcher.useEffect(function() {
            refs.getSnapshot = getSnapshot; // Normally the dispatch function for a state hook never changes,
            // but this hook recreates the queue in certain cases  to avoid updates from stale sources.
            // handleChange() below needs to reference the dispatch function without re-subscribing,
            // so we use a ref to ensure that it always has the latest version.
            refs.setSnapshot = setSnapshot; // Check for a possible change between when we last rendered now.
            var maybeNewVersion = getVersion(source._source);
            if (!objectIs(version, maybeNewVersion)) {
                var maybeNewSnapshot = getSnapshot(source._source);
                if (typeof maybeNewSnapshot === 'function') error1("Mutable source should not return a function as the snapshot value. Functions may close over mutable values and cause tearing.");
                if (!objectIs(snapshot, maybeNewSnapshot)) {
                    setSnapshot(maybeNewSnapshot);
                    var lane = requestUpdateLane(fiber);
                    markRootMutableRead(root, lane);
                } // If the source mutated between render and now,
                // there may be state updates already scheduled from the old source.
                // Entangle the updates so that they render in the same batch.
                markRootEntangled(root, root.mutableReadLanes);
            }
        }, [
            getSnapshot,
            source,
            subscribe
        ]); // If we got a new source or subscribe function, re-subscribe in a passive effect.
        dispatcher.useEffect(function() {
            var handleChange = function() {
                var latestGetSnapshot = refs.getSnapshot;
                var latestSetSnapshot = refs.setSnapshot;
                try {
                    latestSetSnapshot(latestGetSnapshot(source._source)); // Record a pending mutable source update with the same expiration time.
                    var lane = requestUpdateLane(fiber);
                    markRootMutableRead(root, lane);
                } catch (error) {
                    // A selector might throw after a source mutation.
                    // e.g. it might try to read from a part of the store that no longer exists.
                    // In this case we should still schedule an update with React.
                    // Worst case the selector will throw again and then an error boundary will handle it.
                    latestSetSnapshot(function() {
                        throw error;
                    });
                }
            };
            var unsubscribe = subscribe(source._source, handleChange);
            if (typeof unsubscribe !== 'function') error1('Mutable source subscribe function must return an unsubscribe function.');
            return unsubscribe;
        }, [
            source,
            subscribe
        ]); // If any of the inputs to useMutableSource change, reading is potentially unsafe.
        //
        // If either the source or the subscription have changed we can't can't trust the update queue.
        // Maybe the source changed in a way that the old subscription ignored but the new one depends on.
        //
        // If the getSnapshot function changed, we also shouldn't rely on the update queue.
        // It's possible that the underlying source was mutated between the when the last "change" event fired,
        // and when the current render (with the new getSnapshot function) is processed.
        //
        // In both cases, we need to throw away pending updates (since they are no longer relevant)
        // and treat reading from the source as we do in the mount case.
        if (!objectIs(prevGetSnapshot, getSnapshot) || !objectIs(prevSource, source) || !objectIs(prevSubscribe, subscribe)) {
            // Create a new queue and setState method,
            // So if there are interleaved updates, they get pushed to the older queue.
            // When this becomes current, the previous queue and dispatch method will be discarded,
            // including any interleaving updates that occur.
            var newQueue = {
                pending: null,
                dispatch: null,
                lastRenderedReducer: basicStateReducer,
                lastRenderedState: snapshot
            };
            newQueue.dispatch = setSnapshot = dispatchAction.bind(null, currentlyRenderingFiber$1, newQueue);
            stateHook.queue = newQueue;
            stateHook.baseQueue = null;
            snapshot = readFromUnsubcribedMutableSource(root, source, getSnapshot);
            stateHook.memoizedState = stateHook.baseState = snapshot;
        }
        return snapshot;
    }
    function mountMutableSource(source, getSnapshot, subscribe) {
        var hook = mountWorkInProgressHook();
        hook.memoizedState = {
            refs: {
                getSnapshot: getSnapshot,
                setSnapshot: null
            },
            source: source,
            subscribe: subscribe
        };
        return useMutableSource(hook, source, getSnapshot, subscribe);
    }
    function updateMutableSource(source, getSnapshot, subscribe) {
        var hook = updateWorkInProgressHook();
        return useMutableSource(hook, source, getSnapshot, subscribe);
    }
    function mountState(initialState) {
        var hook = mountWorkInProgressHook();
        if (typeof initialState === 'function') // $FlowFixMe: Flow doesn't like mixed types
        initialState = initialState();
        hook.memoizedState = hook.baseState = initialState;
        var queue = hook.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
        };
        var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateState(initialState) {
        return updateReducer(basicStateReducer);
    }
    function rerenderState(initialState) {
        return rerenderReducer(basicStateReducer);
    }
    function pushEffect(tag, create, destroy, deps) {
        var effect = {
            tag: tag,
            create: create,
            destroy: destroy,
            deps: deps,
            // Circular
            next: null
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
        } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) componentUpdateQueue.lastEffect = effect.next = effect;
            else {
                var firstEffect = lastEffect.next;
                lastEffect.next = effect;
                effect.next = firstEffect;
                componentUpdateQueue.lastEffect = effect;
            }
        }
        return effect;
    }
    function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        var ref = {
            current: initialValue
        };
        Object.seal(ref);
        hook.memoizedState = ref;
        return ref;
    }
    function updateRef(initialValue) {
        var hook = updateWorkInProgressHook();
        return hook.memoizedState;
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var destroy = undefined;
        if (currentHook1 !== null) {
            var prevEffect = currentHook1.memoizedState;
            destroy = prevEffect.destroy;
            if (nextDeps !== null) {
                var prevDeps = prevEffect.deps;
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                    pushEffect(hookFlags, create, destroy, nextDeps);
                    return;
                }
            }
        }
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
    }
    function mountEffect(create, deps) {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
        return mountEffectImpl(Update | Passive, Passive$1, create, deps);
    }
    function updateEffect(create, deps) {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
        return updateEffectImpl(Update | Passive, Passive$1, create, deps);
    }
    function mountLayoutEffect(create, deps) {
        return mountEffectImpl(Update, Layout, create, deps);
    }
    function updateLayoutEffect(create, deps) {
        return updateEffectImpl(Update, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
        if (typeof ref === 'function') {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
                refCallback(null);
            };
        } else if (ref !== null && ref !== undefined) {
            var refObject = ref;
            if (!refObject.hasOwnProperty('current')) error1("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", 'an object with keys {' + Object.keys(refObject).join(', ') + '}');
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
                refObject.current = null;
            };
        }
    }
    function mountImperativeHandle(ref, create, deps) {
        if (typeof create !== 'function') error1("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : 'null');
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        return mountEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function updateImperativeHandle(ref, create, deps) {
        if (typeof create !== 'function') error1("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : 'null');
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function mountDebugValue(value, formatterFn) {
    // The react-debug-hooks package injects its own implementation
    // so that e.g. DevTools can display custom hook values.
    }
    var updateDebugValue = mountDebugValue;
    function mountCallback(callback, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) // Assume these are defined. If they're not, areHookInputsEqual will warn.
        {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function mountDeferredValue(value) {
        var _mountState = mountState(value), prevValue = _mountState[0], setValue = _mountState[1];
        mountEffect(function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
                setValue(value);
            } finally{
                ReactCurrentBatchConfig$1.transition = prevTransition;
            }
        }, [
            value
        ]);
        return prevValue;
    }
    function updateDeferredValue(value) {
        var _updateState = updateState(), prevValue = _updateState[0], setValue = _updateState[1];
        updateEffect(function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
                setValue(value);
            } finally{
                ReactCurrentBatchConfig$1.transition = prevTransition;
            }
        }, [
            value
        ]);
        return prevValue;
    }
    function rerenderDeferredValue(value) {
        var _rerenderState = rerenderState(), prevValue = _rerenderState[0], setValue = _rerenderState[1];
        updateEffect(function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
                setValue(value);
            } finally{
                ReactCurrentBatchConfig$1.transition = prevTransition;
            }
        }, [
            value
        ]);
        return prevValue;
    }
    function startTransition(setPending, callback) {
        var priorityLevel = getCurrentPriorityLevel();
        runWithPriority$1(priorityLevel < UserBlockingPriority$2 ? UserBlockingPriority$2 : priorityLevel, function() {
            setPending(true);
        });
        runWithPriority$1(priorityLevel > NormalPriority$1 ? NormalPriority$1 : priorityLevel, function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
                setPending(false);
                callback();
            } finally{
                ReactCurrentBatchConfig$1.transition = prevTransition;
            }
        });
    }
    function mountTransition() {
        var _mountState2 = mountState(false), isPending = _mountState2[0], setPending = _mountState2[1]; // The `start` method can be stored on a ref, since `setPending`
        // never changes.
        var start = startTransition.bind(null, setPending);
        mountRef(start);
        return [
            start,
            isPending
        ];
    }
    function updateTransition() {
        var _updateState2 = updateState(), isPending = _updateState2[0];
        var startRef = updateRef();
        var start = startRef.current;
        return [
            start,
            isPending
        ];
    }
    function rerenderTransition() {
        var _rerenderState2 = rerenderState(), isPending = _rerenderState2[0];
        var startRef = updateRef();
        var start = startRef.current;
        return [
            start,
            isPending
        ];
    }
    var isUpdatingOpaqueValueInRenderPhase = false;
    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
        return isUpdatingOpaqueValueInRenderPhase;
    }
    function warnOnOpaqueIdentifierAccessInDEV(fiber) {
        // TODO: Should warn in effects and callbacks, too
        var name = getComponentName(fiber.type) || 'Unknown';
        if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {
            error1("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly.");
            didWarnAboutUseOpaqueIdentifier[name] = true;
        }
    }
    function mountOpaqueIdentifier() {
        var makeId = makeClientIdInDEV.bind(null, warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber$1));
        if (getIsHydrating()) {
            var didUpgrade = false;
            var fiber = currentlyRenderingFiber$1;
            var readValue = function() {
                if (!didUpgrade) {
                    // Only upgrade once. This works even inside the render phase because
                    // the update is added to a shared queue, which outlasts the
                    // in-progress render.
                    didUpgrade = true;
                    isUpdatingOpaqueValueInRenderPhase = true;
                    setId(makeId());
                    isUpdatingOpaqueValueInRenderPhase = false;
                    warnOnOpaqueIdentifierAccessInDEV(fiber);
                }
                throw Error("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly.");
            };
            var id = makeOpaqueHydratingObject(readValue);
            var setId = mountState(id)[1];
            if ((currentlyRenderingFiber$1.mode & BlockingMode) === NoMode) {
                currentlyRenderingFiber$1.flags |= Update | Passive;
                pushEffect(HasEffect | Passive$1, function() {
                    setId(makeId());
                }, undefined, null);
            }
            return id;
        } else {
            var _id = makeId();
            mountState(_id);
            return _id;
        }
    }
    function updateOpaqueIdentifier() {
        var id = updateState()[0];
        return id;
    }
    function rerenderOpaqueIdentifier() {
        var id = rerenderState()[0];
        return id;
    }
    function dispatchAction(fiber, queue, action) {
        if (typeof arguments[3] === 'function') error1("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            eagerReducer: null,
            eagerState: null,
            next: null
        }; // Append the update to the end of the list.
        var pending = queue.pending;
        if (pending === null) // This is the first update. Create a circular list.
        update.next = update;
        else {
            update.next = pending.next;
            pending.next = update;
        }
        queue.pending = update;
        var alternate = fiber.alternate;
        if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) // This is a render phase update. Stash it in a lazily-created map of
        // queue -> linked list of updates. After this render pass, we'll restart
        // and apply the stashed updates on top of the work-in-progress hook.
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
        else {
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
                // The queue is currently empty, which means we can eagerly compute the
                // next state before entering the render phase. If the new state is the
                // same as the current state, we may be able to bail out entirely.
                var lastRenderedReducer = queue.lastRenderedReducer;
                if (lastRenderedReducer !== null) {
                    var prevDispatcher;
                    prevDispatcher = ReactCurrentDispatcher$1.current;
                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                    try {
                        var currentState = queue.lastRenderedState;
                        var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
                        // it, on the update object. If the reducer hasn't changed by the
                        // time we enter the render phase, then the eager state can be used
                        // without calling the reducer again.
                        update.eagerReducer = lastRenderedReducer;
                        update.eagerState = eagerState;
                        if (objectIs(eagerState, currentState)) // Fast path. We can bail out without scheduling React to re-render.
                        // It's still possible that we'll need to rebase this update later,
                        // if the component re-renders for a different reason and by that
                        // time the reducer has changed.
                        return;
                    } catch (error) {
                    } finally{
                        ReactCurrentDispatcher$1.current = prevDispatcher;
                    }
                }
            }
            // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
            if ('undefined' !== typeof jest) {
                warnIfNotScopedWithMatchingAct(fiber);
                warnIfNotCurrentlyActingUpdatesInDev(fiber);
            }
            scheduleUpdateOnFiber(fiber, lane, eventTime);
        }
    }
    var ContextOnlyDispatcher = {
        readContext: readContext,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useMutableSource: throwInvalidHookError,
        useOpaqueIdentifier: throwInvalidHookError,
        unstable_isNewReconciler: enableNewReconciler
    };
    var HooksDispatcherOnMountInDEV = null;
    var HooksDispatcherOnMountWithHookTypesInDEV = null;
    var HooksDispatcherOnUpdateInDEV = null;
    var HooksDispatcherOnRerenderInDEV = null;
    var InvalidNestedHooksDispatcherOnMountInDEV = null;
    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    var warnInvalidContextAccess = function() {
        error1("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    };
    var warnInvalidHookAccess = function() {
        error1("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
    };
    HooksDispatcherOnMountInDEV = {
        readContext: function(context, observedBits) {
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            mountHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            mountHookTypesDev();
            return mountMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            mountHookTypesDev();
            return mountOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function(context, observedBits) {
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return mountMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            updateHookTypesDev();
            return mountOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnUpdateInDEV = {
        readContext: function(context, observedBits) {
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return updateMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            updateHookTypesDev();
            return updateOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnRerenderInDEV = {
        readContext: function(context, observedBits) {
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return updateMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            updateHookTypesDev();
            return rerenderOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function(context, observedBits) {
            warnInvalidContextAccess();
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function(context, observedBits) {
            warnInvalidContextAccess();
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function(context, observedBits) {
            warnInvalidContextAccess();
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    var now$1 = Scheduler.unstable_now;
    var commitTime1 = 0;
    var profilerStartTime = -1;
    function getCommitTime() {
        return commitTime1;
    }
    function recordCommitTime() {
        commitTime1 = now$1();
    }
    function startProfilerTimer(fiber) {
        profilerStartTime = now$1();
        if (fiber.actualStartTime < 0) fiber.actualStartTime = now$1();
    }
    function stopProfilerTimerIfRunning(fiber) {
        profilerStartTime = -1;
    }
    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
        if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) fiber.selfBaseDuration = elapsedTime;
            profilerStartTime = -1;
        }
    }
    function transferActualDuration(fiber) {
        // Transfer time spent rendering these children so we don't lose it
        // after we rerender. This is used as a helper in special cases
        // where we should count the work of multiple passes.
        var child = fiber.child;
        while(child){
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
        }
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var didReceiveUpdate = false;
    var didWarnAboutBadClass;
    var didWarnAboutModulePatternComponent;
    var didWarnAboutContextTypeOnFunctionComponent;
    var didWarnAboutGetDerivedStateOnFunctionComponent;
    var didWarnAboutFunctionRefs;
    var didWarnAboutReassigningProps;
    var didWarnAboutRevealOrder;
    var didWarnAboutTailOptions;
    didWarnAboutBadClass = {
    };
    didWarnAboutModulePatternComponent = {
    };
    didWarnAboutContextTypeOnFunctionComponent = {
    };
    didWarnAboutGetDerivedStateOnFunctionComponent = {
    };
    didWarnAboutFunctionRefs = {
    };
    didWarnAboutReassigningProps = false;
    didWarnAboutRevealOrder = {
    };
    didWarnAboutTailOptions = {
    };
    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
        if (current === null) // If this is a fresh new component that hasn't been rendered yet, we
        // won't update its child set by applying minimal side-effects. Instead,
        // we will add them all to the child before it gets rendered. That means
        // we can optimize this reconciliation pass by not tracking side-effects.
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
        else // If the current child is the same as the work in progress, it means that
        // we haven't yet started any work on these children. Therefore, we use
        // the clone algorithm to create a copy of all the current children.
        // If we had any progressed work already, that is invalid at this point so
        // let's throw it out.
        workInProgress.child = reconcileChildFibers1(workInProgress, current.child, nextChildren, renderLanes);
    }
    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
        // This function is fork of reconcileChildren. It's used in cases where we
        // want to reconcile without matching against the existing set. This has the
        // effect of all current children being unmounted; even if the type and key
        // are the same, the old child is unmounted and a new child is created.
        //
        // To do this, we're going to go through the reconcile algorithm twice. In
        // the first pass, we schedule a deletion for all the current children by
        // passing null.
        workInProgress.child = reconcileChildFibers1(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
        // pass null in place of where we usually pass the current child set. This has
        // the effect of remounting all children regardless of whether their
        // identities match.
        workInProgress.child = reconcileChildFibers1(workInProgress, null, nextChildren, renderLanes);
    }
    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentName(Component));
        }
        var render = Component.render;
        var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent
        var nextChildren;
        prepareToReadContext(workInProgress, renderLanes);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
        if (workInProgress.mode & StrictMode) {
            disableLogs();
            try {
                nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
            } finally{
                reenableLogs();
            }
        }
        setIsRendering(false);
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMemoComponent(current, workInProgress, Component, nextProps, updateLanes, renderLanes) {
        if (current === null) {
            var type = Component.type;
            if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === undefined) {
                var resolvedType = type;
                resolvedType = resolveFunctionForHotReloading(type);
                // and with only the default shallow comparison, we upgrade it
                // to a SimpleMemoComponent to allow fast path updates.
                workInProgress.tag = SimpleMemoComponent;
                workInProgress.type = resolvedType;
                validateFunctionComponentInDev(workInProgress, type);
                return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, updateLanes, renderLanes);
            }
            var innerPropTypes = type.propTypes;
            if (innerPropTypes) // Inner memo component props aren't currently validated in createElement.
            // We could move it there, but we'd still need this for lazy code path.
            checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentName(type));
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
            child.ref = workInProgress.ref;
            child.return = workInProgress;
            workInProgress.child = child;
            return child;
        }
        var _type = Component.type;
        var _innerPropTypes = _type.propTypes;
        if (_innerPropTypes) // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(_innerPropTypes, nextProps, 'prop', getComponentName(_type));
        var currentChild = current.child; // This is always exactly one child
        if (!includesSomeLane(updateLanes, renderLanes)) {
            // This will be the props with resolved defaultProps,
            // unlike current.memoizedProps which will be the unresolved ones.
            var prevProps = currentChild.memoizedProps; // Default to shallow comparison
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual;
            if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        var newChild = createWorkInProgress(currentChild, nextProps);
        newChild.ref = workInProgress.ref;
        newChild.return = workInProgress;
        workInProgress.child = newChild;
        return newChild;
    }
    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, updateLanes, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var outerMemoType = workInProgress.elementType;
            if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                // We warn when you define propTypes on lazy()
                // so let's just skip over it to find memo() outer wrapper.
                // Inner props for memo are validated later.
                var lazyComponent = outerMemoType;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    outerMemoType = init(payload);
                } catch (x) {
                    outerMemoType = null;
                } // Inner propTypes will be validated in the function component path.
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) checkPropTypes(outerPropTypes, nextProps, 'prop', getComponentName(outerMemoType));
            }
        }
        if (current !== null) {
            var prevProps = current.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {
                didReceiveUpdate = false;
                if (!includesSomeLane(renderLanes, updateLanes)) {
                    // The pending lanes were cleared at the beginning of beginWork. We're
                    // about to bail out, but there might be other lanes that weren't
                    // included in the current render. Usually, the priority level of the
                    // remaining updates is accumlated during the evaluation of the
                    // component (i.e. when processing the update queue). But since since
                    // we're bailing out early *without* evaluating the component, we need
                    // to account for it here, too. Reset to the value of the current fiber.
                    // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
                    // because a MemoComponent fiber does not have hooks or an update queue;
                    // rather, it wraps around an inner component, which may or may not
                    // contains hooks.
                    // TODO: Move the reset at in beginWork out of the common path so that
                    // this is no longer necessary.
                    workInProgress.lanes = current.lanes;
                    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
            }
        }
        return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }
    function updateOffscreenComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        var prevState = current !== null ? current.memoizedState : null;
        if (nextProps.mode === 'hidden' || nextProps.mode === 'unstable-defer-without-hiding') {
            if ((workInProgress.mode & ConcurrentMode) === NoMode) {
                // In legacy sync mode, don't defer the subtree. Render it now.
                // TODO: Figure out what we should do in Blocking mode.
                var nextState = {
                    baseLanes: NoLanes
                };
                workInProgress.memoizedState = nextState;
                pushRenderLanes(workInProgress, renderLanes);
            } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
                var nextBaseLanes;
                if (prevState !== null) {
                    var prevBaseLanes = prevState.baseLanes;
                    nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
                } else nextBaseLanes = renderLanes;
                 // Schedule this fiber to re-render at offscreen priority. Then bailout.
                markSpawnedWork(OffscreenLane);
                workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
                var _nextState = {
                    baseLanes: nextBaseLanes
                };
                workInProgress.memoizedState = _nextState; // We're about to bail out, but we need to push this to the stack anyway
                // to avoid a push/pop misalignment.
                pushRenderLanes(workInProgress, nextBaseLanes);
                return null;
            } else {
                // Rendering at offscreen, so we can clear the base lanes.
                var _nextState2 = {
                    baseLanes: NoLanes
                };
                workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.
                var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;
                pushRenderLanes(workInProgress, subtreeRenderLanes);
            }
        } else {
            var _subtreeRenderLanes;
            if (prevState !== null) {
                _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes); // Since we're not hidden anymore, reset the state
                workInProgress.memoizedState = null;
            } else // We weren't previously hidden, and we still aren't, so there's nothing
            // special to do. Need to push to the stack regardless, though, to avoid
            // a push/pop misalignment.
            _subtreeRenderLanes = renderLanes;
            pushRenderLanes(workInProgress, _subtreeRenderLanes);
        }
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    } // Note: These happen to have identical begin phases, for now. We shouldn't hold
    // ourselves to this constraint, though. If the behavior diverges, we should
    // fork the function.
    var updateLegacyHiddenComponent = updateOffscreenComponent;
    function updateFragment1(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMode(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateProfiler(current, workInProgress, renderLanes) {
        workInProgress.flags |= Update; // Reset effect durations for the next eventual effect phase.
        // These are reset during render to allow the DevTools commit hook a chance to read them,
        var stateNode = workInProgress.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        if (current === null && ref !== null || current !== null && current.ref !== ref) // Schedule a Ref effect
        workInProgress.flags |= Ref;
    }
    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentName(Component));
        }
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
        context = getMaskedContext(workInProgress, unmaskedContext);
        var nextChildren;
        prepareToReadContext(workInProgress, renderLanes);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
        if (workInProgress.mode & StrictMode) {
            disableLogs();
            try {
                nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
            } finally{
                reenableLogs();
            }
        }
        setIsRendering(false);
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentName(Component));
        }
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        var instance = workInProgress.stateNode;
        var shouldUpdate;
        if (instance === null) {
            if (current !== null) {
                // A class component without an instance only mounts if it suspended
                // inside a non-concurrent tree, in an inconsistent state. We want to
                // treat it like a new mount, even though an empty version of it already
                // committed. Disconnect the alternate pointers.
                current.alternate = null;
                workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
                workInProgress.flags |= Placement;
            } // In the initial pass we might need to construct the instance.
            constructClassInstance(workInProgress, Component, nextProps);
            mountClassInstance(workInProgress, Component, nextProps, renderLanes);
            shouldUpdate = true;
        } else if (current === null) // In a resume, we'll already have an instance we can reuse.
        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
        else shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
        var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);
        var inst = workInProgress.stateNode;
        if (shouldUpdate && inst.props !== nextProps) {
            if (!didWarnAboutReassigningProps) error1("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentName(workInProgress.type) || 'a component');
            didWarnAboutReassigningProps = true;
        }
        return nextUnitOfWork;
    }
    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
        // Refs should update even if shouldComponentUpdate returns false
        markRef(current, workInProgress);
        var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;
        if (!shouldUpdate && !didCaptureError) {
            // Context providers should defer to sCU for rendering
            if (hasContext) invalidateContextProvider(workInProgress, Component, false);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        var instance = workInProgress.stateNode; // Rerender
        ReactCurrentOwner$1.current = workInProgress;
        var nextChildren;
        if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
            // If we captured an error, but getDerivedStateFromError is not defined,
            // unmount all the children. componentDidCatch will schedule an update to
            // re-render a fallback. This is temporary until we migrate everyone to
            // the new API.
            // TODO: Warn in a future release.
            nextChildren = null;
            stopProfilerTimerIfRunning();
        } else {
            setIsRendering(true);
            nextChildren = instance.render();
            if (workInProgress.mode & StrictMode) {
                disableLogs();
                try {
                    instance.render();
                } finally{
                    reenableLogs();
                }
            }
            setIsRendering(false);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        if (current !== null && didCaptureError) // If we're recovering from an error, reconcile without reusing any of
        // the existing children. Conceptually, the normal children and the children
        // that are shown on error are two different sets, so we shouldn't reuse
        // normal children even if their identities match.
        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
         // Memoize state using the values we just used to render.
        // TODO: Restructure so we never read values from the instance.
        workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.
        if (hasContext) invalidateContextProvider(workInProgress, Component, true);
        return workInProgress.child;
    }
    function pushHostRootContext(workInProgress) {
        var root = workInProgress.stateNode;
        if (root.pendingContext) pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
        else if (root.context) // Should always be set
        pushTopLevelContextObject(workInProgress, root.context, false);
        pushHostContainer(workInProgress, root.containerInfo);
    }
    function updateHostRoot(current, workInProgress, renderLanes) {
        pushHostRootContext(workInProgress);
        var updateQueue = workInProgress.updateQueue;
        if (!(current !== null && updateQueue !== null)) throw Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.");
        var nextProps = workInProgress.pendingProps;
        var prevState = workInProgress.memoizedState;
        var prevChildren = prevState !== null ? prevState.element : null;
        cloneUpdateQueue(current, workInProgress);
        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
        var nextState = workInProgress.memoizedState; // Caution: React DevTools currently depends on this property
        // being called "element".
        var nextChildren = nextState.element;
        if (nextChildren === prevChildren) {
            resetHydrationState();
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        var root = workInProgress.stateNode;
        if (root.hydrate && enterHydrationState(workInProgress)) {
            var mutableSourceEagerHydrationData = root.mutableSourceEagerHydrationData;
            if (mutableSourceEagerHydrationData != null) for(var i = 0; i < mutableSourceEagerHydrationData.length; i += 2){
                var mutableSource = mutableSourceEagerHydrationData[i];
                var version = mutableSourceEagerHydrationData[i + 1];
                setWorkInProgressVersion(mutableSource, version);
            }
            var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
            workInProgress.child = child;
            var node = child;
            while(node){
                // Mark each child as hydrating. This is a fast path to know whether this
                // tree is part of a hydrating tree. This is used to determine if a child
                // node has fully mounted yet, and for scheduling event replaying.
                // Conceptually this is similar to Placement in that a new subtree is
                // inserted into the React tree here. It just happens to not need DOM
                // mutations because it already exists.
                node.flags = node.flags & ~Placement | Hydrating;
                node = node.sibling;
            }
        } else {
            // Otherwise reset hydration state in case we aborted and resumed another
            // root.
            reconcileChildren(current, workInProgress, nextChildren, renderLanes);
            resetHydrationState();
        }
        return workInProgress.child;
    }
    function updateHostComponent(current, workInProgress, renderLanes) {
        pushHostContext(workInProgress);
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
        var type = workInProgress.type;
        var nextProps = workInProgress.pendingProps;
        var prevProps = current !== null ? current.memoizedProps : null;
        var nextChildren = nextProps.children;
        var isDirectTextChild = shouldSetTextContent(type, nextProps);
        if (isDirectTextChild) // We special case a direct text child of a host node. This is a common
        // case. We won't handle it as a reified child. We will instead handle
        // this in the host environment that also has access to this prop. That
        // avoids allocating another HostText fiber and traversing it.
        nextChildren = null;
        else if (prevProps !== null && shouldSetTextContent(type, prevProps)) // If we're switching from a direct text child to a normal child, or to
        // empty, we need to schedule the text content to be reset.
        workInProgress.flags |= ContentReset;
        markRef(current, workInProgress);
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostText(current, workInProgress) {
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
         // Nothing to do here. This is terminal. We'll do the completion step
        // immediately after.
        return null;
    }
    function mountLazyComponent(_current, workInProgress, elementType, updateLanes, renderLanes) {
        if (_current !== null) {
            // A lazy component only mounts if it suspended inside a non-
            // concurrent tree, in an inconsistent state. We want to treat it like
            // a new mount, even though an empty version of it already committed.
            // Disconnect the alternate pointers.
            _current.alternate = null;
            workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
            workInProgress.flags |= Placement;
        }
        var props = workInProgress.pendingProps;
        var lazyComponent = elementType;
        var payload = lazyComponent._payload;
        var init = lazyComponent._init;
        var Component = init(payload); // Store the unwrapped component in the type.
        workInProgress.type = Component;
        var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
        var resolvedProps = resolveDefaultProps(Component, props);
        var child;
        switch(resolvedTag){
            case FunctionComponent:
                validateFunctionComponentInDev(workInProgress, Component);
                workInProgress.type = Component = resolveFunctionForHotReloading(Component);
                child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ClassComponent:
                workInProgress.type = Component = resolveClassForHotReloading(Component);
                child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ForwardRef:
                workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
                child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case MemoComponent:
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = Component.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, resolvedProps, 'prop', getComponentName(Component));
                }
                child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), updateLanes, renderLanes);
                return child;
        }
        var hint = '';
        if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) hint = ' Did you wrap a component in React.lazy() more than once?';
        throw Error("Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint);
    }
    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
        if (_current !== null) {
            // An incomplete component only mounts if it suspended inside a non-
            // concurrent tree, in an inconsistent state. We want to treat it like
            // a new mount, even though an empty version of it already committed.
            // Disconnect the alternate pointers.
            _current.alternate = null;
            workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
            workInProgress.flags |= Placement;
        } // Promote the fiber to a class and try rendering again.
        workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
        // Push context providers early to prevent context stack mismatches.
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        constructClassInstance(workInProgress, Component, nextProps);
        mountClassInstance(workInProgress, Component, nextProps, renderLanes);
        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
    }
    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
        if (_current !== null) {
            // An indeterminate component only mounts if it suspended inside a non-
            // concurrent tree, in an inconsistent state. We want to treat it like
            // a new mount, even though an empty version of it already committed.
            // Disconnect the alternate pointers.
            _current.alternate = null;
            workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
            workInProgress.flags |= Placement;
        }
        var props = workInProgress.pendingProps;
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
        context = getMaskedContext(workInProgress, unmaskedContext);
        prepareToReadContext(workInProgress, renderLanes);
        var value;
        if (Component.prototype && typeof Component.prototype.render === 'function') {
            var componentName = getComponentName(Component) || 'Unknown';
            if (!didWarnAboutBadClass[componentName]) {
                error1("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
            }
        }
        if (workInProgress.mode & StrictMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        setIsRendering(true);
        ReactCurrentOwner$1.current = workInProgress;
        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
        setIsRendering(false);
        workInProgress.flags |= PerformedWork;
        // Support for module components is deprecated and is removed behind a flag.
        // Whether or not it would crash later, we want to show a good message in DEV first.
        if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
            var _componentName = getComponentName(Component) || 'Unknown';
            if (!didWarnAboutModulePatternComponent[_componentName]) {
                error1("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
            }
        }
        if (// Eventually we'll delete this branch altogether.
        typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
            var _componentName2 = getComponentName(Component) || 'Unknown';
            if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error1("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
            }
            workInProgress.tag = ClassComponent; // Throw out any hooks that were used.
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
            // During mounting we don't know the child context yet as the instance doesn't exist.
            // We will invalidate the child context in finishClassComponent() right after rendering.
            var hasContext = false;
            if (isContextProvider(Component)) {
                hasContext = true;
                pushContextProvider(workInProgress);
            } else hasContext = false;
            workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
            initializeUpdateQueue(workInProgress);
            var getDerivedStateFromProps = Component.getDerivedStateFromProps;
            if (typeof getDerivedStateFromProps === 'function') applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
            adoptClassInstance(workInProgress, value);
            mountClassInstance(workInProgress, Component, props, renderLanes);
            return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
        } else {
            // Proceed under the assumption that this is a function component
            workInProgress.tag = FunctionComponent;
            if (workInProgress.mode & StrictMode) {
                disableLogs();
                try {
                    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
                } finally{
                    reenableLogs();
                }
            }
            reconcileChildren(null, workInProgress, value, renderLanes);
            validateFunctionComponentInDev(workInProgress, Component);
            return workInProgress.child;
        }
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
        if (Component) {
            if (Component.childContextTypes) error1('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');
        }
        if (workInProgress.ref !== null) {
            var info = '';
            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
            if (ownerName) info += '\n\nCheck the render method of `' + ownerName + '`.';
            var warningKey = ownerName || workInProgress._debugID || '';
            var debugSource = workInProgress._debugSource;
            if (debugSource) warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
            if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error1("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
            }
        }
        if (typeof Component.getDerivedStateFromProps === 'function') {
            var _componentName3 = getComponentName(Component) || 'Unknown';
            if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error1('%s: Function components do not support getDerivedStateFromProps.', _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
            }
        }
        if (typeof Component.contextType === 'object' && Component.contextType !== null) {
            var _componentName4 = getComponentName(Component) || 'Unknown';
            if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error1('%s: Function components do not support contextType.', _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
            }
        }
    }
    var SUSPENDED_MARKER = {
        dehydrated: null,
        retryLane: NoLane
    };
    function mountSuspenseOffscreenState(renderLanes) {
        return {
            baseLanes: renderLanes
        };
    }
    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
        return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes)
        };
    } // TODO: Probably should inline this back
    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
        // If we're already showing a fallback, there are cases where we need to
        // remain on that fallback regardless of whether the content has resolved.
        // For example, SuspenseList coordinates when nested content appears.
        if (current !== null) {
            var suspenseState = current.memoizedState;
            if (suspenseState === null) // Currently showing content. Don't hide it, even if ForceSuspenseFallack
            // is true. More precise name might be "ForceRemainSuspenseFallback".
            // Note: This is a factoring smell. Can't remain on a fallback if there's
            // no fallback to remain on.
            return false;
        } // Not currently showing content. Consult the Suspense context.
        return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
    }
    function getRemainingWorkInPrimaryTree(current, renderLanes) {
        // TODO: Should not remove render lanes that were pinged during this render
        return removeLanes(current.childLanes, renderLanes);
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.
        if (shouldSuspend(workInProgress)) workInProgress.flags |= DidCapture;
        var suspenseContext = suspenseStackCursor.current;
        var showFallback = false;
        var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;
        if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
            // Something in this boundary's subtree already suspended. Switch to
            // rendering the fallback children.
            showFallback = true;
            workInProgress.flags &= ~DidCapture;
        } else {
            // Attempting the main content
            if (current === null || current.memoizedState !== null) // This is a new mount or this boundary is already showing a fallback state.
            // Mark this subtree context as having at least one invisible parent that could
            // handle the fallback state.
            // Boundaries without fallbacks or should be avoided are not considered since
            // they cannot handle preferred fallback states.
            {
                if (nextProps.fallback !== undefined && nextProps.unstable_avoidThisFallback !== true) suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
            }
        }
        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
        // boundary's children. This involves some custom reconcilation logic. Two
        // main reasons this is so complicated.
        //
        // First, Legacy Mode has different semantics for backwards compatibility. The
        // primary tree will commit in an inconsistent state, so when we do the
        // second pass to render the fallback, we do some exceedingly, uh, clever
        // hacks to make that not totally break. Like transferring effects and
        // deletions from hidden tree. In Concurrent Mode, it's much simpler,
        // because we bailout on the primary tree completely and leave it in its old
        // state, no effects. Same as what we do for Offscreen (except that
        // Offscreen doesn't have the first render pass).
        //
        // Second is hydration. During hydration, the Suspense fiber has a slightly
        // different layout, where the child points to a dehydrated fragment, which
        // contains the DOM rendered by the server.
        //
        // Third, even if you set all that aside, Suspense is like error boundaries in
        // that we first we try to render one tree, and if that fails, we render again
        // and switch to a different tree. Like a try/catch block. So we have to track
        // which branch we're currently rendering. Ideally we would model this using
        // a stack.
        if (current === null) {
            // Initial mount
            // If we're currently hydrating, try to hydrate this boundary.
            // But only if this has a fallback.
            if (nextProps.fallback !== undefined) tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
                var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var primaryChildFragment = workInProgress.child;
                primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackFragment;
            } else if (typeof nextProps.unstable_expectedLoadTime === 'number') {
                // This is a CPU-bound tree. Skip this tree and show a placeholder to
                // unblock the surrounding content. Then immediately retry after the
                // initial commit.
                var _fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var _primaryChildFragment = workInProgress.child;
                _primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER; // Since nothing actually suspended, there will nothing to ping this to
                // get it started back up to attempt the next item. While in terms of
                // priority this work has the same priority as this current render, it's
                // not part of the same transition once the transition has committed. If
                // it's sync, we still want to yield so that it can be painted.
                // Conceptually, this is really the same as pinging. We can use any
                // RetryLane even if it's the one currently rendering since we're leaving
                // it behind on this node.
                workInProgress.lanes = SomeRetryLane;
                markSpawnedWork(SomeRetryLane);
                return _fallbackFragment;
            } else return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren, renderLanes);
        } else {
            // This is an update.
            // If the current fiber has a SuspenseState, that means it's already showing
            // a fallback.
            var prevState = current.memoizedState;
            if (prevState !== null) {
                if (showFallback) {
                    var _nextFallbackChildren2 = nextProps.fallback;
                    var _nextPrimaryChildren2 = nextProps.children;
                    var _fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren2, _nextFallbackChildren2, renderLanes);
                    var _primaryChildFragment3 = workInProgress.child;
                    var prevOffscreenState = current.child.memoizedState;
                    _primaryChildFragment3.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);
                    _primaryChildFragment3.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
                    workInProgress.memoizedState = SUSPENDED_MARKER;
                    return _fallbackChildFragment;
                } else {
                    var _nextPrimaryChildren3 = nextProps.children;
                    var _primaryChildFragment4 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren3, renderLanes);
                    workInProgress.memoizedState = null;
                    return _primaryChildFragment4;
                }
            } else // The current tree is not already showing a fallback.
            if (showFallback) {
                // Timed out.
                var _nextFallbackChildren3 = nextProps.fallback;
                var _nextPrimaryChildren4 = nextProps.children;
                var _fallbackChildFragment2 = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren4, _nextFallbackChildren3, renderLanes);
                var _primaryChildFragment5 = workInProgress.child;
                var _prevOffscreenState = current.child.memoizedState;
                _primaryChildFragment5.memoizedState = _prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(_prevOffscreenState, renderLanes);
                _primaryChildFragment5.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes); // Skip the primary children, and continue working on the
                // fallback children.
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return _fallbackChildFragment2;
            } else {
                // Still haven't timed out. Continue rendering the children, like we
                // normally do.
                var _nextPrimaryChildren5 = nextProps.children;
                var _primaryChildFragment6 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren5, renderLanes);
                workInProgress.memoizedState = null;
                return _primaryChildFragment6;
            }
        }
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
        var mode = workInProgress.mode;
        var primaryChildProps = {
            mode: 'visible',
            children: primaryChildren
        };
        var primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, renderLanes, null);
        primaryChildFragment.return = workInProgress;
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var progressedPrimaryFragment = workInProgress.child;
        var primaryChildProps = {
            mode: 'hidden',
            children: primaryChildren
        };
        var primaryChildFragment;
        var fallbackChildFragment;
        if ((mode & BlockingMode) === NoMode && progressedPrimaryFragment !== null) {
            // In legacy mode, we commit the primary tree as if it successfully
            // completed, even though it's in an inconsistent state.
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = 0;
                primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        } else {
            primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, NoLanes, null);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        }
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function createWorkInProgressOffscreenFiber(current, offscreenProps) {
        // The props argument to `createWorkInProgress` is `any` typed, so we use this
        // wrapper function to constrain it.
        return createWorkInProgress(current, offscreenProps);
    }
    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: 'visible',
            children: primaryChildren
        });
        if ((workInProgress.mode & BlockingMode) === NoMode) primaryChildFragment.lanes = renderLanes;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = null;
        if (currentFallbackChildFragment !== null) {
            // Delete the fallback child fragment
            currentFallbackChildFragment.nextEffect = null;
            currentFallbackChildFragment.flags = Deletion;
            workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChildFragment;
        }
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildProps = {
            mode: 'hidden',
            children: primaryChildren
        };
        var primaryChildFragment;
        if (// completed, even though it's in an inconsistent state.
        (mode & BlockingMode) === NoMode && // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        workInProgress.child !== currentPrimaryChildFragment) {
            var progressedPrimaryFragment = workInProgress.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
                primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            } // The fallback fiber was added as a deletion effect during the first pass.
            // However, since we're going to remain on the fallback, we no longer want
            // to delete it. So we need to remove it from the list. Deletions are stored
            // on the same list as effects. We want to keep the effects from the primary
            // tree. So we copy the primary child fragment's effect list, which does not
            // include the fallback deletion effect.
            var progressedLastEffect = primaryChildFragment.lastEffect;
            if (progressedLastEffect !== null) {
                workInProgress.firstEffect = primaryChildFragment.firstEffect;
                workInProgress.lastEffect = progressedLastEffect;
                progressedLastEffect.nextEffect = null;
            } else // TODO: Reset this somewhere else? Lol legacy mode is so weird.
            workInProgress.firstEffect = workInProgress.lastEffect = null;
        } else primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
        var fallbackChildFragment;
        if (currentFallbackChildFragment !== null) fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
        else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
            // mounted but this is a new fiber.
            fallbackChildFragment.flags |= Placement;
        }
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function scheduleWorkOnFiber(fiber, renderLanes) {
        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
        scheduleWorkOnParentPath(fiber.return, renderLanes);
    }
    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
        // Mark any Suspense boundaries with fallbacks as having work to do.
        // If they were previously forced into fallbacks, they may now be able
        // to unblock.
        var node = firstChild;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) scheduleWorkOnFiber(node, renderLanes);
            } else if (node.tag === SuspenseListComponent) // If the tail is hidden there might not be an Suspense boundaries
            // to schedule work on. In this case we have to schedule it on the
            // list itself.
            // We don't have to traverse to the children of the list since
            // the list will propagate the change when it rerenders.
            scheduleWorkOnFiber(node, renderLanes);
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function findLastContentRow(firstChild) {
        // This is going to find the last row among these children that is already
        // showing content on the screen, as opposed to being in fallback state or
        // new. If a row has multiple Suspense boundaries, any of them being in the
        // fallback state, counts as the whole row being in a fallback state.
        // Note that the "rows" will be workInProgress, but any nested children
        // will still be current since we haven't rendered them yet. The mounted
        // order may not be the same as the new order. We use the new order.
        var row = firstChild;
        var lastContentRow = null;
        while(row !== null){
            var currentRow = row.alternate; // New rows can't be content rows.
            if (currentRow !== null && findFirstSuspended(currentRow) === null) lastContentRow = row;
            row = row.sibling;
        }
        return lastContentRow;
    }
    function validateRevealOrder(revealOrder) {
        if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
            didWarnAboutRevealOrder[revealOrder] = true;
            if (typeof revealOrder === 'string') switch(revealOrder.toLowerCase()){
                case 'together':
                case 'forwards':
                case 'backwards':
                    error1("\"%s\" is not a valid value for revealOrder on <SuspenseList />. Use lowercase \"%s\" instead.", revealOrder, revealOrder.toLowerCase());
                    break;
                case 'forward':
                case 'backward':
                    error1("\"%s\" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use \"%ss\" instead.", revealOrder, revealOrder.toLowerCase());
                    break;
                default:
                    error1("\"%s\" is not a supported revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?", revealOrder);
                    break;
            }
            else error1("%s is not a supported value for revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?", revealOrder);
        }
    }
    function validateTailOptions(tailMode, revealOrder) {
        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
            if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
                didWarnAboutTailOptions[tailMode] = true;
                error1("\"%s\" is not a supported value for tail on <SuspenseList />. Did you mean \"collapsed\" or \"hidden\"?", tailMode);
            } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
                didWarnAboutTailOptions[tailMode] = true;
                error1("<SuspenseList tail=\"%s\" /> is only valid if revealOrder is \"forwards\" or \"backwards\". Did you mean to specify revealOrder=\"forwards\"?", tailMode);
            }
        }
    }
    function validateSuspenseListNestedChild(childSlot, index) {
        var isArray = Array.isArray(childSlot);
        var isIterable = !isArray && typeof getIteratorFn(childSlot) === 'function';
        if (isArray || isIterable) {
            var type = isArray ? 'array' : 'iterable';
            error1("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index, type);
            return false;
        }
        return true;
    }
    function validateSuspenseListChildren(children, revealOrder) {
        if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
            if (Array.isArray(children)) for(var i = 0; i < children.length; i++){
                if (!validateSuspenseListNestedChild(children[i], i)) return;
            }
            else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === 'function') {
                    var childrenIterator = iteratorFn.call(children);
                    if (childrenIterator) {
                        var step = childrenIterator.next();
                        var _i = 0;
                        for(; !step.done; step = childrenIterator.next()){
                            if (!validateSuspenseListNestedChild(step.value, _i)) return;
                            _i++;
                        }
                    }
                } else error1("A single row was passed to a <SuspenseList revealOrder=\"%s\" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?", revealOrder);
            }
        }
    }
    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {
        var renderState = workInProgress.memoizedState;
        if (renderState === null) workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode,
            lastEffect: lastEffectBeforeRendering
        };
        else {
            // We can reuse the existing object from previous renders.
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
            renderState.lastEffect = lastEffectBeforeRendering;
        }
    } // This can end up rendering this component multiple passes.
    // The first pass splits the children fibers into two sets. A head and tail.
    // We first render the head. If anything is in fallback state, we do another
    // pass through beginWork to rerender all children (including the tail) with
    // the force suspend context. If the first render didn't have anything in
    // in fallback state. Then we render each row in the tail one-by-one.
    // That happens in the completeWork phase without going back to beginWork.
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var revealOrder = nextProps.revealOrder;
        var tailMode = nextProps.tail;
        var newChildren = nextProps.children;
        validateRevealOrder(revealOrder);
        validateTailOptions(tailMode, revealOrder);
        validateSuspenseListChildren(newChildren, revealOrder);
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        var suspenseContext = suspenseStackCursor.current;
        var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress.flags |= DidCapture;
        } else {
            var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) // If we previously forced a fallback, we need to schedule work
            // on any nested boundaries to let them know to try to render
            // again. This is the same as context updating.
            propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        }
        pushSuspenseContext(workInProgress, suspenseContext);
        if ((workInProgress.mode & BlockingMode) === NoMode) // In legacy mode, SuspenseList doesn't work so we just
        // use make it a noop by treating it as the default revealOrder.
        workInProgress.memoizedState = null;
        else switch(revealOrder){
            case 'forwards':
                var lastContentRow = findLastContentRow(workInProgress.child);
                var tail;
                if (lastContentRow === null) {
                    // The whole list is part of the tail.
                    // TODO: We could fast path by just rendering the tail now.
                    tail = workInProgress.child;
                    workInProgress.child = null;
                } else {
                    // Disconnect the tail rows after the content row.
                    // We're going to render them separately later.
                    tail = lastContentRow.sibling;
                    lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(workInProgress, false, tail, lastContentRow, tailMode, workInProgress.lastEffect);
                break;
            case 'backwards':
                // We're going to find the first row that has existing content.
                // At the same time we're going to reverse the list of everything
                // we pass in the meantime. That's going to be our tail in reverse
                // order.
                var _tail = null;
                var row = workInProgress.child;
                workInProgress.child = null;
                while(row !== null){
                    var currentRow = row.alternate; // New rows can't be content rows.
                    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                        // This is the beginning of the main content.
                        workInProgress.child = row;
                        break;
                    }
                    var nextRow = row.sibling;
                    row.sibling = _tail;
                    _tail = row;
                    row = nextRow;
                } // TODO: If workInProgress.child is null, we can continue on the tail immediately.
                initSuspenseListRenderState(workInProgress, true, _tail, null, tailMode, workInProgress.lastEffect);
                break;
            case 'together':
                initSuspenseListRenderState(workInProgress, false, null, null, undefined, workInProgress.lastEffect);
                break;
            default:
                // The default reveal order is the same as not having
                // a boundary.
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }
    function updatePortalComponent(current, workInProgress, renderLanes) {
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        var nextChildren = workInProgress.pendingProps;
        if (current === null) // Portals are special because we don't append the children during mount
        // but at commit. Therefore we need to track insertions which the normal
        // flow doesn't do during mount. This doesn't happen at the root because
        // the root always starts with a "current" with a null child.
        // TODO: Consider unifying this with how the root works.
        workInProgress.child = reconcileChildFibers1(workInProgress, null, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
    function updateContextProvider(current, workInProgress, renderLanes) {
        var providerType = workInProgress.type;
        var context = providerType._context;
        var newProps = workInProgress.pendingProps;
        var oldProps = workInProgress.memoizedProps;
        var newValue = newProps.value;
        if (!('value' in newProps)) {
            if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error1('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');
            }
        }
        var providerPropTypes = workInProgress.type.propTypes;
        if (providerPropTypes) checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');
        pushProvider(workInProgress, newValue);
        if (oldProps !== null) {
            var oldValue = oldProps.value;
            var changedBits = calculateChangedBits(context, newValue, oldValue);
            if (changedBits === 0) {
                // No change. Bailout early if children are the same.
                if (oldProps.children === newProps.children && !hasContextChanged()) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            } else // The context value changed. Search for matching consumers and schedule
            // them to update.
            propagateContextChange(workInProgress, context, changedBits, renderLanes);
        }
        var newChildren = newProps.children;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingContextAsConsumer = false;
    function updateContextConsumer(current, workInProgress, renderLanes) {
        var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
        if (context._context === undefined) {
            // This may be because it's a Context (rather than a Consumer).
            // Or it may be because it's older React where they're the same thing.
            // We only want to warn if we're sure it's a new React.
            if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                    hasWarnedAboutUsingContextAsConsumer = true;
                    error1("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
            }
        } else context = context._context;
        var newProps = workInProgress.pendingProps;
        var render = newProps.children;
        if (typeof render !== 'function') error1("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
        prepareToReadContext(workInProgress, renderLanes);
        var newValue = readContext(context, newProps.unstable_observedBits);
        var newChildren;
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        newChildren = render(newValue);
        setIsRendering(false);
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    function markWorkInProgressReceivedUpdate() {
        didReceiveUpdate = true;
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
        if (current !== null) // Reuse previous dependencies
        workInProgress.dependencies = current.dependencies;
        // Don't update "base" render times for bailouts.
        stopProfilerTimerIfRunning();
        markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.
        if (!includesSomeLane(renderLanes, workInProgress.childLanes)) // The children don't have any work either. We can skip them.
        // TODO: Once we add back resuming, we should check if the children are
        // a work-in-progress set. If so, we need to transfer their effects.
        return null;
        else {
            // This fiber doesn't have work, but its subtree does. Clone the child
            // fibers and continue.
            cloneChildFibers(current, workInProgress);
            return workInProgress.child;
        }
    }
    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
        var returnFiber = oldWorkInProgress.return;
        if (returnFiber === null) throw new Error('Cannot swap the root fiber.');
         // Disconnect from the old current.
        // It will get deleted.
        current.alternate = null;
        oldWorkInProgress.alternate = null; // Connect to the new tree.
        newWorkInProgress.index = oldWorkInProgress.index;
        newWorkInProgress.sibling = oldWorkInProgress.sibling;
        newWorkInProgress.return = oldWorkInProgress.return;
        newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.
        if (oldWorkInProgress === returnFiber.child) returnFiber.child = newWorkInProgress;
        else {
            var prevSibling = returnFiber.child;
            if (prevSibling === null) throw new Error('Expected parent to have a child.');
            while(prevSibling.sibling !== oldWorkInProgress){
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) throw new Error('Expected to find the previous sibling.');
            }
            prevSibling.sibling = newWorkInProgress;
        } // Delete the old fiber and place the new one.
        // Since the old fiber is disconnected, we have to schedule it manually.
        var last = returnFiber.lastEffect;
        if (last !== null) {
            last.nextEffect = current;
            returnFiber.lastEffect = current;
        } else returnFiber.firstEffect = returnFiber.lastEffect = current;
        current.nextEffect = null;
        current.flags = Deletion;
        newWorkInProgress.flags |= Placement; // Restart work from the new fiber.
        return newWorkInProgress;
    }
    function beginWork(current, workInProgress, renderLanes) {
        var updateLanes = workInProgress.lanes;
        if (workInProgress._debugNeedsRemount && current !== null) // This will restart the begin phase with a new fiber.
        return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
        if (current !== null) {
            var oldProps = current.memoizedProps;
            var newProps = workInProgress.pendingProps;
            if (oldProps !== newProps || hasContextChanged() || workInProgress.type !== current.type) // If props or context changed, mark the fiber as having performed work.
            // This may be unset if the props are determined to be equal later (memo).
            didReceiveUpdate = true;
            else if (!includesSomeLane(renderLanes, updateLanes)) {
                didReceiveUpdate = false; // This fiber does not have any pending work. Bailout without entering
                // the begin phase. There's still some bookkeeping we that needs to be done
                // in this optimized path, mostly pushing stuff onto the stack.
                switch(workInProgress.tag){
                    case HostRoot:
                        pushHostRootContext(workInProgress);
                        resetHydrationState();
                        break;
                    case HostComponent:
                        pushHostContext(workInProgress);
                        break;
                    case ClassComponent:
                        var Component = workInProgress.type;
                        if (isContextProvider(Component)) pushContextProvider(workInProgress);
                        break;
                    case HostPortal:
                        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                        break;
                    case ContextProvider:
                        var newValue = workInProgress.memoizedProps.value;
                        pushProvider(workInProgress, newValue);
                        break;
                    case Profiler:
                        // Profiler should only call onRender when one of its descendants actually rendered.
                        var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                        if (hasChildWork) workInProgress.flags |= Update;
                         // Reset effect durations for the next eventual effect phase.
                        // These are reset during render to allow the DevTools commit hook a chance to read them,
                        var stateNode = workInProgress.stateNode;
                        stateNode.effectDuration = 0;
                        stateNode.passiveEffectDuration = 0;
                        break;
                    case SuspenseComponent:
                        var state = workInProgress.memoizedState;
                        if (state !== null) {
                            // whether to retry the primary children, or to skip over it and
                            // go straight to the fallback. Check the priority of the primary
                            // child fragment.
                            var primaryChildFragment = workInProgress.child;
                            var primaryChildLanes = primaryChildFragment.childLanes;
                            if (includesSomeLane(renderLanes, primaryChildLanes)) // The primary children have pending work. Use the normal path
                            // to attempt to render the primary children again.
                            return updateSuspenseComponent(current, workInProgress, renderLanes);
                            else {
                                // The primary child fragment does not have pending work marked
                                // on it
                                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                                // priority. Bailout.
                                var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                                if (child !== null) // The fallback children have pending work. Skip over the
                                // primary children and work on the fallback.
                                return child.sibling;
                                else return null;
                            }
                        } else pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                        break;
                    case SuspenseListComponent:
                        var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;
                        var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                        if (didSuspendBefore) {
                            if (_hasChildWork) // If something was in fallback state last time, and we have all the
                            // same children then we're still in progressive loading state.
                            // Something might get unblocked by state updates or retries in the
                            // tree which will affect the tail. So we need to use the normal
                            // path to compute the correct tail.
                            return updateSuspenseListComponent(current, workInProgress, renderLanes);
                             // If none of the children had any work, that means that none of
                            // them got retried so they'll still be blocked in the same way
                            // as before. We can fast bail out.
                            workInProgress.flags |= DidCapture;
                        } // If nothing suspended before and we're rendering the same children,
                        // then the tail doesn't matter. Anything new that suspends will work
                        // in the "together" mode, so we can continue from the state we had.
                        var renderState = workInProgress.memoizedState;
                        if (renderState !== null) {
                            // Reset to the "together" mode in case we've started a different
                            // update in the past but didn't complete it.
                            renderState.rendering = null;
                            renderState.tail = null;
                            renderState.lastEffect = null;
                        }
                        pushSuspenseContext(workInProgress, suspenseStackCursor.current);
                        if (_hasChildWork) break;
                        else // If none of the children had any work, that means that none of
                        // them got retried so they'll still be blocked in the same way
                        // as before. We can fast bail out.
                        return null;
                    case OffscreenComponent:
                    case LegacyHiddenComponent:
                        // Need to check if the tree still needs to be deferred. This is
                        // almost identical to the logic used in the normal update path,
                        // so we'll just enter that. The only difference is we'll bail out
                        // at the next level instead of this one, because the child props
                        // have not changed. Which is fine.
                        // TODO: Probably should refactor `beginWork` to split the bailout
                        // path from the normal path. I'm tempted to do a labeled break here
                        // but I won't :)
                        workInProgress.lanes = NoLanes;
                        return updateOffscreenComponent(current, workInProgress, renderLanes);
                }
                return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
            // See https://github.com/facebook/react/pull/19216.
            didReceiveUpdate = true;
            else // An update was scheduled on this fiber, but there are no new props
            // nor legacy context. Set this to false. If an update queue or context
            // consumer produces a changed value, it will set this to true. Otherwise,
            // the component will assume the children have not changed and bail out.
            didReceiveUpdate = false;
        } else didReceiveUpdate = false;
         // Before entering the begin phase, clear pending update priority.
        // TODO: This assumes that we're about to evaluate the component and process
        // the update queue. However, there's an exception: SimpleMemoComponent
        // sometimes bails out later in the begin phase. This indicates that we should
        // move this assignment out of the common path and into each branch.
        workInProgress.lanes = NoLanes;
        switch(workInProgress.tag){
            case IndeterminateComponent:
                return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
            case LazyComponent:
                var elementType = workInProgress.elementType;
                return mountLazyComponent(current, workInProgress, elementType, updateLanes, renderLanes);
            case FunctionComponent:
                var _Component = workInProgress.type;
                var unresolvedProps = workInProgress.pendingProps;
                var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
                return updateFunctionComponent(current, workInProgress, _Component, resolvedProps, renderLanes);
            case ClassComponent:
                var _Component2 = workInProgress.type;
                var _unresolvedProps = workInProgress.pendingProps;
                var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);
                return updateClassComponent(current, workInProgress, _Component2, _resolvedProps, renderLanes);
            case HostRoot:
                return updateHostRoot(current, workInProgress, renderLanes);
            case HostComponent:
                return updateHostComponent(current, workInProgress, renderLanes);
            case HostText:
                return updateHostText(current, workInProgress);
            case SuspenseComponent:
                return updateSuspenseComponent(current, workInProgress, renderLanes);
            case HostPortal:
                return updatePortalComponent(current, workInProgress, renderLanes);
            case ForwardRef:
                var type = workInProgress.type;
                var _unresolvedProps2 = workInProgress.pendingProps;
                var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
                return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
            case Fragment:
                return updateFragment1(current, workInProgress, renderLanes);
            case Mode:
                return updateMode(current, workInProgress, renderLanes);
            case Profiler:
                return updateProfiler(current, workInProgress, renderLanes);
            case ContextProvider:
                return updateContextProvider(current, workInProgress, renderLanes);
            case ContextConsumer:
                return updateContextConsumer(current, workInProgress, renderLanes);
            case MemoComponent:
                var _type2 = workInProgress.type;
                var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.
                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = _type2.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, _resolvedProps3, 'prop', getComponentName(_type2));
                }
                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, updateLanes, renderLanes);
            case SimpleMemoComponent:
                return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, updateLanes, renderLanes);
            case IncompleteClassComponent:
                var _Component3 = workInProgress.type;
                var _unresolvedProps4 = workInProgress.pendingProps;
                var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);
                return mountIncompleteClassComponent(current, workInProgress, _Component3, _resolvedProps4, renderLanes);
            case SuspenseListComponent:
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
            case FundamentalComponent:
                break;
            case ScopeComponent:
                break;
            case Block:
                break;
            case OffscreenComponent:
                return updateOffscreenComponent(current, workInProgress, renderLanes);
            case LegacyHiddenComponent:
                return updateLegacyHiddenComponent(current, workInProgress, renderLanes);
        }
        throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function markUpdate(workInProgress) {
        // Tag the fiber with an update effect. This turns a Placement into
        // a PlacementAndUpdate.
        workInProgress.flags |= Update;
    }
    function markRef$1(workInProgress) {
        workInProgress.flags |= Ref;
    }
    var appendAllChildren;
    var updateHostContainer;
    var updateHostComponent$1;
    var updateHostText$1;
    // Mutation mode
    appendAllChildren = function(parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;
        while(node !== null){
            if (node.tag === HostComponent || node.tag === HostText) appendInitialChild(parent, node.stateNode);
            else if (node.tag === HostPortal) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    };
    updateHostContainer = function(workInProgress) {
    };
    updateHostComponent$1 = function(current, workInProgress, type, newProps, rootContainerInstance) {
        // If we have an alternate, that means this is an update and we need to
        // schedule a side-effect to do the updates.
        var oldProps = current.memoizedProps;
        if (oldProps === newProps) // In mutation mode, this is sufficient for a bailout because
        // we won't touch this node even if children changed.
        return;
         // If we get updated because one of our children updated, we don't
        // have newProps so we'll have to reuse them.
        // TODO: Split the update API as separate for the props vs. children.
        // Even better would be if children weren't special cased at all tho.
        var instance = workInProgress.stateNode;
        var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
        // component is hitting the resume path. Figure out why. Possibly
        // related to `hidden`.
        var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.
        workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.
        if (updatePayload) markUpdate(workInProgress);
    };
    updateHostText$1 = function(current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) markUpdate(workInProgress);
    };
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (getIsHydrating()) // If we're hydrating, we should consume as many items as we can
        // so we don't leave any behind.
        return;
        switch(renderState.tailMode){
            case 'hidden':
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var tailNode = renderState.tail;
                var lastTailNode = null;
                while(tailNode !== null){
                    if (tailNode.alternate !== null) lastTailNode = tailNode;
                    tailNode = tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (lastTailNode === null) // All remaining items in the tail are insertions.
                renderState.tail = null;
                else // Detach the insertion after the last node that was already
                // inserted.
                lastTailNode.sibling = null;
                break;
            case 'collapsed':
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var _tailNode = renderState.tail;
                var _lastTailNode = null;
                while(_tailNode !== null){
                    if (_tailNode.alternate !== null) _lastTailNode = _tailNode;
                    _tailNode = _tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (_lastTailNode === null) {
                    // All remaining items in the tail are insertions.
                    if (!hasRenderedATailFallback && renderState.tail !== null) // We suspended during the head. We want to show at least one
                    // row at the tail. So we'll keep on and cut off the rest.
                    renderState.tail.sibling = null;
                    else renderState.tail = null;
                } else // Detach the insertion after the last node that was already
                // inserted.
                _lastTailNode.sibling = null;
                break;
        }
    }
    function completeWork(current, workInProgress, renderLanes) {
        var newProps = workInProgress.pendingProps;
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
                return null;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                return null;
            case HostRoot:
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                var fiberRoot = workInProgress.stateNode;
                if (fiberRoot.pendingContext) {
                    fiberRoot.context = fiberRoot.pendingContext;
                    fiberRoot.pendingContext = null;
                }
                if (current === null || current.child === null) {
                    // If we hydrated, pop so that we can delete any remaining children
                    // that weren't hydrated.
                    var wasHydrated = popHydrationState(workInProgress);
                    if (wasHydrated) // If we hydrated, then we'll need to schedule an update for
                    // the commit side-effects on the root.
                    markUpdate(workInProgress);
                    else if (!fiberRoot.hydrate) // Schedule an effect to clear this container at the start of the next commit.
                    // This handles the case of React rendering into a container with previous children.
                    // It's also safe to do for updates too, because current.child would only be null
                    // if the previous render was null (so the the container would already be empty).
                    workInProgress.flags |= Snapshot;
                }
                updateHostContainer(workInProgress);
                return null;
            case HostComponent:
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer();
                var type = workInProgress.type;
                if (current !== null && workInProgress.stateNode != null) {
                    updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);
                    if (current.ref !== workInProgress.ref) markRef$1(workInProgress);
                } else {
                    if (!newProps) {
                        if (!(workInProgress.stateNode !== null)) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                        return null;
                    }
                    var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
                    // "stack" as the parent. Then append children as we go in beginWork
                    // or completeWork depending on whether we want to add them top->down or
                    // bottom->up. Top->down is faster in IE11.
                    var _wasHydrated = popHydrationState(workInProgress);
                    if (_wasHydrated) // TODO: Move this and createInstance step into the beginPhase
                    // to consolidate.
                    {
                        if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) // If changes to the hydrated node need to be applied at the
                        // commit-phase we mark this as such.
                        markUpdate(workInProgress);
                    } else {
                        var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                        appendAllChildren(instance, workInProgress, false, false);
                        workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
                        // (eg DOM renderer supports auto-focus for certain elements).
                        // Make sure such renderers get scheduled for later work.
                        if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) markUpdate(workInProgress);
                    }
                    if (workInProgress.ref !== null) // If there is a ref on a host node we need to schedule a callback
                    markRef$1(workInProgress);
                }
                return null;
            case HostText:
                var newText = newProps;
                if (current && workInProgress.stateNode != null) {
                    var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
                    // to schedule a side-effect to do the updates.
                    updateHostText$1(current, workInProgress, oldText, newText);
                } else {
                    if (typeof newText !== 'string') {
                        if (!(workInProgress.stateNode !== null)) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                    }
                    var _rootContainerInstance = getRootHostContainer();
                    var _currentHostContext = getHostContext();
                    var _wasHydrated2 = popHydrationState(workInProgress);
                    if (_wasHydrated2) {
                        if (prepareToHydrateHostTextInstance(workInProgress)) markUpdate(workInProgress);
                    } else workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
                }
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var nextState = workInProgress.memoizedState;
                if ((workInProgress.flags & DidCapture) !== NoFlags) {
                    // Something suspended. Re-render with the fallback children.
                    workInProgress.lanes = renderLanes; // Do not reset the effect list.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                var nextDidTimeout = nextState !== null;
                var prevDidTimeout = false;
                if (current === null) {
                    if (workInProgress.memoizedProps.fallback !== undefined) popHydrationState(workInProgress);
                } else {
                    var prevState = current.memoizedState;
                    prevDidTimeout = prevState !== null;
                }
                if (nextDidTimeout && !prevDidTimeout) // If this subtreee is running in blocking mode we can suspend,
                // otherwise we won't suspend.
                // TODO: This will still suspend a synchronous tree if anything
                // in the concurrent tree already suspended during this render.
                // This is a known bug.
                {
                    if ((workInProgress.mode & BlockingMode) !== NoMode) {
                        // TODO: Move this back to throwException because this is too late
                        // if this is a large tree which is common for initial loads. We
                        // don't know if we should restart a render or not until we get
                        // this marker, and this is too late.
                        // If this render already had a ping or lower pri updates,
                        // and this is the first time we know we're going to suspend we
                        // should be able to immediately restart from within throwException.
                        var hasInvisibleChildContext = current === null && workInProgress.memoizedProps.unstable_avoidThisFallback !== true;
                        if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) // If this was in an invisible tree or a new render, then showing
                        // this boundary is ok.
                        renderDidSuspend();
                        else // Otherwise, we're going to have to hide content so we should
                        // suspend for longer if possible.
                        renderDidSuspendDelayIfPossible();
                    }
                }
                // TODO: Only schedule updates if these values are non equal, i.e. it changed.
                if (nextDidTimeout || prevDidTimeout) // If this boundary just timed out, schedule an effect to attach a
                // retry listener to the promise. This flag is also used to hide the
                // primary children. In mutation mode, we also need the flag to
                // *unhide* children that were previously hidden, so check if this
                // is currently timed out, too.
                workInProgress.flags |= Update;
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                updateHostContainer(workInProgress);
                if (current === null) preparePortalMount(workInProgress.stateNode.containerInfo);
                return null;
            case ContextProvider:
                // Pop provider fiber
                popProvider(workInProgress);
                return null;
            case IncompleteClassComponent:
                // Same as class component case. I put it down here so that the tags are
                // sequential to ensure this switch is compiled to a jump table.
                var _Component = workInProgress.type;
                if (isContextProvider(_Component)) popContext(workInProgress);
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress);
                var renderState = workInProgress.memoizedState;
                if (renderState === null) // We're running in the default, "independent" mode.
                // We don't do anything in this mode.
                return null;
                var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
                var renderedTail = renderState.rendering;
                if (renderedTail === null) {
                    // We just rendered the head.
                    if (!didSuspendAlready) {
                        // This is the first pass. We need to figure out if anything is still
                        // suspended in the rendered set.
                        // If new content unsuspended, but there's still some content that
                        // didn't. Then we need to do a second pass that forces everything
                        // to keep showing their fallbacks.
                        // We might be suspended if something in this render pass suspended, or
                        // something in the previous committed pass suspended. Otherwise,
                        // there's no chance so we can skip the expensive call to
                        // findFirstSuspended.
                        var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);
                        if (!cannotBeSuspended) {
                            var row = workInProgress.child;
                            while(row !== null){
                                var suspended = findFirstSuspended(row);
                                if (suspended !== null) {
                                    didSuspendAlready = true;
                                    workInProgress.flags |= DidCapture;
                                    cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                                    // part of the second pass. In that case nothing will subscribe to
                                    // its thennables. Instead, we'll transfer its thennables to the
                                    // SuspenseList so that it can retry if they resolve.
                                    // There might be multiple of these in the list but since we're
                                    // going to wait for all of them anyway, it doesn't really matter
                                    // which ones gets to ping. In theory we could get clever and keep
                                    // track of how many dependencies remain but it gets tricky because
                                    // in the meantime, we can add/remove/change items and dependencies.
                                    // We might bail out of the loop before finding any but that
                                    // doesn't matter since that means that the other boundaries that
                                    // we did find already has their listeners attached.
                                    var newThennables = suspended.updateQueue;
                                    if (newThennables !== null) {
                                        workInProgress.updateQueue = newThennables;
                                        workInProgress.flags |= Update;
                                    } // Rerender the whole list, but this time, we'll force fallbacks
                                    // to stay in place.
                                    // Reset the effect list before doing the second pass since that's now invalid.
                                    if (renderState.lastEffect === null) workInProgress.firstEffect = null;
                                    workInProgress.lastEffect = renderState.lastEffect; // Reset the child fibers to their original state.
                                    resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                                    // rerender the children.
                                    pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                                    return workInProgress.child;
                                }
                                row = row.sibling;
                            }
                        }
                        if (renderState.tail !== null && now() > getRenderTargetTime()) {
                            // We have already passed our CPU deadline but we still have rows
                            // left in the tail. We'll just give up further attempts to render
                            // the main content and only render fallbacks.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                            markSpawnedWork(SomeRetryLane);
                        }
                    } else cutOffTailIfNeeded(renderState, false);
                     // Next we're going to render the tail.
                } else {
                    // Append the rendered row to the child list.
                    if (!didSuspendAlready) {
                        var _suspended = findFirstSuspended(renderedTail);
                        if (_suspended !== null) {
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
                            // get lost if this row ends up dropped during a second pass.
                            var _newThennables = _suspended.updateQueue;
                            if (_newThennables !== null) {
                                workInProgress.updateQueue = _newThennables;
                                workInProgress.flags |= Update;
                            }
                            cutOffTailIfNeeded(renderState, true); // This might have been modified.
                            if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
                            ) {
                                // We need to delete the row we just rendered.
                                // Reset the effect list to what it was before we rendered this
                                // child. The nested children have already appended themselves.
                                var lastEffect = workInProgress.lastEffect = renderState.lastEffect; // Remove any effects that were appended after this point.
                                if (lastEffect !== null) lastEffect.nextEffect = null;
                                 // We're done.
                                return null;
                            }
                        } else if (// time we have to render. So rendering one more row would likely
                        // exceed it.
                        now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
                            // We have now passed our CPU deadline and we'll just give up further
                            // attempts to render the main content and only render fallbacks.
                            // The assumption is that this is usually faster.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                            markSpawnedWork(SomeRetryLane);
                        }
                    }
                    if (renderState.isBackwards) {
                        // The effect list of the backwards tail will have been added
                        // to the end. This breaks the guarantee that life-cycles fire in
                        // sibling order but that isn't a strong guarantee promised by React.
                        // Especially since these might also just pop in during future commits.
                        // Append to the beginning of the list.
                        renderedTail.sibling = workInProgress.child;
                        workInProgress.child = renderedTail;
                    } else {
                        var previousSibling = renderState.last;
                        if (previousSibling !== null) previousSibling.sibling = renderedTail;
                        else workInProgress.child = renderedTail;
                        renderState.last = renderedTail;
                    }
                }
                if (renderState.tail !== null) {
                    // We still have tail rows to render.
                    // Pop a row.
                    var next = renderState.tail;
                    renderState.rendering = next;
                    renderState.tail = next.sibling;
                    renderState.lastEffect = workInProgress.lastEffect;
                    renderState.renderingStartTime = now();
                    next.sibling = null; // Restore the context.
                    // TODO: We can probably just avoid popping it instead and only
                    // setting it the first time we go from not suspended to suspended.
                    var suspenseContext = suspenseStackCursor.current;
                    if (didSuspendAlready) suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                    else suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                    pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.
                    return next;
                }
                return null;
            case FundamentalComponent:
                break;
            case ScopeComponent:
                break;
            case Block:
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                if (current !== null) {
                    var _nextState = workInProgress.memoizedState;
                    var _prevState = current.memoizedState;
                    var prevIsHidden = _prevState !== null;
                    var nextIsHidden = _nextState !== null;
                    if (prevIsHidden !== nextIsHidden && newProps.mode !== 'unstable-defer-without-hiding') workInProgress.flags |= Update;
                }
                return null;
        }
        throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function unwindWork(workInProgress, renderLanes) {
        switch(workInProgress.tag){
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                var flags = workInProgress.flags;
                if (flags & ShouldCapture) {
                    workInProgress.flags = flags & ~ShouldCapture | DidCapture;
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case HostRoot:
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                var _flags = workInProgress.flags;
                if (!((_flags & DidCapture) === NoFlags)) throw Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue.");
                workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
                return workInProgress;
            case HostComponent:
                // TODO: popHydrationState
                popHostContext(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var _flags2 = workInProgress.flags;
                if (_flags2 & ShouldCapture) {
                    workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
                // caught by a nested boundary. If not, it should bubble through.
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                return null;
            case ContextProvider:
                popProvider(workInProgress);
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                return null;
            default:
                return null;
        }
    }
    function unwindInterruptedWork(interruptedWork) {
        switch(interruptedWork.tag){
            case ClassComponent:
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (childContextTypes !== null && childContextTypes !== undefined) popContext(interruptedWork);
                break;
            case HostRoot:
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                resetWorkInProgressVersions();
                break;
            case HostComponent:
                popHostContext(interruptedWork);
                break;
            case HostPortal:
                popHostContainer(interruptedWork);
                break;
            case SuspenseComponent:
                popSuspenseContext(interruptedWork);
                break;
            case SuspenseListComponent:
                popSuspenseContext(interruptedWork);
                break;
            case ContextProvider:
                popProvider(interruptedWork);
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(interruptedWork);
                break;
        }
    }
    function createCapturedValue(value, source) {
        // If the value is an error, call this function immediately after it is thrown
        // so the stack is accurate.
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source)
        };
    }
    // This module is forked in different environments.
    // By default, return `true` to log errors to the console.
    // Forks can return `false` if this isn't desirable.
    function showErrorDialog(boundary, errorInfo) {
        return true;
    }
    function logCapturedError(boundary, errorInfo) {
        try {
            var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
            // This enables renderers like ReactNative to better manage redbox behavior.
            if (logError === false) return;
            var error = errorInfo.value;
            var source = errorInfo.source;
            var stack = errorInfo.stack;
            var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling
            // `preventDefault()` in window `error` handler.
            // We record this information as an expando on the error.
            if (error != null && error._suppressLogging) {
                if (boundary.tag === ClassComponent) // The error is recoverable and was silenced.
                // Ignore it and don't print the stack addendum.
                // This is handy for testing error boundaries without noise.
                return;
                 // The error is fatal. Since the silencing might have
                // been accidental, we'll surface it anyway.
                // However, the browser would have silenced the original error
                // so we'll print it first, and then print the stack addendum.
                console['error'](error); // Don't transform to our wrapper
            // For a more detailed description of this block, see:
            // https://github.com/facebook/react/pull/13384
            }
            var componentName = source ? getComponentName(source.type) : null;
            var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
            var errorBoundaryMessage;
            var errorBoundaryName = getComponentName(boundary.type);
            if (errorBoundaryName) errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
            else errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
            var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
            // We don't include the original error message and JS stack because the browser
            // has already printed it. Even if the application swallows the error, it is still
            // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
            console['error'](combinedMessage); // Don't transform to our wrapper
        } catch (e) {
            // This method must not throw, or React internal state will get messed up.
            // If console.error is overridden, or logCapturedError() shows a dialog that throws,
            // we want to report this error outside of the normal stack as a last resort.
            // https://github.com/facebook/react/issues/13188
            setTimeout(function() {
                throw e;
            });
        }
    }
    var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;
    function createRootErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.
        update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: null
        };
        var error = errorInfo.value;
        update.callback = function() {
            onUncaughtError(error);
            logCapturedError(fiber, errorInfo);
        };
        return update;
    }
    function createClassErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane);
        update.tag = CaptureUpdate;
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if (typeof getDerivedStateFromError === 'function') {
            var error$1 = errorInfo.value;
            update.payload = function() {
                logCapturedError(fiber, errorInfo);
                return getDerivedStateFromError(error$1);
            };
        }
        var inst = fiber.stateNode;
        if (inst !== null && typeof inst.componentDidCatch === 'function') update.callback = function callback() {
            markFailedErrorBoundaryForHotReloading(fiber);
            if (typeof getDerivedStateFromError !== 'function') {
                // To preserve the preexisting retry behavior of error boundaries,
                // we keep track of which ones already failed during this batch.
                // This gets reset before we yield back to the browser.
                // TODO: Warn in strict mode if getDerivedStateFromError is
                // not defined.
                markLegacyErrorBoundaryAsFailed(this); // Only log here if componentDidCatch is the only error boundary method defined
                logCapturedError(fiber, errorInfo);
            }
            var error$1 = errorInfo.value;
            var stack = errorInfo.stack;
            this.componentDidCatch(error$1, {
                componentStack: stack !== null ? stack : ''
            });
            if (typeof getDerivedStateFromError !== 'function') // If componentDidCatch is the only error boundary method defined,
            // then it needs to call setState to recover from errors.
            // If no state update is scheduled then the boundary will swallow the error.
            {
                if (!includesSomeLane(fiber.lanes, SyncLane)) error1("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentName(fiber.type) || 'Unknown');
            }
        };
        else update.callback = function() {
            markFailedErrorBoundaryForHotReloading(fiber);
        };
        return update;
    }
    function attachPingListener(root, wakeable, lanes) {
        // Attach a listener to the promise to "ping" the root and retry. But only if
        // one does not already exist for the lanes we're currently rendering (which
        // acts like a "thread ID" here).
        var pingCache = root.pingCache;
        var threadIDs;
        if (pingCache === null) {
            pingCache = root.pingCache = new PossiblyWeakMap$1();
            threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
        } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === undefined) {
                threadIDs = new Set();
                pingCache.set(wakeable, threadIDs);
            }
        }
        if (!threadIDs.has(lanes)) {
            // Memoize using the thread ID to prevent redundant listeners.
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);
            wakeable.then(ping, ping);
        }
    }
    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
        // The source fiber did not complete.
        sourceFiber.flags |= Incomplete; // Its effect list is no longer valid.
        sourceFiber.firstEffect = sourceFiber.lastEffect = null;
        if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
            // This is a wakeable.
            var wakeable = value;
            if ((sourceFiber.mode & BlockingMode) === NoMode) {
                // Reset the memoizedState to what it was before we attempted
                // to render it.
                var currentSource = sourceFiber.alternate;
                if (currentSource) {
                    sourceFiber.updateQueue = currentSource.updateQueue;
                    sourceFiber.memoizedState = currentSource.memoizedState;
                    sourceFiber.lanes = currentSource.lanes;
                } else {
                    sourceFiber.updateQueue = null;
                    sourceFiber.memoizedState = null;
                }
            }
            var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext); // Schedule the nearest Suspense to re-render the timed out view.
            var _workInProgress = returnFiber;
            do {
                if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
                    // Found the nearest boundary.
                    // Stash the promise on the boundary fiber. If the boundary times out, we'll
                    // attach another listener to flip the boundary back to its normal state.
                    var wakeables = _workInProgress.updateQueue;
                    if (wakeables === null) {
                        var updateQueue = new Set();
                        updateQueue.add(wakeable);
                        _workInProgress.updateQueue = updateQueue;
                    } else wakeables.add(wakeable);
                     // If the boundary is outside of blocking mode, we should *not*
                    // suspend the commit. Pretend as if the suspended component rendered
                    // null and keep rendering. In the commit phase, we'll schedule a
                    // subsequent synchronous update to re-render the Suspense.
                    //
                    // Note: It doesn't matter whether the component that suspended was
                    // inside a blocking mode tree. If the Suspense is outside of it, we
                    // should *not* suspend the commit.
                    if ((_workInProgress.mode & BlockingMode) === NoMode) {
                        _workInProgress.flags |= DidCapture;
                        sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
                        // But we shouldn't call any lifecycle methods or callbacks. Remove
                        // all lifecycle effect tags.
                        sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                        if (sourceFiber.tag === ClassComponent) {
                            var currentSourceFiber = sourceFiber.alternate;
                            if (currentSourceFiber === null) // This is a new mount. Change the tag so it's not mistaken for a
                            // completed class component. For example, we should not call
                            // componentWillUnmount if it is deleted.
                            sourceFiber.tag = IncompleteClassComponent;
                            else {
                                // When we try rendering again, we should not reuse the current fiber,
                                // since it's known to be in an inconsistent state. Use a force update to
                                // prevent a bail out.
                                var update = createUpdate(NoTimestamp, SyncLane);
                                update.tag = ForceUpdate;
                                enqueueUpdate(sourceFiber, update);
                            }
                        } // The source fiber did not complete. Mark it with Sync priority to
                        // indicate that it still has pending work.
                        sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane); // Exit without suspending.
                        return;
                    } // Confirmed that the boundary is in a concurrent mode tree. Continue
                    // with the normal suspend path.
                    //
                    // After this we'll use a set of heuristics to determine whether this
                    // render pass will run to completion or restart or "suspend" the commit.
                    // The actual logic for this is spread out in different places.
                    //
                    // This first principle is that if we're going to suspend when we complete
                    // a root, then we should also restart if we get an update or ping that
                    // might unsuspend it, and vice versa. The only reason to suspend is
                    // because you think you might want to restart before committing. However,
                    // it doesn't make sense to restart only while in the period we're suspended.
                    //
                    // Restarting too aggressively is also not good because it starves out any
                    // intermediate loading state. So we use heuristics to determine when.
                    // Suspense Heuristics
                    //
                    // If nothing threw a Promise or all the same fallbacks are already showing,
                    // then don't suspend/restart.
                    //
                    // If this is an initial render of a new tree of Suspense boundaries and
                    // those trigger a fallback, then don't suspend/restart. We want to ensure
                    // that we can show the initial loading state as quickly as possible.
                    //
                    // If we hit a "Delayed" case, such as when we'd switch from content back into
                    // a fallback, then we should always suspend/restart. Transitions apply
                    // to this case. If none is defined, JND is used instead.
                    //
                    // If we're already showing a fallback and it gets "retried", allowing us to show
                    // another level, but there's still an inner boundary that would show a fallback,
                    // then we suspend/restart for 500ms since the last time we showed a fallback
                    // anywhere in the tree. This effectively throttles progressive loading into a
                    // consistent train of commits. This also gives us an opportunity to restart to
                    // get to the completed state slightly earlier.
                    //
                    // If there's ambiguity due to batching it's resolved in preference of:
                    // 1) "delayed", 2) "initial render", 3) "retry".
                    //
                    // We want to ensure that a "busy" state doesn't get force committed. We want to
                    // ensure that new initial loading states can commit as soon as possible.
                    attachPingListener(root, wakeable, rootRenderLanes);
                    _workInProgress.flags |= ShouldCapture;
                    _workInProgress.lanes = rootRenderLanes;
                    return;
                } // This boundary already captured during this render. Continue to the next
                // boundary.
                _workInProgress = _workInProgress.return;
            }while (_workInProgress !== null) // No boundary was found. Fallthrough to error mode.
            // TODO: Use invariant so the message is stripped in prod?
            value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.');
        } // We didn't find a boundary that could handle this type of exception. Start
        // over and traverse parent path again, this time treating the exception
        // as an error.
        renderDidError();
        value = createCapturedValue(value, sourceFiber);
        var workInProgress = returnFiber;
        do {
            switch(workInProgress.tag){
                case HostRoot:
                    var _errorInfo = value;
                    workInProgress.flags |= ShouldCapture;
                    var lane = pickArbitraryLane(rootRenderLanes);
                    workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);
                    var _update = createRootErrorUpdate(workInProgress, _errorInfo, lane);
                    enqueueCapturedUpdate(workInProgress, _update);
                    return;
                case ClassComponent:
                    // Capture and retry
                    var errorInfo = value;
                    var ctor = workInProgress.type;
                    var instance = workInProgress.stateNode;
                    if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                        workInProgress.flags |= ShouldCapture;
                        var _lane = pickArbitraryLane(rootRenderLanes);
                        workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state
                        var _update2 = createClassErrorUpdate(workInProgress, errorInfo, _lane);
                        enqueueCapturedUpdate(workInProgress, _update2);
                        return;
                    }
                    break;
            }
            workInProgress = workInProgress.return;
        }while (workInProgress !== null)
    }
    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
    var callComponentWillUnmountWithTimer = function(current, instance) {
        instance.props = current.memoizedProps;
        instance.state = current.memoizedState;
        instance.componentWillUnmount();
    }; // Capture errors so they don't interrupt unmounting.
    function safelyCallComponentWillUnmount(current, instance) {
        invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current, instance);
        if (hasCaughtError()) {
            var unmountError = clearCaughtError();
            captureCommitPhaseError(current, unmountError);
        }
    }
    function safelyDetachRef(current) {
        var ref = current.ref;
        if (ref !== null) {
            if (typeof ref === 'function') {
                invokeGuardedCallback(null, ref, null, null);
                if (hasCaughtError()) {
                    var refError = clearCaughtError();
                    captureCommitPhaseError(current, refError);
                }
            } else ref.current = null;
        }
    }
    function safelyCallDestroy(current, destroy) {
        invokeGuardedCallback(null, destroy, null);
        if (hasCaughtError()) {
            var error = clearCaughtError();
            captureCommitPhaseError(current, error);
        }
    }
    function commitBeforeMutationLifeCycles(current, finishedWork) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
            case Block:
                return;
            case ClassComponent:
                if (finishedWork.flags & Snapshot) {
                    if (current !== null) {
                        var prevProps = current.memoizedProps;
                        var prevState = current.memoizedState;
                        var instance = finishedWork.stateNode; // We could update instance props and state here,
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) error1("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                            if (instance.state !== finishedWork.memoizedState) error1("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                        }
                        var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                        var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                        if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                            didWarnSet.add(finishedWork.type);
                            error1("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentName(finishedWork.type));
                        }
                        instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                    }
                }
                return;
            case HostRoot:
                if (finishedWork.flags & Snapshot) {
                    var root = finishedWork.stateNode;
                    clearContainer(root.containerInfo);
                }
                return;
            case HostComponent:
            case HostText:
            case HostPortal:
            case IncompleteClassComponent:
                // Nothing to do for these component types
                return;
        }
        throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
    function commitHookEffectListUnmount(tag, finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & tag) === tag) {
                    // Unmount
                    var destroy = effect.destroy;
                    effect.destroy = undefined;
                    if (destroy !== undefined) destroy();
                }
                effect = effect.next;
            }while (effect !== firstEffect)
        }
    }
    function commitHookEffectListMount(tag, finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & tag) === tag) {
                    // Mount
                    var create = effect.create;
                    effect.destroy = create();
                    var destroy = effect.destroy;
                    if (destroy !== undefined && typeof destroy !== 'function') {
                        var addendum = void 0;
                        if (destroy === null) addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                        else if (typeof destroy.then === 'function') addendum = "\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                        else addendum = ' You returned: ' + destroy;
                        error1("An effect function must not return anything besides a function, which is used for clean-up.%s", addendum);
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect)
        }
    }
    function schedulePassiveEffects(finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                var _effect = effect, next = _effect.next, tag = _effect.tag;
                if ((tag & Passive$1) !== NoFlags$1 && (tag & HasEffect) !== NoFlags$1) {
                    enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);
                    enqueuePendingPassiveHookEffectMount(finishedWork, effect);
                }
                effect = next;
            }while (effect !== firstEffect)
        }
    }
    function commitLifeCycles(finishedRoot, current, finishedWork, committedLanes) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
            case Block:
                commitHookEffectListMount(Layout | HasEffect, finishedWork);
                schedulePassiveEffects(finishedWork);
                return;
            case ClassComponent:
                var instance = finishedWork.stateNode;
                if (finishedWork.flags & Update) {
                    if (current === null) {
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) error1("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                            if (instance.state !== finishedWork.memoizedState) error1("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                        }
                        instance.componentDidMount();
                    } else {
                        var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
                        var prevState = current.memoizedState; // We could update instance props and state here,
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) error1("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                            if (instance.state !== finishedWork.memoizedState) error1("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                        }
                        instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                    }
                } // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) error1("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                        if (instance.state !== finishedWork.memoizedState) error1("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                    }
                    // but instead we rely on them being set during last render.
                    // TODO: revisit this when we implement resuming.
                    commitUpdateQueue(finishedWork, updateQueue, instance);
                }
                return;
            case HostRoot:
                // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                    var _instance = null;
                    if (finishedWork.child !== null) switch(finishedWork.child.tag){
                        case HostComponent:
                            _instance = getPublicInstance(finishedWork.child.stateNode);
                            break;
                        case ClassComponent:
                            _instance = finishedWork.child.stateNode;
                            break;
                    }
                    commitUpdateQueue(finishedWork, _updateQueue, _instance);
                }
                return;
            case HostComponent:
                var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
                // (eg DOM renderer may schedule auto-focus for inputs and form controls).
                // These effects should only be committed when components are first mounted,
                // aka when there is no current/alternate.
                if (current === null && finishedWork.flags & Update) {
                    var type = finishedWork.type;
                    var props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props);
                }
                return;
            case HostText:
                // We have no life-cycles associated with text.
                return;
            case HostPortal:
                // We have no life-cycles associated with portals.
                return;
            case Profiler:
                var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                var effectDuration = finishedWork.stateNode.effectDuration;
                var commitTime = getCommitTime();
                if (typeof onRender === 'function') onRender(finishedWork.memoizedProps.id, current === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime, finishedRoot.memoizedInteractions);
                return;
            case SuspenseComponent:
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                return;
            case SuspenseListComponent:
            case IncompleteClassComponent:
            case FundamentalComponent:
            case ScopeComponent:
            case OffscreenComponent:
            case LegacyHiddenComponent:
                return;
        }
        throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
    function hideOrUnhideAllChildren(finishedWork, isHidden) {
        // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = finishedWork;
        while(true){
            if (node.tag === HostComponent) {
                var instance = node.stateNode;
                if (isHidden) hideInstance(instance);
                else unhideInstance(node.stateNode, node.memoizedProps);
            } else if (node.tag === HostText) {
                var _instance3 = node.stateNode;
                if (isHidden) hideTextInstance(_instance3);
                else unhideTextInstance(_instance3, node.memoizedProps);
            } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === finishedWork) return;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse;
            switch(finishedWork.tag){
                case HostComponent:
                    instanceToUse = getPublicInstance(instance);
                    break;
                default:
                    instanceToUse = instance;
            } // Moved outside to ensure DCE works with this flag
            if (typeof ref === 'function') ref(instanceToUse);
            else {
                if (!ref.hasOwnProperty('current')) error1("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentName(finishedWork.type));
                ref.current = instanceToUse;
            }
        }
    }
    function commitDetachRef(current) {
        var currentRef = current.ref;
        if (currentRef !== null) {
            if (typeof currentRef === 'function') currentRef(null);
            else currentRef.current = null;
        }
    } // User-originating errors (lifecycles and refs) should not interrupt
    // deletion, so don't let them throw. Host-originating errors should
    // interrupt deletion, so it's okay
    function commitUnmount(finishedRoot, current, renderPriorityLevel) {
        onCommitUnmount(current);
        switch(current.tag){
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
            case Block:
                var updateQueue = current.updateQueue;
                if (updateQueue !== null) {
                    var lastEffect = updateQueue.lastEffect;
                    if (lastEffect !== null) {
                        var firstEffect = lastEffect.next;
                        var effect = firstEffect;
                        do {
                            var _effect2 = effect, destroy = _effect2.destroy, tag = _effect2.tag;
                            if (destroy !== undefined) {
                                if ((tag & Passive$1) !== NoFlags$1) enqueuePendingPassiveHookEffectUnmount(current, effect);
                                else safelyCallDestroy(current, destroy);
                            }
                            effect = effect.next;
                        }while (effect !== firstEffect)
                    }
                }
                return;
            case ClassComponent:
                safelyDetachRef(current);
                var instance = current.stateNode;
                if (typeof instance.componentWillUnmount === 'function') safelyCallComponentWillUnmount(current, instance);
                return;
            case HostComponent:
                safelyDetachRef(current);
                return;
            case HostPortal:
                unmountHostComponents(finishedRoot, current);
                return;
            case FundamentalComponent:
                return;
            case DehydratedFragment:
                return;
            case ScopeComponent:
                return;
        }
    }
    function commitNestedUnmounts(finishedRoot, root, renderPriorityLevel) {
        // While we're inside a removed host node we don't want to call
        // removeChild on the inner nodes because they're removed by the top
        // call anyway. We also want to call componentWillUnmount on all
        // composites before this host node is removed from the tree. Therefore
        // we do an inner loop while we're still inside the host node.
        var node = root;
        while(true){
            commitUnmount(finishedRoot, node); // Visit children because they may contain more composite or host nodes.
            // Skip portals because commitUnmount() currently visits them recursively.
            if (node.child !== null && // If we don't use mutation we drill down into portals here instead.
            node.tag !== HostPortal) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === root) return;
            while(node.sibling === null){
                if (node.return === null || node.return === root) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function detachFiberMutation(fiber) {
        // Cut off the return pointers to disconnect it from the tree. Ideally, we
        // should clear the child pointer of the parent alternate to let this
        // get GC:ed but we don't know which for sure which parent is the current
        // one so we'll settle for GC:ing the subtree of this child. This child
        // itself will be GC:ed when the parent updates the next time.
        // Note: we cannot null out sibling here, otherwise it can cause issues
        // with findDOMNode and how it requires the sibling field to carry out
        // traversal in a later effect. See PR #16820. We now clear the sibling
        // field after effects, see: detachFiberAfterEffects.
        //
        // Don't disconnect stateNode now; it will be detached in detachFiberAfterEffects.
        // It may be required if the current component is an error boundary,
        // and one of its descendants throws while unmounting a passive effect.
        fiber.alternate = null;
        fiber.child = null;
        fiber.dependencies = null;
        fiber.firstEffect = null;
        fiber.lastEffect = null;
        fiber.memoizedProps = null;
        fiber.memoizedState = null;
        fiber.pendingProps = null;
        fiber.return = null;
        fiber.updateQueue = null;
        fiber._debugOwner = null;
    }
    function getHostParentFiber(fiber) {
        var parent = fiber.return;
        while(parent !== null){
            if (isHostParent(parent)) return parent;
            parent = parent.return;
        }
        throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function isHostParent(fiber) {
        return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
    }
    function getHostSibling(fiber) {
        // We're going to search forward into the tree until we find a sibling host
        // node. Unfortunately, if multiple insertions are done in a row we have to
        // search past them. This leads to exponential search for the next sibling.
        // TODO: Find a more efficient way to do this.
        var node = fiber;
        siblings: while(true){
            // If we didn't find anything, let's try the next sibling.
            while(node.sibling === null){
                if (node.return === null || isHostParent(node.return)) // If we pop out of the root or hit the parent the fiber we are the
                // last sibling.
                return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
            while(node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment){
                // If it is not host node and, we might have a host node inside it.
                // Try to search down until we find one.
                if (node.flags & Placement) continue siblings;
                 // If we don't have a child, try the siblings instead.
                // We also skip portals because they are not part of this host tree.
                if (node.child === null || node.tag === HostPortal) continue siblings;
                else {
                    node.child.return = node;
                    node = node.child;
                }
            } // Check if this host node is stable or about to be placed.
            if (!(node.flags & Placement)) // Found it!
            return node.stateNode;
        }
    }
    function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.
        var parent;
        var isContainer;
        var parentStateNode = parentFiber.stateNode;
        switch(parentFiber.tag){
            case HostComponent:
                parent = parentStateNode;
                isContainer = false;
                break;
            case HostRoot:
                parent = parentStateNode.containerInfo;
                isContainer = true;
                break;
            case HostPortal:
                parent = parentStateNode.containerInfo;
                isContainer = true;
                break;
            case FundamentalComponent:
            // eslint-disable-next-line-no-fallthrough
            default:
                throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (parentFiber.flags & ContentReset) {
            // Reset the text content of the parent before doing any insertions
            resetTextContent(parent); // Clear ContentReset from the effect tag
            parentFiber.flags &= ~ContentReset;
        }
        var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        if (isContainer) insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);
        else insertOrAppendPlacementNode(finishedWork, before, parent);
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost || enableFundamentalAPI) {
            var stateNode = isHost ? node.stateNode : node.stateNode.instance;
            if (before) insertInContainerBefore(parent, stateNode, before);
            else appendChildToContainer(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNodeIntoContainer(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    }
    function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost || enableFundamentalAPI) {
            var stateNode = isHost ? node.stateNode : node.stateNode.instance;
            if (before) insertBefore(parent, stateNode, before);
            else appendChild(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNode(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNode(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    }
    function unmountHostComponents(finishedRoot, current, renderPriorityLevel) {
        // We only have the top Fiber that was deleted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = current; // Each iteration, currentParent is populated with node's host parent if not
        // currentParentIsValid.
        var currentParentIsValid = false; // Note: these two variables *must* always be updated together.
        var currentParent;
        var currentParentIsContainer;
        while(true){
            if (!currentParentIsValid) {
                var parent = node.return;
                findParent: while(true){
                    if (!(parent !== null)) throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
                    var parentStateNode = parent.stateNode;
                    switch(parent.tag){
                        case HostComponent:
                            currentParent = parentStateNode;
                            currentParentIsContainer = false;
                            break findParent;
                        case HostRoot:
                            currentParent = parentStateNode.containerInfo;
                            currentParentIsContainer = true;
                            break findParent;
                        case HostPortal:
                            currentParent = parentStateNode.containerInfo;
                            currentParentIsContainer = true;
                            break findParent;
                    }
                    parent = parent.return;
                }
                currentParentIsValid = true;
            }
            if (node.tag === HostComponent || node.tag === HostText) {
                commitNestedUnmounts(finishedRoot, node); // After all the children have unmounted, it is now safe to remove the
                // node from the tree.
                if (currentParentIsContainer) removeChildFromContainer(currentParent, node.stateNode);
                else removeChild(currentParent, node.stateNode);
                 // Don't visit children because we already visited them.
            } else if (node.tag === HostPortal) {
                if (node.child !== null) {
                    // When we go into a portal, it becomes the parent to remove from.
                    // We will reassign it back when we pop the portal on the way up.
                    currentParent = node.stateNode.containerInfo;
                    currentParentIsContainer = true; // Visit children because portals might contain host components.
                    node.child.return = node;
                    node = node.child;
                    continue;
                }
            } else {
                commitUnmount(finishedRoot, node); // Visit children because we may find more host components below.
                if (node.child !== null) {
                    node.child.return = node;
                    node = node.child;
                    continue;
                }
            }
            if (node === current) return;
            while(node.sibling === null){
                if (node.return === null || node.return === current) return;
                node = node.return;
                if (node.tag === HostPortal) // When we go out of the portal, we need to restore the parent.
                // Since we don't keep a stack of them, we will search for it.
                currentParentIsValid = false;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function commitDeletion(finishedRoot, current, renderPriorityLevel) {
        // Recursively delete all host nodes from the parent.
        // Detach refs and call componentWillUnmount() on the whole subtree.
        unmountHostComponents(finishedRoot, current);
        var alternate = current.alternate;
        detachFiberMutation(current);
        if (alternate !== null) detachFiberMutation(alternate);
    }
    function commitWork(current, finishedWork) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
            case Block:
                commitHookEffectListUnmount(Layout | HasEffect, finishedWork);
                return;
            case ClassComponent:
                return;
            case HostComponent:
                var instance = finishedWork.stateNode;
                if (instance != null) {
                    // Commit the work prepared earlier.
                    var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                    // as the newProps. The updatePayload will contain the real change in
                    // this case.
                    var oldProps = current !== null ? current.memoizedProps : newProps;
                    var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.
                    var updatePayload = finishedWork.updateQueue;
                    finishedWork.updateQueue = null;
                    if (updatePayload !== null) commitUpdate(instance, updatePayload, type, oldProps, newProps);
                }
                return;
            case HostText:
                if (!(finishedWork.stateNode !== null)) throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                var textInstance = finishedWork.stateNode;
                var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                // as the newProps. The updatePayload will contain the real change in
                // this case.
                var oldText = current !== null ? current.memoizedProps : newText;
                commitTextUpdate(textInstance, oldText, newText);
                return;
            case HostRoot:
                var _root = finishedWork.stateNode;
                if (_root.hydrate) {
                    // We've just hydrated. No need to hydrate again.
                    _root.hydrate = false;
                    commitHydratedContainer(_root.containerInfo);
                }
                return;
            case Profiler:
                return;
            case SuspenseComponent:
                commitSuspenseComponent(finishedWork);
                attachSuspenseRetryListeners(finishedWork);
                return;
            case SuspenseListComponent:
                attachSuspenseRetryListeners(finishedWork);
                return;
            case IncompleteClassComponent:
                return;
            case FundamentalComponent:
                break;
            case ScopeComponent:
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                var newState = finishedWork.memoizedState;
                var isHidden = newState !== null;
                hideOrUnhideAllChildren(finishedWork, isHidden);
                return;
        }
        throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
    function commitSuspenseComponent(finishedWork) {
        var newState = finishedWork.memoizedState;
        if (newState !== null) {
            markCommitTimeOfFallback();
            // Hide the Offscreen component that contains the primary children. TODO:
            // Ideally, this effect would have been scheduled on the Offscreen fiber
            // itself. That's how unhiding works: the Offscreen component schedules an
            // effect on itself. However, in this case, the component didn't complete,
            // so the fiber was never added to the effect list in the normal path. We
            // could have appended it to the effect list in the Suspense component's
            // second pass, but doing it this way is less complicated. This would be
            // simpler if we got rid of the effect list and traversed the tree, like
            // we're planning to do.
            var primaryChildParent = finishedWork.child;
            hideOrUnhideAllChildren(primaryChildParent, true);
        }
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        var newState = finishedWork.memoizedState;
        if (newState === null) {
            var current = finishedWork.alternate;
            if (current !== null) {
                var prevState = current.memoizedState;
                if (prevState !== null) {
                    var suspenseInstance = prevState.dehydrated;
                    if (suspenseInstance !== null) commitHydratedSuspenseInstance(suspenseInstance);
                }
            }
        }
    }
    function attachSuspenseRetryListeners(finishedWork) {
        // If this boundary just timed out, then it will have a set of wakeables.
        // For each wakeable, attach a listener so that when it resolves, React
        // attempts to re-render the boundary in the primary (pre-timeout) state.
        var wakeables = finishedWork.updateQueue;
        if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            wakeables.forEach(function(wakeable) {
                // Memoize using the boundary fiber to prevent redundant listeners.
                var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
                if (!retryCache.has(wakeable)) {
                    if (wakeable.__reactDoNotTraceInteractions !== true) retry = tracing.unstable_wrap(retry);
                    retryCache.add(wakeable);
                    wakeable.then(retry, retry);
                }
            });
        }
    } // This function detects when a Suspense boundary goes from visible to hidden.
    // It returns false if the boundary is already hidden.
    // TODO: Use an effect tag.
    function isSuspenseBoundaryBeingHidden(current, finishedWork) {
        if (current !== null) {
            var oldState = current.memoizedState;
            if (oldState === null || oldState.dehydrated !== null) {
                var newState = finishedWork.memoizedState;
                return newState !== null && newState.dehydrated === null;
            }
        }
        return false;
    }
    function commitResetTextContent(current) {
        resetTextContent(current.stateNode);
    }
    var COMPONENT_TYPE = 0;
    var HAS_PSEUDO_CLASS_TYPE = 1;
    var ROLE_TYPE = 2;
    var TEST_NAME_TYPE = 3;
    var TEXT_TYPE = 4;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor$1 = Symbol.for;
        COMPONENT_TYPE = symbolFor$1('selector.component');
        HAS_PSEUDO_CLASS_TYPE = symbolFor$1('selector.has_pseudo_class');
        ROLE_TYPE = symbolFor$1('selector.role');
        TEST_NAME_TYPE = symbolFor$1('selector.test_id');
        TEXT_TYPE = symbolFor$1('selector.text');
    }
    var commitHooks = [];
    function onCommitRoot$1() {
        commitHooks.forEach(function(commitHook) {
            return commitHook();
        });
    }
    var ceil = Math.ceil;
    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
    var NoContext = /*             */ 0;
    var BatchedContext = /*               */ 1;
    var EventContext = /*                 */ 2;
    var DiscreteEventContext = /*         */ 4;
    var LegacyUnbatchedContext = /*       */ 8;
    var RenderContext = /*                */ 16;
    var CommitContext = /*                */ 32;
    var RetryAfterError = /*       */ 64;
    var RootIncomplete = 0;
    var RootFatalErrored = 1;
    var RootErrored = 2;
    var RootSuspended = 3;
    var RootSuspendedWithDelay = 4;
    var RootCompleted = 5; // Describes where we are in the React execution stack
    var executionContext = NoContext; // The root we're working on
    var workInProgressRoot = null; // The fiber we're working on
    var workInProgress1 = null; // The lanes we're rendering
    var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
    // This is a superset of the lanes we started working on at the root. The only
    // case where it's different from `workInProgressRootRenderLanes` is when we
    // enter a subtree that is hidden and needs to be unhidden: Suspense and
    // Offscreen component.
    //
    // Most things in the work loop should deal with workInProgressRootRenderLanes.
    // Most things in begin/complete phases should deal with subtreeRenderLanes.
    var subtreeRenderLanes1 = NoLanes;
    var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.
    var workInProgressRootExitStatus = RootIncomplete; // A fatal error, if one is thrown
    var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
    // slightly different than `renderLanes` because `renderLanes` can change as you
    // enter and exit an Offscreen tree. This value is the combination of all render
    // lanes for the entire render phase.
    var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
    // includes unprocessed updates, not work in bailed out children.
    var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.
    var workInProgressRootUpdatedLanes = NoLanes; // Lanes that were pinged (in an interleaved event) during this render.
    var workInProgressRootPingedLanes = NoLanes;
    var mostRecentlyUpdatedRoot = null; // The most recent time we committed a fallback. This lets us ensure a train
    // model where we don't commit new loading states in too quick succession.
    var globalMostRecentFallbackTime = 0;
    var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
    // more and prefer CPU suspense heuristics instead.
    var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
    // suspense heuristics and opt out of rendering more content.
    var RENDER_TIMEOUT_MS = 500;
    function resetRenderTimer() {
        workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
    }
    function getRenderTargetTime() {
        return workInProgressRootRenderTargetTime;
    }
    var nextEffect = null;
    var hasUncaughtError = false;
    var firstUncaughtError = null;
    var legacyErrorBoundariesThatAlreadyFailed = null;
    var rootDoesHavePassiveEffects = false;
    var rootWithPendingPassiveEffects = null;
    var pendingPassiveEffectsRenderPriority = NoPriority$1;
    var pendingPassiveEffectsLanes = NoLanes;
    var pendingPassiveHookEffectsMount = [];
    var pendingPassiveHookEffectsUnmount = [];
    var rootsWithPendingDiscreteUpdates = null; // Use these to prevent an infinite loop of nested updates
    var NESTED_UPDATE_LIMIT = 50;
    var nestedUpdateCount = 0;
    var rootWithNestedUpdates = null;
    var NESTED_PASSIVE_UPDATE_LIMIT = 50;
    var nestedPassiveUpdateCount = 0; // Marks the need to reschedule pending interactions at these lanes
    // during the commit phase. This enables them to be traced across components
    // that spawn new work during render. E.g. hidden boundaries, suspended SSR
    // hydration or SuspenseList.
    // TODO: Can use a bitmask instead of an array
    var spawnedWorkDuringRender = null; // If two updates are scheduled within the same event, we should treat their
    // event times as simultaneous, even if the actual clock time has advanced
    // between the first and second call.
    var currentEventTime = NoTimestamp;
    var currentEventWipLanes = NoLanes;
    var currentEventPendingLanes = NoLanes; // Dev only flag that tracks if passive effects are currently being flushed.
    // We warn about state updates for unmounted components differently in this case.
    var isFlushingPassiveEffects = false;
    var focusedInstanceHandle = null;
    var shouldFireAfterActiveInstanceBlur = false;
    function getWorkInProgressRoot() {
        return workInProgressRoot;
    }
    function requestEventTime() {
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) // We're inside React, so it's fine to read the actual time.
        return now();
         // We're not inside React, so we may be in the middle of a browser event.
        if (currentEventTime !== NoTimestamp) // Use the same start time for all updates until we enter React again.
        return currentEventTime;
         // This is the first update since React yielded. Compute a new start time.
        currentEventTime = now();
        return currentEventTime;
    }
    function requestUpdateLane(fiber) {
        // Special cases
        var mode = fiber.mode;
        if ((mode & BlockingMode) === NoMode) return SyncLane;
        else if ((mode & ConcurrentMode) === NoMode) return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
         // The algorithm for assigning an update to a lane should be stable for all
        // updates at the same priority within the same event. To do this, the inputs
        // to the algorithm must be the same. For example, we use the `renderLanes`
        // to avoid choosing a lane that is already in the middle of rendering.
        //
        // However, the "included" lanes could be mutated in between updates in the
        // same event, like if you perform an update inside `flushSync`. Or any other
        // code path that might call `prepareFreshStack`.
        //
        // The trick we use is to cache the first of each of these inputs within an
        // event. Then reset the cached values once we can be sure the event is over.
        // Our heuristic for that is whenever we enter a concurrent work loop.
        //
        // We'll do the same for `currentEventPendingLanes` below.
        if (currentEventWipLanes === NoLanes) currentEventWipLanes = workInProgressRootIncludedLanes;
        var isTransition = requestCurrentTransition() !== NoTransition;
        if (isTransition) {
            if (currentEventPendingLanes !== NoLanes) currentEventPendingLanes = mostRecentlyUpdatedRoot !== null ? mostRecentlyUpdatedRoot.pendingLanes : NoLanes;
            return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);
        } // TODO: Remove this dependency on the Scheduler priority.
        // To do that, we're replacing it with an update lane priority.
        var schedulerPriority = getCurrentPriorityLevel(); // The old behavior was using the priority level of the Scheduler.
        // This couples React to the Scheduler internals, so we're replacing it
        // with the currentUpdateLanePriority above. As an example of how this
        // could be problematic, if we're not inside `Scheduler.runWithPriority`,
        // then we'll get the priority of the current running Scheduler task,
        // which is probably not what we want.
        var lane;
        if ((executionContext & DiscreteEventContext) !== NoContext && schedulerPriority === UserBlockingPriority$2) lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);
        else {
            var schedulerLanePriority = schedulerPriorityToLanePriority(schedulerPriority);
            lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);
        }
        return lane;
    }
    function requestRetryLane(fiber) {
        // This is a fork of `requestUpdateLane` designed specifically for Suspense
        // "retries" — a special update that attempts to flip a Suspense boundary
        // from its placeholder state to its primary/resolved state.
        // Special cases
        var mode = fiber.mode;
        if ((mode & BlockingMode) === NoMode) return SyncLane;
        else if ((mode & ConcurrentMode) === NoMode) return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
         // See `requestUpdateLane` for explanation of `currentEventWipLanes`
        if (currentEventWipLanes === NoLanes) currentEventWipLanes = workInProgressRootIncludedLanes;
        return findRetryLane(currentEventWipLanes);
    }
    function scheduleUpdateOnFiber(fiber, lane, eventTime) {
        checkForNestedUpdates();
        warnAboutRenderPhaseUpdatesInDEV(fiber);
        var root = markUpdateLaneFromFiberToRoot(fiber, lane);
        if (root === null) {
            warnAboutUpdateOnUnmountedFiberInDEV(fiber);
            return null;
        } // Mark that the root has a pending update.
        markRootUpdated(root, lane, eventTime);
        if (root === workInProgressRoot) {
            workInProgressRootUpdatedLanes = mergeLanes(workInProgressRootUpdatedLanes, lane);
            if (workInProgressRootExitStatus === RootSuspendedWithDelay) // The root already suspended with a delay, which means this render
            // definitely won't finish. Since we have a new update, let's mark it as
            // suspended now, right before marking the incoming update. This has the
            // effect of interrupting the current render and switching to the update.
            // TODO: Make sure this doesn't override pings that happen while we've
            // already started rendering.
            markRootSuspended$1(root, workInProgressRootRenderLanes);
        } // TODO: requestUpdateLanePriority also reads the priority. Pass the
        // priority as an argument to that function and this one.
        var priorityLevel = getCurrentPriorityLevel();
        if (lane === SyncLane) {
            if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & (RenderContext | CommitContext)) === NoContext) {
                // Register pending interactions on the root to avoid losing traced interaction data.
                schedulePendingInteractions(root, lane); // This is a legacy edge case. The initial mount of a ReactDOM.render-ed
                // root inside of batchedUpdates should be synchronous, but layout updates
                // should be deferred until the end of the batch.
                performSyncWorkOnRoot(root);
            } else {
                ensureRootIsScheduled(root, eventTime);
                schedulePendingInteractions(root, lane);
                if (executionContext === NoContext) {
                    // Flush the synchronous work now, unless we're already working or inside
                    // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
                    // scheduleCallbackForFiber to preserve the ability to schedule a callback
                    // without immediately flushing it. We only do this for user-initiated
                    // updates, to preserve historical behavior of legacy mode.
                    resetRenderTimer();
                    flushSyncCallbackQueue();
                }
            }
        } else {
            // Schedule a discrete update but only if it's not Sync.
            if ((executionContext & DiscreteEventContext) !== NoContext && // discrete, even inside a discrete event.
            (priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority$1)) {
                // This is the result of a discrete event. Track the lowest priority
                // discrete update per root so we can flush them early, if needed.
                if (rootsWithPendingDiscreteUpdates === null) rootsWithPendingDiscreteUpdates = new Set([
                    root
                ]);
                else rootsWithPendingDiscreteUpdates.add(root);
            } // Schedule other updates after in case the callback is sync.
            ensureRootIsScheduled(root, eventTime);
            schedulePendingInteractions(root, lane);
        } // We use this when assigning a lane for a transition inside
        // `requestUpdateLane`. We assume it's the same as the root being updated,
        // since in the common case of a single root app it probably is. If it's not
        // the same root, then it's not a huge deal, we just might batch more stuff
        // together more than necessary.
        mostRecentlyUpdatedRoot = root;
    } // This is split into a separate function so we can mark a fiber with pending
    // work without treating it as a typical update that originates from an event;
    // e.g. retrying a Suspense boundary isn't an update, but it does schedule work
    // on a fiber.
    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
        // Update the source fiber's lanes
        sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
        var alternate = sourceFiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, lane);
        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        var node = sourceFiber;
        var parent = sourceFiber.return;
        while(parent !== null){
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            else if ((parent.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            node = parent;
            parent = parent.return;
        }
        if (node.tag === HostRoot) {
            var root = node.stateNode;
            return root;
        } else return null;
    } // Use this function to schedule a task for a root. There's only one task per
    // root; if a task was already scheduled, we'll check to make sure the priority
    // of the existing task is the same as the priority of the next level that the
    // root has work on. This function is called on every update, and right before
    // exiting a task.
    function ensureRootIsScheduled(root, currentTime) {
        var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
        // expired so we know to work on those next.
        markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.
        var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes); // This returns the priority level computed during the `getNextLanes` call.
        var newCallbackPriority = returnNextLanesPriority();
        if (nextLanes === NoLanes) {
            // Special case: There's nothing to work on.
            if (existingCallbackNode !== null) {
                cancelCallback(existingCallbackNode);
                root.callbackNode = null;
                root.callbackPriority = NoLanePriority;
            }
            return;
        } // Check if there's an existing task. We may be able to reuse it.
        if (existingCallbackNode !== null) {
            var existingCallbackPriority = root.callbackPriority;
            if (existingCallbackPriority === newCallbackPriority) // The priority hasn't changed. We can reuse the existing task. Exit.
            return;
             // The priority changed. Cancel the existing callback. We'll schedule a new
            // one below.
            cancelCallback(existingCallbackNode);
        } // Schedule a new callback.
        var newCallbackNode;
        if (newCallbackPriority === SyncLanePriority) // Special case: Sync React callbacks are scheduled on a special
        // internal queue
        newCallbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
        else if (newCallbackPriority === SyncBatchedLanePriority) newCallbackNode = scheduleCallback(ImmediatePriority$1, performSyncWorkOnRoot.bind(null, root));
        else {
            var schedulerPriorityLevel = lanePriorityToSchedulerPriority(newCallbackPriority);
            newCallbackNode = scheduleCallback(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
        }
        root.callbackPriority = newCallbackPriority;
        root.callbackNode = newCallbackNode;
    } // This is the entry point for every concurrent task, i.e. anything that
    // goes through Scheduler.
    function performConcurrentWorkOnRoot(root) {
        // Since we know we're in a React event, we can clear the current
        // event time. The next update will compute a new event time.
        currentEventTime = NoTimestamp;
        currentEventWipLanes = NoLanes;
        currentEventPendingLanes = NoLanes;
        if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) throw Error("Should not already be working.");
         // Flush any pending passive effects before deciding which lanes to work on,
        // in case they schedule additional work.
        var originalCallbackNode = root.callbackNode;
        var didFlushPassiveEffects = flushPassiveEffects();
        if (didFlushPassiveEffects) {
            // Something in the passive effect phase may have canceled the current task.
            // Check if the task node for this root was changed.
            if (root.callbackNode !== originalCallbackNode) // The current task was canceled. Exit. We don't need to call
            // `ensureRootIsScheduled` because the check above implies either that
            // there's a new task, or that there's no remaining work on this root.
            return null;
        } // Determine the next expiration time to work on, using the fields stored
        // on the root.
        var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (lanes === NoLanes) // Defensive coding. This is never expected to happen.
        return null;
        var exitStatus = renderRootConcurrent(root, lanes);
        if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) // The render included lanes that were updated during the render phase.
        // For example, when unhiding a hidden tree, we include all the lanes
        // that were previously skipped when the tree was hidden. That set of
        // lanes is a superset of the lanes we started rendering with.
        //
        // So we'll throw out the current work and restart.
        prepareFreshStack(root, NoLanes);
        else if (exitStatus !== RootIncomplete) {
            if (exitStatus === RootErrored) {
                executionContext |= RetryAfterError; // If an error occurred during hydration,
                // discard server response and fall back to client side render.
                if (root.hydrate) {
                    root.hydrate = false;
                    clearContainer(root.containerInfo);
                } // If something threw an error, try rendering one more time. We'll render
                // synchronously to block concurrent data mutations, and we'll includes
                // all pending updates are included. If it still fails after the second
                // attempt, we'll give up and commit the resulting tree.
                lanes = getLanesToRetrySynchronouslyOnError(root);
                if (lanes !== NoLanes) exitStatus = renderRootSync(root, lanes);
            }
            if (exitStatus === RootFatalErrored) {
                var fatalError = workInProgressRootFatalError;
                prepareFreshStack(root, NoLanes);
                markRootSuspended$1(root, lanes);
                ensureRootIsScheduled(root, now());
                throw fatalError;
            } // We now have a consistent tree. The next step is either to commit it,
            // or, if something suspended, wait to commit it after a timeout.
            var finishedWork = root.current.alternate;
            root.finishedWork = finishedWork;
            root.finishedLanes = lanes;
            finishConcurrentRender(root, exitStatus, lanes);
        }
        ensureRootIsScheduled(root, now());
        if (root.callbackNode === originalCallbackNode) // The task node scheduled for this root is the same one that's
        // currently executed. Need to return a continuation.
        return performConcurrentWorkOnRoot.bind(null, root);
        return null;
    }
    function finishConcurrentRender(root, exitStatus, lanes) {
        switch(exitStatus){
            case RootIncomplete:
            case RootFatalErrored:
                throw Error("Root did not complete. This is a bug in React.");
            // Flow knows about invariant, so it complains if I add a break
            // statement, but eslint doesn't know about invariant, so it complains
            // if I do. eslint-disable-next-line no-fallthrough
            case RootErrored:
                // We should have already attempted to retry this tree. If we reached
                // this point, it errored again. Commit it.
                commitRoot(root);
                break;
            case RootSuspended:
                markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
                // should immediately commit it or wait a bit.
                if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {
                    // This render only included retries, no updates. Throttle committing
                    // retries so that we don't show too many loading states too quickly.
                    var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.
                    if (msUntilTimeout > 10) {
                        var nextLanes = getNextLanes(root, NoLanes);
                        if (nextLanes !== NoLanes) break;
                        var suspendedLanes = root.suspendedLanes;
                        if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                            // We should prefer to render the fallback of at the last
                            // suspended level. Ping the last suspended level to try
                            // rendering it again.
                            // FIXME: What if the suspended lanes are Idle? Should not restart.
                            var eventTime = requestEventTime();
                            markRootPinged(root, suspendedLanes);
                            break;
                        } // The render is suspended, it hasn't timed out, and there's no
                        // lower priority work to do. Instead of committing the fallback
                        // immediately, wait for more data to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);
                        break;
                    }
                } // The work expired. Commit immediately.
                commitRoot(root);
                break;
            case RootSuspendedWithDelay:
                markRootSuspended$1(root, lanes);
                if (includesOnlyTransitions(lanes)) break;
                if (!shouldForceFlushFallbacksInDEV()) {
                    // This is not a transition, but we did trigger an avoided state.
                    // Schedule a placeholder to display after a short delay, using the Just
                    // Noticeable Difference.
                    // TODO: Is the JND optimization worth the added complexity? If this is
                    // the only reason we track the event time, then probably not.
                    // Consider removing.
                    var mostRecentEventTime = getMostRecentEventTime(root, lanes);
                    var eventTimeMs = mostRecentEventTime;
                    var timeElapsedMs = now() - eventTimeMs;
                    var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.
                    if (_msUntilTimeout > 10) {
                        // Instead of committing the fallback immediately, wait for more data
                        // to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout);
                        break;
                    }
                } // Commit the placeholder.
                commitRoot(root);
                break;
            case RootCompleted:
                // The work completed. Ready to commit.
                commitRoot(root);
                break;
            default:
                throw Error("Unknown root exit status.");
        }
    }
    function markRootSuspended$1(root, suspendedLanes) {
        // When suspending, we should always exclude lanes that were pinged or (more
        // rarely, since we try to avoid it) updated during the render phase.
        // TODO: Lol maybe there's a better way to factor this besides this
        // obnoxiously named function :)
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);
        markRootSuspended(root, suspendedLanes);
    } // This is the entry point for synchronous tasks that don't go
    // through Scheduler
    function performSyncWorkOnRoot(root) {
        if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) throw Error("Should not already be working.");
        flushPassiveEffects();
        var lanes;
        var exitStatus;
        if (root === workInProgressRoot && includesSomeLane(root.expiredLanes, workInProgressRootRenderLanes)) {
            // There's a partial tree, and at least one of its lanes has expired. Finish
            // rendering it before rendering the rest of the expired work.
            lanes = workInProgressRootRenderLanes;
            exitStatus = renderRootSync(root, lanes);
            if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
                // The render included lanes that were updated during the render phase.
                // For example, when unhiding a hidden tree, we include all the lanes
                // that were previously skipped when the tree was hidden. That set of
                // lanes is a superset of the lanes we started rendering with.
                //
                // Note that this only happens when part of the tree is rendered
                // concurrently. If the whole tree is rendered synchronously, then there
                // are no interleaved events.
                lanes = getNextLanes(root, lanes);
                exitStatus = renderRootSync(root, lanes);
            }
        } else {
            lanes = getNextLanes(root, NoLanes);
            exitStatus = renderRootSync(root, lanes);
        }
        if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
            executionContext |= RetryAfterError; // If an error occurred during hydration,
            // discard server response and fall back to client side render.
            if (root.hydrate) {
                root.hydrate = false;
                clearContainer(root.containerInfo);
            } // If something threw an error, try rendering one more time. We'll render
            // synchronously to block concurrent data mutations, and we'll includes
            // all pending updates are included. If it still fails after the second
            // attempt, we'll give up and commit the resulting tree.
            lanes = getLanesToRetrySynchronouslyOnError(root);
            if (lanes !== NoLanes) exitStatus = renderRootSync(root, lanes);
        }
        if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root, NoLanes);
            markRootSuspended$1(root, lanes);
            ensureRootIsScheduled(root, now());
            throw fatalError;
        } // We now have a consistent tree. Because this is a sync render, we
        // will commit it even if something suspended.
        var finishedWork = root.current.alternate;
        root.finishedWork = finishedWork;
        root.finishedLanes = lanes;
        commitRoot(root); // Before exiting, make sure there's a callback scheduled for the next
        // pending level.
        ensureRootIsScheduled(root, now());
        return null;
    }
    function flushDiscreteUpdates() {
        // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.
        // However, `act` uses `batchedUpdates`, so there's no way to distinguish
        // those two cases. Need to fix this before exposing flushDiscreteUpdates
        // as a public API.
        if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
            if ((executionContext & RenderContext) !== NoContext) error1("unstable_flushDiscreteUpdates: Cannot flush updates when React is already rendering.");
            // This is probably a nested event dispatch triggered by a lifecycle/effect,
            // like `el.focus()`. Exit.
            return;
        }
        flushPendingDiscreteUpdates(); // If the discrete updates scheduled passive effects, flush them now so that
        // they fire before the next serial event.
        flushPassiveEffects();
    }
    function flushPendingDiscreteUpdates() {
        if (rootsWithPendingDiscreteUpdates !== null) {
            // For each root with pending discrete updates, schedule a callback to
            // immediately flush them.
            var roots = rootsWithPendingDiscreteUpdates;
            rootsWithPendingDiscreteUpdates = null;
            roots.forEach(function(root) {
                markDiscreteUpdatesExpired(root);
                ensureRootIsScheduled(root, now());
            });
        } // Now flush the immediate queue.
        flushSyncCallbackQueue();
    }
    function batchedUpdates$1(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        try {
            return fn(a);
        } finally{
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
                // Flush the immediate callbacks that were scheduled during this batch
                resetRenderTimer();
                flushSyncCallbackQueue();
            }
        }
    }
    function batchedEventUpdates$1(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext |= EventContext;
        try {
            return fn(a);
        } finally{
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
                // Flush the immediate callbacks that were scheduled during this batch
                resetRenderTimer();
                flushSyncCallbackQueue();
            }
        }
    }
    function discreteUpdates$1(fn, a, b, c, d) {
        var prevExecutionContext = executionContext;
        executionContext |= DiscreteEventContext;
        try {
            return runWithPriority$1(UserBlockingPriority$2, fn.bind(null, a, b, c, d));
        } finally{
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
                // Flush the immediate callbacks that were scheduled during this batch
                resetRenderTimer();
                flushSyncCallbackQueue();
            }
        }
    }
    function unbatchedUpdates(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext &= ~BatchedContext;
        executionContext |= LegacyUnbatchedContext;
        try {
            return fn(a);
        } finally{
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
                // Flush the immediate callbacks that were scheduled during this batch
                resetRenderTimer();
                flushSyncCallbackQueue();
            }
        }
    }
    function flushSync(fn, a) {
        var prevExecutionContext = executionContext;
        if ((prevExecutionContext & (RenderContext | CommitContext)) !== NoContext) {
            error1("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
            return fn(a);
        }
        executionContext |= BatchedContext;
        try {
            if (fn) return runWithPriority$1(ImmediatePriority$1, fn.bind(null, a));
            else return undefined;
        } finally{
            executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
            // Note that this will happen even if batchedUpdates is higher up
            // the stack.
            flushSyncCallbackQueue();
        }
    }
    function pushRenderLanes(fiber, lanes) {
        push(subtreeRenderLanesCursor, subtreeRenderLanes1, fiber);
        subtreeRenderLanes1 = mergeLanes(subtreeRenderLanes1, lanes);
        workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
    }
    function popRenderLanes(fiber) {
        subtreeRenderLanes1 = subtreeRenderLanesCursor.current;
        pop(subtreeRenderLanesCursor, fiber);
    }
    function prepareFreshStack(root, lanes) {
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        var timeoutHandle = root.timeoutHandle;
        if (timeoutHandle !== noTimeout) {
            // The root previous suspended and scheduled a timeout to commit a fallback
            // state. Now that we have additional work, cancel the timeout.
            root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
            cancelTimeout(timeoutHandle);
        }
        if (workInProgress1 !== null) {
            var interruptedWork = workInProgress1.return;
            while(interruptedWork !== null){
                unwindInterruptedWork(interruptedWork);
                interruptedWork = interruptedWork.return;
            }
        }
        workInProgressRoot = root;
        workInProgress1 = createWorkInProgress(root.current, null);
        workInProgressRootRenderLanes = subtreeRenderLanes1 = workInProgressRootIncludedLanes = lanes;
        workInProgressRootExitStatus = RootIncomplete;
        workInProgressRootFatalError = null;
        workInProgressRootSkippedLanes = NoLanes;
        workInProgressRootUpdatedLanes = NoLanes;
        workInProgressRootPingedLanes = NoLanes;
        spawnedWorkDuringRender = null;
        ReactStrictModeWarnings.discardPendingWarnings();
    }
    function handleError(root, thrownValue) {
        do {
            var erroredWork = workInProgress1;
            try {
                // Reset module-level state that was set during the render phase.
                resetContextDependencies();
                resetHooksAfterThrow();
                resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
                // separate issue. Write a regression test using string refs.
                ReactCurrentOwner$2.current = null;
                if (erroredWork === null || erroredWork.return === null) {
                    // Expected to be working on a non-root fiber. This is a fatal error
                    // because there's no ancestor that can handle it; the root is
                    // supposed to capture all errors that weren't caught by an error
                    // boundary.
                    workInProgressRootExitStatus = RootFatalErrored;
                    workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
                    // sibling, or the parent if there are no siblings. But since the root
                    // has no siblings nor a parent, we set it to null. Usually this is
                    // handled by `completeUnitOfWork` or `unwindWork`, but since we're
                    // intentionally not calling those, we need set it here.
                    // TODO: Consider calling `unwindWork` to pop the contexts.
                    workInProgress1 = null;
                    return;
                }
                if (enableProfilerTimer && erroredWork.mode & ProfileMode) // Record the time spent rendering before an error was thrown. This
                // avoids inaccurate Profiler durations in the case of a
                // suspended render.
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
                throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
                completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
                // Something in the return path also threw.
                thrownValue = yetAnotherThrownValue;
                if (workInProgress1 === erroredWork && erroredWork !== null) {
                    // If this boundary has already errored, then we had trouble processing
                    // the error. Bubble it to the next boundary.
                    erroredWork = erroredWork.return;
                    workInProgress1 = erroredWork;
                } else erroredWork = workInProgress1;
                continue;
            } // Return to the normal work loop.
            return;
        }while (true)
    }
    function pushDispatcher() {
        var prevDispatcher = ReactCurrentDispatcher$2.current;
        ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
        if (prevDispatcher === null) // The React isomorphic package does not include a default dispatcher.
        // Instead the first renderer will lazily attach one, in order to give
        // nicer error messages.
        return ContextOnlyDispatcher;
        else return prevDispatcher;
    }
    function popDispatcher(prevDispatcher) {
        ReactCurrentDispatcher$2.current = prevDispatcher;
    }
    function pushInteractions(root) {
        var prevInteractions = tracing.__interactionsRef.current;
        tracing.__interactionsRef.current = root.memoizedInteractions;
        return prevInteractions;
    }
    function popInteractions(prevInteractions) {
        tracing.__interactionsRef.current = prevInteractions;
    }
    function markCommitTimeOfFallback() {
        globalMostRecentFallbackTime = now();
    }
    function markSkippedUpdateLanes(lane) {
        workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
    }
    function renderDidSuspend() {
        if (workInProgressRootExitStatus === RootIncomplete) workInProgressRootExitStatus = RootSuspended;
    }
    function renderDidSuspendDelayIfPossible() {
        if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
         // Check if there are updates that we skipped tree that might have unblocked
        // this render.
        if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootUpdatedLanes))) // Mark the current render as suspended so that we switch to working on
        // the updates that were skipped. Usually we only suspend at the end of
        // the render phase.
        // TODO: We should probably always mark the root as suspended immediately
        // (inside this function), since by suspending at the end of the render
        // phase introduces a potential mistake where we suspend lanes that were
        // pinged or updated while we were rendering.
        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
    }
    function renderDidError() {
        if (workInProgressRootExitStatus !== RootCompleted) workInProgressRootExitStatus = RootErrored;
    } // Called during render to determine if anything has suspended.
    // Returns false if we're not sure.
    function renderHasNotSuspendedYet() {
        // If something errored or completed, we can't really be sure,
        // so those are false.
        return workInProgressRootExitStatus === RootIncomplete;
    }
    function renderRootSync(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            prepareFreshStack(root, lanes);
            startWorkOnPendingInteractions(root, lanes);
        }
        var prevInteractions = pushInteractions(root);
        for(;;)try {
            workLoopSync();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        popInteractions(prevInteractions);
        executionContext = prevExecutionContext;
        popDispatcher(prevDispatcher);
        if (workInProgress1 !== null) throw Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
        workInProgressRoot = null;
        workInProgressRootRenderLanes = NoLanes;
        return workInProgressRootExitStatus;
    } // The work loop is an extremely hot path. Tell Closure not to inline it.
    /** @noinline */ function workLoopSync() {
        // Already timed out, so perform work without checking if we need to yield.
        while(workInProgress1 !== null)performUnitOfWork(workInProgress1);
    }
    function renderRootConcurrent(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            resetRenderTimer();
            prepareFreshStack(root, lanes);
            startWorkOnPendingInteractions(root, lanes);
        }
        var prevInteractions = pushInteractions(root);
        for(;;)try {
            workLoopConcurrent();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        popInteractions(prevInteractions);
        popDispatcher(prevDispatcher);
        executionContext = prevExecutionContext;
        if (workInProgress1 !== null) return RootIncomplete;
        else {
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes; // Return the final exit status.
            return workInProgressRootExitStatus;
        }
    }
    /** @noinline */ function workLoopConcurrent() {
        // Perform work until Scheduler asks us to yield
        while(workInProgress1 !== null && !shouldYield())performUnitOfWork(workInProgress1);
    }
    function performUnitOfWork(unitOfWork) {
        // The current, flushed, state of this fiber is the alternate. Ideally
        // nothing should rely on this, but relying on it here means that we don't
        // need an additional field on the work in progress.
        var current = unitOfWork.alternate;
        setCurrentFiber(unitOfWork);
        var next;
        if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current, unitOfWork, subtreeRenderLanes1);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
        } else next = beginWork$1(current, unitOfWork, subtreeRenderLanes1);
        resetCurrentFiber();
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        if (next === null) // If this doesn't spawn new work, complete the current work.
        completeUnitOfWork(unitOfWork);
        else workInProgress1 = next;
        ReactCurrentOwner$2.current = null;
    }
    function completeUnitOfWork(unitOfWork) {
        // Attempt to complete the current unit of work, then move to the next
        // sibling. If there are no more siblings, return to the parent fiber.
        var completedWork = unitOfWork;
        do {
            // The current, flushed, state of this fiber is the alternate. Ideally
            // nothing should rely on this, but relying on it here means that we don't
            // need an additional field on the work in progress.
            var current = completedWork.alternate;
            var returnFiber = completedWork.return; // Check if the work completed or if something threw.
            if ((completedWork.flags & Incomplete) === NoFlags) {
                setCurrentFiber(completedWork);
                var next = void 0;
                if ((completedWork.mode & ProfileMode) === NoMode) next = completeWork(current, completedWork, subtreeRenderLanes1);
                else {
                    startProfilerTimer(completedWork);
                    next = completeWork(current, completedWork, subtreeRenderLanes1); // Update render duration assuming we didn't error.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                }
                resetCurrentFiber();
                if (next !== null) {
                    // Completing this fiber spawned new work. Work on that next.
                    workInProgress1 = next;
                    return;
                }
                resetChildLanes(completedWork);
                if (returnFiber !== null && (returnFiber.flags & Incomplete) === NoFlags) {
                    // Append all the effects of the subtree and this fiber onto the effect
                    // list of the parent. The completion order of the children affects the
                    // side-effect order.
                    if (returnFiber.firstEffect === null) returnFiber.firstEffect = completedWork.firstEffect;
                    if (completedWork.lastEffect !== null) {
                        if (returnFiber.lastEffect !== null) returnFiber.lastEffect.nextEffect = completedWork.firstEffect;
                        returnFiber.lastEffect = completedWork.lastEffect;
                    } // If this fiber had side-effects, we append it AFTER the children's
                    // side-effects. We can perform certain side-effects earlier if needed,
                    // by doing multiple passes over the effect list. We don't want to
                    // schedule our own side-effect on our own list because if end up
                    // reusing children we'll schedule this effect onto itself since we're
                    // at the end.
                    var flags = completedWork.flags; // Skip both NoWork and PerformedWork tags when creating the effect
                    // list. PerformedWork effect is read by React DevTools but shouldn't be
                    // committed.
                    if (flags > PerformedWork) {
                        if (returnFiber.lastEffect !== null) returnFiber.lastEffect.nextEffect = completedWork;
                        else returnFiber.firstEffect = completedWork;
                        returnFiber.lastEffect = completedWork;
                    }
                }
            } else {
                // This fiber did not complete because something threw. Pop values off
                // the stack without entering the complete phase. If this is a boundary,
                // capture values if possible.
                var _next = unwindWork(completedWork); // Because this fiber did not complete, don't reset its expiration time.
                if (_next !== null) {
                    // If completing this work spawned new work, do that next. We'll come
                    // back here again.
                    // Since we're restarting, remove anything that is not a host effect
                    // from the effect tag.
                    _next.flags &= HostEffectMask;
                    workInProgress1 = _next;
                    return;
                }
                if ((completedWork.mode & ProfileMode) !== NoMode) {
                    // Record the render duration for the fiber that errored.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.
                    var actualDuration = completedWork.actualDuration;
                    var child = completedWork.child;
                    while(child !== null){
                        actualDuration += child.actualDuration;
                        child = child.sibling;
                    }
                    completedWork.actualDuration = actualDuration;
                }
                if (returnFiber !== null) {
                    // Mark the parent fiber as incomplete and clear its effect list.
                    returnFiber.firstEffect = returnFiber.lastEffect = null;
                    returnFiber.flags |= Incomplete;
                }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
                // If there is more work to do in this returnFiber, do that next.
                workInProgress1 = siblingFiber;
                return;
            } // Otherwise, return to the parent
            completedWork = returnFiber; // Update the next thing we're working on in case something throws.
            workInProgress1 = completedWork;
        }while (completedWork !== null) // We've reached the root.
        if (workInProgressRootExitStatus === RootIncomplete) workInProgressRootExitStatus = RootCompleted;
    }
    function resetChildLanes(completedWork) {
        if (// to switch statement in `completeWork`.
        (completedWork.tag === LegacyHiddenComponent || completedWork.tag === OffscreenComponent) && completedWork.memoizedState !== null && !includesSomeLane(subtreeRenderLanes1, OffscreenLane) && (completedWork.mode & ConcurrentMode) !== NoLanes) // The children of this component are hidden. Don't bubble their
        // expiration times.
        return;
        var newChildLanes = NoLanes; // Bubble up the earliest expiration time.
        if ((completedWork.mode & ProfileMode) !== NoMode) {
            // In profiling mode, resetChildExpirationTime is also used to reset
            // profiler durations.
            var actualDuration = completedWork.actualDuration;
            var treeBaseDuration = completedWork.selfBaseDuration; // When a fiber is cloned, its actualDuration is reset to 0. This value will
            // only be updated if work is done on the fiber (i.e. it doesn't bailout).
            // When work is done, it should bubble to the parent's actualDuration. If
            // the fiber has not been cloned though, (meaning no work was done), then
            // this value will reflect the amount of time spent working on a previous
            // render. In that case it should not bubble. We determine whether it was
            // cloned by comparing the child pointer.
            var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
            var child = completedWork.child;
            while(child !== null){
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                if (shouldBubbleActualDurations) actualDuration += child.actualDuration;
                treeBaseDuration += child.treeBaseDuration;
                child = child.sibling;
            }
            var isTimedOutSuspense = completedWork.tag === SuspenseComponent && completedWork.memoizedState !== null;
            if (isTimedOutSuspense) {
                // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                var primaryChildFragment = completedWork.child;
                if (primaryChildFragment !== null) treeBaseDuration -= primaryChildFragment.treeBaseDuration;
            }
            completedWork.actualDuration = actualDuration;
            completedWork.treeBaseDuration = treeBaseDuration;
        } else {
            var _child = completedWork.child;
            while(_child !== null){
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                _child = _child.sibling;
            }
        }
        completedWork.childLanes = newChildLanes;
    }
    function commitRoot(root) {
        var renderPriorityLevel = getCurrentPriorityLevel();
        runWithPriority$1(ImmediatePriority$1, commitRootImpl.bind(null, root, renderPriorityLevel));
        return null;
    }
    function commitRootImpl(root, renderPriorityLevel) {
        do // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
        // means `flushPassiveEffects` will sometimes result in additional
        // passive effects. So we need to keep flushing in a loop until there are
        // no more pending effects.
        // TODO: Might be better if `flushPassiveEffects` did not automatically
        // flush synchronous work at the end, to avoid factoring hazards like this.
        flushPassiveEffects();
        while (rootWithPendingPassiveEffects !== null)
        flushRenderPhaseStrictModeWarningsInDEV();
        if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) throw Error("Should not already be working.");
        var finishedWork = root.finishedWork;
        var lanes = root.finishedLanes;
        if (finishedWork === null) return null;
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        if (!(finishedWork !== root.current)) throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
         // commitRoot never returns a continuation; it always finishes synchronously.
        // So we can clear these now to allow a new callback to be scheduled.
        root.callbackNode = null; // Update the first and last pending times on this root. The new first
        // pending time is whatever is left on the root fiber.
        var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
        markRootFinished(root, remainingLanes); // Clear already finished discrete updates in case that a later call of
        // `flushDiscreteUpdates` starts a useless render pass which may cancels
        // a scheduled timeout.
        if (rootsWithPendingDiscreteUpdates !== null) {
            if (!hasDiscreteLanes(remainingLanes) && rootsWithPendingDiscreteUpdates.has(root)) rootsWithPendingDiscreteUpdates.delete(root);
        }
        if (root === workInProgressRoot) {
            // We can reset these now that they are finished.
            workInProgressRoot = null;
            workInProgress1 = null;
            workInProgressRootRenderLanes = NoLanes;
        } // Get the list of effects.
        var firstEffect;
        if (finishedWork.flags > PerformedWork) {
            // A fiber's effect list consists only of its children, not itself. So if
            // the root has an effect, we need to add it to the end of the list. The
            // resulting list is the set that would belong to the root's parent, if it
            // had one; that is, all the effects in the tree including the root.
            if (finishedWork.lastEffect !== null) {
                finishedWork.lastEffect.nextEffect = finishedWork;
                firstEffect = finishedWork.firstEffect;
            } else firstEffect = finishedWork;
        } else // There is no effect on the root.
        firstEffect = finishedWork.firstEffect;
        if (firstEffect !== null) {
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            var prevInteractions = pushInteractions(root); // Reset this to null before calling lifecycles
            ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
            // of the effect list for each phase: all mutation effects come before all
            // layout effects, and so on.
            // The first phase a "before mutation" phase. We use this phase to read the
            // state of the host tree right before we mutate it. This is where
            // getSnapshotBeforeUpdate is called.
            focusedInstanceHandle = prepareForCommit(root.containerInfo);
            shouldFireAfterActiveInstanceBlur = false;
            nextEffect = firstEffect;
            do {
                invokeGuardedCallback(null, commitBeforeMutationEffects, null);
                if (hasCaughtError()) {
                    if (!(nextEffect !== null)) throw Error("Should be working on an effect.");
                    var error = clearCaughtError();
                    captureCommitPhaseError(nextEffect, error);
                    nextEffect = nextEffect.nextEffect;
                }
            }while (nextEffect !== null) // We no longer need to track the active instance fiber
            focusedInstanceHandle = null;
            // Mark the current commit time to be shared by all Profilers in this
            // batch. This enables them to be grouped later.
            recordCommitTime();
            nextEffect = firstEffect;
            do {
                invokeGuardedCallback(null, commitMutationEffects, null, root, renderPriorityLevel);
                if (hasCaughtError()) {
                    if (!(nextEffect !== null)) throw Error("Should be working on an effect.");
                    var _error = clearCaughtError();
                    captureCommitPhaseError(nextEffect, _error);
                    nextEffect = nextEffect.nextEffect;
                }
            }while (nextEffect !== null)
            resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
            // the mutation phase, so that the previous tree is still current during
            // componentWillUnmount, but before the layout phase, so that the finished
            // work is current during componentDidMount/Update.
            root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
            // the host tree after it's been mutated. The idiomatic use case for this is
            // layout, but class component lifecycles also fire here for legacy reasons.
            nextEffect = firstEffect;
            do {
                invokeGuardedCallback(null, commitLayoutEffects, null, root, lanes);
                if (hasCaughtError()) {
                    if (!(nextEffect !== null)) throw Error("Should be working on an effect.");
                    var _error2 = clearCaughtError();
                    captureCommitPhaseError(nextEffect, _error2);
                    nextEffect = nextEffect.nextEffect;
                }
            }while (nextEffect !== null)
            nextEffect = null; // Tell Scheduler to yield at the end of the frame, so the browser has an
            // opportunity to paint.
            requestPaint();
            popInteractions(prevInteractions);
            executionContext = prevExecutionContext;
        } else {
            // No effects.
            root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
            recordCommitTime();
        }
        var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
        if (rootDoesHavePassiveEffects) {
            // This commit has passive effects. Stash a reference to them. But don't
            // schedule a callback until after flushing layout work.
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root;
            pendingPassiveEffectsLanes = lanes;
            pendingPassiveEffectsRenderPriority = renderPriorityLevel;
        } else {
            // We are done with the effect chain at this point so let's clear the
            // nextEffect pointers to assist with GC. If we have passive effects, we'll
            // clear this in flushPassiveEffects.
            nextEffect = firstEffect;
            while(nextEffect !== null){
                var nextNextEffect = nextEffect.nextEffect;
                nextEffect.nextEffect = null;
                if (nextEffect.flags & Deletion) detachFiberAfterEffects(nextEffect);
                nextEffect = nextNextEffect;
            }
        } // Read this again, since an effect might have updated it
        remainingLanes = root.pendingLanes; // Check if there's remaining work on this root
        if (remainingLanes !== NoLanes) {
            if (spawnedWorkDuringRender !== null) {
                var expirationTimes = spawnedWorkDuringRender;
                spawnedWorkDuringRender = null;
                for(var i = 0; i < expirationTimes.length; i++)scheduleInteractions(root, expirationTimes[i], root.memoizedInteractions);
            }
            schedulePendingInteractions(root, remainingLanes);
        } else // If there's no remaining work, we can clear the set of already failed
        // error boundaries.
        legacyErrorBoundariesThatAlreadyFailed = null;
        if (!rootDidHavePassiveEffects) // If there are no passive effects, then we can complete the pending interactions.
        // Otherwise, we'll wait until after the passive effects are flushed.
        // Wait to do this until after remaining work has been scheduled,
        // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.
        finishPendingInteractions(root, lanes);
        if (remainingLanes === SyncLane) {
            // Count the number of times the root synchronously re-renders without
            // finishing. If there are too many, it indicates an infinite update loop.
            if (root === rootWithNestedUpdates) nestedUpdateCount++;
            else {
                nestedUpdateCount = 0;
                rootWithNestedUpdates = root;
            }
        } else nestedUpdateCount = 0;
        onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
        onCommitRoot$1();
        // additional work on this root is scheduled.
        ensureRootIsScheduled(root, now());
        if (hasUncaughtError) {
            hasUncaughtError = false;
            var _error3 = firstUncaughtError;
            firstUncaughtError = null;
            throw _error3;
        }
        if ((executionContext & LegacyUnbatchedContext) !== NoContext) // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired
        // synchronously, but layout updates should be deferred until the end
        // of the batch.
        return null;
         // If layout work was scheduled, flush it now.
        flushSyncCallbackQueue();
        return null;
    }
    function commitBeforeMutationEffects() {
        while(nextEffect !== null){
            var current = nextEffect.alternate;
            if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {
                if ((nextEffect.flags & Deletion) !== NoFlags) {
                    if (doesFiberContain(nextEffect, focusedInstanceHandle)) shouldFireAfterActiveInstanceBlur = true;
                } else // TODO: Move this out of the hot path using a dedicated effect tag.
                if (nextEffect.tag === SuspenseComponent && isSuspenseBoundaryBeingHidden(current, nextEffect) && doesFiberContain(nextEffect, focusedInstanceHandle)) shouldFireAfterActiveInstanceBlur = true;
            }
            var flags = nextEffect.flags;
            if ((flags & Snapshot) !== NoFlags) {
                setCurrentFiber(nextEffect);
                commitBeforeMutationLifeCycles(current, nextEffect);
                resetCurrentFiber();
            }
            if ((flags & Passive) !== NoFlags) // If there are passive effects, schedule a callback to flush at
            // the earliest opportunity.
            {
                if (!rootDoesHavePassiveEffects) {
                    rootDoesHavePassiveEffects = true;
                    scheduleCallback(NormalPriority$1, function() {
                        flushPassiveEffects();
                        return null;
                    });
                }
            }
            nextEffect = nextEffect.nextEffect;
        }
    }
    function commitMutationEffects(root, renderPriorityLevel) {
        // TODO: Should probably move the bulk of this function to commitWork.
        while(nextEffect !== null){
            setCurrentFiber(nextEffect);
            var flags = nextEffect.flags;
            if (flags & ContentReset) commitResetTextContent(nextEffect);
            if (flags & Ref) {
                var current = nextEffect.alternate;
                if (current !== null) commitDetachRef(current);
            } // The following switch statement is only concerned about placement,
            // updates, and deletions. To avoid needing to add a case for every possible
            // bitmap value, we remove the secondary effects from the effect tag and
            // switch on that value.
            var primaryFlags = flags & (Placement | Update | Deletion | Hydrating);
            switch(primaryFlags){
                case Placement:
                    commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
                    // inserted, before any life-cycles like componentDidMount gets called.
                    // TODO: findDOMNode doesn't rely on this any more but isMounted does
                    // and isMounted is deprecated anyway so we should be able to kill this.
                    nextEffect.flags &= ~Placement;
                    break;
                case PlacementAndUpdate:
                    // Placement
                    commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
                    // inserted, before any life-cycles like componentDidMount gets called.
                    nextEffect.flags &= ~Placement; // Update
                    var _current = nextEffect.alternate;
                    commitWork(_current, nextEffect);
                    break;
                case Hydrating:
                    nextEffect.flags &= ~Hydrating;
                    break;
                case HydratingAndUpdate:
                    nextEffect.flags &= ~Hydrating; // Update
                    var _current2 = nextEffect.alternate;
                    commitWork(_current2, nextEffect);
                    break;
                case Update:
                    var _current3 = nextEffect.alternate;
                    commitWork(_current3, nextEffect);
                    break;
                case Deletion:
                    commitDeletion(root, nextEffect);
                    break;
            }
            resetCurrentFiber();
            nextEffect = nextEffect.nextEffect;
        }
    }
    function commitLayoutEffects(root, committedLanes) {
        while(nextEffect !== null){
            setCurrentFiber(nextEffect);
            var flags = nextEffect.flags;
            if (flags & (Update | Callback)) {
                var current = nextEffect.alternate;
                commitLifeCycles(root, current, nextEffect);
            }
            if (flags & Ref) commitAttachRef(nextEffect);
            resetCurrentFiber();
            nextEffect = nextEffect.nextEffect;
        }
    }
    function flushPassiveEffects() {
        // Returns whether passive effects were flushed.
        if (pendingPassiveEffectsRenderPriority !== NoPriority$1) {
            var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority$1 ? NormalPriority$1 : pendingPassiveEffectsRenderPriority;
            pendingPassiveEffectsRenderPriority = NoPriority$1;
            return runWithPriority$1(priorityLevel, flushPassiveEffectsImpl);
        }
        return false;
    }
    function enqueuePendingPassiveHookEffectMount(fiber, effect) {
        pendingPassiveHookEffectsMount.push(effect, fiber);
        if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback(NormalPriority$1, function() {
                flushPassiveEffects();
                return null;
            });
        }
    }
    function enqueuePendingPassiveHookEffectUnmount(fiber, effect) {
        pendingPassiveHookEffectsUnmount.push(effect, fiber);
        fiber.flags |= PassiveUnmountPendingDev;
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.flags |= PassiveUnmountPendingDev;
        if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback(NormalPriority$1, function() {
                flushPassiveEffects();
                return null;
            });
        }
    }
    function invokePassiveEffectCreate(effect) {
        var create = effect.create;
        effect.destroy = create();
    }
    function flushPassiveEffectsImpl() {
        if (rootWithPendingPassiveEffects === null) return false;
        var root = rootWithPendingPassiveEffects;
        var lanes = pendingPassiveEffectsLanes;
        rootWithPendingPassiveEffects = null;
        pendingPassiveEffectsLanes = NoLanes;
        if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) throw Error("Cannot flush passive effects while already rendering.");
        isFlushingPassiveEffects = true;
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;
        var prevInteractions = pushInteractions(root); // It's important that ALL pending passive effect destroy functions are called
        // before ANY passive effect create functions are called.
        // Otherwise effects in sibling components might interfere with each other.
        // e.g. a destroy function in one component may unintentionally override a ref
        // value set by a create function in another component.
        // Layout effects have the same constraint.
        // First pass: Destroy stale passive effects.
        var unmountEffects = pendingPassiveHookEffectsUnmount;
        pendingPassiveHookEffectsUnmount = [];
        for(var i = 0; i < unmountEffects.length; i += 2){
            var _effect = unmountEffects[i];
            var fiber = unmountEffects[i + 1];
            var destroy = _effect.destroy;
            _effect.destroy = undefined;
            fiber.flags &= ~PassiveUnmountPendingDev;
            var alternate = fiber.alternate;
            if (alternate !== null) alternate.flags &= ~PassiveUnmountPendingDev;
            if (typeof destroy === 'function') {
                setCurrentFiber(fiber);
                invokeGuardedCallback(null, destroy, null);
                if (hasCaughtError()) {
                    if (!(fiber !== null)) throw Error("Should be working on an effect.");
                    var error = clearCaughtError();
                    captureCommitPhaseError(fiber, error);
                }
                resetCurrentFiber();
            }
        } // Second pass: Create new passive effects.
        var mountEffects = pendingPassiveHookEffectsMount;
        pendingPassiveHookEffectsMount = [];
        for(var _i = 0; _i < mountEffects.length; _i += 2){
            var _effect2 = mountEffects[_i];
            var _fiber = mountEffects[_i + 1];
            setCurrentFiber(_fiber);
            invokeGuardedCallback(null, invokePassiveEffectCreate, null, _effect2);
            if (hasCaughtError()) {
                if (!(_fiber !== null)) throw Error("Should be working on an effect.");
                var _error4 = clearCaughtError();
                captureCommitPhaseError(_fiber, _error4);
            }
            resetCurrentFiber();
        } // Note: This currently assumes there are no passive effects on the root fiber
        // because the root is not part of its own effect list.
        // This could change in the future.
        var effect = root.current.firstEffect;
        while(effect !== null){
            var nextNextEffect = effect.nextEffect; // Remove nextEffect pointer to assist GC
            effect.nextEffect = null;
            if (effect.flags & Deletion) detachFiberAfterEffects(effect);
            effect = nextNextEffect;
        }
        popInteractions(prevInteractions);
        finishPendingInteractions(root, lanes);
        isFlushingPassiveEffects = false;
        executionContext = prevExecutionContext;
        flushSyncCallbackQueue(); // If additional passive effects were scheduled, increment a counter. If this
        // exceeds the limit, we'll fire a warning.
        nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
        return true;
    }
    function isAlreadyFailedLegacyErrorBoundary(instance) {
        return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
    }
    function markLegacyErrorBoundaryAsFailed(instance) {
        if (legacyErrorBoundariesThatAlreadyFailed === null) legacyErrorBoundariesThatAlreadyFailed = new Set([
            instance
        ]);
        else legacyErrorBoundariesThatAlreadyFailed.add(instance);
    }
    function prepareToThrowUncaughtError(error) {
        if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error;
        }
    }
    var onUncaughtError = prepareToThrowUncaughtError;
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        var errorInfo = createCapturedValue(error, sourceFiber);
        var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
        enqueueUpdate(rootFiber, update);
        var eventTime = requestEventTime();
        var root = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);
        if (root !== null) {
            markRootUpdated(root, SyncLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
            schedulePendingInteractions(root, SyncLane);
        }
    }
    function captureCommitPhaseError(sourceFiber, error) {
        if (sourceFiber.tag === HostRoot) {
            // Error was thrown at the root. There is no parent, so the root
            // itself should capture it.
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
            return;
        }
        var fiber = sourceFiber.return;
        while(fiber !== null){
            if (fiber.tag === HostRoot) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
                return;
            } else if (fiber.tag === ClassComponent) {
                var ctor = fiber.type;
                var instance = fiber.stateNode;
                if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                    var errorInfo = createCapturedValue(error, sourceFiber);
                    var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                    enqueueUpdate(fiber, update);
                    var eventTime = requestEventTime();
                    var root = markUpdateLaneFromFiberToRoot(fiber, SyncLane);
                    if (root !== null) {
                        markRootUpdated(root, SyncLane, eventTime);
                        ensureRootIsScheduled(root, eventTime);
                        schedulePendingInteractions(root, SyncLane);
                    } else {
                        // This component has already been unmounted.
                        // We can't schedule any follow up work for the root because the fiber is already unmounted,
                        // but we can still call the log-only boundary so the error isn't swallowed.
                        //
                        // TODO This is only a temporary bandaid for the old reconciler fork.
                        // We can delete this special case once the new fork is merged.
                        if (typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) try {
                            instance.componentDidCatch(error, errorInfo);
                        } catch (errorToIgnore) {
                        // This is kind of an edge case.
                        }
                    }
                    return;
                }
            }
            fiber = fiber.return;
        }
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
        var pingCache = root.pingCache;
        if (pingCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        pingCache.delete(wakeable);
        var eventTime = requestEventTime();
        markRootPinged(root, pingedLanes);
        if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            // Received a ping at the same priority level at which we're currently
            // rendering. We might want to restart this render. This should mirror
            // the logic of whether or not a root suspends once it completes.
            // TODO: If we're rendering sync either due to Sync, Batched or expired,
            // we should probably never restart.
            // If we're suspended with delay, or if it's a retry, we'll always suspend
            // so we can always restart.
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) // Restart from the root.
            prepareFreshStack(root, NoLanes);
            else // Even though we can't restart right now, we might get an
            // opportunity later. So we mark this render as having a ping.
            workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
        }
        ensureRootIsScheduled(root, eventTime);
        schedulePendingInteractions(root, pingedLanes);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
        // The boundary fiber (a Suspense component or SuspenseList component)
        // previously was rendered in its fallback state. One of the promises that
        // suspended it has resolved, which means at least part of the tree was
        // likely unblocked. Try rendering again, at a new expiration time.
        if (retryLane === NoLane) retryLane = requestRetryLane(boundaryFiber);
         // TODO: Special case idle priority?
        var eventTime = requestEventTime();
        var root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);
        if (root !== null) {
            markRootUpdated(root, retryLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
            schedulePendingInteractions(root, retryLane);
        }
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = NoLane; // Default
        var retryCache;
        retryCache = boundaryFiber.stateNode;
        if (retryCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        retryCache.delete(wakeable);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    } // Computes the next Just Noticeable Difference (JND) boundary.
    // The theory is that a person can't tell the difference between small differences in time.
    // Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
    // difference in the experience. However, waiting for longer might mean that we can avoid
    // showing an intermediate loading state. The longer we have already waited, the harder it
    // is to tell small differences in time. Therefore, the longer we've already waited,
    // the longer we can wait additionally. At some point we have to give up though.
    // We pick a train model where the next boundary commits at a consistent schedule.
    // These particular numbers are vague estimates. We expect to adjust them based on research.
    function jnd(timeElapsed) {
        return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
    }
    function checkForNestedUpdates() {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            throw Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        }
        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
            nestedPassiveUpdateCount = 0;
            error1("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
        }
    }
    function flushRenderPhaseStrictModeWarningsInDEV() {
        ReactStrictModeWarnings.flushLegacyContextWarning();
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
    var didWarnStateUpdateForNotYetMountedComponent = null;
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        if ((executionContext & RenderContext) !== NoContext) // We let the other warning about render phase updates deal with this one.
        return;
        if (!(fiber.mode & (BlockingMode | ConcurrentMode))) return;
        var tag = fiber.tag;
        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) // Only warn for user-defined components, not internal ones like Suspense.
        return;
         // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.
        var componentName = getComponentName(fiber.type) || 'ReactComponent';
        if (didWarnStateUpdateForNotYetMountedComponent !== null) {
            if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) return;
            didWarnStateUpdateForNotYetMountedComponent.add(componentName);
        } else didWarnStateUpdateForNotYetMountedComponent = new Set([
            componentName
        ]);
        var previousFiber = current1;
        try {
            setCurrentFiber(fiber);
            error1("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally{
            if (previousFiber) setCurrentFiber(fiber);
            else resetCurrentFiber();
        }
    }
    var didWarnStateUpdateForUnmountedComponent = null;
    function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
        var tag = fiber.tag;
        if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) // Only warn for user-defined components, not internal ones like Suspense.
        return;
         // If there are pending passive effects unmounts for this Fiber,
        // we can assume that they would have prevented this update.
        if ((fiber.flags & PassiveUnmountPendingDev) !== NoFlags) return;
         // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.
        var componentName = getComponentName(fiber.type) || 'ReactComponent';
        if (didWarnStateUpdateForUnmountedComponent !== null) {
            if (didWarnStateUpdateForUnmountedComponent.has(componentName)) return;
            didWarnStateUpdateForUnmountedComponent.add(componentName);
        } else didWarnStateUpdateForUnmountedComponent = new Set([
            componentName
        ]);
        if (isFlushingPassiveEffects) ;
        else {
            var previousFiber = current1;
            try {
                setCurrentFiber(fiber);
                error1("Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in %s.", tag === ClassComponent ? 'the componentWillUnmount method' : 'a useEffect cleanup function');
            } finally{
                if (previousFiber) setCurrentFiber(fiber);
                else resetCurrentFiber();
            }
        }
    }
    var beginWork$1;
    var dummyFiber = null;
    beginWork$1 = function(current, unitOfWork, lanes) {
        // If a component throws an error, we replay it again in a synchronously
        // dispatched event, so that the debugger will treat it as an uncaught
        // error See ReactErrorUtils for more information.
        // Before entering the begin phase, copy the work-in-progress onto a dummy
        // fiber. If beginWork throws, we'll use this to reset the state.
        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
        try {
            return beginWork(current, unitOfWork, lanes);
        } catch (originalError) {
            if (originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') // Don't replay promises. Treat everything else like an error.
            throw originalError;
             // Keep this code in sync with handleError; any changes here must have
            // corresponding changes there.
            resetContextDependencies();
            resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
            // same fiber again.
            // Unwind the failed stack frame
            unwindInterruptedWork(unitOfWork); // Restore the original properties of the fiber.
            assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
            if (unitOfWork.mode & ProfileMode) // Reset the profiler timer.
            startProfilerTimer(unitOfWork);
             // Run beginWork again.
            invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);
            if (hasCaughtError()) {
                var replayError = clearCaughtError(); // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.
                // Rethrow this error instead of the original one.
                throw replayError;
            } else // This branch is reachable if the render phase is impure.
            throw originalError;
        }
    };
    var didWarnAboutUpdateInRender = false;
    var didWarnAboutUpdateInRenderForAnotherComponent;
    didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    function warnAboutRenderPhaseUpdatesInDEV(fiber) {
        if (isRendering && (executionContext & RenderContext) !== NoContext && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                var renderingComponentName = workInProgress1 && getComponentName(workInProgress1.type) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.
                var dedupeKey = renderingComponentName;
                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentName(fiber.type) || 'Unknown';
                    error1("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                }
                break;
            case ClassComponent:
                if (!didWarnAboutUpdateInRender) {
                    error1("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                }
                break;
        }
    } // a 'shared' variable that changes when act() opens/closes in tests.
    var IsThisRendererActing = {
        current: false
    };
    function warnIfNotScopedWithMatchingAct(fiber) {
        if (IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
            var previousFiber = current1;
            try {
                setCurrentFiber(fiber);
                error1("It looks like you're using the wrong act() around your test interactions.\nBe sure to use the matching version of act() corresponding to your renderer:\n\n// for react-dom:\nimport {act} from 'react-dom/test-utils';\n// ...\nact(() => ...);\n\n// for react-test-renderer:\nimport TestRenderer from react-test-renderer';\nconst {act} = TestRenderer;\n// ...\nact(() => ...);");
            } finally{
                if (previousFiber) setCurrentFiber(fiber);
                else resetCurrentFiber();
            }
        }
    }
    function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
        if ((fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) error1("An update to %s ran an effect, but was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentName(fiber.type));
    }
    function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
        if (executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
            var previousFiber = current1;
            try {
                setCurrentFiber(fiber);
                error1("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentName(fiber.type));
            } finally{
                if (previousFiber) setCurrentFiber(fiber);
                else resetCurrentFiber();
            }
        }
    }
    var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV; // In tests, we want to enforce a mocked scheduler.
    var didWarnAboutUnmockedScheduler = false; // TODO Before we release concurrent mode, revisit this and decide whether a mocked
    // scheduler is the actual recommendation. The alternative could be a testing build,
    // a new lib, or whatever; we dunno just yet. This message is for early adopters
    // to get their tests right.
    function warnIfUnmockedScheduler(fiber) {
        if (didWarnAboutUnmockedScheduler === false && Scheduler.unstable_flushAllWithoutAsserting === undefined) {
            if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {
                didWarnAboutUnmockedScheduler = true;
                error1("In Concurrent or Sync modes, the \"scheduler\" module needs to be mocked to guarantee consistent behaviour across tests and browsers. For example, with jest: \njest.mock('scheduler', () => require('scheduler/unstable_mock'));\n\nFor more info, visit https://reactjs.org/link/mock-scheduler");
            }
        }
    }
    function computeThreadID(root, lane) {
        // Interaction threads are unique per root and expiration time.
        // NOTE: Intentionally unsound cast. All that matters is that it's a number
        // and it represents a batch of work. Could make a helper function instead,
        // but meh this is fine for now.
        return lane * 1000 + root.interactionThreadID;
    }
    function markSpawnedWork(lane) {
        if (spawnedWorkDuringRender === null) spawnedWorkDuringRender = [
            lane
        ];
        else spawnedWorkDuringRender.push(lane);
    }
    function scheduleInteractions(root, lane, interactions) {
        if (interactions.size > 0) {
            var pendingInteractionMap = root.pendingInteractionMap;
            var pendingInteractions = pendingInteractionMap.get(lane);
            if (pendingInteractions != null) interactions.forEach(function(interaction) {
                if (!pendingInteractions.has(interaction)) // Update the pending async work count for previously unscheduled interaction.
                interaction.__count++;
                pendingInteractions.add(interaction);
            });
            else {
                pendingInteractionMap.set(lane, new Set(interactions)); // Update the pending async work count for the current interactions.
                interactions.forEach(function(interaction) {
                    interaction.__count++;
                });
            }
            var subscriber = tracing.__subscriberRef.current;
            if (subscriber !== null) {
                var threadID = computeThreadID(root, lane);
                subscriber.onWorkScheduled(interactions, threadID);
            }
        }
    }
    function schedulePendingInteractions(root, lane) {
        scheduleInteractions(root, lane, tracing.__interactionsRef.current);
    }
    function startWorkOnPendingInteractions(root, lanes) {
        // we can accurately attribute time spent working on it, And so that cascading
        // work triggered during the render phase will be associated with it.
        var interactions = new Set();
        root.pendingInteractionMap.forEach(function(scheduledInteractions, scheduledLane) {
            if (includesSomeLane(lanes, scheduledLane)) scheduledInteractions.forEach(function(interaction) {
                return interactions.add(interaction);
            });
        }); // Store the current set of interactions on the FiberRoot for a few reasons:
        // We can re-use it in hot functions like performConcurrentWorkOnRoot()
        // without having to recalculate it. We will also use it in commitWork() to
        // pass to any Profiler onRender() hooks. This also provides DevTools with a
        // way to access it when the onCommitRoot() hook is called.
        root.memoizedInteractions = interactions;
        if (interactions.size > 0) {
            var subscriber = tracing.__subscriberRef.current;
            if (subscriber !== null) {
                var threadID = computeThreadID(root, lanes);
                try {
                    subscriber.onWorkStarted(interactions, threadID);
                } catch (error) {
                    // If the subscriber throws, rethrow it in a separate task
                    scheduleCallback(ImmediatePriority$1, function() {
                        throw error;
                    });
                }
            }
        }
    }
    function finishPendingInteractions(root, committedLanes) {
        var remainingLanesAfterCommit = root.pendingLanes;
        var subscriber;
        try {
            subscriber = tracing.__subscriberRef.current;
            if (subscriber !== null && root.memoizedInteractions.size > 0) {
                // FIXME: More than one lane can finish in a single commit.
                var threadID = computeThreadID(root, committedLanes);
                subscriber.onWorkStopped(root.memoizedInteractions, threadID);
            }
        } catch (error2) {
            // If the subscriber throws, rethrow it in a separate task
            scheduleCallback(ImmediatePriority$1, function() {
                throw error2;
            });
        } finally{
            // Clear completed interactions from the pending Map.
            // Unless the render was suspended or cascading work was scheduled,
            // In which case– leave pending interactions until the subsequent render.
            var pendingInteractionMap = root.pendingInteractionMap;
            pendingInteractionMap.forEach(function(scheduledInteractions, lane) {
                // Only decrement the pending interaction count if we're done.
                // If there's still work at the current priority,
                // That indicates that we are waiting for suspense data.
                if (!includesSomeLane(remainingLanesAfterCommit, lane)) {
                    pendingInteractionMap.delete(lane);
                    scheduledInteractions.forEach(function(interaction) {
                        interaction.__count--;
                        if (subscriber !== null && interaction.__count === 0) try {
                            subscriber.onInteractionScheduledWorkCompleted(interaction);
                        } catch (error) {
                            // If the subscriber throws, rethrow it in a separate task
                            scheduleCallback(ImmediatePriority$1, function() {
                                throw error;
                            });
                        }
                    });
                }
            });
        }
    } // `act` testing API
    function shouldForceFlushFallbacksInDEV() {
        // Never force flush in production. This function should get stripped out.
        return actingUpdatesScopeDepth > 0;
    }
    // so we can tell if any async act() calls try to run in parallel.
    var actingUpdatesScopeDepth = 0;
    function detachFiberAfterEffects(fiber) {
        fiber.sibling = null;
        fiber.stateNode = null;
    }
    var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.
    var failedBoundaries = null;
    var setRefreshHandler = function(handler) {
        resolveFamily = handler;
    };
    function resolveFunctionForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) return type;
         // Use the latest known implementation.
        return family.current;
    }
    function resolveClassForHotReloading(type) {
        // No implementation differences.
        return resolveFunctionForHotReloading(type);
    }
    function resolveForwardRefForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) {
            // Check if we're dealing with a real forwardRef. Don't want to crash early.
            if (type !== null && type !== undefined && typeof type.render === 'function') {
                // ForwardRef is special because its resolved .type is an object,
                // but it's possible that we only have its inner render function in the map.
                // If that inner render function is different, we'll build a new forwardRef type.
                var currentRender = resolveFunctionForHotReloading(type.render);
                if (type.render !== currentRender) {
                    var syntheticType = {
                        $$typeof: REACT_FORWARD_REF_TYPE,
                        render: currentRender
                    };
                    if (type.displayName !== undefined) syntheticType.displayName = type.displayName;
                    return syntheticType;
                }
            }
            return type;
        } // Use the latest known implementation.
        return family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return false;
        var prevType = fiber.elementType;
        var nextType = element.type; // If we got here, we know types aren't === equal.
        var needsCompareFamilies = false;
        var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;
        switch(fiber.tag){
            case ClassComponent:
                if (typeof nextType === 'function') needsCompareFamilies = true;
                break;
            case FunctionComponent:
                if (typeof nextType === 'function') needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) // We don't know the inner type yet.
                // We're going to assume that the lazy inner type is stable,
                // and so it is sufficient to avoid reconciling it away.
                // We're not going to unwrap or actually use the new lazy type.
                needsCompareFamilies = true;
                break;
            case ForwardRef:
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            case MemoComponent:
            case SimpleMemoComponent:
                if ($$typeofNextType === REACT_MEMO_TYPE) // TODO: if it was but can no longer be simple,
                // we shouldn't set this.
                needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            default:
                return false;
        } // Check if both types have a family and it's the same one.
        if (needsCompareFamilies) {
            // Note: memo() and forwardRef() we'll compare outer rather than inner type.
            // This means both of them need to be registered to preserve state.
            // If we unwrapped and compared the inner types for wrappers instead,
            // then we would risk falsely saying two separate memo(Foo)
            // calls are equivalent because they wrap the same Foo function.
            var prevFamily = resolveFamily(prevType);
            if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) return true;
        }
        return false;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        if (typeof WeakSet !== 'function') return;
        if (failedBoundaries === null) failedBoundaries = new WeakSet();
        failedBoundaries.add(fiber);
    }
    var scheduleRefresh = function(root, update) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
        flushPassiveEffects();
        flushSync(function() {
            scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
        });
    };
    var scheduleRoot = function(root, element) {
        if (root.context !== emptyContextObject) // Super edge case: root has a legacy _renderSubtree context
        // but we don't know the parentComponent so we can't pass it.
        // Just ignore. We'll delete this with _renderSubtree code path later.
        return;
        flushPassiveEffects();
        flushSync(function() {
            updateContainer(element, root, null, null);
        });
    };
    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        if (resolveFamily === null) throw new Error('Expected resolveFamily to be set during hot reload.');
        var needsRender = false;
        var needsRemount = false;
        if (candidateType !== null) {
            var family = resolveFamily(candidateType);
            if (family !== undefined) {
                if (staleFamilies.has(family)) needsRemount = true;
                else if (updatedFamilies.has(family)) {
                    if (tag === ClassComponent) needsRemount = true;
                    else needsRender = true;
                }
            }
        }
        if (failedBoundaries !== null) {
            if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) needsRemount = true;
        }
        if (needsRemount) fiber._debugNeedsRemount = true;
        if (needsRemount || needsRender) scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        if (child !== null && !needsRemount) scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        if (sibling !== null) scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
    var findHostInstancesForRefresh = function(root, families) {
        var hostInstances = new Set();
        var types = new Set(families.map(function(family) {
            return family.current;
        }));
        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
        return hostInstances;
    };
    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
        var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        var didMatch = false;
        if (candidateType !== null) {
            if (types.has(candidateType)) didMatch = true;
        }
        if (didMatch) // We have a match. This only drills down to the closest host components.
        // There's no need to search deeper because for the purpose of giving
        // visual feedback, "flashing" outermost parent rectangles is sufficient.
        findHostInstancesForFiberShallowly(fiber, hostInstances);
        else // If there's no match, maybe there will be one further down in the child tree.
        if (child !== null) findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
        if (sibling !== null) findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
    function findHostInstancesForFiberShallowly(fiber, hostInstances) {
        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
        if (foundHostInstances) return;
         // If we didn't find any host children, fallback to closest host parent.
        var node = fiber;
        while(true){
            switch(node.tag){
                case HostComponent:
                    hostInstances.add(node.stateNode);
                    return;
                case HostPortal:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                case HostRoot:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
            }
            if (node.return === null) throw new Error('Expected to reach root first.');
            node = node.return;
        }
    }
    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
        var node = fiber;
        var foundHostInstances = false;
        while(true){
            if (node.tag === HostComponent) {
                // We got a match.
                foundHostInstances = true;
                hostInstances.add(node.stateNode); // There may still be more, so keep searching.
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === fiber) return foundHostInstances;
            while(node.sibling === null){
                if (node.return === null || node.return === fiber) return foundHostInstances;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return false;
    }
    var hasBadMapPolyfill;
    hasBadMapPolyfill = false;
    try {
        var nonExtensibleObject = Object.preventExtensions({
        });
        /* eslint-disable no-new */ new Map([
            [
                nonExtensibleObject,
                null
            ]
        ]);
        new Set([
            nonExtensibleObject
        ]);
    /* eslint-enable no-new */ } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
    }
    var debugCounter = 1;
    function FiberNode(tag, pendingProps, key, mode) {
        // Instance
        this.tag = tag;
        this.key = key;
        this.elementType = null;
        this.type = null;
        this.stateNode = null; // Fiber
        this.return = null;
        this.child = null;
        this.sibling = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = pendingProps;
        this.memoizedProps = null;
        this.updateQueue = null;
        this.memoizedState = null;
        this.dependencies = null;
        this.mode = mode; // Effects
        this.flags = NoFlags;
        this.nextEffect = null;
        this.firstEffect = null;
        this.lastEffect = null;
        this.lanes = NoLanes;
        this.childLanes = NoLanes;
        this.alternate = null;
        // Note: The following is done to avoid a v8 performance cliff.
        //
        // Initializing the fields below to smis and later updating them with
        // double values will cause Fibers to end up having separate shapes.
        // This behavior/bug has something to do with Object.preventExtension().
        // Fortunately this only impacts DEV builds.
        // Unfortunately it makes React unusably slow for some applications.
        // To work around this, initialize the fields below with doubles.
        //
        // Learn more about this here:
        // https://github.com/facebook/react/issues/14365
        // https://bugs.chromium.org/p/v8/issues/detail?id=8538
        this.actualDuration = Number.NaN;
        this.actualStartTime = Number.NaN;
        this.selfBaseDuration = Number.NaN;
        this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
        // This won't trigger the performance cliff mentioned above,
        // and it simplifies other profiler code (including DevTools).
        this.actualDuration = 0;
        this.actualStartTime = -1;
        this.selfBaseDuration = 0;
        this.treeBaseDuration = 0;
        // This isn't directly used but is handy for debugging internals:
        this._debugID = debugCounter++;
        this._debugSource = null;
        this._debugOwner = null;
        this._debugNeedsRemount = false;
        this._debugHookTypes = null;
        if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') Object.preventExtensions(this);
    } // This is a constructor function, rather than a POJO constructor, still
    // please ensure we do the following:
    // 1) Nobody should add any instance methods on this. Instance methods can be
    //    more difficult to predict when they get optimized and they are almost
    //    never inlined properly in static compilers.
    // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
    //    always know when it is a fiber.
    // 3) We might want to experiment with using numeric keys since they are easier
    //    to optimize in a non-JIT environment.
    // 4) We can easily go from a constructor to a createFiber object literal if that
    //    is faster.
    // 5) It should be easy to port this to a C struct and keep a C implementation
    //    compatible.
    var createFiber = function(tag, pendingProps, key, mode) {
        // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
        return new FiberNode(tag, pendingProps, key, mode);
    };
    function shouldConstruct$1(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function isSimpleFunctionComponent(type) {
        return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;
    }
    function resolveLazyComponentTag(Component) {
        if (typeof Component === 'function') return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
        else if (Component !== undefined && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) return ForwardRef;
            if ($$typeof === REACT_MEMO_TYPE) return MemoComponent;
        }
        return IndeterminateComponent;
    } // This is used to create an alternate fiber to do work on.
    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        if (workInProgress === null) {
            // We use a double buffering pooling technique because we know that we'll
            // only ever need at most two versions of a tree. We pool the "other" unused
            // node that we're free to reuse. This is lazily created to avoid allocating
            // extra objects for things that are never updated. It also allow us to
            // reclaim the extra memory if needed.
            workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
            workInProgress.elementType = current.elementType;
            workInProgress.type = current.type;
            workInProgress.stateNode = current.stateNode;
            // DEV-only fields
            workInProgress._debugID = current._debugID;
            workInProgress._debugSource = current._debugSource;
            workInProgress._debugOwner = current._debugOwner;
            workInProgress._debugHookTypes = current._debugHookTypes;
            workInProgress.alternate = current;
            current.alternate = workInProgress;
        } else {
            workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // We already have an alternate.
            // Reset the effect tag.
            workInProgress.flags = NoFlags; // The effect list is no longer valid.
            workInProgress.nextEffect = null;
            workInProgress.firstEffect = null;
            workInProgress.lastEffect = null;
            // We intentionally reset, rather than copy, actualDuration & actualStartTime.
            // This prevents time from endlessly accumulating in new commits.
            // This has the downside of resetting values for different priority renders,
            // But works for yielding (the common case) and should support resuming.
            workInProgress.actualDuration = 0;
            workInProgress.actualStartTime = -1;
        }
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
        // it cannot be shared with the current fiber.
        var currentDependencies = current.dependencies;
        workInProgress.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
        }; // These will be overridden during the parent's reconciliation
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case FunctionComponent:
            case SimpleMemoComponent:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case ClassComponent:
                workInProgress.type = resolveClassForHotReloading(current.type);
                break;
            case ForwardRef:
                workInProgress.type = resolveForwardRefForHotReloading(current.type);
                break;
        }
        return workInProgress;
    } // Used to reuse a Fiber for a second pass.
    function resetWorkInProgress(workInProgress, renderLanes) {
        // This resets the Fiber to what createFiber or createWorkInProgress would
        // have set the values to before during the first pass. Ideally this wouldn't
        // be necessary but unfortunately many code paths reads from the workInProgress
        // when they should be reading from current and writing to workInProgress.
        // We assume pendingProps, index, key, ref, return are still untouched to
        // avoid doing another reconciliation.
        // Reset the effect tag but keep any Placement tags, since that's something
        // that child fiber is setting, not the reconciliation.
        workInProgress.flags &= Placement; // The effect list is no longer valid.
        workInProgress.nextEffect = null;
        workInProgress.firstEffect = null;
        workInProgress.lastEffect = null;
        var current = workInProgress.alternate;
        if (current === null) {
            // Reset to createFiber's initial values.
            workInProgress.childLanes = NoLanes;
            workInProgress.lanes = renderLanes;
            workInProgress.child = null;
            workInProgress.memoizedProps = null;
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null;
            workInProgress.dependencies = null;
            workInProgress.stateNode = null;
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = 0;
            workInProgress.treeBaseDuration = 0;
        } else {
            // Reset to the cloned values that createWorkInProgress would've.
            workInProgress.childLanes = current.childLanes;
            workInProgress.lanes = current.lanes;
            workInProgress.child = current.child;
            workInProgress.memoizedProps = current.memoizedProps;
            workInProgress.memoizedState = current.memoizedState;
            workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
            // it cannot be shared with the current fiber.
            var currentDependencies = current.dependencies;
            workInProgress.dependencies = currentDependencies === null ? null : {
                lanes: currentDependencies.lanes,
                firstContext: currentDependencies.firstContext
            };
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = current.selfBaseDuration;
            workInProgress.treeBaseDuration = current.treeBaseDuration;
        }
        return workInProgress;
    }
    function createHostRootFiber(tag) {
        var mode;
        if (tag === ConcurrentRoot) mode = ConcurrentMode | BlockingMode | StrictMode;
        else if (tag === BlockingRoot) mode = BlockingMode | StrictMode;
        else mode = NoMode;
        if (isDevToolsPresent) // Always collect profile timings when DevTools are present.
        // This enables DevTools to start capturing timing at any point–
        // Without some nodes in the tree having empty base times.
        mode |= ProfileMode;
        return createFiber(HostRoot, null, null, mode);
    }
    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.
        var resolvedType = type;
        if (typeof type === 'function') {
            if (shouldConstruct$1(type)) {
                fiberTag = ClassComponent;
                resolvedType = resolveClassForHotReloading(resolvedType);
            } else resolvedType = resolveFunctionForHotReloading(resolvedType);
        } else if (typeof type === 'string') fiberTag = HostComponent;
        else getTag: switch(type){
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
            case REACT_DEBUG_TRACING_MODE_TYPE:
                fiberTag = Mode;
                mode |= DebugTracingMode;
                break;
            case REACT_STRICT_MODE_TYPE:
                fiberTag = Mode;
                mode |= StrictMode;
                break;
            case REACT_PROFILER_TYPE:
                return createFiberFromProfiler(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_TYPE:
                return createFiberFromSuspense(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_LIST_TYPE:
                return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
            case REACT_OFFSCREEN_TYPE:
                return createFiberFromOffscreen(pendingProps, mode, lanes, key);
            case REACT_LEGACY_HIDDEN_TYPE:
                return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);
            case REACT_SCOPE_TYPE:
            // eslint-disable-next-line no-fallthrough
            default:
                if (typeof type === 'object' && type !== null) switch(type.$$typeof){
                    case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                    case REACT_CONTEXT_TYPE:
                        // This is a consumer
                        fiberTag = ContextConsumer;
                        break getTag;
                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        break getTag;
                    case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                    case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                    case REACT_BLOCK_TYPE:
                        fiberTag = Block;
                        break getTag;
                }
                var info = '';
                if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                var ownerName = owner ? getComponentName(owner.type) : null;
                if (ownerName) info += '\n\nCheck the render method of `' + ownerName + '`.';
                throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type == null ? type : typeof type) + "." + info);
        }
        var fiber = createFiber(fiberTag, pendingProps, key, mode);
        fiber.elementType = type;
        fiber.type = resolvedType;
        fiber.lanes = lanes;
        fiber._debugOwner = owner;
        return fiber;
    }
    function createFiberFromElement(element, mode, lanes) {
        var owner = null;
        owner = element._owner;
        var type = element.type;
        var key = element.key;
        var pendingProps = element.props;
        var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
        fiber._debugSource = element._source;
        fiber._debugOwner = element._owner;
        return fiber;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
        var fiber = createFiber(Fragment, elements, key, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromProfiler(pendingProps, mode, lanes, key) {
        if (typeof pendingProps.id !== 'string') error1('Profiler must specify an "id" as a prop');
        var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode); // TODO: The Profiler fiber shouldn't have a type. It has a tag.
        fiber.elementType = REACT_PROFILER_TYPE;
        fiber.type = REACT_PROFILER_TYPE;
        fiber.lanes = lanes;
        fiber.stateNode = {
            effectDuration: 0,
            passiveEffectDuration: 0
        };
        return fiber;
    }
    function createFiberFromSuspense(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseComponent, pendingProps, key, mode); // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.
        // This needs to be fixed in getComponentName so that it relies on the tag
        // instead.
        fiber.type = REACT_SUSPENSE_TYPE;
        fiber.elementType = REACT_SUSPENSE_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
        // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.
        // This needs to be fixed in getComponentName so that it relies on the tag
        // instead.
        fiber.type = REACT_SUSPENSE_LIST_TYPE;
        fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
        var fiber = createFiber(OffscreenComponent, pendingProps, key, mode); // TODO: The OffscreenComponent fiber shouldn't have a type. It has a tag.
        fiber.type = REACT_OFFSCREEN_TYPE;
        fiber.elementType = REACT_OFFSCREEN_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromLegacyHidden(pendingProps, mode, lanes, key) {
        var fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode); // TODO: The LegacyHidden fiber shouldn't have a type. It has a tag.
        fiber.type = REACT_LEGACY_HIDDEN_TYPE;
        fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromText(content, mode, lanes) {
        var fiber = createFiber(HostText, content, null, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromHostInstanceForDeletion() {
        var fiber = createFiber(HostComponent, null, null, NoMode); // TODO: These should not need a type.
        fiber.elementType = 'DELETED';
        fiber.type = 'DELETED';
        return fiber;
    }
    function createFiberFromPortal(portal, mode, lanes) {
        var pendingProps = portal.children !== null ? portal.children : [];
        var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
        fiber.lanes = lanes;
        fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            // Used by persistent updates
            implementation: portal.implementation
        };
        return fiber;
    } // Used for stashing WIP properties to replay failed work in DEV.
    function assignFiberPropertiesInDEV(target, source) {
        if (target === null) // This Fiber's initial properties will always be overwritten.
        // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
        target = createFiber(IndeterminateComponent, null, null, NoMode);
         // This is intentionally written as a list of all properties.
        // We tried to use Object.assign() instead but this is called in
        // the hottest path, and Object.assign() was too slow:
        // https://github.com/facebook/react/issues/12502
        // This code is DEV-only so size is not a concern.
        target.tag = source.tag;
        target.key = source.key;
        target.elementType = source.elementType;
        target.type = source.type;
        target.stateNode = source.stateNode;
        target.return = source.return;
        target.child = source.child;
        target.sibling = source.sibling;
        target.index = source.index;
        target.ref = source.ref;
        target.pendingProps = source.pendingProps;
        target.memoizedProps = source.memoizedProps;
        target.updateQueue = source.updateQueue;
        target.memoizedState = source.memoizedState;
        target.dependencies = source.dependencies;
        target.mode = source.mode;
        target.flags = source.flags;
        target.nextEffect = source.nextEffect;
        target.firstEffect = source.firstEffect;
        target.lastEffect = source.lastEffect;
        target.lanes = source.lanes;
        target.childLanes = source.childLanes;
        target.alternate = source.alternate;
        target.actualDuration = source.actualDuration;
        target.actualStartTime = source.actualStartTime;
        target.selfBaseDuration = source.selfBaseDuration;
        target.treeBaseDuration = source.treeBaseDuration;
        target._debugID = source._debugID;
        target._debugSource = source._debugSource;
        target._debugOwner = source._debugOwner;
        target._debugNeedsRemount = source._debugNeedsRemount;
        target._debugHookTypes = source._debugHookTypes;
        return target;
    }
    function FiberRootNode(containerInfo, tag, hydrate) {
        this.tag = tag;
        this.containerInfo = containerInfo;
        this.pendingChildren = null;
        this.current = null;
        this.pingCache = null;
        this.finishedWork = null;
        this.timeoutHandle = noTimeout;
        this.context = null;
        this.pendingContext = null;
        this.hydrate = hydrate;
        this.callbackNode = null;
        this.callbackPriority = NoLanePriority;
        this.eventTimes = createLaneMap(NoLanes);
        this.expirationTimes = createLaneMap(NoTimestamp);
        this.pendingLanes = NoLanes;
        this.suspendedLanes = NoLanes;
        this.pingedLanes = NoLanes;
        this.expiredLanes = NoLanes;
        this.mutableReadLanes = NoLanes;
        this.finishedLanes = NoLanes;
        this.entangledLanes = NoLanes;
        this.entanglements = createLaneMap(NoLanes);
        this.mutableSourceEagerHydrationData = null;
        this.interactionThreadID = tracing.unstable_getThreadID();
        this.memoizedInteractions = new Set();
        this.pendingInteractionMap = new Map();
        switch(tag){
            case BlockingRoot:
                this._debugRootType = 'createBlockingRoot()';
                break;
            case ConcurrentRoot:
                this._debugRootType = 'createRoot()';
                break;
            case LegacyRoot:
                this._debugRootType = 'createLegacyRoot()';
                break;
        }
    }
    function createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks) {
        var root = new FiberRootNode(containerInfo, tag, hydrate);
        // stateNode is any.
        var uninitializedFiber = createHostRootFiber(tag);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        initializeUpdateQueue(uninitializedFiber);
        return root;
    }
    // This ensures that the version used for server rendering matches the one
    // that is eventually read during hydration.
    // If they don't match there's a potential tear and a full deopt render is required.
    function registerMutableSourceForHydration(root, mutableSource) {
        var getVersion = mutableSource._getVersion;
        var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
        // Retaining it forever may interfere with GC.
        if (root.mutableSourceEagerHydrationData == null) root.mutableSourceEagerHydrationData = [
            mutableSource,
            version
        ];
        else root.mutableSourceEagerHydrationData.push(mutableSource, version);
    }
    function createPortal(children, containerInfo, implementation) {
        var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
        return {
            // This tag allow us to uniquely identify this as a React Portal
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : '' + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }
    var didWarnAboutNestedUpdates;
    var didWarnAboutFindNodeInStrictMode;
    didWarnAboutNestedUpdates = false;
    didWarnAboutFindNodeInStrictMode = {
    };
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyContextObject;
        var fiber = get1(parentComponent);
        var parentContext = findCurrentUnmaskedContext(fiber);
        if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) return processChildContext(fiber, Component, parentContext);
        }
        return parentContext;
    }
    function findHostInstanceWithWarning(component, methodName) {
        var fiber = get1(component);
        if (fiber === undefined) {
            if (typeof component.render === 'function') throw Error("Unable to find node on an unmounted component.");
            else throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
        }
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        if (hostFiber.mode & StrictMode) {
            var componentName = getComponentName(fiber.type) || 'Component';
            if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current1;
                try {
                    setCurrentFiber(hostFiber);
                    if (fiber.mode & StrictMode) error1("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                    else error1("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                } finally{
                    // Ideally this should reset to previous but this shouldn't be called in
                    // render and there's another warning for that anyway.
                    if (previousFiber) setCurrentFiber(previousFiber);
                    else resetCurrentFiber();
                }
            }
        }
        return hostFiber.stateNode;
    }
    function createContainer(containerInfo, tag, hydrate, hydrationCallbacks) {
        return createFiberRoot(containerInfo, tag, hydrate);
    }
    function updateContainer(element, container, parentComponent, callback) {
        onScheduleRoot(container, element);
        var current$1 = container.current;
        var eventTime = requestEventTime();
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) {
            warnIfUnmockedScheduler(current$1);
            warnIfNotScopedWithMatchingAct(current$1);
        }
        var lane = requestUpdateLane(current$1);
        var context = getContextForSubtree(parentComponent);
        if (container.context === null) container.context = context;
        else container.pendingContext = context;
        if (isRendering && current1 !== null && !didWarnAboutNestedUpdates) {
            didWarnAboutNestedUpdates = true;
            error1("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentName(current1.type) || 'Unknown');
        }
        var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: element
        };
        callback = callback === undefined ? null : callback;
        if (callback !== null) {
            if (typeof callback !== 'function') error1("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
            update.callback = callback;
        }
        enqueueUpdate(current$1, update);
        scheduleUpdateOnFiber(current$1, lane, eventTime);
        return lane;
    }
    function getPublicRootInstance(container) {
        var containerFiber = container.current;
        if (!containerFiber.child) return null;
        switch(containerFiber.child.tag){
            case HostComponent:
                return getPublicInstance(containerFiber.child.stateNode);
            default:
                return containerFiber.child.stateNode;
        }
    }
    function markRetryLaneImpl(fiber, retryLane) {
        var suspenseState = fiber.memoizedState;
        if (suspenseState !== null && suspenseState.dehydrated !== null) suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
    } // Increases the priority of thennables when they resolve within this boundary.
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        var alternate = fiber.alternate;
        if (alternate) markRetryLaneImpl(alternate, retryLane);
    }
    function attemptUserBlockingHydration$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
        var eventTime = requestEventTime();
        var lane = InputDiscreteHydrationLane;
        scheduleUpdateOnFiber(fiber, lane, eventTime);
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function attemptContinuousHydration$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
        var eventTime = requestEventTime();
        var lane = SelectiveHydrationLane;
        scheduleUpdateOnFiber(fiber, lane, eventTime);
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function attemptHydrationAtCurrentPriority$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority other than synchronously flush it.
        return;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(fiber);
        scheduleUpdateOnFiber(fiber, lane, eventTime);
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function runWithPriority$2(priority, fn) {
        setCurrentUpdateLanePriority(priority);
        return fn();
    }
    function findHostInstanceWithNoPortals(fiber) {
        var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
        if (hostFiber === null) return null;
        if (hostFiber.tag === FundamentalComponent) return hostFiber.stateNode.instance;
        return hostFiber.stateNode;
    }
    var shouldSuspendImpl = function(fiber) {
        return false;
    };
    function shouldSuspend(fiber) {
        return shouldSuspendImpl(fiber);
    }
    var overrideHookState = null;
    var overrideHookStateDeletePath = null;
    var overrideHookStateRenamePath = null;
    var overrideProps = null;
    var overridePropsDeletePath = null;
    var overridePropsRenamePath = null;
    var scheduleUpdate = null;
    var setSuspenseHandler = null;
    var copyWithDeleteImpl = function(obj, path, index) {
        var key = path[index];
        var updated = Array.isArray(obj) ? obj.slice() : _assign({
        }, obj);
        if (index + 1 === path.length) {
            if (Array.isArray(updated)) updated.splice(key, 1);
            else delete updated[key];
            return updated;
        } // $FlowFixMe number or string is fine here
        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
    };
    var copyWithDelete = function(obj, path) {
        return copyWithDeleteImpl(obj, path, 0);
    };
    var copyWithRenameImpl = function(obj, oldPath, newPath, index) {
        var oldKey = oldPath[index];
        var updated = Array.isArray(obj) ? obj.slice() : _assign({
        }, obj);
        if (index + 1 === oldPath.length) {
            var newKey = newPath[index]; // $FlowFixMe number or string is fine here
            updated[newKey] = updated[oldKey];
            if (Array.isArray(updated)) updated.splice(oldKey, 1);
            else delete updated[oldKey];
        } else // $FlowFixMe number or string is fine here
        updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);
        return updated;
    };
    var copyWithRename = function(obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) {
            warn('copyWithRename() expects paths of the same length');
            return;
        } else {
            for(var i = 0; i < newPath.length - 1; i++)if (oldPath[i] !== newPath[i]) {
                warn('copyWithRename() expects paths to be the same except for the deepest key');
                return;
            }
        }
        return copyWithRenameImpl(obj, oldPath, newPath, 0);
    };
    var copyWithSetImpl = function(obj, path, index, value) {
        if (index >= path.length) return value;
        var key = path[index];
        var updated = Array.isArray(obj) ? obj.slice() : _assign({
        }, obj); // $FlowFixMe number or string is fine here
        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
    };
    var copyWithSet = function(obj, path, value) {
        return copyWithSetImpl(obj, path, 0, value);
    };
    var findHook = function(fiber, id) {
        // For now, the "id" of stateful hooks is just the stateful hook index.
        // This may change in the future with e.g. nested hooks.
        var currentHook = fiber.memoizedState;
        while(currentHook !== null && id > 0){
            currentHook = currentHook.next;
            id--;
        }
        return currentHook;
    }; // Support DevTools editable values for useState and useReducer.
    overrideHookState = function(fiber, id, path, value) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithSet(hook.memoizedState, path, value);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = _assign({
            }, fiber.memoizedProps);
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateDeletePath = function(fiber, id, path) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithDelete(hook.memoizedState, path);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = _assign({
            }, fiber.memoizedProps);
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = _assign({
            }, fiber.memoizedProps);
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }
    }; // Support DevTools props for function components, forwardRef, memo, host components, etc.
    overrideProps = function(fiber, path, value) {
        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    };
    overridePropsDeletePath = function(fiber, path) {
        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    };
    overridePropsRenamePath = function(fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    };
    scheduleUpdate = function(fiber) {
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    };
    setSuspenseHandler = function(newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
    };
    function findHostInstanceByFiber(fiber) {
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    function emptyFindFiberByHostInstance(instance) {
        return null;
    }
    function getCurrentFiberForDevTools() {
        return current1;
    }
    function injectIntoDevTools(devToolsConfig) {
        var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState: overrideHookState,
            overrideHookStateDeletePath: overrideHookStateDeletePath,
            overrideHookStateRenamePath: overrideHookStateRenamePath,
            overrideProps: overrideProps,
            overridePropsDeletePath: overridePropsDeletePath,
            overridePropsRenamePath: overridePropsRenamePath,
            setSuspenseHandler: setSuspenseHandler,
            scheduleUpdate: scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher,
            findHostInstanceByFiber: findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            // React Refresh
            findHostInstancesForRefresh: findHostInstancesForRefresh,
            scheduleRefresh: scheduleRefresh,
            scheduleRoot: scheduleRoot,
            setRefreshHandler: setRefreshHandler,
            // Enables DevTools to append owner stacks to error messages in DEV mode.
            getCurrentFiber: getCurrentFiberForDevTools
        });
    }
    function ReactDOMRoot(container, options) {
        this._internalRoot = createRootImpl(container, ConcurrentRoot, options);
    }
    function ReactDOMBlockingRoot(container, tag, options) {
        this._internalRoot = createRootImpl(container, tag, options);
    }
    ReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function(children) {
        var root = this._internalRoot;
        if (typeof arguments[1] === 'function') error1("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        var container = root.containerInfo;
        if (container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(root.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error1("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
            }
        }
        updateContainer(children, root, null, null);
    };
    ReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function() {
        if (typeof arguments[0] === 'function') error1("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        var root = this._internalRoot;
        var container = root.containerInfo;
        updateContainer(null, root, null, function() {
            unmarkContainerAsRoot(container);
        });
    };
    function createRootImpl(container, tag, options) {
        // Tag is either LegacyRoot or Concurrent Root
        var hydrate = options != null && options.hydrate === true;
        var hydrationCallbacks = options != null && options.hydrationOptions || null;
        var mutableSources = options != null && options.hydrationOptions != null && options.hydrationOptions.mutableSources || null;
        var root = createContainer(container, tag, hydrate);
        markContainerAsRoot(root.current, container);
        var containerNodeType = container.nodeType;
        var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
        listenToAllSupportedEvents(rootContainerElement);
        if (mutableSources) for(var i = 0; i < mutableSources.length; i++){
            var mutableSource = mutableSources[i];
            registerMutableSourceForHydration(root, mutableSource);
        }
        return root;
    }
    function createLegacyRoot(container, options) {
        return new ReactDOMBlockingRoot(container, LegacyRoot, options);
    }
    function isValidContainer(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
    }
    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
    var topLevelUpdateWarnings;
    var warnedAboutHydrateAPI = false;
    topLevelUpdateWarnings = function(container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error1("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
            }
        }
        var isRootRenderedBySomeReact = !!container._reactRootContainer;
        var rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
        if (hasNonRootReactChild && !isRootRenderedBySomeReact) error1("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') error1("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function getReactRootElementInContainer(container) {
        if (!container) return null;
        if (container.nodeType === DOCUMENT_NODE) return container.documentElement;
        else return container.firstChild;
    }
    function shouldHydrateDueToLegacyHeuristic(container) {
        var rootElement = getReactRootElementInContainer(container);
        return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
    }
    function legacyCreateRootFromDOMContainer(container, forceHydrate) {
        var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.
        if (!shouldHydrate) {
            var warned = false;
            var rootSibling;
            while(rootSibling = container.lastChild){
                if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
                    warned = true;
                    error1("render(): Target node has markup rendered by React, but there are unrelated nodes as well. This is most commonly caused by white-space inserted around server-rendered markup.");
                }
                container.removeChild(rootSibling);
            }
        }
        if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
            warnedAboutHydrateAPI = true;
            warn("render(): Calling ReactDOM.render() to hydrate server-rendered markup will stop working in React v18. Replace the ReactDOM.render() call with ReactDOM.hydrate() if you want React to attach to the server HTML.");
        }
        return createLegacyRoot(container, shouldHydrate ? {
            hydrate: true
        } : undefined);
    }
    function warnOnInvalidCallback$1(callback, callerName) {
        if (callback !== null && typeof callback !== 'function') error1("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
    }
    function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
        topLevelUpdateWarnings(container);
        warnOnInvalidCallback$1(callback === undefined ? null : callback, 'render');
        // member of intersection type." Whyyyyyy.
        var root = container._reactRootContainer;
        var fiberRoot;
        if (!root) {
            // Initial mount
            root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
            fiberRoot = root._internalRoot;
            if (typeof callback === 'function') {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(fiberRoot);
                    originalCallback.call(instance);
                };
            } // Initial mount should not be batched.
            unbatchedUpdates(function() {
                updateContainer(children, fiberRoot, parentComponent, callback);
            });
        } else {
            fiberRoot = root._internalRoot;
            if (typeof callback === 'function') {
                var _originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(fiberRoot);
                    _originalCallback.call(instance);
                };
            } // Update
            updateContainer(children, fiberRoot, parentComponent, callback);
        }
        return getPublicRootInstance(fiberRoot);
    }
    function findDOMNode(componentOrElement) {
        var owner = ReactCurrentOwner$3.current;
        if (owner !== null && owner.stateNode !== null) {
            var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
            if (!warnedAboutRefsInRender) error1("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentName(owner.type) || 'A component');
            owner.stateNode._warnedAboutRefsInRender = true;
        }
        if (componentOrElement == null) return null;
        if (componentOrElement.nodeType === ELEMENT_NODE) return componentOrElement;
        return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
    }
    function hydrate1(element, container, callback) {
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error1("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call createRoot(container, {hydrate: true}).render(element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
    }
    function render1(element, container, callback) {
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error1("You are calling ReactDOM.render() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.render(element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
    }
    function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        if (!isValidContainer(containerNode)) throw Error("Target container is not a DOM element.");
        if (!(parentComponent != null && has1(parentComponent))) throw Error("parentComponent must be a valid React Component");
        return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
    }
    function unmountComponentAtNode(container) {
        if (!isValidContainer(container)) throw Error("unmountComponentAtNode(...): Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error1("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?");
        if (container._reactRootContainer) {
            var rootEl = getReactRootElementInContainer(container);
            var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
            if (renderedByDifferentReact) error1("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
            unbatchedUpdates(function() {
                legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                    // $FlowFixMe This should probably use `delete container._reactRootContainer`
                    container._reactRootContainer = null;
                    unmarkContainerAsRoot(container);
                });
            }); // If you call unmountComponentAtNode twice in quick succession, you'll
            // get `true` twice. That's probably fine?
            return true;
        } else {
            var _rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.
            var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;
            if (hasNonRootReactChild) error1("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
            return false;
        }
    }
    setAttemptUserBlockingHydration(attemptUserBlockingHydration$1);
    setAttemptContinuousHydration(attemptContinuousHydration$1);
    setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
    setAttemptHydrationAtPriority(runWithPriority$2);
    var didWarnAboutUnstableCreatePortal = false;
    if (typeof Map !== 'function' || Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') error1("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    setRestoreImplementation(restoreControlledState$3);
    setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);
    function createPortal$1(children, container) {
        var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
         // TODO: pass ReactDOM portal implementation as third argument
        // $FlowFixMe The Flow type is opaque but there's no way to actually create it.
        return createPortal(children, container, null, key);
    }
    function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
    }
    function unstable_createPortal(children, container) {
        var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        if (!didWarnAboutUnstableCreatePortal) {
            didWarnAboutUnstableCreatePortal = true;
            warn("The ReactDOM.unstable_createPortal() alias has been deprecated, and will be removed in React 18+. Update your code to use ReactDOM.createPortal() instead. It has the exact same API, but without the \"unstable_\" prefix.");
        }
        return createPortal$1(children, container, key);
    }
    var Internals = {
        // Keep in sync with ReactTestUtils.js, and ReactTestUtilsAct.js.
        // This is an array for better minification.
        Events: [
            getInstanceFromNode,
            getNodeFromInstance,
            getFiberCurrentPropsFromNode,
            enqueueStateRestore,
            restoreStateIfNeeded,
            flushPassiveEffects,
            IsThisRendererActing
        ]
    };
    var foundDevTools = injectIntoDevTools({
        findFiberByHostInstance: getClosestInstanceFromNode,
        bundleType: 1,
        version: ReactVersion,
        rendererPackageName: 'react-dom'
    });
    if (!foundDevTools && canUseDOM && window.top === window.self) // If we're in Chrome or Firefox, provide a download link if not installed.
    {
        if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
            var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.
            if (/^(https?|file):$/.test(protocol)) // eslint-disable-next-line react-internal/no-production-logging
            console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === 'file:' ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ''), 'font-weight:bold');
        }
    }
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
    exports.createPortal = createPortal$1;
    exports.findDOMNode = findDOMNode;
    exports.flushSync = flushSync;
    exports.hydrate = hydrate1;
    exports.render = render1;
    exports.unmountComponentAtNode = unmountComponentAtNode;
    exports.unstable_batchedUpdates = batchedUpdates$1;
    exports.unstable_createPortal = unstable_createPortal;
    exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
    exports.version = ReactVersion;
})();

},{"react":"4mchR","object-assign":"iUUFa","scheduler":"kKlXr","scheduler/tracing":"7D5oU"}],"kKlXr":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/scheduler.development.js');

},{"./cjs/scheduler.development.js":"6lQJ8"}],"6lQJ8":[function(require,module,exports) {
/** @license React v0.20.2
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    var enableSchedulerDebugging = false;
    var enableProfiling = false;
    var requestHostCallback;
    var requestHostTimeout;
    var cancelHostTimeout;
    var requestPaint;
    var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';
    if (hasPerformanceNow) {
        var localPerformance = performance;
        exports.unstable_now = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date;
        var initialTime = localDate.now();
        exports.unstable_now = function() {
            return localDate.now() - initialTime;
        };
    }
    if (// implementation using setTimeout.
    typeof window === 'undefined' || typeof MessageChannel !== 'function') {
        // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,
        // fallback to a naive implementation.
        var _callback = null;
        var _timeoutID = null;
        var _flushCallback = function() {
            if (_callback !== null) try {
                var currentTime = exports.unstable_now();
                var hasRemainingTime = true;
                _callback(hasRemainingTime, currentTime);
                _callback = null;
            } catch (e) {
                setTimeout(_flushCallback, 0);
                throw e;
            }
        };
        requestHostCallback = function(cb) {
            if (_callback !== null) // Protect against re-entrancy.
            setTimeout(requestHostCallback, 0, cb);
            else {
                _callback = cb;
                setTimeout(_flushCallback, 0);
            }
        };
        requestHostTimeout = function(cb, ms) {
            _timeoutID = setTimeout(cb, ms);
        };
        cancelHostTimeout = function() {
            clearTimeout(_timeoutID);
        };
        exports.unstable_shouldYield = function() {
            return false;
        };
        requestPaint = exports.unstable_forceFrameRate = function() {
        };
    } else {
        // Capture local references to native APIs, in case a polyfill overrides them.
        var _setTimeout = window.setTimeout;
        var _clearTimeout = window.clearTimeout;
        if (typeof console !== 'undefined') {
            // TODO: Scheduler no longer requires these methods to be polyfilled. But
            // maybe we want to continue warning if they don't exist, to preserve the
            // option to rely on it in the future?
            var requestAnimationFrame = window.requestAnimationFrame;
            var cancelAnimationFrame = window.cancelAnimationFrame;
            if (typeof requestAnimationFrame !== 'function') // Using console['error'] to evade Babel and ESLint
            console['error']("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
            if (typeof cancelAnimationFrame !== 'function') // Using console['error'] to evade Babel and ESLint
            console['error']("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
        // thread, like user events. By default, it yields multiple times per frame.
        // It does not attempt to align with frame boundaries, since most tasks don't
        // need to be frame aligned; for those that do, use requestAnimationFrame.
        var yieldInterval = 5;
        var deadline = 0; // TODO: Make this configurable
        // `isInputPending` is not available. Since we have no way of knowing if
        // there's pending input, always yield at the end of the frame.
        exports.unstable_shouldYield = function() {
            return exports.unstable_now() >= deadline;
        }; // Since we yield every frame regardless, `requestPaint` has no effect.
        requestPaint = function() {
        };
        exports.unstable_forceFrameRate = function(fps) {
            if (fps < 0 || fps > 125) {
                // Using console['error'] to evade Babel and ESLint
                console['error']("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
                return;
            }
            if (fps > 0) yieldInterval = Math.floor(1000 / fps);
            else // reset the framerate
            yieldInterval = 5;
        };
        var performWorkUntilDeadline = function() {
            if (scheduledHostCallback !== null) {
                var currentTime = exports.unstable_now(); // Yield after `yieldInterval` ms, regardless of where we are in the vsync
                // cycle. This means there's always time remaining at the beginning of
                // the message event.
                deadline = currentTime + yieldInterval;
                var hasTimeRemaining = true;
                try {
                    var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
                    if (!hasMoreWork) {
                        isMessageLoopRunning = false;
                        scheduledHostCallback = null;
                    } else // If there's more work, schedule the next message event at the end
                    // of the preceding one.
                    port.postMessage(null);
                } catch (error) {
                    // If a scheduler task throws, exit the current browser task so the
                    // error can be observed.
                    port.postMessage(null);
                    throw error;
                }
            } else isMessageLoopRunning = false;
             // Yielding to the browser will give it a chance to paint, so we can
        };
        var channel = new MessageChannel();
        var port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline;
        requestHostCallback = function(callback) {
            scheduledHostCallback = callback;
            if (!isMessageLoopRunning) {
                isMessageLoopRunning = true;
                port.postMessage(null);
            }
        };
        requestHostTimeout = function(callback, ms) {
            taskTimeoutID = _setTimeout(function() {
                callback(exports.unstable_now());
            }, ms);
        };
        cancelHostTimeout = function() {
            _clearTimeout(taskTimeoutID);
            taskTimeoutID = -1;
        };
    }
    function push(heap, node) {
        var index = heap.length;
        heap.push(node);
        siftUp(heap, node, index);
    }
    function peek(heap) {
        var first = heap[0];
        return first === undefined ? null : first;
    }
    function pop(heap) {
        var first = heap[0];
        if (first !== undefined) {
            var last = heap.pop();
            if (last !== first) {
                heap[0] = last;
                siftDown(heap, last, 0);
            }
            return first;
        } else return null;
    }
    function siftUp(heap, node, i) {
        var index = i;
        while(true){
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (parent !== undefined && compare(parent, node) > 0) {
                // The parent is larger. Swap positions.
                heap[parentIndex] = node;
                heap[index] = parent;
                index = parentIndex;
            } else // The parent is smaller. Exit.
            return;
        }
    }
    function siftDown(heap, node, i) {
        var index = i;
        var length = heap.length;
        while(index < length){
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.
            if (left !== undefined && compare(left, node) < 0) {
                if (right !== undefined && compare(right, left) < 0) {
                    heap[index] = right;
                    heap[rightIndex] = node;
                    index = rightIndex;
                } else {
                    heap[index] = left;
                    heap[leftIndex] = node;
                    index = leftIndex;
                }
            } else if (right !== undefined && compare(right, node) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
            } else // Neither child is smaller. Exit.
            return;
        }
    }
    function compare(a, b) {
        // Compare sort index first, then task id.
        var diff = a.sortIndex - b.sortIndex;
        return diff !== 0 ? diff : a.id - b.id;
    }
    // TODO: Use symbols?
    var ImmediatePriority = 1;
    var UserBlockingPriority = 2;
    var NormalPriority = 3;
    var LowPriority = 4;
    var IdlePriority = 5;
    function markTaskErrored(task, ms) {
    }
    /* eslint-disable no-var */ // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111
    var maxSigned31BitInt = 1073741823; // Times out immediately
    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out
    var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
    var NORMAL_PRIORITY_TIMEOUT = 5000;
    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out
    var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap
    var taskQueue = [];
    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.
    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
    var currentTask = null;
    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.
    var isPerformingWork = false;
    var isHostCallbackScheduled = false;
    var isHostTimeoutScheduled = false;
    function advanceTimers(currentTime) {
        // Check for tasks that are no longer delayed and add them to the queue.
        var timer = peek(timerQueue);
        while(timer !== null){
            if (timer.callback === null) // Timer was cancelled.
            pop(timerQueue);
            else if (timer.startTime <= currentTime) {
                // Timer fired. Transfer to the task queue.
                pop(timerQueue);
                timer.sortIndex = timer.expirationTime;
                push(taskQueue, timer);
            } else // Remaining timers are pending.
            return;
            timer = peek(timerQueue);
        }
    }
    function handleTimeout(currentTime) {
        isHostTimeoutScheduled = false;
        advanceTimers(currentTime);
        if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            } else {
                var firstTimer = peek(timerQueue);
                if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
        }
    }
    function flushWork(hasTimeRemaining, initialTime) {
        isHostCallbackScheduled = false;
        if (isHostTimeoutScheduled) {
            // We scheduled a timeout but it's no longer needed. Cancel it.
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
        }
        isPerformingWork = true;
        var previousPriorityLevel = currentPriorityLevel;
        try {
            if (enableProfiling) try {
                return workLoop(hasTimeRemaining, initialTime);
            } catch (error) {
                if (currentTask !== null) {
                    var currentTime = exports.unstable_now();
                    markTaskErrored(currentTask, currentTime);
                    currentTask.isQueued = false;
                }
                throw error;
            }
            else // No catch in prod code path.
            return workLoop(hasTimeRemaining, initialTime);
        } finally{
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
        }
    }
    function workLoop(hasTimeRemaining, initialTime) {
        var currentTime = initialTime;
        advanceTimers(currentTime);
        currentTask = peek(taskQueue);
        while(currentTask !== null && !enableSchedulerDebugging){
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || exports.unstable_shouldYield())) break;
            var callback = currentTask.callback;
            if (typeof callback === 'function') {
                currentTask.callback = null;
                currentPriorityLevel = currentTask.priorityLevel;
                var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
                var continuationCallback = callback(didUserCallbackTimeout);
                currentTime = exports.unstable_now();
                if (typeof continuationCallback === 'function') currentTask.callback = continuationCallback;
                else if (currentTask === peek(taskQueue)) pop(taskQueue);
                advanceTimers(currentTime);
            } else pop(taskQueue);
            currentTask = peek(taskQueue);
        } // Return whether there's additional work
        if (currentTask !== null) return true;
        else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            return false;
        }
    }
    function unstable_runWithPriority(priorityLevel, eventHandler) {
        switch(priorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
                break;
            default:
                priorityLevel = NormalPriority;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_next(eventHandler) {
        var priorityLevel;
        switch(currentPriorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
                // Shift down to normal priority
                priorityLevel = NormalPriority;
                break;
            default:
                // Anything lower than normal priority should remain at the current level.
                priorityLevel = currentPriorityLevel;
                break;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_wrapCallback(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
            // This is a fork of runWithPriority, inlined for performance.
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
                return callback.apply(this, arguments);
            } finally{
                currentPriorityLevel = previousPriorityLevel;
            }
        };
    }
    function unstable_scheduleCallback(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now();
        var startTime;
        if (typeof options === 'object' && options !== null) {
            var delay = options.delay;
            if (typeof delay === 'number' && delay > 0) startTime = currentTime + delay;
            else startTime = currentTime;
        } else startTime = currentTime;
        var timeout;
        switch(priorityLevel){
            case ImmediatePriority:
                timeout = IMMEDIATE_PRIORITY_TIMEOUT;
                break;
            case UserBlockingPriority:
                timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
                break;
            case IdlePriority:
                timeout = IDLE_PRIORITY_TIMEOUT;
                break;
            case LowPriority:
                timeout = LOW_PRIORITY_TIMEOUT;
                break;
            case NormalPriority:
            default:
                timeout = NORMAL_PRIORITY_TIMEOUT;
                break;
        }
        var expirationTime = startTime + timeout;
        var newTask = {
            id: taskIdCounter++,
            callback: callback,
            priorityLevel: priorityLevel,
            startTime: startTime,
            expirationTime: expirationTime,
            sortIndex: -1
        };
        if (startTime > currentTime) {
            // This is a delayed task.
            newTask.sortIndex = startTime;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
                // All tasks are delayed, and this is the task with the earliest delay.
                if (isHostTimeoutScheduled) // Cancel an existing timeout.
                cancelHostTimeout();
                else isHostTimeoutScheduled = true;
                 // Schedule a timeout.
                requestHostTimeout(handleTimeout, startTime - currentTime);
            }
        } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            // wait until the next time we yield.
            if (!isHostCallbackScheduled && !isPerformingWork) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            }
        }
        return newTask;
    }
    function unstable_pauseExecution() {
    }
    function unstable_continueExecution() {
        if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
        }
    }
    function unstable_getFirstCallbackNode() {
        return peek(taskQueue);
    }
    function unstable_cancelCallback(task) {
        // remove from the queue because you can't remove arbitrary nodes from an
        // array based heap, only the first one.)
        task.callback = null;
    }
    function unstable_getCurrentPriorityLevel() {
        return currentPriorityLevel;
    }
    var unstable_requestPaint = requestPaint;
    var unstable_Profiling = null;
    exports.unstable_IdlePriority = IdlePriority;
    exports.unstable_ImmediatePriority = ImmediatePriority;
    exports.unstable_LowPriority = LowPriority;
    exports.unstable_NormalPriority = NormalPriority;
    exports.unstable_Profiling = unstable_Profiling;
    exports.unstable_UserBlockingPriority = UserBlockingPriority;
    exports.unstable_cancelCallback = unstable_cancelCallback;
    exports.unstable_continueExecution = unstable_continueExecution;
    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
    exports.unstable_next = unstable_next;
    exports.unstable_pauseExecution = unstable_pauseExecution;
    exports.unstable_requestPaint = unstable_requestPaint;
    exports.unstable_runWithPriority = unstable_runWithPriority;
    exports.unstable_scheduleCallback = unstable_scheduleCallback;
    exports.unstable_wrapCallback = unstable_wrapCallback;
})();

},{}],"7D5oU":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/scheduler-tracing.development.js');

},{"./cjs/scheduler-tracing.development.js":"1zOao"}],"1zOao":[function(require,module,exports) {
/** @license React v0.20.2
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    var DEFAULT_THREAD_ID = 0; // Counters used to generate unique IDs.
    var interactionIDCounter = 0;
    var threadIDCounter = 0; // Set of currently traced interactions.
    // Interactions "stack"–
    // Meaning that newly traced interactions are appended to the previously active set.
    // When an interaction goes out of scope, the previous set (if any) is restored.
    exports.__interactionsRef = null; // Listener(s) to notify when interactions begin and end.
    exports.__subscriberRef = null;
    exports.__interactionsRef = {
        current: new Set()
    };
    exports.__subscriberRef = {
        current: null
    };
    function unstable_clear(callback) {
        var prevInteractions = exports.__interactionsRef.current;
        exports.__interactionsRef.current = new Set();
        try {
            return callback();
        } finally{
            exports.__interactionsRef.current = prevInteractions;
        }
    }
    function unstable_getCurrent() {
        return exports.__interactionsRef.current;
    }
    function unstable_getThreadID() {
        return ++threadIDCounter;
    }
    function unstable_trace(name, timestamp, callback) {
        var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;
        var interaction = {
            __count: 1,
            id: interactionIDCounter++,
            name: name,
            timestamp: timestamp
        };
        var prevInteractions = exports.__interactionsRef.current; // Traced interactions should stack/accumulate.
        // To do that, clone the current interactions.
        // The previous set will be restored upon completion.
        var interactions = new Set(prevInteractions);
        interactions.add(interaction);
        exports.__interactionsRef.current = interactions;
        var subscriber = exports.__subscriberRef.current;
        var returnValue;
        try {
            if (subscriber !== null) subscriber.onInteractionTraced(interaction);
        } finally{
            try {
                if (subscriber !== null) subscriber.onWorkStarted(interactions, threadID);
            } finally{
                try {
                    returnValue = callback();
                } finally{
                    exports.__interactionsRef.current = prevInteractions;
                    try {
                        if (subscriber !== null) subscriber.onWorkStopped(interactions, threadID);
                    } finally{
                        interaction.__count--; // If no async work was scheduled for this interaction,
                        // Notify subscribers that it's completed.
                        if (subscriber !== null && interaction.__count === 0) subscriber.onInteractionScheduledWorkCompleted(interaction);
                    }
                }
            }
        }
        return returnValue;
    }
    function unstable_wrap(callback) {
        var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;
        var wrappedInteractions = exports.__interactionsRef.current;
        var subscriber = exports.__subscriberRef.current;
        if (subscriber !== null) subscriber.onWorkScheduled(wrappedInteractions, threadID);
         // Update the pending async work count for the current interactions.
        // Update after calling subscribers in case of error.
        wrappedInteractions.forEach(function(interaction) {
            interaction.__count++;
        });
        var hasRun = false;
        function wrapped() {
            var prevInteractions = exports.__interactionsRef.current;
            exports.__interactionsRef.current = wrappedInteractions;
            subscriber = exports.__subscriberRef.current;
            try {
                var returnValue;
                try {
                    if (subscriber !== null) subscriber.onWorkStarted(wrappedInteractions, threadID);
                } finally{
                    try {
                        returnValue = callback.apply(undefined, arguments);
                    } finally{
                        exports.__interactionsRef.current = prevInteractions;
                        if (subscriber !== null) subscriber.onWorkStopped(wrappedInteractions, threadID);
                    }
                }
                return returnValue;
            } finally{
                if (!hasRun) {
                    // We only expect a wrapped function to be executed once,
                    // But in the event that it's executed more than once–
                    // Only decrement the outstanding interaction counts once.
                    hasRun = true; // Update pending async counts for all wrapped interactions.
                    // If this was the last scheduled async work for any of them,
                    // Mark them as completed.
                    wrappedInteractions.forEach(function(interaction) {
                        interaction.__count--;
                        if (subscriber !== null && interaction.__count === 0) subscriber.onInteractionScheduledWorkCompleted(interaction);
                    });
                }
            }
        }
        wrapped.cancel = function cancel() {
            subscriber = exports.__subscriberRef.current;
            try {
                if (subscriber !== null) subscriber.onWorkCanceled(wrappedInteractions, threadID);
            } finally{
                // Update pending async counts for all wrapped interactions.
                // If this was the last scheduled async work for any of them,
                // Mark them as completed.
                wrappedInteractions.forEach(function(interaction) {
                    interaction.__count--;
                    if (subscriber && interaction.__count === 0) subscriber.onInteractionScheduledWorkCompleted(interaction);
                });
            }
        };
        return wrapped;
    }
    var subscribers = null;
    subscribers = new Set();
    function unstable_subscribe(subscriber) {
        subscribers.add(subscriber);
        if (subscribers.size === 1) exports.__subscriberRef.current = {
            onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
            onInteractionTraced: onInteractionTraced,
            onWorkCanceled: onWorkCanceled,
            onWorkScheduled: onWorkScheduled,
            onWorkStarted: onWorkStarted,
            onWorkStopped: onWorkStopped
        };
    }
    function unstable_unsubscribe(subscriber) {
        subscribers.delete(subscriber);
        if (subscribers.size === 0) exports.__subscriberRef.current = null;
    }
    function onInteractionTraced(interaction) {
        var didCatchError = false;
        var caughtError = null;
        subscribers.forEach(function(subscriber) {
            try {
                subscriber.onInteractionTraced(interaction);
            } catch (error) {
                if (!didCatchError) {
                    didCatchError = true;
                    caughtError = error;
                }
            }
        });
        if (didCatchError) throw caughtError;
    }
    function onInteractionScheduledWorkCompleted(interaction) {
        var didCatchError = false;
        var caughtError = null;
        subscribers.forEach(function(subscriber) {
            try {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
            } catch (error) {
                if (!didCatchError) {
                    didCatchError = true;
                    caughtError = error;
                }
            }
        });
        if (didCatchError) throw caughtError;
    }
    function onWorkScheduled(interactions, threadID) {
        var didCatchError = false;
        var caughtError = null;
        subscribers.forEach(function(subscriber) {
            try {
                subscriber.onWorkScheduled(interactions, threadID);
            } catch (error) {
                if (!didCatchError) {
                    didCatchError = true;
                    caughtError = error;
                }
            }
        });
        if (didCatchError) throw caughtError;
    }
    function onWorkStarted(interactions, threadID) {
        var didCatchError = false;
        var caughtError = null;
        subscribers.forEach(function(subscriber) {
            try {
                subscriber.onWorkStarted(interactions, threadID);
            } catch (error) {
                if (!didCatchError) {
                    didCatchError = true;
                    caughtError = error;
                }
            }
        });
        if (didCatchError) throw caughtError;
    }
    function onWorkStopped(interactions, threadID) {
        var didCatchError = false;
        var caughtError = null;
        subscribers.forEach(function(subscriber) {
            try {
                subscriber.onWorkStopped(interactions, threadID);
            } catch (error) {
                if (!didCatchError) {
                    didCatchError = true;
                    caughtError = error;
                }
            }
        });
        if (didCatchError) throw caughtError;
    }
    function onWorkCanceled(interactions, threadID) {
        var didCatchError = false;
        var caughtError = null;
        subscribers.forEach(function(subscriber) {
            try {
                subscriber.onWorkCanceled(interactions, threadID);
            } catch (error) {
                if (!didCatchError) {
                    didCatchError = true;
                    caughtError = error;
                }
            }
        });
        if (didCatchError) throw caughtError;
    }
    exports.unstable_clear = unstable_clear;
    exports.unstable_getCurrent = unstable_getCurrent;
    exports.unstable_getThreadID = unstable_getThreadID;
    exports.unstable_subscribe = unstable_subscribe;
    exports.unstable_trace = unstable_trace;
    exports.unstable_unsubscribe = unstable_unsubscribe;
    exports.unstable_wrap = unstable_wrap;
})();

},{}],"16kZP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MemoryRouter", ()=>_reactRouter.MemoryRouter
);
parcelHelpers.export(exports, "Navigate", ()=>_reactRouter.Navigate
);
parcelHelpers.export(exports, "Outlet", ()=>_reactRouter.Outlet
);
parcelHelpers.export(exports, "Route", ()=>_reactRouter.Route
);
parcelHelpers.export(exports, "Router", ()=>_reactRouter.Router
);
parcelHelpers.export(exports, "Routes", ()=>_reactRouter.Routes
);
parcelHelpers.export(exports, "UNSAFE_LocationContext", ()=>_reactRouter.UNSAFE_LocationContext
);
parcelHelpers.export(exports, "UNSAFE_NavigationContext", ()=>_reactRouter.UNSAFE_NavigationContext
);
parcelHelpers.export(exports, "UNSAFE_RouteContext", ()=>_reactRouter.UNSAFE_RouteContext
);
parcelHelpers.export(exports, "createRoutesFromChildren", ()=>_reactRouter.createRoutesFromChildren
);
parcelHelpers.export(exports, "generatePath", ()=>_reactRouter.generatePath
);
parcelHelpers.export(exports, "matchPath", ()=>_reactRouter.matchPath
);
parcelHelpers.export(exports, "matchRoutes", ()=>_reactRouter.matchRoutes
);
parcelHelpers.export(exports, "renderMatches", ()=>_reactRouter.renderMatches
);
parcelHelpers.export(exports, "resolvePath", ()=>_reactRouter.resolvePath
);
parcelHelpers.export(exports, "useHref", ()=>_reactRouter.useHref
);
parcelHelpers.export(exports, "useInRouterContext", ()=>_reactRouter.useInRouterContext
);
parcelHelpers.export(exports, "useLocation", ()=>_reactRouter.useLocation
);
parcelHelpers.export(exports, "useMatch", ()=>_reactRouter.useMatch
);
parcelHelpers.export(exports, "useNavigate", ()=>_reactRouter.useNavigate
);
parcelHelpers.export(exports, "useNavigationType", ()=>_reactRouter.useNavigationType
);
parcelHelpers.export(exports, "useOutlet", ()=>_reactRouter.useOutlet
);
parcelHelpers.export(exports, "useOutletContext", ()=>_reactRouter.useOutletContext
);
parcelHelpers.export(exports, "useParams", ()=>_reactRouter.useParams
);
parcelHelpers.export(exports, "useResolvedPath", ()=>_reactRouter.useResolvedPath
);
parcelHelpers.export(exports, "useRoutes", ()=>_reactRouter.useRoutes
);
parcelHelpers.export(exports, "BrowserRouter", ()=>BrowserRouter
);
parcelHelpers.export(exports, "HashRouter", ()=>HashRouter
);
parcelHelpers.export(exports, "Link", ()=>Link
);
parcelHelpers.export(exports, "NavLink", ()=>NavLink
);
parcelHelpers.export(exports, "createSearchParams", ()=>createSearchParams
);
parcelHelpers.export(exports, "unstable_HistoryRouter", ()=>HistoryRouter
);
parcelHelpers.export(exports, "useLinkClickHandler", ()=>useLinkClickHandler
);
parcelHelpers.export(exports, "useSearchParams", ()=>useSearchParams
);
/**
 * React Router DOM v6.2.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ var _react = require("react");
var _history = require("history");
var _reactRouter = require("react-router");
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {
    };
    var target = {
    };
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const _excluded = [
    "onClick",
    "reloadDocument",
    "replace",
    "state",
    "target",
    "to"
], _excluded2 = [
    "aria-current",
    "caseSensitive",
    "className",
    "end",
    "style",
    "to",
    "children"
];
function warning(cond, message) {
    if (!cond) {
        // eslint-disable-next-line no-console
        if (typeof console !== "undefined") console.warn(message);
        try {
            // Welcome to debugging React Router!
            //
            // This error is thrown as a convenience so you can more easily
            // find the source for a warning that appears in the console by
            // enabling "pause on exceptions" in your JavaScript debugger.
            throw new Error(message); // eslint-disable-next-line no-empty
        } catch (e) {
        }
    }
} ////////////////////////////////////////////////////////////////////////////////
// COMPONENTS
////////////////////////////////////////////////////////////////////////////////
/**
 * A `<Router>` for use in web browsers. Provides the cleanest URLs.
 */ function BrowserRouter(_ref) {
    let { basename , children , window  } = _ref;
    let historyRef = _react.useRef();
    if (historyRef.current == null) historyRef.current = _history.createBrowserHistory({
        window
    });
    let history = historyRef.current;
    let [state, setState] = _react.useState({
        action: history.action,
        location: history.location
    });
    _react.useLayoutEffect(()=>history.listen(setState)
    , [
        history
    ]);
    return(/*#__PURE__*/ _react.createElement(_reactRouter.Router, {
        basename: basename,
        children: children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    }));
}
/**
 * A `<Router>` for use in web browsers. Stores the location in the hash
 * portion of the URL so it is not sent to the server.
 */ function HashRouter(_ref2) {
    let { basename , children , window  } = _ref2;
    let historyRef = _react.useRef();
    if (historyRef.current == null) historyRef.current = _history.createHashHistory({
        window
    });
    let history = historyRef.current;
    let [state, setState] = _react.useState({
        action: history.action,
        location: history.location
    });
    _react.useLayoutEffect(()=>history.listen(setState)
    , [
        history
    ]);
    return(/*#__PURE__*/ _react.createElement(_reactRouter.Router, {
        basename: basename,
        children: children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    }));
}
/**
 * A `<Router>` that accepts a pre-instantiated history object. It's important
 * to note that using your own history object is highly discouraged and may add
 * two versions of the history library to your bundles unless you use the same
 * version of the history library that React Router uses internally.
 */ function HistoryRouter(_ref3) {
    let { basename , children , history  } = _ref3;
    const [state, setState] = _react.useState({
        action: history.action,
        location: history.location
    });
    _react.useLayoutEffect(()=>history.listen(setState)
    , [
        history
    ]);
    return(/*#__PURE__*/ _react.createElement(_reactRouter.Router, {
        basename: basename,
        children: children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    }));
}
HistoryRouter.displayName = "unstable_HistoryRouter";
function isModifiedEvent(event) {
    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
/**
 * The public API for rendering a history-aware <a>.
 */ const Link = /*#__PURE__*/ _react.forwardRef(function LinkWithRef(_ref4, ref) {
    let { onClick , reloadDocument , replace =false , state , target , to  } = _ref4, rest = _objectWithoutPropertiesLoose(_ref4, _excluded);
    let href = _reactRouter.useHref(to);
    let internalOnClick = useLinkClickHandler(to, {
        replace,
        state,
        target
    });
    function handleClick(event) {
        if (onClick) onClick(event);
        if (!event.defaultPrevented && !reloadDocument) internalOnClick(event);
    }
    return(/*#__PURE__*/ // eslint-disable-next-line jsx-a11y/anchor-has-content
    _react.createElement("a", _extends({
    }, rest, {
        href: href,
        onClick: handleClick,
        ref: ref,
        target: target
    })));
});
Link.displayName = "Link";
/**
 * A <Link> wrapper that knows if it's "active" or not.
 */ const NavLink = /*#__PURE__*/ _react.forwardRef(function NavLinkWithRef(_ref5, ref) {
    let { "aria-current": ariaCurrentProp = "page" , caseSensitive =false , className: classNameProp = "" , end =false , style: styleProp , to , children  } = _ref5, rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);
    let location = _reactRouter.useLocation();
    let path = _reactRouter.useResolvedPath(to);
    let locationPathname = location.pathname;
    let toPathname = path.pathname;
    if (!caseSensitive) {
        locationPathname = locationPathname.toLowerCase();
        toPathname = toPathname.toLowerCase();
    }
    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/";
    let ariaCurrent = isActive ? ariaCurrentProp : undefined;
    let className;
    if (typeof classNameProp === "function") className = classNameProp({
        isActive
    });
    else // If the className prop is not a function, we use a default `active`
    // class for <NavLink />s that are active. In v5 `active` was the default
    // value for `activeClassName`, but we are removing that API and can still
    // use the old default behavior for a cleaner upgrade path and keep the
    // simple styling rules working as they currently do.
    className = [
        classNameProp,
        isActive ? "active" : null
    ].filter(Boolean).join(" ");
    let style = typeof styleProp === "function" ? styleProp({
        isActive
    }) : styleProp;
    return(/*#__PURE__*/ _react.createElement(Link, _extends({
    }, rest, {
        "aria-current": ariaCurrent,
        className: className,
        ref: ref,
        style: style,
        to: to
    }), typeof children === "function" ? children({
        isActive
    }) : children));
});
NavLink.displayName = "NavLink";
// HOOKS
////////////////////////////////////////////////////////////////////////////////
/**
 * Handles the click behavior for router `<Link>` components. This is useful if
 * you need to create custom `<Link>` components with the same click behavior we
 * use in our exported `<Link>`.
 */ function useLinkClickHandler(to, _temp) {
    let { target , replace: replaceProp , state  } = _temp === void 0 ? {
    } : _temp;
    let navigate = _reactRouter.useNavigate();
    let location = _reactRouter.useLocation();
    let path = _reactRouter.useResolvedPath(to);
    return _react.useCallback((event)=>{
        if (event.button === 0 && (!target || target === "_self") && !isModifiedEvent(event) // Ignore clicks with modifier keys
        ) {
            event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of
            // a push, so do the same here.
            let replace = !!replaceProp || _history.createPath(location) === _history.createPath(path);
            navigate(to, {
                replace,
                state
            });
        }
    }, [
        location,
        navigate,
        path,
        replaceProp,
        state,
        target,
        to
    ]);
}
/**
 * A convenient wrapper for reading and writing search parameters via the
 * URLSearchParams interface.
 */ function useSearchParams(defaultInit) {
    warning(typeof URLSearchParams !== "undefined", "You cannot use the `useSearchParams` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params\n\nIf you're unsure how to load polyfills, we recommend you check out https://polyfill.io/v3/ which provides some recommendations about how to load polyfills only for users that need them, instead of for every user.");
    let defaultSearchParamsRef = _react.useRef(createSearchParams(defaultInit));
    let location = _reactRouter.useLocation();
    let searchParams1 = _react.useMemo(()=>{
        let searchParams = createSearchParams(location.search);
        for (let key of defaultSearchParamsRef.current.keys())if (!searchParams.has(key)) defaultSearchParamsRef.current.getAll(key).forEach((value)=>{
            searchParams.append(key, value);
        });
        return searchParams;
    }, [
        location.search
    ]);
    let navigate = _reactRouter.useNavigate();
    let setSearchParams = _react.useCallback((nextInit, navigateOptions)=>{
        navigate("?" + createSearchParams(nextInit), navigateOptions);
    }, [
        navigate
    ]);
    return [
        searchParams1,
        setSearchParams
    ];
}
/**
 * Creates a URLSearchParams object using the given initializer.
 *
 * This is identical to `new URLSearchParams(init)` except it also
 * supports arrays as values in the object form of the initializer
 * instead of just strings. This is convenient when you need multiple
 * values for a given key, but don't want to use an array initializer.
 *
 * For example, instead of:
 *
 *   let searchParams = new URLSearchParams([
 *     ['sort', 'name'],
 *     ['sort', 'price']
 *   ]);
 *
 * you can do:
 *
 *   let searchParams = createSearchParams({
 *     sort: ['name', 'price']
 *   });
 */ function createSearchParams(init) {
    if (init === void 0) init = "";
    return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key)=>{
        let value = init[key];
        return memo.concat(Array.isArray(value) ? value.map((v)=>[
                key,
                v
            ]
        ) : [
            [
                key,
                value
            ]
        ]);
    }, []));
}

},{"react":"4mchR","history":"2DMpe","react-router":"g791w","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"2DMpe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Action", ()=>r
);
parcelHelpers.export(exports, "createBrowserHistory", ()=>createBrowserHistory
);
parcelHelpers.export(exports, "createHashHistory", ()=>createHashHistory
);
parcelHelpers.export(exports, "createMemoryHistory", ()=>createMemoryHistory
);
parcelHelpers.export(exports, "createPath", ()=>I
);
parcelHelpers.export(exports, "parsePath", ()=>J
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var r, B = r || (r = {
});
B.Pop = "POP";
B.Push = "PUSH";
B.Replace = "REPLACE";
var C = function(b) {
    return Object.freeze(b);
};
function D(b, h) {
    if (!b) {
        "undefined" !== typeof console && console.warn(h);
        try {
            throw Error(h);
        } catch (e) {
        }
    }
}
function E(b) {
    b.preventDefault();
    b.returnValue = "";
}
function F() {
    var b = [];
    return {
        get length () {
            return b.length;
        },
        push: function(h) {
            b.push(h);
            return function() {
                b = b.filter(function(e) {
                    return e !== h;
                });
            };
        },
        call: function(h) {
            b.forEach(function(e) {
                return e && e(h);
            });
        }
    };
}
function H() {
    return Math.random().toString(36).substr(2, 8);
}
function I(b) {
    var h = b.pathname;
    h = void 0 === h ? "/" : h;
    var e = b.search;
    e = void 0 === e ? "" : e;
    b = b.hash;
    b = void 0 === b ? "" : b;
    e && "?" !== e && (h += "?" === e.charAt(0) ? e : "?" + e);
    b && "#" !== b && (h += "#" === b.charAt(0) ? b : "#" + b);
    return h;
}
function J(b) {
    var h = {
    };
    if (b) {
        var e = b.indexOf("#");
        0 <= e && (h.hash = b.substr(e), b = b.substr(0, e));
        e = b.indexOf("?");
        0 <= e && (h.search = b.substr(e), b = b.substr(0, e));
        b && (h.pathname = b);
    }
    return h;
}
function createBrowserHistory(b) {
    function h() {
        var c = p.location, a = m.state || {
        };
        return [
            a.idx,
            C({
                pathname: c.pathname,
                search: c.search,
                hash: c.hash,
                state: a.usr || null,
                key: a.key || "default"
            })
        ];
    }
    function e(c) {
        return "string" === typeof c ? c : I(c);
    }
    function x(c, a) {
        void 0 === a && (a = null);
        return C(_extendsDefault.default({
            pathname: q.pathname,
            hash: "",
            search: ""
        }, "string" === typeof c ? J(c) : c, {
            state: a,
            key: H()
        }));
    }
    function z(c) {
        t = c;
        c = h();
        v = c[0];
        q = c[1];
        d.call({
            action: t,
            location: q
        });
    }
    function A(c, a) {
        function f() {
            A(c, a);
        }
        var l = r.Push, k = x(c, a);
        if (!g.length || (g.call({
            action: l,
            location: k,
            retry: f
        }), !1)) {
            var n = [
                {
                    usr: k.state,
                    key: k.key,
                    idx: v + 1
                },
                e(k)
            ];
            k = n[0];
            n = n[1];
            try {
                m.pushState(k, "", n);
            } catch (G) {
                p.location.assign(n);
            }
            z(l);
        }
    }
    function y(c, a) {
        function f() {
            y(c, a);
        }
        var l = r.Replace, k = x(c, a);
        g.length && (g.call({
            action: l,
            location: k,
            retry: f
        }), 1) || (k = [
            {
                usr: k.state,
                key: k.key,
                idx: v
            },
            e(k)
        ], m.replaceState(k[0], "", k[1]), z(l));
    }
    function w(c) {
        m.go(c);
    }
    void 0 === b && (b = {
    });
    b = b.window;
    var p = void 0 === b ? document.defaultView : b, m = p.history, u = null;
    p.addEventListener("popstate", function() {
        if (u) g.call(u), u = null;
        else {
            var c = r.Pop, a = h(), f = a[0];
            a = a[1];
            if (g.length) {
                if (null != f) {
                    var l = v - f;
                    l && (u = {
                        action: c,
                        location: a,
                        retry: function() {
                            w(-1 * l);
                        }
                    }, w(l));
                } else D(!1, "You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation.");
            } else z(c);
        }
    });
    var t = r.Pop;
    b = h();
    var v = b[0], q = b[1], d = F(), g = F();
    null == v && (v = 0, m.replaceState(_extendsDefault.default({
    }, m.state, {
        idx: v
    }), ""));
    return {
        get action () {
            return t;
        },
        get location () {
            return q;
        },
        createHref: e,
        push: A,
        replace: y,
        go: w,
        back: function() {
            w(-1);
        },
        forward: function() {
            w(1);
        },
        listen: function(c) {
            return d.push(c);
        },
        block: function(c) {
            var a = g.push(c);
            1 === g.length && p.addEventListener("beforeunload", E);
            return function() {
                a();
                g.length || p.removeEventListener("beforeunload", E);
            };
        }
    };
}
function createHashHistory(b) {
    function h() {
        var a = J(m.location.hash.substr(1)), f = a.pathname, l = a.search;
        a = a.hash;
        var k = u.state || {
        };
        return [
            k.idx,
            C({
                pathname: void 0 === f ? "/" : f,
                search: void 0 === l ? "" : l,
                hash: void 0 === a ? "" : a,
                state: k.usr || null,
                key: k.key || "default"
            })
        ];
    }
    function e() {
        if (t) c.call(t), t = null;
        else {
            var a = r.Pop, f = h(), l = f[0];
            f = f[1];
            if (c.length) {
                if (null != l) {
                    var k = q - l;
                    k && (t = {
                        action: a,
                        location: f,
                        retry: function() {
                            p(-1 * k);
                        }
                    }, p(k));
                } else D(!1, "You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation.");
            } else A(a);
        }
    }
    function x(a) {
        var f = document.querySelector("base"), l = "";
        f && f.getAttribute("href") && (f = m.location.href, l = f.indexOf("#"), l = -1 === l ? f : f.slice(0, l));
        return l + "#" + ("string" === typeof a ? a : I(a));
    }
    function z(a, f) {
        void 0 === f && (f = null);
        return C(_extendsDefault.default({
            pathname: d.pathname,
            hash: "",
            search: ""
        }, "string" === typeof a ? J(a) : a, {
            state: f,
            key: H()
        }));
    }
    function A(a) {
        v = a;
        a = h();
        q = a[0];
        d = a[1];
        g.call({
            action: v,
            location: d
        });
    }
    function y(a, f) {
        function l() {
            y(a, f);
        }
        var k = r.Push, n = z(a, f);
        D("/" === n.pathname.charAt(0), "Relative pathnames are not supported in hash history.push(" + JSON.stringify(a) + ")");
        if (!c.length || (c.call({
            action: k,
            location: n,
            retry: l
        }), !1)) {
            var G = [
                {
                    usr: n.state,
                    key: n.key,
                    idx: q + 1
                },
                x(n)
            ];
            n = G[0];
            G = G[1];
            try {
                u.pushState(n, "", G);
            } catch (K) {
                m.location.assign(G);
            }
            A(k);
        }
    }
    function w(a, f) {
        function l() {
            w(a, f);
        }
        var k = r.Replace, n = z(a, f);
        D("/" === n.pathname.charAt(0), "Relative pathnames are not supported in hash history.replace(" + JSON.stringify(a) + ")");
        c.length && (c.call({
            action: k,
            location: n,
            retry: l
        }), 1) || (n = [
            {
                usr: n.state,
                key: n.key,
                idx: q
            },
            x(n)
        ], u.replaceState(n[0], "", n[1]), A(k));
    }
    function p(a) {
        u.go(a);
    }
    void 0 === b && (b = {
    });
    b = b.window;
    var m = void 0 === b ? document.defaultView : b, u = m.history, t = null;
    m.addEventListener("popstate", e);
    m.addEventListener("hashchange", function() {
        var a = h()[1];
        I(a) !== I(d) && e();
    });
    var v = r.Pop;
    b = h();
    var q = b[0], d = b[1], g = F(), c = F();
    null == q && (q = 0, u.replaceState(_extendsDefault.default({
    }, u.state, {
        idx: q
    }), ""));
    return {
        get action () {
            return v;
        },
        get location () {
            return d;
        },
        createHref: x,
        push: y,
        replace: w,
        go: p,
        back: function() {
            p(-1);
        },
        forward: function() {
            p(1);
        },
        listen: function(a) {
            return g.push(a);
        },
        block: function(a) {
            var f = c.push(a);
            1 === c.length && m.addEventListener("beforeunload", E);
            return function() {
                f();
                c.length || m.removeEventListener("beforeunload", E);
            };
        }
    };
}
function createMemoryHistory(b) {
    function h(d, g) {
        void 0 === g && (g = null);
        return C(_extendsDefault.default({
            pathname: t.pathname,
            search: "",
            hash: ""
        }, "string" === typeof d ? J(d) : d, {
            state: g,
            key: H()
        }));
    }
    function e(d, g, c) {
        return !q.length || (q.call({
            action: d,
            location: g,
            retry: c
        }), !1);
    }
    function x(d, g) {
        u = d;
        t = g;
        v.call({
            action: u,
            location: t
        });
    }
    function z(d, g) {
        var c = r.Push, a = h(d, g);
        D("/" === t.pathname.charAt(0), "Relative pathnames are not supported in memory history.push(" + JSON.stringify(d) + ")");
        e(c, a, function() {
            z(d, g);
        }) && (m += 1, p.splice(m, p.length, a), x(c, a));
    }
    function A(d, g) {
        var c = r.Replace, a = h(d, g);
        D("/" === t.pathname.charAt(0), "Relative pathnames are not supported in memory history.replace(" + JSON.stringify(d) + ")");
        e(c, a, function() {
            A(d, g);
        }) && (p[m] = a, x(c, a));
    }
    function y(d) {
        var g = Math.min(Math.max(m + d, 0), p.length - 1), c = r.Pop, a = p[g];
        e(c, a, function() {
            y(d);
        }) && (m = g, x(c, a));
    }
    void 0 === b && (b = {
    });
    var w = b;
    b = w.initialEntries;
    w = w.initialIndex;
    var p = (void 0 === b ? [
        "/"
    ] : b).map(function(d) {
        var g = C(_extendsDefault.default({
            pathname: "/",
            search: "",
            hash: "",
            state: null,
            key: H()
        }, "string" === typeof d ? J(d) : d));
        D("/" === g.pathname.charAt(0), "Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: " + JSON.stringify(d) + ")");
        return g;
    }), m = Math.min(Math.max(null == w ? p.length - 1 : w, 0), p.length - 1), u = r.Pop, t = p[m], v = F(), q = F();
    return {
        get index () {
            return m;
        },
        get action () {
            return u;
        },
        get location () {
            return t;
        },
        createHref: function(d) {
            return "string" === typeof d ? d : I(d);
        },
        push: z,
        replace: A,
        go: y,
        back: function() {
            y(-1);
        },
        forward: function() {
            y(1);
        },
        listen: function(d) {
            return v.push(d);
        },
        block: function(d) {
            return q.push(d);
        }
    };
}

},{"@babel/runtime/helpers/esm/extends":"5inYT","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"5inYT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
exports.default = _extends;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"ciiiV":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, '__esModule', {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"g791w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MemoryRouter", ()=>MemoryRouter
);
parcelHelpers.export(exports, "Navigate", ()=>Navigate
);
parcelHelpers.export(exports, "Outlet", ()=>Outlet
);
parcelHelpers.export(exports, "Route", ()=>Route
);
parcelHelpers.export(exports, "Router", ()=>Router
);
parcelHelpers.export(exports, "Routes", ()=>Routes
);
parcelHelpers.export(exports, "UNSAFE_LocationContext", ()=>LocationContext
);
parcelHelpers.export(exports, "UNSAFE_NavigationContext", ()=>NavigationContext
);
parcelHelpers.export(exports, "UNSAFE_RouteContext", ()=>RouteContext
);
parcelHelpers.export(exports, "createRoutesFromChildren", ()=>createRoutesFromChildren
);
parcelHelpers.export(exports, "generatePath", ()=>generatePath
);
parcelHelpers.export(exports, "matchPath", ()=>matchPath
);
parcelHelpers.export(exports, "matchRoutes", ()=>matchRoutes
);
parcelHelpers.export(exports, "renderMatches", ()=>renderMatches
);
parcelHelpers.export(exports, "resolvePath", ()=>resolvePath
);
parcelHelpers.export(exports, "useHref", ()=>useHref
);
parcelHelpers.export(exports, "useInRouterContext", ()=>useInRouterContext
);
parcelHelpers.export(exports, "useLocation", ()=>useLocation
);
parcelHelpers.export(exports, "useMatch", ()=>useMatch
);
parcelHelpers.export(exports, "useNavigate", ()=>useNavigate
);
parcelHelpers.export(exports, "useNavigationType", ()=>useNavigationType
);
parcelHelpers.export(exports, "useOutlet", ()=>useOutlet
);
parcelHelpers.export(exports, "useOutletContext", ()=>useOutletContext
);
parcelHelpers.export(exports, "useParams", ()=>useParams
);
parcelHelpers.export(exports, "useResolvedPath", ()=>useResolvedPath
);
parcelHelpers.export(exports, "useRoutes", ()=>useRoutes
);
/**
 * React Router v6.2.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ var _react = require("react");
var _history = require("history");
function invariant(cond, message) {
    if (!cond) throw new Error(message);
}
function warning(cond, message) {
    if (!cond) {
        // eslint-disable-next-line no-console
        if (typeof console !== "undefined") console.warn(message);
        try {
            // Welcome to debugging React Router!
            //
            // This error is thrown as a convenience so you can more easily
            // find the source for a warning that appears in the console by
            // enabling "pause on exceptions" in your JavaScript debugger.
            throw new Error(message); // eslint-disable-next-line no-empty
        } catch (e) {
        }
    }
}
const alreadyWarned = {
};
function warningOnce(key, cond, message) {
    if (!cond && !alreadyWarned[key]) {
        alreadyWarned[key] = true;
        warning(false, message);
    }
} ///////////////////////////////////////////////////////////////////////////////
// CONTEXT
///////////////////////////////////////////////////////////////////////////////
/**
 * A Navigator is a "location changer"; it's how you get to different locations.
 *
 * Every history instance conforms to the Navigator interface, but the
 * distinction is useful primarily when it comes to the low-level <Router> API
 * where both the location and a navigator must be provided separately in order
 * to avoid "tearing" that may occur in a suspense-enabled app if the action
 * and/or location were to be read directly from the history instance.
 */ const NavigationContext = /*#__PURE__*/ _react.createContext(null);
NavigationContext.displayName = "Navigation";
const LocationContext = /*#__PURE__*/ _react.createContext(null);
LocationContext.displayName = "Location";
const RouteContext = /*#__PURE__*/ _react.createContext({
    outlet: null,
    matches: []
});
RouteContext.displayName = "Route";
// COMPONENTS
///////////////////////////////////////////////////////////////////////////////
/**
 * A <Router> that stores all entries in memory.
 *
 * @see https://reactrouter.com/docs/en/v6/api#memoryrouter
 */ function MemoryRouter(_ref) {
    let { basename , children , initialEntries , initialIndex  } = _ref;
    let historyRef = _react.useRef();
    if (historyRef.current == null) historyRef.current = _history.createMemoryHistory({
        initialEntries,
        initialIndex
    });
    let history = historyRef.current;
    let [state, setState] = _react.useState({
        action: history.action,
        location: history.location
    });
    _react.useLayoutEffect(()=>history.listen(setState)
    , [
        history
    ]);
    return(/*#__PURE__*/ _react.createElement(Router, {
        basename: basename,
        children: children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    }));
}
/**
 * Changes the current location.
 *
 * Note: This API is mostly useful in React.Component subclasses that are not
 * able to use hooks. In functional components, we recommend you use the
 * `useNavigate` hook instead.
 *
 * @see https://reactrouter.com/docs/en/v6/api#navigate
 */ function Navigate(_ref2) {
    let { to , replace , state  } = _ref2;
    !useInRouterContext() && invariant(false, // the router loaded. We can help them understand how to avoid that.
    "<Navigate> may be used only in the context of a <Router> component.");
    warning(!_react.useContext(NavigationContext).static, "<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.");
    let navigate = useNavigate();
    _react.useEffect(()=>{
        navigate(to, {
            replace,
            state
        });
    });
    return null;
}
/**
 * Renders the child route's element, if there is one.
 *
 * @see https://reactrouter.com/docs/en/v6/api#outlet
 */ function Outlet(props) {
    return useOutlet(props.context);
}
/**
 * Declares an element that should be rendered at a certain URL path.
 *
 * @see https://reactrouter.com/docs/en/v6/api#route
 */ function Route(_props) {
    invariant(false, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.");
}
/**
 * Provides location context for the rest of the app.
 *
 * Note: You usually won't render a <Router> directly. Instead, you'll render a
 * router that is more specific to your environment such as a <BrowserRouter>
 * in web browsers or a <StaticRouter> for server rendering.
 *
 * @see https://reactrouter.com/docs/en/v6/api#router
 */ function Router(_ref3) {
    let { basename: basenameProp = "/" , children =null , location: locationProp , navigationType =_history.Action.Pop , navigator , static: staticProp = false  } = _ref3;
    !!useInRouterContext() && invariant(false, "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.");
    let basename = normalizePathname(basenameProp);
    let navigationContext = _react.useMemo(()=>({
            basename,
            navigator,
            static: staticProp
        })
    , [
        basename,
        navigator,
        staticProp
    ]);
    if (typeof locationProp === "string") locationProp = _history.parsePath(locationProp);
    let { pathname ="/" , search ="" , hash ="" , state =null , key ="default"  } = locationProp;
    let location = _react.useMemo(()=>{
        let trailingPathname = stripBasename(pathname, basename);
        if (trailingPathname == null) return null;
        return {
            pathname: trailingPathname,
            search,
            hash,
            state,
            key
        };
    }, [
        basename,
        pathname,
        search,
        hash,
        state,
        key
    ]);
    warning(location != null, "<Router basename=\"" + basename + "\"> is not able to match the URL " + ("\"" + pathname + search + hash + "\" because it does not start with the ") + "basename, so the <Router> won't render anything.");
    if (location == null) return null;
    return(/*#__PURE__*/ _react.createElement(NavigationContext.Provider, {
        value: navigationContext
    }, /*#__PURE__*/ _react.createElement(LocationContext.Provider, {
        children: children,
        value: {
            location,
            navigationType
        }
    })));
}
/**
 * A container for a nested tree of <Route> elements that renders the branch
 * that best matches the current location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#routes
 */ function Routes(_ref4) {
    let { children , location  } = _ref4;
    return useRoutes(createRoutesFromChildren(children), location);
} ///////////////////////////////////////////////////////////////////////////////
// HOOKS
///////////////////////////////////////////////////////////////////////////////
/**
 * Returns the full href for the given "to" value. This is useful for building
 * custom links that are also accessible and preserve right-click behavior.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usehref
 */ function useHref(to) {
    !useInRouterContext() && invariant(false, // router loaded. We can help them understand how to avoid that.
    "useHref() may be used only in the context of a <Router> component.");
    let { basename , navigator  } = _react.useContext(NavigationContext);
    let { hash , pathname , search  } = useResolvedPath(to);
    let joinedPathname = pathname;
    if (basename !== "/") {
        let toPathname = getToPathname(to);
        let endsWithSlash = toPathname != null && toPathname.endsWith("/");
        joinedPathname = pathname === "/" ? basename + (endsWithSlash ? "/" : "") : joinPaths([
            basename,
            pathname
        ]);
    }
    return navigator.createHref({
        pathname: joinedPathname,
        search,
        hash
    });
}
/**
 * Returns true if this component is a descendant of a <Router>.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext
 */ function useInRouterContext() {
    return _react.useContext(LocationContext) != null;
}
/**
 * Returns the current location object, which represents the current URL in web
 * browsers.
 *
 * Note: If you're using this it may mean you're doing some of your own
 * "routing" in your app, and we'd like to know what your use case is. We may
 * be able to provide something higher-level to better suit your needs.
 *
 * @see https://reactrouter.com/docs/en/v6/api#uselocation
 */ function useLocation() {
    !useInRouterContext() && invariant(false, // router loaded. We can help them understand how to avoid that.
    "useLocation() may be used only in the context of a <Router> component.");
    return _react.useContext(LocationContext).location;
}
/**
 * Returns the current navigation action which describes how the router came to
 * the current location, either by a pop, push, or replace on the history stack.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype
 */ function useNavigationType() {
    return _react.useContext(LocationContext).navigationType;
}
/**
 * Returns true if the URL for the given "to" value matches the current URL.
 * This is useful for components that need to know "active" state, e.g.
 * <NavLink>.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usematch
 */ function useMatch(pattern) {
    !useInRouterContext() && invariant(false, // router loaded. We can help them understand how to avoid that.
    "useMatch() may be used only in the context of a <Router> component.");
    let { pathname  } = useLocation();
    return _react.useMemo(()=>matchPath(pattern, pathname)
    , [
        pathname,
        pattern
    ]);
}
/**
 * The interface for the navigate() function returned from useNavigate().
 */ /**
 * Returns an imperative method for changing the location. Used by <Link>s, but
 * may also be used by other elements to change the location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usenavigate
 */ function useNavigate() {
    !useInRouterContext() && invariant(false, // router loaded. We can help them understand how to avoid that.
    "useNavigate() may be used only in the context of a <Router> component.");
    let { basename , navigator  } = _react.useContext(NavigationContext);
    let { matches  } = _react.useContext(RouteContext);
    let { pathname: locationPathname  } = useLocation();
    let routePathnamesJson = JSON.stringify(matches.map((match)=>match.pathnameBase
    ));
    let activeRef = _react.useRef(false);
    _react.useEffect(()=>{
        activeRef.current = true;
    });
    let navigate = _react.useCallback(function(to, options) {
        if (options === void 0) options = {
        };
        warning(activeRef.current, "You should call navigate() in a React.useEffect(), not when your component is first rendered.");
        if (!activeRef.current) return;
        if (typeof to === "number") {
            navigator.go(to);
            return;
        }
        let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);
        if (basename !== "/") path.pathname = joinPaths([
            basename,
            path.pathname
        ]);
        (!!options.replace ? navigator.replace : navigator.push)(path, options.state);
    }, [
        basename,
        navigator,
        routePathnamesJson,
        locationPathname
    ]);
    return navigate;
}
const OutletContext = /*#__PURE__*/ _react.createContext(null);
/**
 * Returns the context (if provided) for the child route at this level of the route
 * hierarchy.
 * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext
 */ function useOutletContext() {
    return _react.useContext(OutletContext);
}
/**
 * Returns the element for the child route at this level of the route
 * hierarchy. Used internally by <Outlet> to render child routes.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useoutlet
 */ function useOutlet(context) {
    let outlet = _react.useContext(RouteContext).outlet;
    if (outlet) return(/*#__PURE__*/ _react.createElement(OutletContext.Provider, {
        value: context
    }, outlet));
    return outlet;
}
/**
 * Returns an object of key/value pairs of the dynamic params from the current
 * URL that were matched by the route path.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useparams
 */ function useParams() {
    let { matches  } = _react.useContext(RouteContext);
    let routeMatch = matches[matches.length - 1];
    return routeMatch ? routeMatch.params : {
    };
}
/**
 * Resolves the pathname of the given `to` value against the current location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath
 */ function useResolvedPath(to) {
    let { matches  } = _react.useContext(RouteContext);
    let { pathname: locationPathname  } = useLocation();
    let routePathnamesJson = JSON.stringify(matches.map((match)=>match.pathnameBase
    ));
    return _react.useMemo(()=>resolveTo(to, JSON.parse(routePathnamesJson), locationPathname)
    , [
        to,
        routePathnamesJson,
        locationPathname
    ]);
}
/**
 * Returns the element of the route that matched the current location, prepared
 * with the correct context to render the remainder of the route tree. Route
 * elements in the tree must render an <Outlet> to render their child route's
 * element.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useroutes
 */ function useRoutes(routes, locationArg) {
    !useInRouterContext() && invariant(false, // router loaded. We can help them understand how to avoid that.
    "useRoutes() may be used only in the context of a <Router> component.");
    let { matches: parentMatches  } = _react.useContext(RouteContext);
    let routeMatch = parentMatches[parentMatches.length - 1];
    let parentParams = routeMatch ? routeMatch.params : {
    };
    let parentPathname = routeMatch ? routeMatch.pathname : "/";
    let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
    let parentRoute = routeMatch && routeMatch.route;
    {
        // You won't get a warning about 2 different <Routes> under a <Route>
        // without a trailing *, but this is a best-effort warning anyway since we
        // cannot even give the warning unless they land at the parent route.
        //
        // Example:
        //
        // <Routes>
        //   {/* This route path MUST end with /* because otherwise
        //       it will never match /blog/post/123 */}
        //   <Route path="blog" element={<Blog />} />
        //   <Route path="blog/feed" element={<BlogFeed />} />
        // </Routes>
        //
        // function Blog() {
        //   return (
        //     <Routes>
        //       <Route path="post/:id" element={<Post />} />
        //     </Routes>
        //   );
        // }
        let parentPath = parentRoute && parentRoute.path || "";
        warningOnce(parentPathname, !parentRoute || parentPath.endsWith("*"), "You rendered descendant <Routes> (or called `useRoutes()`) at " + ("\"" + parentPathname + "\" (under <Route path=\"" + parentPath + "\">) but the ") + "parent route path has no trailing \"*\". This means if you navigate " + "deeper, the parent won't match anymore and therefore the child " + "routes will never render.\n\n" + ("Please change the parent <Route path=\"" + parentPath + "\"> to <Route ") + ("path=\"" + (parentPath === "/" ? "*" : parentPath + "/*") + "\">."));
    }
    let locationFromContext = useLocation();
    let location;
    if (locationArg) {
        var _parsedLocationArg$pa;
        let parsedLocationArg = typeof locationArg === "string" ? _history.parsePath(locationArg) : locationArg;
        !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) && invariant(false, "When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, the location pathname must begin with the portion of the URL pathname that was " + ("matched by all parent routes. The current pathname base is \"" + parentPathnameBase + "\" ") + ("but pathname \"" + parsedLocationArg.pathname + "\" was given in the `location` prop."));
        location = parsedLocationArg;
    } else location = locationFromContext;
    let pathname = location.pathname || "/";
    let remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
    let matches = matchRoutes(routes, {
        pathname: remainingPathname
    });
    warning(parentRoute || matches != null, "No routes matched location \"" + location.pathname + location.search + location.hash + "\" ");
    warning(matches == null || matches[matches.length - 1].route.element !== undefined, "Matched leaf route at location \"" + location.pathname + location.search + location.hash + "\" does not have an element. " + "This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.");
    return _renderMatches(matches && matches.map((match)=>Object.assign({
        }, match, {
            params: Object.assign({
            }, parentParams, match.params),
            pathname: joinPaths([
                parentPathnameBase,
                match.pathname
            ]),
            pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
                parentPathnameBase,
                match.pathnameBase
            ])
        })
    ), parentMatches);
} ///////////////////////////////////////////////////////////////////////////////
// UTILS
///////////////////////////////////////////////////////////////////////////////
/**
 * Creates a route config from a React "children" object, which is usually
 * either a `<Route>` element or an array of them. Used internally by
 * `<Routes>` to create a route config from its children.
 *
 * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren
 */ function createRoutesFromChildren(children) {
    let routes = [];
    _react.Children.forEach(children, (element)=>{
        if (!/*#__PURE__*/ _react.isValidElement(element)) // Ignore non-elements. This allows people to more easily inline
        // conditionals in their route config.
        return;
        if (element.type === _react.Fragment) {
            // Transparently support React.Fragment and its children.
            routes.push.apply(routes, createRoutesFromChildren(element.props.children));
            return;
        }
        !(element.type === Route) && invariant(false, "[" + (typeof element.type === "string" ? element.type : element.type.name) + "] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>");
        let route = {
            caseSensitive: element.props.caseSensitive,
            element: element.props.element,
            index: element.props.index,
            path: element.props.path
        };
        if (element.props.children) route.children = createRoutesFromChildren(element.props.children);
        routes.push(route);
    });
    return routes;
}
/**
 * The parameters that were parsed from the URL path.
 */ /**
 * Returns a path with params interpolated.
 *
 * @see https://reactrouter.com/docs/en/v6/api#generatepath
 */ function generatePath(path, params) {
    if (params === void 0) params = {
    };
    return path.replace(/:(\w+)/g, (_, key)=>{
        !(params[key] != null) && invariant(false, "Missing \":" + key + "\" param");
        return params[key];
    }).replace(/\/*\*$/, (_)=>params["*"] == null ? "" : params["*"].replace(/^\/*/, "/")
    );
}
/**
 * A RouteMatch contains info about how a route matched a URL.
 */ /**
 * Matches the given routes to a location and returns the match data.
 *
 * @see https://reactrouter.com/docs/en/v6/api#matchroutes
 */ function matchRoutes(routes, locationArg, basename) {
    if (basename === void 0) basename = "/";
    let location = typeof locationArg === "string" ? _history.parsePath(locationArg) : locationArg;
    let pathname = stripBasename(location.pathname || "/", basename);
    if (pathname == null) return null;
    let branches = flattenRoutes(routes);
    rankRouteBranches(branches);
    let matches = null;
    for(let i = 0; matches == null && i < branches.length; ++i)matches = matchRouteBranch(branches[i], pathname);
    return matches;
}
function flattenRoutes(routes, branches, parentsMeta, parentPath) {
    if (branches === void 0) branches = [];
    if (parentsMeta === void 0) parentsMeta = [];
    if (parentPath === void 0) parentPath = "";
    routes.forEach((route, index)=>{
        let meta = {
            relativePath: route.path || "",
            caseSensitive: route.caseSensitive === true,
            childrenIndex: index,
            route
        };
        if (meta.relativePath.startsWith("/")) {
            !meta.relativePath.startsWith(parentPath) && invariant(false, "Absolute route path \"" + meta.relativePath + "\" nested under path " + ("\"" + parentPath + "\" is not valid. An absolute child route path ") + "must start with the combined path of all its parent routes.");
            meta.relativePath = meta.relativePath.slice(parentPath.length);
        }
        let path = joinPaths([
            parentPath,
            meta.relativePath
        ]);
        let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the
        // route tree depth-first and child routes appear before their parents in
        // the "flattened" version.
        if (route.children && route.children.length > 0) {
            !(route.index !== true) && invariant(false, "Index routes must not have child routes. Please remove " + ("all child routes from route path \"" + path + "\"."));
            flattenRoutes(route.children, branches, routesMeta, path);
        } // Routes without a path shouldn't ever match by themselves unless they are
        // index routes, so don't add them to the list of possible branches.
        if (route.path == null && !route.index) return;
        branches.push({
            path,
            score: computeScore(path, route.index),
            routesMeta
        });
    });
    return branches;
}
function rankRouteBranches(branches) {
    branches.sort((a, b)=>a.score !== b.score ? b.score - a.score // Higher score first
         : compareIndexes(a.routesMeta.map((meta)=>meta.childrenIndex
        ), b.routesMeta.map((meta)=>meta.childrenIndex
        ))
    );
}
const paramRe = /^:\w+$/;
const dynamicSegmentValue = 3;
const indexRouteValue = 2;
const emptySegmentValue = 1;
const staticSegmentValue = 10;
const splatPenalty = -2;
const isSplat = (s)=>s === "*"
;
function computeScore(path, index) {
    let segments = path.split("/");
    let initialScore = segments.length;
    if (segments.some(isSplat)) initialScore += splatPenalty;
    if (index) initialScore += indexRouteValue;
    return segments.filter((s)=>!isSplat(s)
    ).reduce((score, segment)=>score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue)
    , initialScore);
}
function compareIndexes(a, b) {
    let siblings = a.length === b.length && a.slice(0, -1).every((n, i)=>n === b[i]
    );
    return siblings ? // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a[a.length - 1] - b[b.length - 1] : // so they sort equally.
    0;
}
function matchRouteBranch(branch, pathname) {
    let { routesMeta  } = branch;
    let matchedParams = {
    };
    let matchedPathname = "/";
    let matches = [];
    for(let i = 0; i < routesMeta.length; ++i){
        let meta = routesMeta[i];
        let end = i === routesMeta.length - 1;
        let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
        let match = matchPath({
            path: meta.relativePath,
            caseSensitive: meta.caseSensitive,
            end
        }, remainingPathname);
        if (!match) return null;
        Object.assign(matchedParams, match.params);
        let route = meta.route;
        matches.push({
            params: matchedParams,
            pathname: joinPaths([
                matchedPathname,
                match.pathname
            ]),
            pathnameBase: joinPaths([
                matchedPathname,
                match.pathnameBase
            ]),
            route
        });
        if (match.pathnameBase !== "/") matchedPathname = joinPaths([
            matchedPathname,
            match.pathnameBase
        ]);
    }
    return matches;
}
/**
 * Renders the result of `matchRoutes()` into a React element.
 */ function renderMatches(matches) {
    return _renderMatches(matches);
}
function _renderMatches(matches, parentMatches) {
    if (parentMatches === void 0) parentMatches = [];
    if (matches == null) return null;
    return matches.reduceRight((outlet, match, index)=>{
        return(/*#__PURE__*/ _react.createElement(RouteContext.Provider, {
            children: match.route.element !== undefined ? match.route.element : /*#__PURE__*/ _react.createElement(Outlet, null),
            value: {
                outlet,
                matches: parentMatches.concat(matches.slice(0, index + 1))
            }
        }));
    }, null);
}
/**
 * A PathPattern is used to match on some portion of a URL pathname.
 */ /**
 * Performs pattern matching on a URL pathname and returns information about
 * the match.
 *
 * @see https://reactrouter.com/docs/en/v6/api#matchpath
 */ function matchPath(pattern, pathname) {
    if (typeof pattern === "string") pattern = {
        path: pattern,
        caseSensitive: false,
        end: true
    };
    let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
    let match = pathname.match(matcher);
    if (!match) return null;
    let matchedPathname = match[0];
    let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
    let captureGroups = match.slice(1);
    let params = paramNames.reduce((memo, paramName, index)=>{
        // We need to compute the pathnameBase here using the raw splat value
        // instead of using params["*"] later because it will be decoded then
        if (paramName === "*") {
            let splatValue = captureGroups[index] || "";
            pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
        }
        memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || "", paramName);
        return memo;
    }, {
    });
    return {
        params,
        pathname: matchedPathname,
        pathnameBase,
        pattern
    };
}
function compilePath(path, caseSensitive, end) {
    if (caseSensitive === void 0) caseSensitive = false;
    if (end === void 0) end = true;
    warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), "Route path \"" + path + "\" will be treated as if it were " + ("\"" + path.replace(/\*$/, "/*") + "\" because the `*` character must ") + "always follow a `/` in the pattern. To get rid of this warning, " + ("please change the route path to \"" + path.replace(/\*$/, "/*") + "\"."));
    let paramNames = [];
    let regexpSource = "^" + path.replace(/\/*\*?$/, "") // Ignore trailing / and /*, we'll handle it below
    .replace(/^\/*/, "/") // Make sure it has a leading /
    .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&") // Escape special regex chars
    .replace(/:(\w+)/g, (_, paramName)=>{
        paramNames.push(paramName);
        return "([^\\/]+)";
    });
    if (path.endsWith("*")) {
        paramNames.push("*");
        regexpSource += path === "*" || path === "/*" ? "(.*)$" // Already matched the initial /, just match the rest
         : "(?:\\/(.+)|\\/*)$"; // Don't include the / in params["*"]
    } else regexpSource += end ? "\\/*$" // When matching to the end, ignore trailing slashes
     : // parent routes to matching only their own words and nothing more, e.g. parent
    // route "/home" should not match "/home2".
    "(?:\\b|\\/|$)";
    let matcher = new RegExp(regexpSource, caseSensitive ? undefined : "i");
    return [
        matcher,
        paramNames
    ];
}
function safelyDecodeURIComponent(value, paramName) {
    try {
        return decodeURIComponent(value);
    } catch (error) {
        warning(false, "The value for the URL param \"" + paramName + "\" will not be decoded because" + (" the string \"" + value + "\" is a malformed URL segment. This is probably") + (" due to a bad percent encoding (" + error + ")."));
        return value;
    }
}
/**
 * Returns a resolved path object relative to the given pathname.
 *
 * @see https://reactrouter.com/docs/en/v6/api#resolvepath
 */ function resolvePath(to, fromPathname) {
    if (fromPathname === void 0) fromPathname = "/";
    let { pathname: toPathname , search ="" , hash =""  } = typeof to === "string" ? _history.parsePath(to) : to;
    let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
    return {
        pathname,
        search: normalizeSearch(search),
        hash: normalizeHash(hash)
    };
}
function resolvePathname(relativePath, fromPathname) {
    let segments = fromPathname.replace(/\/+$/, "").split("/");
    let relativeSegments = relativePath.split("/");
    relativeSegments.forEach((segment)=>{
        if (segment === "..") // Keep the root "" segment so the pathname starts at /
        {
            if (segments.length > 1) segments.pop();
        } else if (segment !== ".") segments.push(segment);
    });
    return segments.length > 1 ? segments.join("/") : "/";
}
function resolveTo(toArg, routePathnames, locationPathname) {
    let to = typeof toArg === "string" ? _history.parsePath(toArg) : toArg;
    let toPathname = toArg === "" || to.pathname === "" ? "/" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the
    // route context. This is explained in `Note on `<Link to>` values` in our
    // migration guide from v5 as a means of disambiguation between `to` values
    // that begin with `/` and those that do not. However, this is problematic for
    // `to` values that do not provide a pathname. `to` can simply be a search or
    // hash string, in which case we should assume that the navigation is relative
    // to the current location's pathname and *not* the route pathname.
    let from;
    if (toPathname == null) from = locationPathname;
    else {
        let routePathnameIndex = routePathnames.length - 1;
        if (toPathname.startsWith("..")) {
            let toSegments = toPathname.split("/"); // Each leading .. segment means "go up one route" instead of "go up one
            // URL segment".  This is a key difference from how <a href> works and a
            // major reason we call this a "to" value instead of a "href".
            while(toSegments[0] === ".."){
                toSegments.shift();
                routePathnameIndex -= 1;
            }
            to.pathname = toSegments.join("/");
        } // If there are more ".." segments than parent routes, resolve relative to
        // the root / URL.
        from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
    }
    let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.
    if (toPathname && toPathname !== "/" && toPathname.endsWith("/") && !path.pathname.endsWith("/")) path.pathname += "/";
    return path;
}
function getToPathname(to) {
    // Empty strings should be treated the same as / paths
    return to === "" || to.pathname === "" ? "/" : typeof to === "string" ? _history.parsePath(to).pathname : to.pathname;
}
function stripBasename(pathname, basename) {
    if (basename === "/") return pathname;
    if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) return null;
    let nextChar = pathname.charAt(basename.length);
    if (nextChar && nextChar !== "/") // pathname does not start with basename/
    return null;
    return pathname.slice(basename.length) || "/";
}
const joinPaths = (paths)=>paths.join("/").replace(/\/\/+/g, "/")
;
const normalizePathname = (pathname)=>pathname.replace(/\/+$/, "").replace(/^\/*/, "/")
;
const normalizeSearch = (search)=>!search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search
;
const normalizeHash = (hash)=>!hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash
; ///////////////////////////////////////////////////////////////////////////////

},{"react":"4mchR","history":"2DMpe","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"bUWNh":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$9846 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$9846.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "App", ()=>App
);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
// App.js
var _mongoose = require("mongoose");
var _mongooseDefault = parcelHelpers.interopDefault(_mongoose);
var _react = require("react");
var _reactRouterDom = require("react-router-dom");
var _home = require("./Home");
var _picturePage = require("./PicturePage");
function App() {
    connectToDb();
    return(/*#__PURE__*/ _jsxDevRuntime.jsxDEV("div", {
        children: [
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV("header", {
                children: /*#__PURE__*/ _jsxDevRuntime.jsxDEV("h1", {
                    children: "Immigration Map"
                }, void 0, false, {
                    fileName: "src/App.js",
                    lineNumber: 14,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "src/App.js",
                lineNumber: 13,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactRouterDom.Routes, {
                children: [
                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactRouterDom.Route, {
                        path: "/",
                        element: /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_home.Home, {
                        }, void 0, false, void 0, void 0)
                    }, void 0, false, {
                        fileName: "src/App.js",
                        lineNumber: 17,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactRouterDom.Route, {
                        path: "PicturePage",
                        element: /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_picturePage.PicturePage, {
                        }, void 0, false, void 0, void 0)
                    }, void 0, false, {
                        fileName: "src/App.js",
                        lineNumber: 18,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "src/App.js",
                lineNumber: 16,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/App.js",
        lineNumber: 12,
        columnNumber: 5
    }, this));
}
_c = App;
async function connectToDb() {
    await _mongooseDefault.default.connect('mongodb+srv://ramirost:ramirost@cluster0.tlydu.mongodb.net/infoCapstone?retryWrites=true&w=majority');
    const CrimeData = new _mongooseDefault.default.Schema({
        key: String,
        value: BigInt
    });
}
exports.default = App;
var _c;
$RefreshReg$(_c, "App");

  $parcel$ReactRefreshHelpers$9846.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"3jZUD","react":"4mchR","react-router-dom":"16kZP","./Home":"6SbGv","./PicturePage":"7KYeb","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"9pz13","mongoose":"jVQ7g"}],"6SbGv":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$dec9 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$dec9.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
            <div>
                <MapChart setTooltipContent={setContent} />
                <ReactTooltip>{content}</ReactTooltip>
            </div>
*/ parcelHelpers.export(exports, "Home", ()=>Home
);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _reactRouterDom = require("react-router-dom");
var _react = require("react");
var _mapChart = require("./MapChart");
var _mapChartDefault = parcelHelpers.interopDefault(_mapChart);
var _tabs = require("./Tabs");
var _tabsDefault = parcelHelpers.interopDefault(_tabs);
var _reactTooltip = require("react-tooltip");
var _reactTooltipDefault = parcelHelpers.interopDefault(_reactTooltip);
var _reactstrap = require("reactstrap");
var _s = $RefreshSig$();
function Home() {
    _s();
    const [content, setContent] = _react.useState("");
    const [buttonEnabled, enableButton] = _react.useState(false);
    const [currentCountry, setCurrentCountry] = _react.useState("");
    function showCard(name, populationEstimate) {
        enableButton(true);
        setCurrentCountry(name);
    }
    return(/*#__PURE__*/ _jsxDevRuntime.jsxDEV(_jsxDevRuntime.Fragment, {
        children: [
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV("main", {
                children: /*#__PURE__*/ _jsxDevRuntime.jsxDEV("p", {
                    children: "This is the home page of the website."
                }, void 0, false, {
                    fileName: "src/Home.js",
                    lineNumber: 29,
                    columnNumber: 17
                }, this)
            }, void 0, false, {
                fileName: "src/Home.js",
                lineNumber: 28,
                columnNumber: 13
            }, this),
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_tabsDefault.default, {
                children: [
                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV("div", {
                        label: "Interactive Maps",
                        children: [
                            buttonEnabled && /*#__PURE__*/ _jsxDevRuntime.jsxDEV(GraphCard, {
                                btnToggle: enableButton,
                                currentCountry: currentCountry
                            }, void 0, false, {
                                fileName: "src/Home.js",
                                lineNumber: 33,
                                columnNumber: 39
                            }, this),
                            !buttonEnabled && /*#__PURE__*/ _jsxDevRuntime.jsxDEV("div", {
                                children: [
                                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_mapChartDefault.default, {
                                        setTooltipContent: setContent,
                                        onClickCountry: showCard
                                    }, void 0, false, {
                                        fileName: "src/Home.js",
                                        lineNumber: 35,
                                        columnNumber: 25
                                    }, this),
                                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactTooltipDefault.default, {
                                        children: content
                                    }, void 0, false, {
                                        fileName: "src/Home.js",
                                        lineNumber: 36,
                                        columnNumber: 25
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "src/Home.js",
                                lineNumber: 34,
                                columnNumber: 40
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "src/Home.js",
                        lineNumber: 32,
                        columnNumber: 17
                    }, this),
                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV("div", {
                        label: "Directions of Use",
                        children: "Sample Text"
                    }, void 0, false, {
                        fileName: "src/Home.js",
                        lineNumber: 39,
                        columnNumber: 17
                    }, this),
                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV("div", {
                        label: "Glossary",
                        children: "Sample Text"
                    }, void 0, false, {
                        fileName: "src/Home.js",
                        lineNumber: 42,
                        columnNumber: 17
                    }, this)
                ]
            }, void 0, true, {
                fileName: "src/Home.js",
                lineNumber: 31,
                columnNumber: 13
            }, this)
        ]
    }, void 0, true));
}
_s(Home, "pzCHDU9sceEsm8oxpK5K5beSmuI=");
_c = Home;
function GraphCard(props) {
    let currentCountry = props.currentCountry;
    function disableButton() {
        props.btnToggle(false);
    }
    return(/*#__PURE__*/ _jsxDevRuntime.jsxDEV("div", {
        style: {
            display: 'block',
            width: "1000px",
            padding: 30
        },
        children: [
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV("link", {
                rel: "stylesheet",
                href: "https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css",
                integrity: "sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4",
                crossorigin: "anonymous"
            }, void 0, false, {
                fileName: "src/Home.js",
                lineNumber: 61,
                columnNumber: 13
            }, this),
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactstrap.Card, {
                children: [
                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactstrap.CardImg, {
                        width: "50px",
                        height: "50px",
                        src: "https://media.geeksforgeeks.org/wp-content/uploads/20210425000233/test-300x297.png",
                        alt: "GFG Logo"
                    }, void 0, false, {
                        fileName: "src/Home.js",
                        lineNumber: 65,
                        columnNumber: 17
                    }, this),
                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactstrap.CardBody, {
                        children: [
                            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactstrap.CardTitle, {
                                tag: "h5",
                                children: currentCountry
                            }, void 0, false, {
                                fileName: "src/Home.js",
                                lineNumber: 71,
                                columnNumber: 21
                            }, this),
                            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactstrap.CardText, {
                                children: "Sample Card Text to display!"
                            }, void 0, false, {
                                fileName: "src/Home.js",
                                lineNumber: 72,
                                columnNumber: 21
                            }, this),
                            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactstrap.Button, {
                                onClick: disableButton,
                                children: "Back"
                            }, void 0, false, {
                                fileName: "src/Home.js",
                                lineNumber: 73,
                                columnNumber: 21
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "src/Home.js",
                        lineNumber: 70,
                        columnNumber: 17
                    }, this)
                ]
            }, void 0, true, {
                fileName: "src/Home.js",
                lineNumber: 64,
                columnNumber: 13
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/Home.js",
        lineNumber: 58,
        columnNumber: 9
    }, this));
}
_c1 = GraphCard;
exports.default = Home;
var _c, _c1;
$RefreshReg$(_c, "Home");
$RefreshReg$(_c1, "GraphCard");

  $parcel$ReactRefreshHelpers$dec9.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"3jZUD","react-router-dom":"16kZP","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"9pz13","react":"4mchR","./MapChart":"6gTEY","react-tooltip":"g9bhJ","reactstrap":"apysV","./Tabs":"jhIbL"}],"9pz13":[function(require,module,exports) {
"use strict";
var Refresh = require('react-refresh/runtime');
function debounce(func, delay) {
    var args1;
    var timeout = undefined;
    return function(args) {
        clearTimeout(timeout);
        timeout = setTimeout(function() {
            timeout = undefined;
            func.call(null, args);
        }, delay);
    };
}
var enqueueUpdate = debounce(function() {
    Refresh.performReactRefresh();
}, 30); // Everthing below is either adapted or copied from
// https://github.com/facebook/metro/blob/61de16bd1edd7e738dd0311c89555a644023ab2d/packages/metro/src/lib/polyfills/require.js
// MIT License - Copyright (c) Facebook, Inc. and its affiliates.
module.exports.prelude = function(module) {
    window.$RefreshReg$ = function(type, id) {
        Refresh.register(type, module.id + ' ' + id);
    };
    window.$RefreshSig$ = Refresh.createSignatureFunctionForTransform;
};
module.exports.postlude = function(module) {
    if (isReactRefreshBoundary(module.exports)) {
        registerExportsForReactRefresh(module);
        if (module.hot) {
            module.hot.dispose(function(data) {
                if (Refresh.hasUnrecoverableErrors()) window.location.reload();
                data.prevExports = module.exports;
            });
            module.hot.accept(function(getParents) {
                var prevExports = module.hot.data.prevExports;
                var nextExports = module.exports; // Since we just executed the code for it, it's possible
                // that the new exports make it ineligible for being a boundary.
                var isNoLongerABoundary = !isReactRefreshBoundary(nextExports); // It can also become ineligible if its exports are incompatible
                // with the previous exports.
                // For example, if you add/remove/change exports, we'll want
                // to re-execute the importing modules, and force those components
                // to re-render. Similarly, if you convert a class component
                // to a function, we want to invalidate the boundary.
                var didInvalidate = shouldInvalidateReactRefreshBoundary(prevExports, nextExports);
                if (isNoLongerABoundary || didInvalidate) {
                    // We'll be conservative. The only case in which we won't do a full
                    // reload is if all parent modules are also refresh boundaries.
                    // In that case we'll add them to the current queue.
                    var parents = getParents();
                    if (parents.length === 0) {
                        // Looks like we bubbled to the root. Can't recover from that.
                        window.location.reload();
                        return;
                    }
                    return parents;
                }
                enqueueUpdate();
            });
        }
    }
};
function isReactRefreshBoundary(exports) {
    if (Refresh.isLikelyComponentType(exports)) return true;
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    return false;
    var hasExports = false;
    var areAllExportsComponents = true;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        hasExports = true;
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) // Don't invoke getters for CJS as they may have side effects.
        return false;
        var exportValue = exports[key];
        if (!Refresh.isLikelyComponentType(exportValue)) areAllExportsComponents = false;
    }
    return hasExports && areAllExportsComponents;
}
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
    var prevSignature = getRefreshBoundarySignature(prevExports);
    var nextSignature = getRefreshBoundarySignature(nextExports);
    if (prevSignature.length !== nextSignature.length) return true;
    for(var i = 0; i < nextSignature.length; i++){
        if (prevSignature[i] !== nextSignature[i]) return true;
    }
    return false;
} // When this signature changes, it's unsafe to stop at this refresh boundary.
function getRefreshBoundarySignature(exports) {
    var signature = [];
    signature.push(Refresh.getFamilyByType(exports));
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return signature;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        signature.push(key);
        signature.push(Refresh.getFamilyByType(exportValue));
    }
    return signature;
}
function registerExportsForReactRefresh(module) {
    var exports = module.exports, id = module.id;
    Refresh.register(exports, id + ' %exports%');
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        Refresh.register(exportValue, id + ' %exports% ' + key);
    }
}

},{"react-refresh/runtime":"aeH4U"}],"6gTEY":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$bffe = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$bffe.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactSimpleMaps = require("react-simple-maps");
const geoUrl = //"./datafiles/world-110m.json"
"https://gist.githubusercontent.com/ramirostUW/9987310d661de632f81589189a257335/raw/ee03f2dcf4fb947683a63480bfd3b2d72d1d2557/gistfile1.txt";
const rounded = (num)=>{
    if (num > 1000000000) return Math.round(num / 100000000) / 10 + "Bn";
    else if (num > 1000000) return Math.round(num / 100000) / 10 + "M";
    else return Math.round(num / 100) / 10 + "K";
};
const MapChart = (props)=>{
    let setTooltipContent = props.setTooltipContent;
    let onClickCountry = props.onClickCountry;
    //{ setTooltipContent }
    return(/*#__PURE__*/ _jsxDevRuntime.jsxDEV(_jsxDevRuntime.Fragment, {
        children: /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactSimpleMaps.ComposableMap, {
            "data-tip": "",
            projectionConfig: {
                scale: 200
            },
            children: /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactSimpleMaps.Geographies, {
                geography: geoUrl,
                children: ({ geographies  })=>geographies.map((geo)=>/*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactSimpleMaps.Geography, {
                            geography: geo,
                            onClick: ()=>{
                                const { NAME , POP_EST  } = geo.properties;
                                onClickCountry(NAME, POP_EST);
                            //setTooltipContent(`${NAME} — ${rounded(POP_EST)}`);
                            },
                            onMouseEnter: ()=>{
                                const { NAME , POP_EST  } = geo.properties;
                                setTooltipContent(`${NAME} — ${rounded(POP_EST)}`);
                            },
                            onMouseLeave: ()=>{
                                setTooltipContent("");
                            },
                            style: {
                                default: {
                                    fill: "#D6D6DA",
                                    outline: "none"
                                },
                                hover: {
                                    fill: "#F53",
                                    outline: "none"
                                },
                                pressed: {
                                    fill: "#E42",
                                    outline: "none"
                                }
                            }
                        }, geo.rsmKey, false, {
                            fileName: "src/MapChart.js",
                            lineNumber: 33,
                            columnNumber: 15
                        }, undefined)
                    )
            }, void 0, false, {
                fileName: "src/MapChart.js",
                lineNumber: 30,
                columnNumber: 9
            }, undefined)
        }, void 0, false, {
            fileName: "src/MapChart.js",
            lineNumber: 29,
            columnNumber: 7
        }, undefined)
    }, void 0, false));
};
_c = MapChart;
exports.default = /*#__PURE__*/ _c1 = _react.memo(MapChart);
var _c, _c1;
$RefreshReg$(_c, "MapChart");
$RefreshReg$(_c1, "%default%");

  $parcel$ReactRefreshHelpers$bffe.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"3jZUD","react":"4mchR","react-simple-maps":"kFZBo","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"9pz13"}],"kFZBo":[function(require,module,exports) {
!function(e, o) {
    "object" == typeof exports && "undefined" != typeof module ? o(exports, require("react"), require("prop-types"), require("d3-geo"), require("topojson-client"), require("d3-zoom"), require("d3-selection")) : "function" == typeof define && define.amd ? define([
        "exports",
        "react",
        "prop-types",
        "d3-geo",
        "topojson-client",
        "d3-zoom",
        "d3-selection"
    ], o) : o((e = e || self).reactSimpleMaps = e.reactSimpleMaps || {
    }, e.React, e.PropTypes, e.d3, e.topojson, e.d3, e.d3);
}(this, function(e1, o1, t1, r1, n1, a1, s1) {
    "use strict";
    var i1 = "default" in o1 ? o1.default : o1;
    t1 = t1 && Object.prototype.hasOwnProperty.call(t1, "default") ? t1.default : t1;
    var c1 = Object.assign || function(e) {
        for(var o = 1; o < arguments.length; o++){
            var t = arguments[o];
            for(var r in t)Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
        }
        return e;
    }, u1 = function(e, o) {
        var t = {
        };
        for(var r in e)o.indexOf(r) >= 0 || Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return t;
    }, l1 = function(e2, o2) {
        if (Array.isArray(e2)) return e2;
        if (Symbol.iterator in Object(e2)) return (function(e, o) {
            var t = [], r = !0, n = !1, a = void 0;
            try {
                for(var s, i = e[Symbol.iterator](); !(r = (s = i.next()).done) && (t.push(s.value), !o || t.length !== o); r = !0);
            } catch (e3) {
                n = !0, a = e3;
            } finally{
                try {
                    !r && i.return && i.return();
                } finally{
                    if (n) throw a;
                }
            }
            return t;
        })(e2, o2);
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }, p1 = r1.geoPath, f1 = u1(r1, [
        "geoPath"
    ]), d1 = o1.createContext(), m1 = function(e4) {
        var t2 = e4.width, r2 = e4.height, n2 = e4.projection, a2 = e4.projectionConfig, s2 = u1(e4, [
            "width",
            "height",
            "projection",
            "projectionConfig"
        ]), m = a2.center || [], h = l1(m, 2), v = h[0], g = h[1], y = a2.rotate || [], M = l1(y, 3), b = M[0], E = M[1], j = M[2], k = a2.parallels || [], x = l1(k, 2), N = x[0], w = x[1], C = a2.scale || null, O = o1.useMemo(function() {
            return (function(e5) {
                var o = e5.projectionConfig, t = void 0 === o ? {
                } : o, r = e5.projection, n = void 0 === r ? "geoEqualEarth" : r, a = e5.width, s = void 0 === a ? 800 : a, i = e5.height, c = void 0 === i ? 600 : i;
                if ("function" == typeof n) return n;
                var u = f1[n]().translate([
                    s / 2,
                    c / 2
                ]);
                return [
                    u.center ? "center" : null,
                    u.rotate ? "rotate" : null,
                    u.scale ? "scale" : null,
                    u.parallels ? "parallels" : null
                ].forEach(function(e) {
                    e && (u = u[e](t[e] || u[e]()));
                }), u;
            })({
                projectionConfig: {
                    center: v || 0 === v || g || 0 === g ? [
                        v,
                        g
                    ] : null,
                    rotate: b || 0 === b || E || 0 === E ? [
                        b,
                        E,
                        j
                    ] : null,
                    parallels: N || 0 === N || w || 0 === w ? [
                        N,
                        w
                    ] : null,
                    scale: C
                },
                projection: n2,
                width: t2,
                height: r2
            });
        }, [
            t2,
            r2,
            n2,
            v,
            g,
            b,
            E,
            j,
            N,
            w,
            C
        ]), T = o1.useCallback(O, [
            O
        ]), S = o1.useMemo(function() {
            return {
                width: t2,
                height: r2,
                projection: T,
                path: p1().projection(T)
            };
        }, [
            t2,
            r2,
            T
        ]);
        return i1.createElement(d1.Provider, c1({
            value: S
        }, s2));
    };
    m1.propTypes = {
        width: t1.number,
        height: t1.number,
        projection: t1.oneOfType([
            t1.string,
            t1.func
        ]),
        projectionConfig: t1.object
    };
    var h1 = function(e) {
        var o = e.width, t = void 0 === o ? 800 : o, r = e.height, n = void 0 === r ? 600 : r, a = e.projection, s = void 0 === a ? "geoEqualEarth" : a, l = e.projectionConfig, p = void 0 === l ? {
        } : l, f = e.className, d = void 0 === f ? "" : f, h = u1(e, [
            "width",
            "height",
            "projection",
            "projectionConfig",
            "className"
        ]);
        return i1.createElement(m1, {
            width: t,
            height: n,
            projection: s,
            projectionConfig: p
        }, i1.createElement("svg", c1({
            viewBox: "0 0 " + t + " " + n,
            className: "rsm-svg " + d
        }, h)));
    };
    function v1(e, o, t) {
        var r = (e * t.k - e) / 2, n = (o * t.k - o) / 2;
        return [
            e / 2 - (r + t.x) / t.k,
            o / 2 - (n + t.y) / t.k
        ];
    }
    function g1(e, o) {
        if (!("Topology" === e.type)) return o ? o(e.features || e) : e.features || e;
        var t = n1.feature(e, e.objects[Object.keys(e.objects)[0]]).features;
        return o ? o(t) : t;
    }
    function y1(e6) {
        return "Topology" === e6.type ? {
            outline: n1.mesh(e6, e6.objects[Object.keys(e6.objects)[0]], function(e, o) {
                return e === o;
            }),
            borders: n1.mesh(e6, e6.objects[Object.keys(e6.objects)[0]], function(e, o) {
                return e !== o;
            })
        } : null;
    }
    function M1(e7, o) {
        return e7 ? e7.map(function(e, t) {
            return c1({
            }, e, {
                rsmKey: "geo-" + t,
                svgPath: o(e)
            });
        }) : [];
    }
    function b1(e8) {
        var t3 = e8.geography, r = e8.parseGeographies, n = o1.useContext(d1).path, a = o1.useState({
        }), s = l1(a, 2), i = s[0], u = s[1];
        o1.useEffect(function() {
            var e9;
            "undefined" != typeof window && t3 && ("string" == typeof t3 ? (e9 = t3, fetch(e9).then(function(e) {
                if (!e.ok) throw Error(e.statusText);
                return e.json();
            }).catch(function(e) {
                console.log("There was a problem when fetching the data: ", e);
            })).then(function(e) {
                e && u({
                    geographies: g1(e, r),
                    mesh: y1(e)
                });
            }) : u({
                geographies: g1(t3, r),
                mesh: y1(t3)
            }));
        }, [
            t3,
            r
        ]);
        var p = o1.useMemo(function() {
            var e10 = i.mesh || {
            }, o3 = function(e, o, t) {
                return e && o ? {
                    outline: c1({
                    }, e, {
                        rsmKey: "outline",
                        svgPath: t(e)
                    }),
                    borders: c1({
                    }, o, {
                        rsmKey: "borders",
                        svgPath: t(o)
                    })
                } : {
                };
            }(e10.outline, e10.borders, n);
            return {
                geographies: M1(i.geographies, n),
                outline: o3.outline,
                borders: o3.borders
            };
        }, [
            i,
            n
        ]);
        return {
            geographies: p.geographies,
            outline: p.outline,
            borders: p.borders
        };
    }
    h1.propTypes = {
        width: t1.number,
        height: t1.number,
        projection: t1.oneOfType([
            t1.string,
            t1.func
        ]),
        projectionConfig: t1.object,
        className: t1.string
    };
    var E1 = function(e) {
        var t = e.geography, r = e.children, n = e.parseGeographies, a = e.className, s = void 0 === a ? "" : a, l = u1(e, [
            "geography",
            "children",
            "parseGeographies",
            "className"
        ]), p = o1.useContext(d1), f = p.path, m = p.projection, h = b1({
            geography: t,
            parseGeographies: n
        }), v = h.geographies, g = h.outline, y = h.borders;
        return i1.createElement("g", c1({
            className: "rsm-geographies " + s
        }, l), v && v.length > 0 && r({
            geographies: v,
            outline: g,
            borders: y,
            path: f,
            projection: m
        }));
    };
    E1.propTypes = {
        geography: t1.oneOfType([
            t1.string,
            t1.object,
            t1.array
        ]),
        children: t1.func,
        parseGeographies: t1.func,
        className: t1.string
    };
    var j1 = function(e11) {
        var t = e11.geography, r = e11.onMouseEnter, n = e11.onMouseLeave, a = e11.onMouseDown, s = e11.onMouseUp, p = e11.onFocus, f = e11.onBlur, d = e11.style, m = void 0 === d ? {
        } : d, h = e11.className, v = void 0 === h ? "" : h, g = u1(e11, [
            "geography",
            "onMouseEnter",
            "onMouseLeave",
            "onMouseDown",
            "onMouseUp",
            "onFocus",
            "onBlur",
            "style",
            "className"
        ]), y = o1.useState(!1), M = l1(y, 2), b = M[0], E = M[1], j = o1.useState(!1), k = l1(j, 2), x = k[0], N = k[1];
        return i1.createElement("path", c1({
            tabIndex: "0",
            className: "rsm-geography " + v,
            d: t.svgPath,
            onMouseEnter: function(e) {
                N(!0), r && r(e);
            },
            onMouseLeave: function(e) {
                N(!1), b && E(!1), n && n(e);
            },
            onFocus: function(e) {
                N(!0), p && p(e);
            },
            onBlur: function(e) {
                N(!1), b && E(!1), f && f(e);
            },
            onMouseDown: function(e) {
                E(!0), a && a(e);
            },
            onMouseUp: function(e) {
                E(!1), s && s(e);
            },
            style: m[b || x ? b ? "pressed" : "hover" : "default"]
        }, g));
    };
    j1.propTypes = {
        geography: t1.object,
        onMouseEnter: t1.func,
        onMouseLeave: t1.func,
        onMouseDown: t1.func,
        onMouseUp: t1.func,
        onFocus: t1.func,
        onBlur: t1.func,
        style: t1.object,
        className: t1.string
    };
    var k1 = o1.memo(j1), x1 = function(e) {
        var t = e.fill, n = void 0 === t ? "transparent" : t, a = e.stroke, s = void 0 === a ? "currentcolor" : a, l = e.step, p = void 0 === l ? [
            10,
            10
        ] : l, f = e.className, m = void 0 === f ? "" : f, h = u1(e, [
            "fill",
            "stroke",
            "step",
            "className"
        ]), v = o1.useContext(d1).path;
        return i1.createElement("path", c1({
            d: v(r1.geoGraticule().step(p)()),
            fill: n,
            stroke: s,
            className: "rsm-graticule " + m
        }, h));
    };
    x1.propTypes = {
        fill: t1.string,
        stroke: t1.string,
        step: t1.array,
        className: t1.string
    };
    var N1 = o1.memo(x1);
    function w1(e12) {
        var t4 = e12.center, r3 = e12.filterZoomEvent, n3 = e12.onMoveStart, i = e12.onMoveEnd, c = e12.onMove, u = e12.translateExtent, p = void 0 === u ? [
            [
                -1 / 0,
                -1 / 0
            ],
            [
                1 / 0,
                1 / 0
            ]
        ] : u, f = e12.scaleExtent, m = void 0 === f ? [
            1,
            8
        ] : f, h = e12.zoom, g = void 0 === h ? 1 : h, y = o1.useContext(d1), M = y.width, b = y.height, E = y.projection, j = l1(t4, 2), k = j[0], x = j[1], N = o1.useState({
            x: 0,
            y: 0,
            k: 1
        }), w = l1(N, 2), C = w[0], O = w[1], T = o1.useRef({
            x: 0,
            y: 0,
            k: 1
        }), S = o1.useRef(), P = o1.useRef(), z = o1.useRef(!1), Z = l1(p, 2), G = Z[0], L = Z[1], B = l1(G, 2), F = B[0], q = B[1], D = l1(L, 2), U = D[0], W = D[1], R = l1(m, 2), A = R[0], K = R[1];
        return o1.useEffect(function() {
            var e13 = s1.select(S.current);
            var o4 = a1.zoom().filter(function(e) {
                return r3 ? r3(e) : !!e && !e.ctrlKey && !e.button;
            }).scaleExtent([
                A,
                K
            ]).translateExtent([
                [
                    F,
                    q
                ],
                [
                    U,
                    W
                ]
            ]).on("start", function(e) {
                n3 && !z.current && n3({
                    coordinates: E.invert(v1(M, b, e.transform)),
                    zoom: e.transform.k
                }, e);
            }).on("zoom", function(e) {
                if (!z.current) {
                    var o = e.transform, t = e.sourceEvent;
                    O({
                        x: o.x,
                        y: o.y,
                        k: o.k,
                        dragging: t
                    }), c && c({
                        x: o.x,
                        y: o.y,
                        k: o.k,
                        dragging: t
                    }, e);
                }
            }).on("end", function(e) {
                if (z.current) z.current = !1;
                else {
                    var o = E.invert(v1(M, b, e.transform)), t = l1(o, 2), r = t[0], n = t[1];
                    T.current = {
                        x: r,
                        y: n,
                        k: e.transform.k
                    }, i && i({
                        coordinates: [
                            r,
                            n
                        ],
                        zoom: e.transform.k
                    }, e);
                }
            });
            P.current = o4, e13.call(o4);
        }, [
            M,
            b,
            F,
            q,
            U,
            W,
            A,
            K,
            E,
            n3,
            c,
            i,
            r3
        ]), o1.useEffect(function() {
            if (k !== T.current.x || x !== T.current.y || g !== T.current.k) {
                var e = E([
                    k,
                    x
                ]), o = e[0] * g, t = e[1] * g, r = s1.select(S.current);
                z.current = !0, r.call(P.current.transform, a1.zoomIdentity.translate(M / 2 - o, b / 2 - t).scale(g)), O({
                    x: M / 2 - o,
                    y: b / 2 - t,
                    k: g
                }), T.current = {
                    x: k,
                    y: x,
                    k: g
                };
            }
        }, [
            k,
            x,
            g,
            M,
            b,
            E
        ]), {
            mapRef: S,
            position: C,
            transformString: "translate(" + C.x + " " + C.y + ") scale(" + C.k + ")"
        };
    }
    var C1 = function(e) {
        var t = e.center, r = void 0 === t ? [
            0,
            0
        ] : t, n = e.zoom, a = void 0 === n ? 1 : n, s = e.minZoom, l = void 0 === s ? 1 : s, p = e.maxZoom, f = void 0 === p ? 8 : p, m = e.translateExtent, h = e.filterZoomEvent, v = e.onMoveStart, g = e.onMove, y = e.onMoveEnd, M = e.className, b = u1(e, [
            "center",
            "zoom",
            "minZoom",
            "maxZoom",
            "translateExtent",
            "filterZoomEvent",
            "onMoveStart",
            "onMove",
            "onMoveEnd",
            "className"
        ]), E = o1.useContext(d1), j = E.width, k = E.height, x = w1({
            center: r,
            filterZoomEvent: h,
            onMoveStart: v,
            onMove: g,
            onMoveEnd: y,
            scaleExtent: [
                l,
                f
            ],
            translateExtent: m,
            zoom: a
        }), N = x.mapRef, C = x.transformString;
        return i1.createElement("g", {
            ref: N
        }, i1.createElement("rect", {
            width: j,
            height: k,
            fill: "transparent"
        }), i1.createElement("g", c1({
            transform: C,
            className: "rsm-zoomable-group " + M
        }, b)));
    };
    C1.propTypes = {
        center: t1.array,
        zoom: t1.number,
        minZoom: t1.number,
        maxZoom: t1.number,
        translateExtent: t1.arrayOf(t1.array),
        onMoveStart: t1.func,
        onMove: t1.func,
        onMoveEnd: t1.func,
        className: t1.string
    };
    var O1 = function(e) {
        var t = e.id, r = void 0 === t ? "rsm-sphere" : t, n = e.fill, a = void 0 === n ? "transparent" : n, s = e.stroke, l = void 0 === s ? "currentcolor" : s, p = e.strokeWidth, f = void 0 === p ? 0.5 : p, m = e.className, h = void 0 === m ? "" : m, v = u1(e, [
            "id",
            "fill",
            "stroke",
            "strokeWidth",
            "className"
        ]), g = o1.useContext(d1).path, y = o1.useMemo(function() {
            return g({
                type: "Sphere"
            });
        }, [
            g
        ]);
        return i1.createElement(o1.Fragment, null, i1.createElement("defs", null, i1.createElement("clipPath", {
            id: r
        }, i1.createElement("path", {
            d: y
        }))), i1.createElement("path", c1({
            d: y,
            fill: a,
            stroke: l,
            strokeWidth: f,
            style: {
                pointerEvents: "none"
            },
            className: "rsm-sphere " + h
        }, v)));
    };
    O1.propTypes = {
        id: t1.string,
        fill: t1.string,
        stroke: t1.string,
        strokeWidth: t1.number,
        className: t1.string
    };
    var T1 = o1.memo(O1), S1 = function(e14) {
        var t = e14.coordinates, r = e14.children, n = e14.onMouseEnter, a = e14.onMouseLeave, s = e14.onMouseDown, p = e14.onMouseUp, f = e14.onFocus, m = e14.onBlur, h = e14.style, v = void 0 === h ? {
        } : h, g = e14.className, y = void 0 === g ? "" : g, M = u1(e14, [
            "coordinates",
            "children",
            "onMouseEnter",
            "onMouseLeave",
            "onMouseDown",
            "onMouseUp",
            "onFocus",
            "onBlur",
            "style",
            "className"
        ]), b = o1.useContext(d1).projection, E = o1.useState(!1), j = l1(E, 2), k = j[0], x = j[1], N = o1.useState(!1), w = l1(N, 2), C = w[0], O = w[1], T = b(t), S = l1(T, 2), P = S[0], z = S[1];
        return i1.createElement("g", c1({
            transform: "translate(" + P + ", " + z + ")",
            className: "rsm-marker " + y,
            onMouseEnter: function(e) {
                O(!0), n && n(e);
            },
            onMouseLeave: function(e) {
                O(!1), k && x(!1), a && a(e);
            },
            onFocus: function(e) {
                O(!0), f && f(e);
            },
            onBlur: function(e) {
                O(!1), k && x(!1), m && m(e);
            },
            onMouseDown: function(e) {
                x(!0), s && s(e);
            },
            onMouseUp: function(e) {
                x(!1), p && p(e);
            },
            style: v[k || C ? k ? "pressed" : "hover" : "default"]
        }, M), r);
    };
    S1.propTypes = {
        coordinates: t1.array,
        children: t1.oneOfType([
            t1.node,
            t1.arrayOf(t1.node)
        ]),
        onMouseEnter: t1.func,
        onMouseLeave: t1.func,
        onMouseDown: t1.func,
        onMouseUp: t1.func,
        onFocus: t1.func,
        onBlur: t1.func,
        style: t1.object,
        className: t1.string
    };
    var P1 = function(e) {
        var t = e.from, r = void 0 === t ? [
            0,
            0
        ] : t, n = e.to, a = void 0 === n ? [
            0,
            0
        ] : n, s = e.coordinates, l = e.stroke, p = void 0 === l ? "currentcolor" : l, f = e.strokeWidth, m = void 0 === f ? 3 : f, h = e.fill, v = void 0 === h ? "transparent" : h, g = e.className, y = void 0 === g ? "" : g, M = u1(e, [
            "from",
            "to",
            "coordinates",
            "stroke",
            "strokeWidth",
            "fill",
            "className"
        ]), b = o1.useContext(d1).path, E = {
            type: "LineString",
            coordinates: s || [
                r,
                a
            ]
        };
        return i1.createElement("path", c1({
            d: b(E),
            className: "rsm-line " + y,
            stroke: p,
            strokeWidth: m,
            fill: v
        }, M));
    };
    P1.propTypes = {
        from: t1.array,
        to: t1.array,
        coordinates: t1.array,
        stroke: t1.string,
        strokeWidth: t1.number,
        fill: t1.string,
        className: t1.string
    };
    var z1 = function(e15) {
        var t5 = e15.subject, r4 = e15.children, n4 = e15.connectorProps, a3 = e15.dx, s = void 0 === a3 ? 30 : a3, p = e15.dy, f = void 0 === p ? 30 : p, m = e15.curve, h = void 0 === m ? 0 : m, v = e15.className, g = void 0 === v ? "" : v, y = u1(e15, [
            "subject",
            "children",
            "connectorProps",
            "dx",
            "dy",
            "curve",
            "className"
        ]), M = (0, o1.useContext(d1).projection)(t5), b = l1(M, 2), E = b[0], j = b[1], k = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 30, o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30, t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0.5, r = Array.isArray(t) ? t : [
                t,
                t
            ], n = e / 2 * r[0], a = o / 2 * r[1];
            return "M0,0 Q" + (-e / 2 - n) + "," + (-o / 2 + a) + " " + -e + "," + -o;
        }(s, f, h);
        return i1.createElement("g", c1({
            transform: "translate(" + (E + s) + ", " + (j + f) + ")",
            className: "rsm-annotation " + g
        }, y), i1.createElement("path", c1({
            d: k,
            fill: "transparent",
            stroke: "#000"
        }, n4)), r4);
    };
    z1.propTypes = {
        subject: t1.array,
        children: t1.oneOfType([
            t1.node,
            t1.arrayOf(t1.node)
        ]),
        dx: t1.number,
        dy: t1.number,
        curve: t1.number,
        connectorProps: t1.object,
        className: t1.string
    }, e1.Annotation = z1, e1.ComposableMap = h1, e1.Geographies = E1, e1.Geography = k1, e1.Graticule = N1, e1.Line = P1, e1.MapContext = d1, e1.MapProvider = m1, e1.Marker = S1, e1.Sphere = T1, e1.ZoomableGroup = C1, e1.useGeographies = b1, e1.useZoomPan = w1, Object.defineProperty(e1, "__esModule", {
        value: !0
    });
});

},{"react":"4mchR","prop-types":"2bysO","d3-geo":"euFVP","topojson-client":"dArDf","d3-zoom":"7E00u","d3-selection":"hgWtk"}],"2bysO":[function(require,module,exports) {
var ReactIs = require('react-is');
// By explicitly using `prop-types` you are opting into new development behavior.
// http://fb.me/prop-types-in-prod
var throwOnDirectAccess = true;
module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);

},{"react-is":"5KyfE","./factoryWithTypeCheckers":"3o4sw"}],"5KyfE":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react-is.development.js');

},{"./cjs/react-is.development.js":"dWfYV"}],"dWfYV":[function(require,module,exports) {
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 60103;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 60106;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 60107;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 60108;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 60114;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 60109;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 60110; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 60111;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 60111;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 60112;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 60113;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 60120;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 60115;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 60116;
    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 60121;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 60117;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 60118;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 60119;
    function isValidElementType(type) {
        return typeof type === 'string' || typeof type === 'function' || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
    }
    function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_ASYNC_MODE_TYPE:
                        case REACT_CONCURRENT_MODE_TYPE:
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    } // AsyncMode is deprecated along with isAsyncMode
    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }
    function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"3o4sw":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactIs = require('react-is');
var assign = require('object-assign');
var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var has = require('./lib/has');
var checkPropTypes = require('./checkPropTypes');
var printWarning = function() {
};
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {
    }
};
function emptyFunctionThatReturnsNull() {
    return null;
}
module.exports = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
    /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */ function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') return iteratorFn;
    }
    /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */ var ANONYMOUS = '<<anonymous>>';
    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bigint: createPrimitiveTypeChecker('bigint'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
    };
    /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */ /*eslint-disable no-self-compare*/ function is(x, y) {
        // SameValue algorithm
        if (x === y) // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
        else // Step 6.a: NaN == NaN
        return x !== x && y !== y;
    }
    /*eslint-enable no-self-compare*/ /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */ function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === 'object' ? data : {
        };
        this.stack = '';
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
        var manualPropTypeCallCache = {
        };
        var manualPropTypeWarningCount = 0;
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                    // New behavior only for users of `prop-types` package
                    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                    err.name = 'Invariant Violation';
                    throw err;
                } else if (typeof console !== 'undefined') {
                    // Old behavior for people using React.PropTypes
                    var cacheKey = componentName + ':' + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                        printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
                        manualPropTypeCallCache[cacheKey] = true;
                        manualPropTypeWarningCount++;
                    }
                }
            }
            if (props[propName] == null) {
                if (isRequired) {
                    if (props[propName] === null) return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
                    return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
                }
                return null;
            } else return validate(props, propName, componentName, location, propFullName);
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
                    expectedType: expectedType
                });
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
            }
            for(var i = 0; i < propValue.length; i++){
                var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
            {
                if (arguments.length > 1) printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
                else printWarning('Invalid argument supplied to oneOf, expected an array.');
            }
            return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for(var i = 0; i < expectedValues.length; i++){
                if (is(propValue, expectedValues[i])) return null;
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === 'symbol') return String(value);
                return value;
            });
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
            for(var key in propValue)if (has(propValue, key)) {
                var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
            printWarning('Invalid argument supplied to oneOfType, expected an instance of array.');
            return emptyFunctionThatReturnsNull;
        }
        for(var i1 = 0; i1 < arrayOfTypeCheckers.length; i1++){
            var checker = arrayOfTypeCheckers[i1];
            if (typeof checker !== 'function') {
                printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + ' at index ' + i1 + '.');
                return emptyFunctionThatReturnsNull;
            }
        }
        function validate(props, propName, componentName, location, propFullName) {
            var expectedTypes = [];
            for(var i = 0; i < arrayOfTypeCheckers.length; i++){
                var checker = arrayOfTypeCheckers[i];
                var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                if (checkerResult == null) return null;
                if (checkerResult.data && has(checkerResult.data, 'expectedType')) expectedTypes.push(checkerResult.data.expectedType);
            }
            var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
    }
    function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            for(var key in shapeTypes){
                var checker = shapeTypes[key];
                if (typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            // We need to check all keys in case some are required but missing from props.
            var allKeys = assign({
            }, props[propName], shapeTypes);
            for(var key in allKeys){
                var checker = shapeTypes[key];
                if (has(shapeTypes, key) && typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                if (!checker) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
        switch(typeof propValue){
            case 'number':
            case 'string':
            case 'undefined':
                return true;
            case 'boolean':
                return !propValue;
            case 'object':
                if (Array.isArray(propValue)) return propValue.every(isNode);
                if (propValue === null || isValidElement(propValue)) return true;
                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) while(!(step = iterator.next()).done){
                        if (!isNode(step.value)) return false;
                    }
                    else // Iterator will provide entry [k,v] tuples rather than values.
                    while(!(step = iterator.next()).done){
                        var entry = step.value;
                        if (entry) {
                            if (!isNode(entry[1])) return false;
                        }
                    }
                } else return false;
                return true;
            default:
                return false;
        }
    }
    function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === 'symbol') return true;
        // falsy value can't be a Symbol
        if (!propValue) return false;
        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue['@@toStringTag'] === 'Symbol') return true;
        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === 'function' && propValue instanceof Symbol) return true;
        return false;
    }
    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) return 'array';
        if (propValue instanceof RegExp) // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return 'object';
        if (isSymbol(propType, propValue)) return 'symbol';
        return propType;
    }
    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) return '' + propValue;
        var propType = getPropType(propValue);
        if (propType === 'object') {
            if (propValue instanceof Date) return 'date';
            else if (propValue instanceof RegExp) return 'regexp';
        }
        return propType;
    }
    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch(type){
            case 'array':
            case 'object':
                return 'an ' + type;
            case 'boolean':
            case 'date':
            case 'regexp':
                return 'a ' + type;
            default:
                return type;
        }
    }
    // Returns class name of the object, if any.
    function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) return ANONYMOUS;
        return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

},{"react-is":"5KyfE","object-assign":"iUUFa","./lib/ReactPropTypesSecret":"bQ0BL","./lib/has":"fM5kX","./checkPropTypes":"aGXhS"}],"bQ0BL":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

},{}],"fM5kX":[function(require,module,exports) {
module.exports = Function.call.bind(Object.prototype.hasOwnProperty);

},{}],"aGXhS":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var printWarning = function() {
};
var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var loggedTypeFailures = {
};
var has = require('./lib/has');
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {
    }
};
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                err.name = 'Invariant Violation';
                throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
            error = ex;
        }
        if (error && !(error instanceof Error)) printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : '';
            printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
    }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */ checkPropTypes.resetWarningCache = function() {
    loggedTypeFailures = {
    };
};
module.exports = checkPropTypes;

},{"./lib/ReactPropTypesSecret":"bQ0BL","./lib/has":"fM5kX"}],"euFVP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "geoArea", ()=>_areaJsDefault.default
);
parcelHelpers.export(exports, "geoBounds", ()=>_boundsJsDefault.default
);
parcelHelpers.export(exports, "geoCentroid", ()=>_centroidJsDefault.default
);
parcelHelpers.export(exports, "geoCircle", ()=>_circleJsDefault.default
);
parcelHelpers.export(exports, "geoClipAntimeridian", ()=>_antimeridianJsDefault.default
);
parcelHelpers.export(exports, "geoClipCircle", ()=>_circleJsDefault1.default
);
parcelHelpers.export(exports, "geoClipExtent", ()=>_extentJsDefault.default
) // DEPRECATED! Use d3.geoIdentity().clipExtent(…).
;
parcelHelpers.export(exports, "geoClipRectangle", ()=>_rectangleJsDefault.default
);
parcelHelpers.export(exports, "geoContains", ()=>_containsJsDefault.default
);
parcelHelpers.export(exports, "geoDistance", ()=>_distanceJsDefault.default
);
parcelHelpers.export(exports, "geoGraticule", ()=>_graticuleJsDefault.default
);
parcelHelpers.export(exports, "geoGraticule10", ()=>_graticuleJs.graticule10
);
parcelHelpers.export(exports, "geoInterpolate", ()=>_interpolateJsDefault.default
);
parcelHelpers.export(exports, "geoLength", ()=>_lengthJsDefault.default
);
parcelHelpers.export(exports, "geoPath", ()=>_indexJsDefault.default
);
parcelHelpers.export(exports, "geoAlbers", ()=>_albersJsDefault.default
);
parcelHelpers.export(exports, "geoAlbersUsa", ()=>_albersUsaJsDefault.default
);
parcelHelpers.export(exports, "geoAzimuthalEqualArea", ()=>_azimuthalEqualAreaJsDefault.default
);
parcelHelpers.export(exports, "geoAzimuthalEqualAreaRaw", ()=>_azimuthalEqualAreaJs.azimuthalEqualAreaRaw
);
parcelHelpers.export(exports, "geoAzimuthalEquidistant", ()=>_azimuthalEquidistantJsDefault.default
);
parcelHelpers.export(exports, "geoAzimuthalEquidistantRaw", ()=>_azimuthalEquidistantJs.azimuthalEquidistantRaw
);
parcelHelpers.export(exports, "geoConicConformal", ()=>_conicConformalJsDefault.default
);
parcelHelpers.export(exports, "geoConicConformalRaw", ()=>_conicConformalJs.conicConformalRaw
);
parcelHelpers.export(exports, "geoConicEqualArea", ()=>_conicEqualAreaJsDefault.default
);
parcelHelpers.export(exports, "geoConicEqualAreaRaw", ()=>_conicEqualAreaJs.conicEqualAreaRaw
);
parcelHelpers.export(exports, "geoConicEquidistant", ()=>_conicEquidistantJsDefault.default
);
parcelHelpers.export(exports, "geoConicEquidistantRaw", ()=>_conicEquidistantJs.conicEquidistantRaw
);
parcelHelpers.export(exports, "geoEqualEarth", ()=>_equalEarthJsDefault.default
);
parcelHelpers.export(exports, "geoEqualEarthRaw", ()=>_equalEarthJs.equalEarthRaw
);
parcelHelpers.export(exports, "geoEquirectangular", ()=>_equirectangularJsDefault.default
);
parcelHelpers.export(exports, "geoEquirectangularRaw", ()=>_equirectangularJs.equirectangularRaw
);
parcelHelpers.export(exports, "geoGnomonic", ()=>_gnomonicJsDefault.default
);
parcelHelpers.export(exports, "geoGnomonicRaw", ()=>_gnomonicJs.gnomonicRaw
);
parcelHelpers.export(exports, "geoIdentity", ()=>_identityJsDefault.default
);
parcelHelpers.export(exports, "geoProjection", ()=>_indexJsDefault1.default
);
parcelHelpers.export(exports, "geoProjectionMutator", ()=>_indexJs1.projectionMutator
);
parcelHelpers.export(exports, "geoMercator", ()=>_mercatorJsDefault.default
);
parcelHelpers.export(exports, "geoMercatorRaw", ()=>_mercatorJs.mercatorRaw
);
parcelHelpers.export(exports, "geoNaturalEarth1", ()=>_naturalEarth1JsDefault.default
);
parcelHelpers.export(exports, "geoNaturalEarth1Raw", ()=>_naturalEarth1Js.naturalEarth1Raw
);
parcelHelpers.export(exports, "geoOrthographic", ()=>_orthographicJsDefault.default
);
parcelHelpers.export(exports, "geoOrthographicRaw", ()=>_orthographicJs.orthographicRaw
);
parcelHelpers.export(exports, "geoStereographic", ()=>_stereographicJsDefault.default
);
parcelHelpers.export(exports, "geoStereographicRaw", ()=>_stereographicJs.stereographicRaw
);
parcelHelpers.export(exports, "geoTransverseMercator", ()=>_transverseMercatorJsDefault.default
);
parcelHelpers.export(exports, "geoTransverseMercatorRaw", ()=>_transverseMercatorJs.transverseMercatorRaw
);
parcelHelpers.export(exports, "geoRotation", ()=>_rotationJsDefault.default
);
parcelHelpers.export(exports, "geoStream", ()=>_streamJsDefault.default
);
parcelHelpers.export(exports, "geoTransform", ()=>_transformJsDefault.default
);
var _areaJs = require("./area.js");
var _areaJsDefault = parcelHelpers.interopDefault(_areaJs);
var _boundsJs = require("./bounds.js");
var _boundsJsDefault = parcelHelpers.interopDefault(_boundsJs);
var _centroidJs = require("./centroid.js");
var _centroidJsDefault = parcelHelpers.interopDefault(_centroidJs);
var _circleJs = require("./circle.js");
var _circleJsDefault = parcelHelpers.interopDefault(_circleJs);
var _antimeridianJs = require("./clip/antimeridian.js");
var _antimeridianJsDefault = parcelHelpers.interopDefault(_antimeridianJs);
var _circleJs1 = require("./clip/circle.js");
var _circleJsDefault1 = parcelHelpers.interopDefault(_circleJs1);
var _extentJs = require("./clip/extent.js");
var _extentJsDefault = parcelHelpers.interopDefault(_extentJs);
var _rectangleJs = require("./clip/rectangle.js");
var _rectangleJsDefault = parcelHelpers.interopDefault(_rectangleJs);
var _containsJs = require("./contains.js");
var _containsJsDefault = parcelHelpers.interopDefault(_containsJs);
var _distanceJs = require("./distance.js");
var _distanceJsDefault = parcelHelpers.interopDefault(_distanceJs);
var _graticuleJs = require("./graticule.js");
var _graticuleJsDefault = parcelHelpers.interopDefault(_graticuleJs);
var _interpolateJs = require("./interpolate.js");
var _interpolateJsDefault = parcelHelpers.interopDefault(_interpolateJs);
var _lengthJs = require("./length.js");
var _lengthJsDefault = parcelHelpers.interopDefault(_lengthJs);
var _indexJs = require("./path/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _albersJs = require("./projection/albers.js");
var _albersJsDefault = parcelHelpers.interopDefault(_albersJs);
var _albersUsaJs = require("./projection/albersUsa.js");
var _albersUsaJsDefault = parcelHelpers.interopDefault(_albersUsaJs);
var _azimuthalEqualAreaJs = require("./projection/azimuthalEqualArea.js");
var _azimuthalEqualAreaJsDefault = parcelHelpers.interopDefault(_azimuthalEqualAreaJs);
var _azimuthalEquidistantJs = require("./projection/azimuthalEquidistant.js");
var _azimuthalEquidistantJsDefault = parcelHelpers.interopDefault(_azimuthalEquidistantJs);
var _conicConformalJs = require("./projection/conicConformal.js");
var _conicConformalJsDefault = parcelHelpers.interopDefault(_conicConformalJs);
var _conicEqualAreaJs = require("./projection/conicEqualArea.js");
var _conicEqualAreaJsDefault = parcelHelpers.interopDefault(_conicEqualAreaJs);
var _conicEquidistantJs = require("./projection/conicEquidistant.js");
var _conicEquidistantJsDefault = parcelHelpers.interopDefault(_conicEquidistantJs);
var _equalEarthJs = require("./projection/equalEarth.js");
var _equalEarthJsDefault = parcelHelpers.interopDefault(_equalEarthJs);
var _equirectangularJs = require("./projection/equirectangular.js");
var _equirectangularJsDefault = parcelHelpers.interopDefault(_equirectangularJs);
var _gnomonicJs = require("./projection/gnomonic.js");
var _gnomonicJsDefault = parcelHelpers.interopDefault(_gnomonicJs);
var _identityJs = require("./projection/identity.js");
var _identityJsDefault = parcelHelpers.interopDefault(_identityJs);
var _indexJs1 = require("./projection/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _mercatorJs = require("./projection/mercator.js");
var _mercatorJsDefault = parcelHelpers.interopDefault(_mercatorJs);
var _naturalEarth1Js = require("./projection/naturalEarth1.js");
var _naturalEarth1JsDefault = parcelHelpers.interopDefault(_naturalEarth1Js);
var _orthographicJs = require("./projection/orthographic.js");
var _orthographicJsDefault = parcelHelpers.interopDefault(_orthographicJs);
var _stereographicJs = require("./projection/stereographic.js");
var _stereographicJsDefault = parcelHelpers.interopDefault(_stereographicJs);
var _transverseMercatorJs = require("./projection/transverseMercator.js");
var _transverseMercatorJsDefault = parcelHelpers.interopDefault(_transverseMercatorJs);
var _rotationJs = require("./rotation.js");
var _rotationJsDefault = parcelHelpers.interopDefault(_rotationJs);
var _streamJs = require("./stream.js");
var _streamJsDefault = parcelHelpers.interopDefault(_streamJs);
var _transformJs = require("./transform.js");
var _transformJsDefault = parcelHelpers.interopDefault(_transformJs);

},{"./area.js":"cBTzh","./bounds.js":"8IvkG","./centroid.js":"hDVEJ","./circle.js":"5kSQi","./clip/antimeridian.js":"5t4iH","./clip/circle.js":"iIbFI","./clip/extent.js":"g626F","./clip/rectangle.js":"2xswT","./contains.js":"eYBc9","./distance.js":"glEIa","./graticule.js":"71CK6","./interpolate.js":"9aGW3","./length.js":"9Miu7","./path/index.js":"k9P5v","./projection/albers.js":"3Xlta","./projection/albersUsa.js":"YtNMK","./projection/azimuthalEqualArea.js":"7HnSn","./projection/azimuthalEquidistant.js":"ggmAs","./projection/conicConformal.js":"qkL9e","./projection/conicEqualArea.js":"c9BXq","./projection/conicEquidistant.js":"i4E3R","./projection/equalEarth.js":"2iIrI","./projection/equirectangular.js":"6r5uk","./projection/gnomonic.js":"gz9Xc","./projection/identity.js":"ipPmW","./projection/index.js":"i24sF","./projection/mercator.js":"fE71g","./projection/naturalEarth1.js":"gQDpu","./projection/orthographic.js":"3Wbli","./projection/stereographic.js":"hIzPd","./projection/transverseMercator.js":"4SRkZ","./rotation.js":"54Lv8","./stream.js":"jck2Y","./transform.js":"feffG","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"cBTzh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "areaRingSum", ()=>areaRingSum
);
parcelHelpers.export(exports, "areaStream", ()=>areaStream
);
var _d3Array = require("d3-array");
var _mathJs = require("./math.js");
var _noopJs = require("./noop.js");
var _noopJsDefault = parcelHelpers.interopDefault(_noopJs);
var _streamJs = require("./stream.js");
var _streamJsDefault = parcelHelpers.interopDefault(_streamJs);
var areaRingSum = new _d3Array.Adder();
// hello?
var areaSum = new _d3Array.Adder(), lambda00, phi00, lambda0, cosPhi0, sinPhi0;
var areaStream = {
    point: _noopJsDefault.default,
    lineStart: _noopJsDefault.default,
    lineEnd: _noopJsDefault.default,
    polygonStart: function() {
        areaRingSum = new _d3Array.Adder();
        areaStream.lineStart = areaRingStart;
        areaStream.lineEnd = areaRingEnd;
    },
    polygonEnd: function() {
        var areaRing = +areaRingSum;
        areaSum.add(areaRing < 0 ? _mathJs.tau + areaRing : areaRing);
        this.lineStart = this.lineEnd = this.point = _noopJsDefault.default;
    },
    sphere: function() {
        areaSum.add(_mathJs.tau);
    }
};
function areaRingStart() {
    areaStream.point = areaPointFirst;
}
function areaRingEnd() {
    areaPoint(lambda00, phi00);
}
function areaPointFirst(lambda, phi) {
    areaStream.point = areaPoint;
    lambda00 = lambda, phi00 = phi;
    lambda *= _mathJs.radians, phi *= _mathJs.radians;
    lambda0 = lambda, cosPhi0 = _mathJs.cos(phi = phi / 2 + _mathJs.quarterPi), sinPhi0 = _mathJs.sin(phi);
}
function areaPoint(lambda, phi) {
    lambda *= _mathJs.radians, phi *= _mathJs.radians;
    phi = phi / 2 + _mathJs.quarterPi; // half the angular distance from south pole
    // Spherical excess E for a spherical triangle with vertices: south pole,
    // previous point, current point.  Uses a formula derived from Cagnoli’s
    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).
    var dLambda = lambda - lambda0, sdLambda = dLambda >= 0 ? 1 : -1, adLambda = sdLambda * dLambda, cosPhi = _mathJs.cos(phi), sinPhi = _mathJs.sin(phi), k = sinPhi0 * sinPhi, u = cosPhi0 * cosPhi + k * _mathJs.cos(adLambda), v = k * sdLambda * _mathJs.sin(adLambda);
    areaRingSum.add(_mathJs.atan2(v, u));
    // Advance the previous points.
    lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}
exports.default = function(object) {
    areaSum = new _d3Array.Adder();
    _streamJsDefault.default(object, areaStream);
    return areaSum * 2;
};

},{"d3-array":"dclxS","./math.js":"7JyYl","./noop.js":"a5Top","./stream.js":"jck2Y","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"dclxS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "bisect", ()=>_bisectJsDefault.default
);
parcelHelpers.export(exports, "bisectRight", ()=>_bisectJs.bisectRight
);
parcelHelpers.export(exports, "bisectLeft", ()=>_bisectJs.bisectLeft
);
parcelHelpers.export(exports, "bisectCenter", ()=>_bisectJs.bisectCenter
);
parcelHelpers.export(exports, "ascending", ()=>_ascendingJsDefault.default
);
parcelHelpers.export(exports, "bisector", ()=>_bisectorJsDefault.default
);
parcelHelpers.export(exports, "count", ()=>_countJsDefault.default
);
parcelHelpers.export(exports, "cross", ()=>_crossJsDefault.default
);
parcelHelpers.export(exports, "cumsum", ()=>_cumsumJsDefault.default
);
parcelHelpers.export(exports, "descending", ()=>_descendingJsDefault.default
);
parcelHelpers.export(exports, "deviation", ()=>_deviationJsDefault.default
);
parcelHelpers.export(exports, "extent", ()=>_extentJsDefault.default
);
parcelHelpers.export(exports, "Adder", ()=>_fsumJs.Adder
);
parcelHelpers.export(exports, "fsum", ()=>_fsumJs.fsum
);
parcelHelpers.export(exports, "fcumsum", ()=>_fsumJs.fcumsum
);
parcelHelpers.export(exports, "group", ()=>_groupJsDefault.default
);
parcelHelpers.export(exports, "groups", ()=>_groupJs.groups
);
parcelHelpers.export(exports, "index", ()=>_groupJs.index
);
parcelHelpers.export(exports, "indexes", ()=>_groupJs.indexes
);
parcelHelpers.export(exports, "rollup", ()=>_groupJs.rollup
);
parcelHelpers.export(exports, "rollups", ()=>_groupJs.rollups
);
parcelHelpers.export(exports, "groupSort", ()=>_groupSortJsDefault.default
);
parcelHelpers.export(exports, "bin", ()=>_binJsDefault.default
) // Deprecated; use bin.
;
parcelHelpers.export(exports, "histogram", ()=>_binJsDefault.default
);
parcelHelpers.export(exports, "thresholdFreedmanDiaconis", ()=>_freedmanDiaconisJsDefault.default
);
parcelHelpers.export(exports, "thresholdScott", ()=>_scottJsDefault.default
);
parcelHelpers.export(exports, "thresholdSturges", ()=>_sturgesJsDefault.default
);
parcelHelpers.export(exports, "max", ()=>_maxJsDefault.default
);
parcelHelpers.export(exports, "maxIndex", ()=>_maxIndexJsDefault.default
);
parcelHelpers.export(exports, "mean", ()=>_meanJsDefault.default
);
parcelHelpers.export(exports, "median", ()=>_medianJsDefault.default
);
parcelHelpers.export(exports, "merge", ()=>_mergeJsDefault.default
);
parcelHelpers.export(exports, "min", ()=>_minJsDefault.default
);
parcelHelpers.export(exports, "minIndex", ()=>_minIndexJsDefault.default
);
parcelHelpers.export(exports, "nice", ()=>_niceJsDefault.default
);
parcelHelpers.export(exports, "pairs", ()=>_pairsJsDefault.default
);
parcelHelpers.export(exports, "permute", ()=>_permuteJsDefault.default
);
parcelHelpers.export(exports, "quantile", ()=>_quantileJsDefault.default
);
parcelHelpers.export(exports, "quantileSorted", ()=>_quantileJs.quantileSorted
);
parcelHelpers.export(exports, "quickselect", ()=>_quickselectJsDefault.default
);
parcelHelpers.export(exports, "range", ()=>_rangeJsDefault.default
);
parcelHelpers.export(exports, "least", ()=>_leastJsDefault.default
);
parcelHelpers.export(exports, "leastIndex", ()=>_leastIndexJsDefault.default
);
parcelHelpers.export(exports, "greatest", ()=>_greatestJsDefault.default
);
parcelHelpers.export(exports, "greatestIndex", ()=>_greatestIndexJsDefault.default
);
parcelHelpers.export(exports, "scan", ()=>_scanJsDefault.default
) // Deprecated; use leastIndex.
;
parcelHelpers.export(exports, "shuffle", ()=>_shuffleJsDefault.default
);
parcelHelpers.export(exports, "shuffler", ()=>_shuffleJs.shuffler
);
parcelHelpers.export(exports, "sum", ()=>_sumJsDefault.default
);
parcelHelpers.export(exports, "ticks", ()=>_ticksJsDefault.default
);
parcelHelpers.export(exports, "tickIncrement", ()=>_ticksJs.tickIncrement
);
parcelHelpers.export(exports, "tickStep", ()=>_ticksJs.tickStep
);
parcelHelpers.export(exports, "transpose", ()=>_transposeJsDefault.default
);
parcelHelpers.export(exports, "variance", ()=>_varianceJsDefault.default
);
parcelHelpers.export(exports, "zip", ()=>_zipJsDefault.default
);
parcelHelpers.export(exports, "every", ()=>_everyJsDefault.default
);
parcelHelpers.export(exports, "some", ()=>_someJsDefault.default
);
parcelHelpers.export(exports, "filter", ()=>_filterJsDefault.default
);
parcelHelpers.export(exports, "map", ()=>_mapJsDefault.default
);
parcelHelpers.export(exports, "reduce", ()=>_reduceJsDefault.default
);
parcelHelpers.export(exports, "reverse", ()=>_reverseJsDefault.default
);
parcelHelpers.export(exports, "sort", ()=>_sortJsDefault.default
);
parcelHelpers.export(exports, "difference", ()=>_differenceJsDefault.default
);
parcelHelpers.export(exports, "disjoint", ()=>_disjointJsDefault.default
);
parcelHelpers.export(exports, "intersection", ()=>_intersectionJsDefault.default
);
parcelHelpers.export(exports, "subset", ()=>_subsetJsDefault.default
);
parcelHelpers.export(exports, "superset", ()=>_supersetJsDefault.default
);
parcelHelpers.export(exports, "union", ()=>_unionJsDefault.default
);
parcelHelpers.export(exports, "InternMap", ()=>_internmap.InternMap
);
parcelHelpers.export(exports, "InternSet", ()=>_internmap.InternSet
);
var _bisectJs = require("./bisect.js");
var _bisectJsDefault = parcelHelpers.interopDefault(_bisectJs);
var _ascendingJs = require("./ascending.js");
var _ascendingJsDefault = parcelHelpers.interopDefault(_ascendingJs);
var _bisectorJs = require("./bisector.js");
var _bisectorJsDefault = parcelHelpers.interopDefault(_bisectorJs);
var _countJs = require("./count.js");
var _countJsDefault = parcelHelpers.interopDefault(_countJs);
var _crossJs = require("./cross.js");
var _crossJsDefault = parcelHelpers.interopDefault(_crossJs);
var _cumsumJs = require("./cumsum.js");
var _cumsumJsDefault = parcelHelpers.interopDefault(_cumsumJs);
var _descendingJs = require("./descending.js");
var _descendingJsDefault = parcelHelpers.interopDefault(_descendingJs);
var _deviationJs = require("./deviation.js");
var _deviationJsDefault = parcelHelpers.interopDefault(_deviationJs);
var _extentJs = require("./extent.js");
var _extentJsDefault = parcelHelpers.interopDefault(_extentJs);
var _fsumJs = require("./fsum.js");
var _groupJs = require("./group.js");
var _groupJsDefault = parcelHelpers.interopDefault(_groupJs);
var _groupSortJs = require("./groupSort.js");
var _groupSortJsDefault = parcelHelpers.interopDefault(_groupSortJs);
var _binJs = require("./bin.js");
var _binJsDefault = parcelHelpers.interopDefault(_binJs);
var _freedmanDiaconisJs = require("./threshold/freedmanDiaconis.js");
var _freedmanDiaconisJsDefault = parcelHelpers.interopDefault(_freedmanDiaconisJs);
var _scottJs = require("./threshold/scott.js");
var _scottJsDefault = parcelHelpers.interopDefault(_scottJs);
var _sturgesJs = require("./threshold/sturges.js");
var _sturgesJsDefault = parcelHelpers.interopDefault(_sturgesJs);
var _maxJs = require("./max.js");
var _maxJsDefault = parcelHelpers.interopDefault(_maxJs);
var _maxIndexJs = require("./maxIndex.js");
var _maxIndexJsDefault = parcelHelpers.interopDefault(_maxIndexJs);
var _meanJs = require("./mean.js");
var _meanJsDefault = parcelHelpers.interopDefault(_meanJs);
var _medianJs = require("./median.js");
var _medianJsDefault = parcelHelpers.interopDefault(_medianJs);
var _mergeJs = require("./merge.js");
var _mergeJsDefault = parcelHelpers.interopDefault(_mergeJs);
var _minJs = require("./min.js");
var _minJsDefault = parcelHelpers.interopDefault(_minJs);
var _minIndexJs = require("./minIndex.js");
var _minIndexJsDefault = parcelHelpers.interopDefault(_minIndexJs);
var _niceJs = require("./nice.js");
var _niceJsDefault = parcelHelpers.interopDefault(_niceJs);
var _pairsJs = require("./pairs.js");
var _pairsJsDefault = parcelHelpers.interopDefault(_pairsJs);
var _permuteJs = require("./permute.js");
var _permuteJsDefault = parcelHelpers.interopDefault(_permuteJs);
var _quantileJs = require("./quantile.js");
var _quantileJsDefault = parcelHelpers.interopDefault(_quantileJs);
var _quickselectJs = require("./quickselect.js");
var _quickselectJsDefault = parcelHelpers.interopDefault(_quickselectJs);
var _rangeJs = require("./range.js");
var _rangeJsDefault = parcelHelpers.interopDefault(_rangeJs);
var _leastJs = require("./least.js");
var _leastJsDefault = parcelHelpers.interopDefault(_leastJs);
var _leastIndexJs = require("./leastIndex.js");
var _leastIndexJsDefault = parcelHelpers.interopDefault(_leastIndexJs);
var _greatestJs = require("./greatest.js");
var _greatestJsDefault = parcelHelpers.interopDefault(_greatestJs);
var _greatestIndexJs = require("./greatestIndex.js");
var _greatestIndexJsDefault = parcelHelpers.interopDefault(_greatestIndexJs);
var _scanJs = require("./scan.js");
var _scanJsDefault = parcelHelpers.interopDefault(_scanJs);
var _shuffleJs = require("./shuffle.js");
var _shuffleJsDefault = parcelHelpers.interopDefault(_shuffleJs);
var _sumJs = require("./sum.js");
var _sumJsDefault = parcelHelpers.interopDefault(_sumJs);
var _ticksJs = require("./ticks.js");
var _ticksJsDefault = parcelHelpers.interopDefault(_ticksJs);
var _transposeJs = require("./transpose.js");
var _transposeJsDefault = parcelHelpers.interopDefault(_transposeJs);
var _varianceJs = require("./variance.js");
var _varianceJsDefault = parcelHelpers.interopDefault(_varianceJs);
var _zipJs = require("./zip.js");
var _zipJsDefault = parcelHelpers.interopDefault(_zipJs);
var _everyJs = require("./every.js");
var _everyJsDefault = parcelHelpers.interopDefault(_everyJs);
var _someJs = require("./some.js");
var _someJsDefault = parcelHelpers.interopDefault(_someJs);
var _filterJs = require("./filter.js");
var _filterJsDefault = parcelHelpers.interopDefault(_filterJs);
var _mapJs = require("./map.js");
var _mapJsDefault = parcelHelpers.interopDefault(_mapJs);
var _reduceJs = require("./reduce.js");
var _reduceJsDefault = parcelHelpers.interopDefault(_reduceJs);
var _reverseJs = require("./reverse.js");
var _reverseJsDefault = parcelHelpers.interopDefault(_reverseJs);
var _sortJs = require("./sort.js");
var _sortJsDefault = parcelHelpers.interopDefault(_sortJs);
var _differenceJs = require("./difference.js");
var _differenceJsDefault = parcelHelpers.interopDefault(_differenceJs);
var _disjointJs = require("./disjoint.js");
var _disjointJsDefault = parcelHelpers.interopDefault(_disjointJs);
var _intersectionJs = require("./intersection.js");
var _intersectionJsDefault = parcelHelpers.interopDefault(_intersectionJs);
var _subsetJs = require("./subset.js");
var _subsetJsDefault = parcelHelpers.interopDefault(_subsetJs);
var _supersetJs = require("./superset.js");
var _supersetJsDefault = parcelHelpers.interopDefault(_supersetJs);
var _unionJs = require("./union.js");
var _unionJsDefault = parcelHelpers.interopDefault(_unionJs);
var _internmap = require("internmap");

},{"./bisect.js":false,"./ascending.js":false,"./bisector.js":false,"./count.js":false,"./cross.js":false,"./cumsum.js":false,"./descending.js":false,"./deviation.js":false,"./extent.js":false,"./fsum.js":"kNcPo","./group.js":false,"./groupSort.js":false,"./bin.js":false,"./threshold/freedmanDiaconis.js":false,"./threshold/scott.js":false,"./threshold/sturges.js":false,"./max.js":false,"./maxIndex.js":false,"./mean.js":false,"./median.js":false,"./merge.js":"lLqaS","./min.js":false,"./minIndex.js":false,"./nice.js":false,"./pairs.js":false,"./permute.js":false,"./quantile.js":false,"./quickselect.js":false,"./range.js":"aFuRJ","./least.js":false,"./leastIndex.js":false,"./greatest.js":false,"./greatestIndex.js":false,"./scan.js":false,"./shuffle.js":false,"./sum.js":false,"./ticks.js":false,"./transpose.js":false,"./variance.js":false,"./zip.js":false,"./every.js":false,"./some.js":false,"./filter.js":false,"./map.js":false,"./reduce.js":false,"./reverse.js":false,"./sort.js":false,"./difference.js":false,"./disjoint.js":false,"./intersection.js":false,"./subset.js":false,"./superset.js":false,"./union.js":false,"internmap":false,"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"kNcPo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423
parcelHelpers.export(exports, "Adder", ()=>Adder
);
parcelHelpers.export(exports, "fsum", ()=>fsum
);
parcelHelpers.export(exports, "fcumsum", ()=>fcumsum
);
class Adder {
    constructor(){
        this._partials = new Float64Array(32);
        this._n = 0;
    }
    add(x) {
        const p = this._partials;
        let i = 0;
        for(let j = 0; j < this._n && j < 32; j++){
            const y = p[j], hi = x + y, lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);
            if (lo) p[i++] = lo;
            x = hi;
        }
        p[i] = x;
        this._n = i + 1;
        return this;
    }
    valueOf() {
        const p = this._partials;
        let n = this._n, x, y, lo, hi = 0;
        if (n > 0) {
            hi = p[--n];
            while(n > 0){
                x = hi;
                y = p[--n];
                hi = x + y;
                lo = y - (hi - x);
                if (lo) break;
            }
            if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {
                y = lo * 2;
                x = hi + y;
                if (y == x - hi) hi = x;
            }
        }
        return hi;
    }
}
function fsum(values, valueof) {
    const adder = new Adder();
    if (valueof === undefined) {
        for (let value of values)if (value = +value) adder.add(value);
    } else {
        let index = -1;
        for (let value of values)if (value = +valueof(value, ++index, values)) adder.add(value);
    }
    return +adder;
}
function fcumsum(values, valueof) {
    const adder = new Adder();
    let index = -1;
    return Float64Array.from(values, valueof === undefined ? (v)=>adder.add(+v || 0)
     : (v)=>adder.add(+valueof(v, ++index, values) || 0)
    );
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"lLqaS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function* flatten(arrays) {
    for (const array of arrays)yield* array;
}
function merge(arrays) {
    return Array.from(flatten(arrays));
}
exports.default = merge;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"aFuRJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(start, stop, step) {
    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
    var i = -1, n = Math.max(0, Math.ceil((stop - start) / step)) | 0, range = new Array(n);
    while(++i < n)range[i] = start + i * step;
    return range;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"7JyYl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "epsilon", ()=>epsilon
);
parcelHelpers.export(exports, "epsilon2", ()=>epsilon2
);
parcelHelpers.export(exports, "pi", ()=>pi
);
parcelHelpers.export(exports, "halfPi", ()=>halfPi
);
parcelHelpers.export(exports, "quarterPi", ()=>quarterPi
);
parcelHelpers.export(exports, "tau", ()=>tau
);
parcelHelpers.export(exports, "degrees", ()=>degrees
);
parcelHelpers.export(exports, "radians", ()=>radians
);
parcelHelpers.export(exports, "abs", ()=>abs
);
parcelHelpers.export(exports, "atan", ()=>atan
);
parcelHelpers.export(exports, "atan2", ()=>atan2
);
parcelHelpers.export(exports, "cos", ()=>cos
);
parcelHelpers.export(exports, "ceil", ()=>ceil
);
parcelHelpers.export(exports, "exp", ()=>exp
);
parcelHelpers.export(exports, "floor", ()=>floor
);
parcelHelpers.export(exports, "hypot", ()=>hypot
);
parcelHelpers.export(exports, "log", ()=>log
);
parcelHelpers.export(exports, "pow", ()=>pow
);
parcelHelpers.export(exports, "sin", ()=>sin
);
parcelHelpers.export(exports, "sign", ()=>sign
);
parcelHelpers.export(exports, "sqrt", ()=>sqrt
);
parcelHelpers.export(exports, "tan", ()=>tan
);
parcelHelpers.export(exports, "acos", ()=>acos
);
parcelHelpers.export(exports, "asin", ()=>asin
);
parcelHelpers.export(exports, "haversin", ()=>haversin
);
var epsilon = 0.000001;
var epsilon2 = 0.000000000001;
var pi = Math.PI;
var halfPi = pi / 2;
var quarterPi = pi / 4;
var tau = pi * 2;
var degrees = 180 / pi;
var radians = pi / 180;
var abs = Math.abs;
var atan = Math.atan;
var atan2 = Math.atan2;
var cos = Math.cos;
var ceil = Math.ceil;
var exp = Math.exp;
var floor = Math.floor;
var hypot = Math.hypot;
var log = Math.log;
var pow = Math.pow;
var sin = Math.sin;
var sign = Math.sign || function(x) {
    return x > 0 ? 1 : x < 0 ? -1 : 0;
};
var sqrt = Math.sqrt;
var tan = Math.tan;
function acos(x) {
    return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}
function asin(x) {
    return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}
function haversin(x) {
    return (x = sin(x / 2)) * x;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"a5Top":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function noop() {
}
exports.default = noop;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"jck2Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function streamGeometry(geometry, stream) {
    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) streamGeometryType[geometry.type](geometry, stream);
}
var streamObjectType = {
    Feature: function(object, stream) {
        streamGeometry(object.geometry, stream);
    },
    FeatureCollection: function(object, stream) {
        var features = object.features, i = -1, n = features.length;
        while(++i < n)streamGeometry(features[i].geometry, stream);
    }
};
var streamGeometryType = {
    Sphere: function(object, stream) {
        stream.sphere();
    },
    Point: function(object, stream) {
        object = object.coordinates;
        stream.point(object[0], object[1], object[2]);
    },
    MultiPoint: function(object, stream) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while(++i < n)object = coordinates[i], stream.point(object[0], object[1], object[2]);
    },
    LineString: function(object, stream) {
        streamLine(object.coordinates, stream, 0);
    },
    MultiLineString: function(object, stream) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while(++i < n)streamLine(coordinates[i], stream, 0);
    },
    Polygon: function(object, stream) {
        streamPolygon(object.coordinates, stream);
    },
    MultiPolygon: function(object, stream) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while(++i < n)streamPolygon(coordinates[i], stream);
    },
    GeometryCollection: function(object, stream) {
        var geometries = object.geometries, i = -1, n = geometries.length;
        while(++i < n)streamGeometry(geometries[i], stream);
    }
};
function streamLine(coordinates, stream, closed) {
    var i = -1, n = coordinates.length - closed, coordinate;
    stream.lineStart();
    while(++i < n)coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
    stream.lineEnd();
}
function streamPolygon(coordinates, stream) {
    var i = -1, n = coordinates.length;
    stream.polygonStart();
    while(++i < n)streamLine(coordinates[i], stream, 1);
    stream.polygonEnd();
}
exports.default = function(object, stream) {
    if (object && streamObjectType.hasOwnProperty(object.type)) streamObjectType[object.type](object, stream);
    else streamGeometry(object, stream);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"8IvkG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Array = require("d3-array");
var _areaJs = require("./area.js");
var _cartesianJs = require("./cartesian.js");
var _mathJs = require("./math.js");
var _streamJs = require("./stream.js");
var _streamJsDefault = parcelHelpers.interopDefault(_streamJs);
var lambda0, phi0, lambda1, phi1, lambda2, lambda00, phi00, p0, deltaSum, ranges, range;
var boundsStream = {
    point: boundsPoint,
    lineStart: boundsLineStart,
    lineEnd: boundsLineEnd,
    polygonStart: function() {
        boundsStream.point = boundsRingPoint;
        boundsStream.lineStart = boundsRingStart;
        boundsStream.lineEnd = boundsRingEnd;
        deltaSum = new _d3Array.Adder();
        _areaJs.areaStream.polygonStart();
    },
    polygonEnd: function() {
        _areaJs.areaStream.polygonEnd();
        boundsStream.point = boundsPoint;
        boundsStream.lineStart = boundsLineStart;
        boundsStream.lineEnd = boundsLineEnd;
        if (_areaJs.areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
        else if (deltaSum > _mathJs.epsilon) phi1 = 90;
        else if (deltaSum < -_mathJs.epsilon) phi0 = -90;
        range[0] = lambda0, range[1] = lambda1;
    },
    sphere: function() {
        lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
    }
};
function boundsPoint(lambda, phi) {
    ranges.push(range = [
        lambda0 = lambda,
        lambda1 = lambda
    ]);
    if (phi < phi0) phi0 = phi;
    if (phi > phi1) phi1 = phi;
}
function linePoint(lambda, phi) {
    var p = _cartesianJs.cartesian([
        lambda * _mathJs.radians,
        phi * _mathJs.radians
    ]);
    if (p0) {
        var normal = _cartesianJs.cartesianCross(p0, p), equatorial = [
            normal[1],
            -normal[0],
            0
        ], inflection = _cartesianJs.cartesianCross(equatorial, normal);
        _cartesianJs.cartesianNormalizeInPlace(inflection);
        inflection = _cartesianJs.spherical(inflection);
        var delta = lambda - lambda2, sign = delta > 0 ? 1 : -1, lambdai = inflection[0] * _mathJs.degrees * sign, phii, antimeridian = _mathJs.abs(delta) > 180;
        if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
            phii = inflection[1] * _mathJs.degrees;
            if (phii > phi1) phi1 = phii;
        } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
            phii = -inflection[1] * _mathJs.degrees;
            if (phii < phi0) phi0 = phii;
        } else {
            if (phi < phi0) phi0 = phi;
            if (phi > phi1) phi1 = phi;
        }
        if (antimeridian) {
            if (lambda < lambda2) {
                if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
            } else if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        } else if (lambda1 >= lambda0) {
            if (lambda < lambda0) lambda0 = lambda;
            if (lambda > lambda1) lambda1 = lambda;
        } else {
            if (lambda > lambda2) {
                if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
            } else if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        }
    } else ranges.push(range = [
        lambda0 = lambda,
        lambda1 = lambda
    ]);
    if (phi < phi0) phi0 = phi;
    if (phi > phi1) phi1 = phi;
    p0 = p, lambda2 = lambda;
}
function boundsLineStart() {
    boundsStream.point = linePoint;
}
function boundsLineEnd() {
    range[0] = lambda0, range[1] = lambda1;
    boundsStream.point = boundsPoint;
    p0 = null;
}
function boundsRingPoint(lambda, phi) {
    if (p0) {
        var delta = lambda - lambda2;
        deltaSum.add(_mathJs.abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
    } else lambda00 = lambda, phi00 = phi;
    _areaJs.areaStream.point(lambda, phi);
    linePoint(lambda, phi);
}
function boundsRingStart() {
    _areaJs.areaStream.lineStart();
}
function boundsRingEnd() {
    boundsRingPoint(lambda00, phi00);
    _areaJs.areaStream.lineEnd();
    if (_mathJs.abs(deltaSum) > _mathJs.epsilon) lambda0 = -(lambda1 = 180);
    range[0] = lambda0, range[1] = lambda1;
    p0 = null;
}
// Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.
function angle(lambda01, lambda11) {
    return (lambda11 -= lambda01) < 0 ? lambda11 + 360 : lambda11;
}
function rangeCompare(a, b) {
    return a[0] - b[0];
}
function rangeContains(range1, x) {
    return range1[0] <= range1[1] ? range1[0] <= x && x <= range1[1] : x < range1[0] || range1[1] < x;
}
exports.default = function(feature) {
    var i, n, a, b, merged, deltaMax, delta;
    phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
    ranges = [];
    _streamJsDefault.default(feature, boundsStream);
    // First, sort ranges by their minimum longitudes.
    if (n = ranges.length) {
        ranges.sort(rangeCompare);
        // Then, merge any ranges that overlap.
        for(i = 1, a = ranges[0], merged = [
            a
        ]; i < n; ++i){
            b = ranges[i];
            if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
                if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
                if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
            } else merged.push(a = b);
        }
        // Finally, find the largest gap between the merged ranges.
        // The final bounding box will be the inverse of this gap.
        for(deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i){
            b = merged[i];
            if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
        }
    }
    ranges = range = null;
    return lambda0 === Infinity || phi0 === Infinity ? [
        [
            NaN,
            NaN
        ],
        [
            NaN,
            NaN
        ]
    ] : [
        [
            lambda0,
            phi0
        ],
        [
            lambda1,
            phi1
        ]
    ];
};

},{"d3-array":"dclxS","./area.js":"cBTzh","./cartesian.js":"evaJG","./math.js":"7JyYl","./stream.js":"jck2Y","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"evaJG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "spherical", ()=>spherical
);
parcelHelpers.export(exports, "cartesian", ()=>cartesian
);
parcelHelpers.export(exports, "cartesianDot", ()=>cartesianDot
);
parcelHelpers.export(exports, "cartesianCross", ()=>cartesianCross
);
// TODO return a
parcelHelpers.export(exports, "cartesianAddInPlace", ()=>cartesianAddInPlace
);
parcelHelpers.export(exports, "cartesianScale", ()=>cartesianScale
);
// TODO return d
parcelHelpers.export(exports, "cartesianNormalizeInPlace", ()=>cartesianNormalizeInPlace
);
var _mathJs = require("./math.js");
function spherical(cartesian1) {
    return [
        _mathJs.atan2(cartesian1[1], cartesian1[0]),
        _mathJs.asin(cartesian1[2])
    ];
}
function cartesian(spherical1) {
    var lambda = spherical1[0], phi = spherical1[1], cosPhi = _mathJs.cos(phi);
    return [
        cosPhi * _mathJs.cos(lambda),
        cosPhi * _mathJs.sin(lambda),
        _mathJs.sin(phi)
    ];
}
function cartesianDot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}
function cartesianCross(a, b) {
    return [
        a[1] * b[2] - a[2] * b[1],
        a[2] * b[0] - a[0] * b[2],
        a[0] * b[1] - a[1] * b[0]
    ];
}
function cartesianAddInPlace(a, b) {
    a[0] += b[0], a[1] += b[1], a[2] += b[2];
}
function cartesianScale(vector, k) {
    return [
        vector[0] * k,
        vector[1] * k,
        vector[2] * k
    ];
}
function cartesianNormalizeInPlace(d) {
    var l = _mathJs.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
    d[0] /= l, d[1] /= l, d[2] /= l;
}

},{"./math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hDVEJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Array = require("d3-array");
var _mathJs = require("./math.js");
var _noopJs = require("./noop.js");
var _noopJsDefault = parcelHelpers.interopDefault(_noopJs);
var _streamJs = require("./stream.js");
var _streamJsDefault = parcelHelpers.interopDefault(_streamJs);
var W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, x0, y0, z0; // previous point
var centroidStream = {
    sphere: _noopJsDefault.default,
    point: centroidPoint,
    lineStart: centroidLineStart,
    lineEnd: centroidLineEnd,
    polygonStart: function() {
        centroidStream.lineStart = centroidRingStart;
        centroidStream.lineEnd = centroidRingEnd;
    },
    polygonEnd: function() {
        centroidStream.lineStart = centroidLineStart;
        centroidStream.lineEnd = centroidLineEnd;
    }
};
// Arithmetic mean of Cartesian vectors.
function centroidPoint(lambda, phi) {
    lambda *= _mathJs.radians, phi *= _mathJs.radians;
    var cosPhi = _mathJs.cos(phi);
    centroidPointCartesian(cosPhi * _mathJs.cos(lambda), cosPhi * _mathJs.sin(lambda), _mathJs.sin(phi));
}
function centroidPointCartesian(x, y, z) {
    ++W0;
    X0 += (x - X0) / W0;
    Y0 += (y - Y0) / W0;
    Z0 += (z - Z0) / W0;
}
function centroidLineStart() {
    centroidStream.point = centroidLinePointFirst;
}
function centroidLinePointFirst(lambda, phi) {
    lambda *= _mathJs.radians, phi *= _mathJs.radians;
    var cosPhi = _mathJs.cos(phi);
    x0 = cosPhi * _mathJs.cos(lambda);
    y0 = cosPhi * _mathJs.sin(lambda);
    z0 = _mathJs.sin(phi);
    centroidStream.point = centroidLinePoint;
    centroidPointCartesian(x0, y0, z0);
}
function centroidLinePoint(lambda, phi) {
    lambda *= _mathJs.radians, phi *= _mathJs.radians;
    var cosPhi = _mathJs.cos(phi), x = cosPhi * _mathJs.cos(lambda), y = cosPhi * _mathJs.sin(lambda), z = _mathJs.sin(phi), w = _mathJs.atan2(_mathJs.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
    W1 += w;
    X1 += w * (x0 + (x0 = x));
    Y1 += w * (y0 + (y0 = y));
    Z1 += w * (z0 + (z0 = z));
    centroidPointCartesian(x0, y0, z0);
}
function centroidLineEnd() {
    centroidStream.point = centroidPoint;
}
// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).
function centroidRingStart() {
    centroidStream.point = centroidRingPointFirst;
}
function centroidRingEnd() {
    centroidRingPoint(lambda00, phi00);
    centroidStream.point = centroidPoint;
}
function centroidRingPointFirst(lambda, phi) {
    lambda00 = lambda, phi00 = phi;
    lambda *= _mathJs.radians, phi *= _mathJs.radians;
    centroidStream.point = centroidRingPoint;
    var cosPhi = _mathJs.cos(phi);
    x0 = cosPhi * _mathJs.cos(lambda);
    y0 = cosPhi * _mathJs.sin(lambda);
    z0 = _mathJs.sin(phi);
    centroidPointCartesian(x0, y0, z0);
}
function centroidRingPoint(lambda, phi) {
    lambda *= _mathJs.radians, phi *= _mathJs.radians;
    var cosPhi = _mathJs.cos(phi), x = cosPhi * _mathJs.cos(lambda), y = cosPhi * _mathJs.sin(lambda), z = _mathJs.sin(phi), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = _mathJs.hypot(cx, cy, cz), w = _mathJs.asin(m), v = m && -w / m; // area weight multiplier
    X2.add(v * cx);
    Y2.add(v * cy);
    Z2.add(v * cz);
    W1 += w;
    X1 += w * (x0 + (x0 = x));
    Y1 += w * (y0 + (y0 = y));
    Z1 += w * (z0 + (z0 = z));
    centroidPointCartesian(x0, y0, z0);
}
exports.default = function(object) {
    W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = 0;
    X2 = new _d3Array.Adder();
    Y2 = new _d3Array.Adder();
    Z2 = new _d3Array.Adder();
    _streamJsDefault.default(object, centroidStream);
    var x = +X2, y = +Y2, z = +Z2, m = _mathJs.hypot(x, y, z);
    // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.
    if (m < _mathJs.epsilon2) {
        x = X1, y = Y1, z = Z1;
        // If the feature has zero length, fall back to arithmetic mean of point vectors.
        if (W1 < _mathJs.epsilon) x = X0, y = Y0, z = Z0;
        m = _mathJs.hypot(x, y, z);
        // If the feature still has an undefined ccentroid, then return.
        if (m < _mathJs.epsilon2) return [
            NaN,
            NaN
        ];
    }
    return [
        _mathJs.atan2(y, x) * _mathJs.degrees,
        _mathJs.asin(z / m) * _mathJs.degrees
    ];
};

},{"d3-array":"dclxS","./math.js":"7JyYl","./noop.js":"a5Top","./stream.js":"jck2Y","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"5kSQi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Generates a circle centered at [0°, 0°], with a given radius and precision.
parcelHelpers.export(exports, "circleStream", ()=>circleStream
);
var _cartesianJs = require("./cartesian.js");
var _constantJs = require("./constant.js");
var _constantJsDefault = parcelHelpers.interopDefault(_constantJs);
var _mathJs = require("./math.js");
var _rotationJs = require("./rotation.js");
function circleStream(stream, radius, delta, direction, t0, t1) {
    if (!delta) return;
    var cosRadius = _mathJs.cos(radius), sinRadius = _mathJs.sin(radius), step = direction * delta;
    if (t0 == null) {
        t0 = radius + direction * _mathJs.tau;
        t1 = radius - step / 2;
    } else {
        t0 = circleRadius(cosRadius, t0);
        t1 = circleRadius(cosRadius, t1);
        if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * _mathJs.tau;
    }
    for(var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step){
        point = _cartesianJs.spherical([
            cosRadius,
            -sinRadius * _mathJs.cos(t),
            -sinRadius * _mathJs.sin(t)
        ]);
        stream.point(point[0], point[1]);
    }
}
// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
function circleRadius(cosRadius, point) {
    point = _cartesianJs.cartesian(point), point[0] -= cosRadius;
    _cartesianJs.cartesianNormalizeInPlace(point);
    var radius = _mathJs.acos(-point[1]);
    return ((-point[2] < 0 ? -radius : radius) + _mathJs.tau - _mathJs.epsilon) % _mathJs.tau;
}
exports.default = function() {
    var center = _constantJsDefault.default([
        0,
        0
    ]), radius = _constantJsDefault.default(90), precision = _constantJsDefault.default(6), ring, rotate, stream = {
        point: point
    };
    function point(x, y) {
        ring.push(x = rotate(x, y));
        x[0] *= _mathJs.degrees, x[1] *= _mathJs.degrees;
    }
    function circle() {
        var c = center.apply(this, arguments), r = radius.apply(this, arguments) * _mathJs.radians, p = precision.apply(this, arguments) * _mathJs.radians;
        ring = [];
        rotate = _rotationJs.rotateRadians(-c[0] * _mathJs.radians, -c[1] * _mathJs.radians, 0).invert;
        circleStream(stream, r, p, 1);
        c = {
            type: "Polygon",
            coordinates: [
                ring
            ]
        };
        ring = rotate = null;
        return c;
    }
    circle.center = function(_) {
        return arguments.length ? (center = typeof _ === "function" ? _ : _constantJsDefault.default([
            +_[0],
            +_[1]
        ]), circle) : center;
    };
    circle.radius = function(_) {
        return arguments.length ? (radius = typeof _ === "function" ? _ : _constantJsDefault.default(+_), circle) : radius;
    };
    circle.precision = function(_) {
        return arguments.length ? (precision = typeof _ === "function" ? _ : _constantJsDefault.default(+_), circle) : precision;
    };
    return circle;
};

},{"./cartesian.js":"evaJG","./constant.js":"1mMcT","./math.js":"7JyYl","./rotation.js":"54Lv8","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"1mMcT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(x) {
    return function() {
        return x;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"54Lv8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "rotateRadians", ()=>rotateRadians
);
var _composeJs = require("./compose.js");
var _composeJsDefault = parcelHelpers.interopDefault(_composeJs);
var _mathJs = require("./math.js");
function rotationIdentity(lambda, phi) {
    return [
        _mathJs.abs(lambda) > _mathJs.pi ? lambda + Math.round(-lambda / _mathJs.tau) * _mathJs.tau : lambda,
        phi
    ];
}
rotationIdentity.invert = rotationIdentity;
function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
    return (deltaLambda %= _mathJs.tau) ? deltaPhi || deltaGamma ? _composeJsDefault.default(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
}
function forwardRotationLambda(deltaLambda) {
    return function(lambda, phi) {
        return lambda += deltaLambda, [
            lambda > _mathJs.pi ? lambda - _mathJs.tau : lambda < -_mathJs.pi ? lambda + _mathJs.tau : lambda,
            phi
        ];
    };
}
function rotationLambda(deltaLambda) {
    var rotation = forwardRotationLambda(deltaLambda);
    rotation.invert = forwardRotationLambda(-deltaLambda);
    return rotation;
}
function rotationPhiGamma(deltaPhi, deltaGamma) {
    var cosDeltaPhi = _mathJs.cos(deltaPhi), sinDeltaPhi = _mathJs.sin(deltaPhi), cosDeltaGamma = _mathJs.cos(deltaGamma), sinDeltaGamma = _mathJs.sin(deltaGamma);
    function rotation(lambda, phi) {
        var cosPhi = _mathJs.cos(phi), x = _mathJs.cos(lambda) * cosPhi, y = _mathJs.sin(lambda) * cosPhi, z = _mathJs.sin(phi), k = z * cosDeltaPhi + x * sinDeltaPhi;
        return [
            _mathJs.atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),
            _mathJs.asin(k * cosDeltaGamma + y * sinDeltaGamma)
        ];
    }
    rotation.invert = function(lambda, phi) {
        var cosPhi = _mathJs.cos(phi), x = _mathJs.cos(lambda) * cosPhi, y = _mathJs.sin(lambda) * cosPhi, z = _mathJs.sin(phi), k = z * cosDeltaGamma - y * sinDeltaGamma;
        return [
            _mathJs.atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),
            _mathJs.asin(k * cosDeltaPhi - x * sinDeltaPhi)
        ];
    };
    return rotation;
}
exports.default = function(rotate) {
    rotate = rotateRadians(rotate[0] * _mathJs.radians, rotate[1] * _mathJs.radians, rotate.length > 2 ? rotate[2] * _mathJs.radians : 0);
    function forward(coordinates) {
        coordinates = rotate(coordinates[0] * _mathJs.radians, coordinates[1] * _mathJs.radians);
        return coordinates[0] *= _mathJs.degrees, coordinates[1] *= _mathJs.degrees, coordinates;
    }
    forward.invert = function(coordinates) {
        coordinates = rotate.invert(coordinates[0] * _mathJs.radians, coordinates[1] * _mathJs.radians);
        return coordinates[0] *= _mathJs.degrees, coordinates[1] *= _mathJs.degrees, coordinates;
    };
    return forward;
};

},{"./compose.js":"hx08x","./math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hx08x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(a, b) {
    function compose(x, y) {
        return x = a(x, y), b(x[0], x[1]);
    }
    if (a.invert && b.invert) compose.invert = function(x, y) {
        return x = b.invert(x, y), x && a.invert(x[0], x[1]);
    };
    return compose;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"5t4iH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _mathJs = require("../math.js");
exports.default = _indexJsDefault.default(function() {
    return true;
}, clipAntimeridianLine, clipAntimeridianInterpolate, [
    -_mathJs.pi,
    -_mathJs.halfPi
]);
// Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.
function clipAntimeridianLine(stream) {
    var lambda0 = NaN, phi0 = NaN, sign0 = NaN, clean; // no intersections
    return {
        lineStart: function() {
            stream.lineStart();
            clean = 1;
        },
        point: function(lambda1, phi1) {
            var sign1 = lambda1 > 0 ? _mathJs.pi : -_mathJs.pi, delta = _mathJs.abs(lambda1 - lambda0);
            if (_mathJs.abs(delta - _mathJs.pi) < _mathJs.epsilon) {
                stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _mathJs.halfPi : -_mathJs.halfPi);
                stream.point(sign0, phi0);
                stream.lineEnd();
                stream.lineStart();
                stream.point(sign1, phi0);
                stream.point(lambda1, phi0);
                clean = 0;
            } else if (sign0 !== sign1 && delta >= _mathJs.pi) {
                if (_mathJs.abs(lambda0 - sign0) < _mathJs.epsilon) lambda0 -= sign0 * _mathJs.epsilon; // handle degeneracies
                if (_mathJs.abs(lambda1 - sign1) < _mathJs.epsilon) lambda1 -= sign1 * _mathJs.epsilon;
                phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
                stream.point(sign0, phi0);
                stream.lineEnd();
                stream.lineStart();
                stream.point(sign1, phi0);
                clean = 0;
            }
            stream.point(lambda0 = lambda1, phi0 = phi1);
            sign0 = sign1;
        },
        lineEnd: function() {
            stream.lineEnd();
            lambda0 = phi0 = NaN;
        },
        clean: function() {
            return 2 - clean; // if intersections, rejoin first and last segments
        }
    };
}
function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
    var cosPhi0, cosPhi1, sinLambda0Lambda1 = _mathJs.sin(lambda0 - lambda1);
    return _mathJs.abs(sinLambda0Lambda1) > _mathJs.epsilon ? _mathJs.atan((_mathJs.sin(phi0) * (cosPhi1 = _mathJs.cos(phi1)) * _mathJs.sin(lambda1) - _mathJs.sin(phi1) * (cosPhi0 = _mathJs.cos(phi0)) * _mathJs.sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
}
function clipAntimeridianInterpolate(from, to, direction, stream) {
    var phi;
    if (from == null) {
        phi = direction * _mathJs.halfPi;
        stream.point(-_mathJs.pi, phi);
        stream.point(0, phi);
        stream.point(_mathJs.pi, phi);
        stream.point(_mathJs.pi, 0);
        stream.point(_mathJs.pi, -phi);
        stream.point(0, -phi);
        stream.point(-_mathJs.pi, -phi);
        stream.point(-_mathJs.pi, 0);
        stream.point(-_mathJs.pi, phi);
    } else if (_mathJs.abs(from[0] - to[0]) > _mathJs.epsilon) {
        var lambda = from[0] < to[0] ? _mathJs.pi : -_mathJs.pi;
        phi = direction * lambda / 2;
        stream.point(-lambda, phi);
        stream.point(0, phi);
        stream.point(lambda, phi);
    } else stream.point(to[0], to[1]);
}

},{"./index.js":"fwcyD","../math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"fwcyD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _bufferJs = require("./buffer.js");
var _bufferJsDefault = parcelHelpers.interopDefault(_bufferJs);
var _rejoinJs = require("./rejoin.js");
var _rejoinJsDefault = parcelHelpers.interopDefault(_rejoinJs);
var _mathJs = require("../math.js");
var _polygonContainsJs = require("../polygonContains.js");
var _polygonContainsJsDefault = parcelHelpers.interopDefault(_polygonContainsJs);
var _d3Array = require("d3-array");
exports.default = function(pointVisible, clipLine, interpolate, start) {
    return function(sink) {
        var line = clipLine(sink), ringBuffer = _bufferJsDefault.default(), ringSink = clipLine(ringBuffer), polygonStarted = false, polygon, segments, ring;
        var clip = {
            point: point1,
            lineStart: lineStart,
            lineEnd: lineEnd,
            polygonStart: function() {
                clip.point = pointRing;
                clip.lineStart = ringStart;
                clip.lineEnd = ringEnd;
                segments = [];
                polygon = [];
            },
            polygonEnd: function() {
                clip.point = point1;
                clip.lineStart = lineStart;
                clip.lineEnd = lineEnd;
                segments = _d3Array.merge(segments);
                var startInside = _polygonContainsJsDefault.default(polygon, start);
                if (segments.length) {
                    if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
                    _rejoinJsDefault.default(segments, compareIntersection, startInside, interpolate, sink);
                } else if (startInside) {
                    if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
                    sink.lineStart();
                    interpolate(null, null, 1, sink);
                    sink.lineEnd();
                }
                if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
                segments = polygon = null;
            },
            sphere: function() {
                sink.polygonStart();
                sink.lineStart();
                interpolate(null, null, 1, sink);
                sink.lineEnd();
                sink.polygonEnd();
            }
        };
        function point1(lambda, phi) {
            if (pointVisible(lambda, phi)) sink.point(lambda, phi);
        }
        function pointLine(lambda, phi) {
            line.point(lambda, phi);
        }
        function lineStart() {
            clip.point = pointLine;
            line.lineStart();
        }
        function lineEnd() {
            clip.point = point1;
            line.lineEnd();
        }
        function pointRing(lambda, phi) {
            ring.push([
                lambda,
                phi
            ]);
            ringSink.point(lambda, phi);
        }
        function ringStart() {
            ringSink.lineStart();
            ring = [];
        }
        function ringEnd() {
            pointRing(ring[0][0], ring[0][1]);
            ringSink.lineEnd();
            var clean = ringSink.clean(), ringSegments = ringBuffer.result(), i, n = ringSegments.length, m, segment, point;
            ring.pop();
            polygon.push(ring);
            ring = null;
            if (!n) return;
            // No intersections.
            if (clean & 1) {
                segment = ringSegments[0];
                if ((m = segment.length - 1) > 0) {
                    if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
                    sink.lineStart();
                    for(i = 0; i < m; ++i)sink.point((point = segment[i])[0], point[1]);
                    sink.lineEnd();
                }
                return;
            }
            // Rejoin connected segments.
            // TODO reuse ringBuffer.rejoin()?
            if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
            segments.push(ringSegments.filter(validSegment));
        }
        return clip;
    };
};
function validSegment(segment) {
    return segment.length > 1;
}
// Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.
function compareIntersection(a, b) {
    return ((a = a.x)[0] < 0 ? a[1] - _mathJs.halfPi - _mathJs.epsilon : _mathJs.halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - _mathJs.halfPi - _mathJs.epsilon : _mathJs.halfPi - b[1]);
}

},{"./buffer.js":"1YOxa","./rejoin.js":"a6HiF","../math.js":"7JyYl","../polygonContains.js":"FktDW","d3-array":"dclxS","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"1YOxa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _noopJs = require("../noop.js");
var _noopJsDefault = parcelHelpers.interopDefault(_noopJs);
exports.default = function() {
    var lines = [], line;
    return {
        point: function(x, y, m) {
            line.push([
                x,
                y,
                m
            ]);
        },
        lineStart: function() {
            lines.push(line = []);
        },
        lineEnd: _noopJsDefault.default,
        rejoin: function() {
            if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
        },
        result: function() {
            var result = lines;
            lines = [];
            line = null;
            return result;
        }
    };
};

},{"../noop.js":"a5Top","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"a6HiF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _pointEqualJs = require("../pointEqual.js");
var _pointEqualJsDefault = parcelHelpers.interopDefault(_pointEqualJs);
var _mathJs = require("../math.js");
function Intersection(point, points, other, entry) {
    this.x = point;
    this.z = points;
    this.o = other; // another intersection
    this.e = entry; // is an entry?
    this.v = false; // visited
    this.n = this.p = null; // next & previous
}
exports.default = function(segments, compareIntersection, startInside, interpolate, stream) {
    var subject = [], clip = [], i, n1;
    segments.forEach(function(segment) {
        if ((n = segment.length - 1) <= 0) return;
        var n, p0 = segment[0], p1 = segment[n], x;
        if (_pointEqualJsDefault.default(p0, p1)) {
            if (!p0[2] && !p1[2]) {
                stream.lineStart();
                for(i = 0; i < n; ++i)stream.point((p0 = segment[i])[0], p0[1]);
                stream.lineEnd();
                return;
            }
            // handle degenerate cases by moving the point
            p1[0] += 2 * _mathJs.epsilon;
        }
        subject.push(x = new Intersection(p0, segment, null, true));
        clip.push(x.o = new Intersection(p0, null, x, false));
        subject.push(x = new Intersection(p1, segment, null, false));
        clip.push(x.o = new Intersection(p1, null, x, true));
    });
    if (!subject.length) return;
    clip.sort(compareIntersection);
    link(subject);
    link(clip);
    for(i = 0, n1 = clip.length; i < n1; ++i)clip[i].e = startInside = !startInside;
    var start = subject[0], points, point;
    while(true){
        // Find first unvisited intersection.
        var current = start, isSubject = true;
        while(current.v)if ((current = current.n) === start) return;
        points = current.z;
        stream.lineStart();
        do {
            current.v = current.o.v = true;
            if (current.e) {
                if (isSubject) for(i = 0, n1 = points.length; i < n1; ++i)stream.point((point = points[i])[0], point[1]);
                else interpolate(current.x, current.n.x, 1, stream);
                current = current.n;
            } else {
                if (isSubject) {
                    points = current.p.z;
                    for(i = points.length - 1; i >= 0; --i)stream.point((point = points[i])[0], point[1]);
                } else interpolate(current.x, current.p.x, -1, stream);
                current = current.p;
            }
            current = current.o;
            points = current.z;
            isSubject = !isSubject;
        }while (!current.v)
        stream.lineEnd();
    }
};
function link(array) {
    if (!(n = array.length)) return;
    var n, i = 0, a = array[0], b;
    while(++i < n){
        a.n = b = array[i];
        b.p = a;
        a = b;
    }
    a.n = b = array[0];
    b.p = a;
}

},{"../pointEqual.js":"kT0x8","../math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"kT0x8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _mathJs = require("./math.js");
exports.default = function(a, b) {
    return _mathJs.abs(a[0] - b[0]) < _mathJs.epsilon && _mathJs.abs(a[1] - b[1]) < _mathJs.epsilon;
};

},{"./math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"FktDW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Array = require("d3-array");
var _cartesianJs = require("./cartesian.js");
var _mathJs = require("./math.js");
function longitude(point) {
    if (_mathJs.abs(point[0]) <= _mathJs.pi) return point[0];
    else return _mathJs.sign(point[0]) * ((_mathJs.abs(point[0]) + _mathJs.pi) % _mathJs.tau - _mathJs.pi);
}
exports.default = function(polygon, point) {
    var lambda = longitude(point), phi = point[1], sinPhi = _mathJs.sin(phi), normal = [
        _mathJs.sin(lambda),
        -_mathJs.cos(lambda),
        0
    ], angle = 0, winding = 0;
    var sum = new _d3Array.Adder();
    if (sinPhi === 1) phi = _mathJs.halfPi + _mathJs.epsilon;
    else if (sinPhi === -1) phi = -_mathJs.halfPi - _mathJs.epsilon;
    for(var i = 0, n = polygon.length; i < n; ++i){
        if (!(m = (ring = polygon[i]).length)) continue;
        var ring, m, point0 = ring[m - 1], lambda0 = longitude(point0), phi0 = point0[1] / 2 + _mathJs.quarterPi, sinPhi0 = _mathJs.sin(phi0), cosPhi0 = _mathJs.cos(phi0);
        for(var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1){
            var point1 = ring[j], lambda1 = longitude(point1), phi1 = point1[1] / 2 + _mathJs.quarterPi, sinPhi1 = _mathJs.sin(phi1), cosPhi1 = _mathJs.cos(phi1), delta = lambda1 - lambda0, sign = delta >= 0 ? 1 : -1, absDelta = sign * delta, antimeridian = absDelta > _mathJs.pi, k = sinPhi0 * sinPhi1;
            sum.add(_mathJs.atan2(k * sign * _mathJs.sin(absDelta), cosPhi0 * cosPhi1 + k * _mathJs.cos(absDelta)));
            angle += antimeridian ? delta + sign * _mathJs.tau : delta;
            // Are the longitudes either side of the point’s meridian (lambda),
            // and are the latitudes smaller than the parallel (phi)?
            if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
                var arc = _cartesianJs.cartesianCross(_cartesianJs.cartesian(point0), _cartesianJs.cartesian(point1));
                _cartesianJs.cartesianNormalizeInPlace(arc);
                var intersection = _cartesianJs.cartesianCross(normal, arc);
                _cartesianJs.cartesianNormalizeInPlace(intersection);
                var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * _mathJs.asin(intersection[2]);
                if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) winding += antimeridian ^ delta >= 0 ? 1 : -1;
            }
        }
    }
    // First, determine whether the South pole is inside or outside:
    //
    // It is inside if:
    // * the polygon winds around it in a clockwise direction.
    // * the polygon does not (cumulatively) wind around it, but has a negative
    //   (counter-clockwise) area.
    //
    // Second, count the (signed) number of times a segment crosses a lambda
    // from the point to the South pole.  If it is zero, then the point is the
    // same side as the South pole.
    return (angle < -_mathJs.epsilon || angle < _mathJs.epsilon && sum < -_mathJs.epsilon2) ^ winding & 1;
};

},{"d3-array":"dclxS","./cartesian.js":"evaJG","./math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"iIbFI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _cartesianJs = require("../cartesian.js");
var _circleJs = require("../circle.js");
var _mathJs = require("../math.js");
var _pointEqualJs = require("../pointEqual.js");
var _pointEqualJsDefault = parcelHelpers.interopDefault(_pointEqualJs);
var _indexJs = require("./index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
exports.default = function(radius) {
    var cr = _mathJs.cos(radius), delta1 = 6 * _mathJs.radians, smallRadius = cr > 0, notHemisphere = _mathJs.abs(cr) > _mathJs.epsilon; // TODO optimise for this common case
    function interpolate(from, to, direction, stream) {
        _circleJs.circleStream(stream, radius, delta1, direction, from, to);
    }
    function visible(lambda, phi) {
        return _mathJs.cos(lambda) * _mathJs.cos(phi) > cr;
    }
    // Takes a line and cuts into visible segments. Return values used for polygon
    // clipping: 0 - there were intersections or the line was empty; 1 - no
    // intersections 2 - there were intersections, and the first and last segments
    // should be rejoined.
    function clipLine(stream) {
        var point0, c0, v0, v00, clean; // no intersections
        return {
            lineStart: function() {
                v00 = v0 = false;
                clean = 1;
            },
            point: function(lambda, phi) {
                var point1 = [
                    lambda,
                    phi
                ], point2, v = visible(lambda, phi), c = smallRadius ? v ? 0 : code1(lambda, phi) : v ? code1(lambda + (lambda < 0 ? _mathJs.pi : -_mathJs.pi), phi) : 0;
                if (!point0 && (v00 = v0 = v)) stream.lineStart();
                if (v !== v0) {
                    point2 = intersect(point0, point1);
                    if (!point2 || _pointEqualJsDefault.default(point0, point2) || _pointEqualJsDefault.default(point1, point2)) point1[2] = 1;
                }
                if (v !== v0) {
                    clean = 0;
                    if (v) {
                        // outside going in
                        stream.lineStart();
                        point2 = intersect(point1, point0);
                        stream.point(point2[0], point2[1]);
                    } else {
                        // inside going out
                        point2 = intersect(point0, point1);
                        stream.point(point2[0], point2[1], 2);
                        stream.lineEnd();
                    }
                    point0 = point2;
                } else if (notHemisphere && point0 && smallRadius ^ v) {
                    var t;
                    // If the codes for two points are different, or are both zero,
                    // and there this segment intersects with the small circle.
                    if (!(c & c0) && (t = intersect(point1, point0, true))) {
                        clean = 0;
                        if (smallRadius) {
                            stream.lineStart();
                            stream.point(t[0][0], t[0][1]);
                            stream.point(t[1][0], t[1][1]);
                            stream.lineEnd();
                        } else {
                            stream.point(t[1][0], t[1][1]);
                            stream.lineEnd();
                            stream.lineStart();
                            stream.point(t[0][0], t[0][1], 3);
                        }
                    }
                }
                if (v && (!point0 || !_pointEqualJsDefault.default(point0, point1))) stream.point(point1[0], point1[1]);
                point0 = point1, v0 = v, c0 = c;
            },
            lineEnd: function() {
                if (v0) stream.lineEnd();
                point0 = null;
            },
            // Rejoin first and last segments if there were intersections and the first
            // and last points were visible.
            clean: function() {
                return clean | (v00 && v0) << 1;
            }
        };
    }
    // Intersects the great circle between a and b with the clip circle.
    function intersect(a, b, two) {
        var pa = _cartesianJs.cartesian(a), pb = _cartesianJs.cartesian(b);
        // We have two planes, n1.p = d1 and n2.p = d2.
        // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).
        var n1 = [
            1,
            0,
            0
        ], n2 = _cartesianJs.cartesianCross(pa, pb), n2n2 = _cartesianJs.cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
        // Two polar points.
        if (!determinant) return !two && a;
        var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = _cartesianJs.cartesianCross(n1, n2), A = _cartesianJs.cartesianScale(n1, c1), B = _cartesianJs.cartesianScale(n2, c2);
        _cartesianJs.cartesianAddInPlace(A, B);
        // Solve |p(t)|^2 = 1.
        var u = n1xn2, w = _cartesianJs.cartesianDot(A, u), uu = _cartesianJs.cartesianDot(u, u), t2 = w * w - uu * (_cartesianJs.cartesianDot(A, A) - 1);
        if (t2 < 0) return;
        var t = _mathJs.sqrt(t2), q = _cartesianJs.cartesianScale(u, (-w - t) / uu);
        _cartesianJs.cartesianAddInPlace(q, A);
        q = _cartesianJs.spherical(q);
        if (!two) return q;
        // Two intersection points.
        var lambda0 = a[0], lambda1 = b[0], phi0 = a[1], phi1 = b[1], z;
        if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;
        var delta = lambda1 - lambda0, polar = _mathJs.abs(delta - _mathJs.pi) < _mathJs.epsilon, meridian = polar || delta < _mathJs.epsilon;
        if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;
        // Check that the first point is between a and b.
        if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (_mathJs.abs(q[0] - lambda0) < _mathJs.epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > _mathJs.pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
            var q1 = _cartesianJs.cartesianScale(u, (-w + t) / uu);
            _cartesianJs.cartesianAddInPlace(q1, A);
            return [
                q,
                _cartesianJs.spherical(q1)
            ];
        }
    }
    // Generates a 4-bit vector representing the location of a point relative to
    // the small circle's bounding box.
    function code1(lambda, phi) {
        var r = smallRadius ? radius : _mathJs.pi - radius, code = 0;
        if (lambda < -r) code |= 1; // left
        else if (lambda > r) code |= 2; // right
        if (phi < -r) code |= 4; // below
        else if (phi > r) code |= 8; // above
        return code;
    }
    return _indexJsDefault.default(visible, clipLine, interpolate, smallRadius ? [
        0,
        -radius
    ] : [
        -_mathJs.pi,
        radius - _mathJs.pi
    ]);
};

},{"../cartesian.js":"evaJG","../circle.js":"5kSQi","../math.js":"7JyYl","../pointEqual.js":"kT0x8","./index.js":"fwcyD","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"g626F":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _rectangleJs = require("./rectangle.js");
var _rectangleJsDefault = parcelHelpers.interopDefault(_rectangleJs);
exports.default = function() {
    var x0 = 0, y0 = 0, x1 = 960, y1 = 500, cache, cacheStream, clip;
    return clip = {
        stream: function(stream) {
            return cache && cacheStream === stream ? cache : cache = _rectangleJsDefault.default(x0, y0, x1, y1)(cacheStream = stream);
        },
        extent: function(_) {
            return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [
                [
                    x0,
                    y0
                ],
                [
                    x1,
                    y1
                ]
            ];
        }
    };
};

},{"./rectangle.js":"2xswT","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"2xswT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _mathJs = require("../math.js");
var _bufferJs = require("./buffer.js");
var _bufferJsDefault = parcelHelpers.interopDefault(_bufferJs);
var _lineJs = require("./line.js");
var _lineJsDefault = parcelHelpers.interopDefault(_lineJs);
var _rejoinJs = require("./rejoin.js");
var _rejoinJsDefault = parcelHelpers.interopDefault(_rejoinJs);
var _d3Array = require("d3-array");
var clipMax = 1000000000, clipMin = -clipMax;
function clipRectangle(x0, y0, x1, y1) {
    function visible1(x, y) {
        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
    }
    function interpolate(from, to, direction, stream) {
        var a = 0, a1 = 0;
        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
        while ((a = (a + direction + 4) % 4) !== a1)
        else stream.point(to[0], to[1]);
    }
    function corner(p, direction) {
        return _mathJs.abs(p[0] - x0) < _mathJs.epsilon ? direction > 0 ? 0 : 3 : _mathJs.abs(p[0] - x1) < _mathJs.epsilon ? direction > 0 ? 2 : 1 : _mathJs.abs(p[1] - y0) < _mathJs.epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
    }
    function compareIntersection(a, b) {
        return comparePoint(a.x, b.x);
    }
    function comparePoint(a, b) {
        var ca = corner(a, 1), cb = corner(b, 1);
        return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
    }
    return function(stream) {
        var activeStream = stream, bufferStream = _bufferJsDefault.default(), segments, polygon, ring1, x__, y__, v__, x_, y_, v_, first, clean;
        var clipStream = {
            point: point1,
            lineStart: lineStart,
            lineEnd: lineEnd,
            polygonStart: polygonStart,
            polygonEnd: polygonEnd
        };
        function point1(x, y) {
            if (visible1(x, y)) activeStream.point(x, y);
        }
        function polygonInside() {
            var winding = 0;
            for(var i = 0, n = polygon.length; i < n; ++i)for(var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j){
                a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];
                if (a1 <= y1) {
                    if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;
                } else if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;
            }
            return winding;
        }
        // Buffer geometry within a polygon and then clip it en masse.
        function polygonStart() {
            activeStream = bufferStream, segments = [], polygon = [], clean = true;
        }
        function polygonEnd() {
            var startInside = polygonInside(), cleanInside = clean && startInside, visible = (segments = _d3Array.merge(segments)).length;
            if (cleanInside || visible) {
                stream.polygonStart();
                if (cleanInside) {
                    stream.lineStart();
                    interpolate(null, null, 1, stream);
                    stream.lineEnd();
                }
                if (visible) _rejoinJsDefault.default(segments, compareIntersection, startInside, interpolate, stream);
                stream.polygonEnd();
            }
            activeStream = stream, segments = polygon = ring1 = null;
        }
        function lineStart() {
            clipStream.point = linePoint;
            if (polygon) polygon.push(ring1 = []);
            first = true;
            v_ = false;
            x_ = y_ = NaN;
        }
        // TODO rather than special-case polygons, simply handle them separately.
        // Ideally, coincident intersection points should be jittered to avoid
        // clipping issues.
        function lineEnd() {
            if (segments) {
                linePoint(x__, y__);
                if (v__ && v_) bufferStream.rejoin();
                segments.push(bufferStream.result());
            }
            clipStream.point = point1;
            if (v_) activeStream.lineEnd();
        }
        function linePoint(x, y) {
            var v = visible1(x, y);
            if (polygon) ring1.push([
                x,
                y
            ]);
            if (first) {
                x__ = x, y__ = y, v__ = v;
                first = false;
                if (v) {
                    activeStream.lineStart();
                    activeStream.point(x, y);
                }
            } else if (v && v_) activeStream.point(x, y);
            else {
                var a = [
                    x_ = Math.max(clipMin, Math.min(clipMax, x_)),
                    y_ = Math.max(clipMin, Math.min(clipMax, y_))
                ], b = [
                    x = Math.max(clipMin, Math.min(clipMax, x)),
                    y = Math.max(clipMin, Math.min(clipMax, y))
                ];
                if (_lineJsDefault.default(a, b, x0, y0, x1, y1)) {
                    if (!v_) {
                        activeStream.lineStart();
                        activeStream.point(a[0], a[1]);
                    }
                    activeStream.point(b[0], b[1]);
                    if (!v) activeStream.lineEnd();
                    clean = false;
                } else if (v) {
                    activeStream.lineStart();
                    activeStream.point(x, y);
                    clean = false;
                }
            }
            x_ = x, y_ = y, v_ = v;
        }
        return clipStream;
    };
}
exports.default = clipRectangle;

},{"../math.js":"7JyYl","./buffer.js":"1YOxa","./line.js":"7KlnJ","./rejoin.js":"a6HiF","d3-array":"dclxS","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"7KlnJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(a, b, x0, y0, x1, y1) {
    var ax = a[0], ay = a[1], bx = b[0], by = b[1], t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
    r = x0 - ax;
    if (!dx && r > 0) return;
    r /= dx;
    if (dx < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
    } else if (dx > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
    }
    r = x1 - ax;
    if (!dx && r < 0) return;
    r /= dx;
    if (dx < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
    } else if (dx > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
    }
    r = y0 - ay;
    if (!dy && r > 0) return;
    r /= dy;
    if (dy < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
    } else if (dy > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
    }
    r = y1 - ay;
    if (!dy && r < 0) return;
    r /= dy;
    if (dy < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
    } else if (dy > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
    }
    if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
    if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
    return true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"eYBc9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _polygonContainsJs = require("./polygonContains.js");
var _polygonContainsJsDefault = parcelHelpers.interopDefault(_polygonContainsJs);
var _distanceJs = require("./distance.js");
var _distanceJsDefault = parcelHelpers.interopDefault(_distanceJs);
var _mathJs = require("./math.js");
var containsObjectType = {
    Feature: function(object, point) {
        return containsGeometry(object.geometry, point);
    },
    FeatureCollection: function(object, point) {
        var features = object.features, i = -1, n = features.length;
        while(++i < n)if (containsGeometry(features[i].geometry, point)) return true;
        return false;
    }
};
var containsGeometryType = {
    Sphere: function() {
        return true;
    },
    Point: function(object, point) {
        return containsPoint(object.coordinates, point);
    },
    MultiPoint: function(object, point) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while(++i < n)if (containsPoint(coordinates[i], point)) return true;
        return false;
    },
    LineString: function(object, point) {
        return containsLine(object.coordinates, point);
    },
    MultiLineString: function(object, point) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while(++i < n)if (containsLine(coordinates[i], point)) return true;
        return false;
    },
    Polygon: function(object, point) {
        return containsPolygon(object.coordinates, point);
    },
    MultiPolygon: function(object, point) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while(++i < n)if (containsPolygon(coordinates[i], point)) return true;
        return false;
    },
    GeometryCollection: function(object, point) {
        var geometries = object.geometries, i = -1, n = geometries.length;
        while(++i < n)if (containsGeometry(geometries[i], point)) return true;
        return false;
    }
};
function containsGeometry(geometry, point) {
    return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;
}
function containsPoint(coordinates, point) {
    return _distanceJsDefault.default(coordinates, point) === 0;
}
function containsLine(coordinates, point) {
    var ao, bo, ab;
    for(var i = 0, n = coordinates.length; i < n; i++){
        bo = _distanceJsDefault.default(coordinates[i], point);
        if (bo === 0) return true;
        if (i > 0) {
            ab = _distanceJsDefault.default(coordinates[i], coordinates[i - 1]);
            if (ab > 0 && ao <= ab && bo <= ab && (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < _mathJs.epsilon2 * ab) return true;
        }
        ao = bo;
    }
    return false;
}
function containsPolygon(coordinates, point) {
    return !!_polygonContainsJsDefault.default(coordinates.map(ringRadians), pointRadians(point));
}
function ringRadians(ring) {
    return ring = ring.map(pointRadians), ring.pop(), ring;
}
function pointRadians(point) {
    return [
        point[0] * _mathJs.radians,
        point[1] * _mathJs.radians
    ];
}
exports.default = function(object, point) {
    return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);
};

},{"./polygonContains.js":"FktDW","./distance.js":"glEIa","./math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"glEIa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _lengthJs = require("./length.js");
var _lengthJsDefault = parcelHelpers.interopDefault(_lengthJs);
var coordinates = [
    null,
    null
], object = {
    type: "LineString",
    coordinates: coordinates
};
exports.default = function(a, b) {
    coordinates[0] = a;
    coordinates[1] = b;
    return _lengthJsDefault.default(object);
};

},{"./length.js":"9Miu7","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"9Miu7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Array = require("d3-array");
var _mathJs = require("./math.js");
var _noopJs = require("./noop.js");
var _noopJsDefault = parcelHelpers.interopDefault(_noopJs);
var _streamJs = require("./stream.js");
var _streamJsDefault = parcelHelpers.interopDefault(_streamJs);
var lengthSum, lambda0, sinPhi0, cosPhi0;
var lengthStream = {
    sphere: _noopJsDefault.default,
    point: _noopJsDefault.default,
    lineStart: lengthLineStart,
    lineEnd: _noopJsDefault.default,
    polygonStart: _noopJsDefault.default,
    polygonEnd: _noopJsDefault.default
};
function lengthLineStart() {
    lengthStream.point = lengthPointFirst;
    lengthStream.lineEnd = lengthLineEnd;
}
function lengthLineEnd() {
    lengthStream.point = lengthStream.lineEnd = _noopJsDefault.default;
}
function lengthPointFirst(lambda, phi) {
    lambda *= _mathJs.radians, phi *= _mathJs.radians;
    lambda0 = lambda, sinPhi0 = _mathJs.sin(phi), cosPhi0 = _mathJs.cos(phi);
    lengthStream.point = lengthPoint;
}
function lengthPoint(lambda, phi) {
    lambda *= _mathJs.radians, phi *= _mathJs.radians;
    var sinPhi = _mathJs.sin(phi), cosPhi = _mathJs.cos(phi), delta = _mathJs.abs(lambda - lambda0), cosDelta = _mathJs.cos(delta), sinDelta = _mathJs.sin(delta), x = cosPhi * sinDelta, y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta, z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
    lengthSum.add(_mathJs.atan2(_mathJs.sqrt(x * x + y * y), z));
    lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}
exports.default = function(object) {
    lengthSum = new _d3Array.Adder();
    _streamJsDefault.default(object, lengthStream);
    return +lengthSum;
};

},{"d3-array":"dclxS","./math.js":"7JyYl","./noop.js":"a5Top","./stream.js":"jck2Y","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"71CK6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "graticule10", ()=>graticule10
);
var _d3Array = require("d3-array");
var _mathJs = require("./math.js");
function graticuleX(y0, y1, dy) {
    var y2 = _d3Array.range(y0, y1 - _mathJs.epsilon, dy).concat(y1);
    return function(x) {
        return y2.map(function(y) {
            return [
                x,
                y
            ];
        });
    };
}
function graticuleY(x0, x1, dx) {
    var x2 = _d3Array.range(x0, x1 - _mathJs.epsilon, dx).concat(x1);
    return function(y) {
        return x2.map(function(x) {
            return [
                x,
                y
            ];
        });
    };
}
function graticule() {
    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x3, y3, X, Y, precision = 2.5;
    function graticule1() {
        return {
            type: "MultiLineString",
            coordinates: lines()
        };
    }
    function lines() {
        return _d3Array.range(_mathJs.ceil(X0 / DX) * DX, X1, DX).map(X).concat(_d3Array.range(_mathJs.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(_d3Array.range(_mathJs.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
            return _mathJs.abs(x % DX) > _mathJs.epsilon;
        }).map(x3)).concat(_d3Array.range(_mathJs.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
            return _mathJs.abs(y % DY) > _mathJs.epsilon;
        }).map(y3));
    }
    graticule1.lines = function() {
        return lines().map(function(coordinates) {
            return {
                type: "LineString",
                coordinates: coordinates
            };
        });
    };
    graticule1.outline = function() {
        return {
            type: "Polygon",
            coordinates: [
                X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))
            ]
        };
    };
    graticule1.extent = function(_) {
        if (!arguments.length) return graticule1.extentMinor();
        return graticule1.extentMajor(_).extentMinor(_);
    };
    graticule1.extentMajor = function(_) {
        if (!arguments.length) return [
            [
                X0,
                Y0
            ],
            [
                X1,
                Y1
            ]
        ];
        X0 = +_[0][0], X1 = +_[1][0];
        Y0 = +_[0][1], Y1 = +_[1][1];
        if (X0 > X1) _ = X0, X0 = X1, X1 = _;
        if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
        return graticule1.precision(precision);
    };
    graticule1.extentMinor = function(_) {
        if (!arguments.length) return [
            [
                x0,
                y0
            ],
            [
                x1,
                y1
            ]
        ];
        x0 = +_[0][0], x1 = +_[1][0];
        y0 = +_[0][1], y1 = +_[1][1];
        if (x0 > x1) _ = x0, x0 = x1, x1 = _;
        if (y0 > y1) _ = y0, y0 = y1, y1 = _;
        return graticule1.precision(precision);
    };
    graticule1.step = function(_) {
        if (!arguments.length) return graticule1.stepMinor();
        return graticule1.stepMajor(_).stepMinor(_);
    };
    graticule1.stepMajor = function(_) {
        if (!arguments.length) return [
            DX,
            DY
        ];
        DX = +_[0], DY = +_[1];
        return graticule1;
    };
    graticule1.stepMinor = function(_) {
        if (!arguments.length) return [
            dx,
            dy
        ];
        dx = +_[0], dy = +_[1];
        return graticule1;
    };
    graticule1.precision = function(_) {
        if (!arguments.length) return precision;
        precision = +_;
        x3 = graticuleX(y0, y1, 90);
        y3 = graticuleY(x0, x1, precision);
        X = graticuleX(Y0, Y1, 90);
        Y = graticuleY(X0, X1, precision);
        return graticule1;
    };
    return graticule1.extentMajor([
        [
            -180,
            -90 + _mathJs.epsilon
        ],
        [
            180,
            90 - _mathJs.epsilon
        ]
    ]).extentMinor([
        [
            -180,
            -80 - _mathJs.epsilon
        ],
        [
            180,
            80 + _mathJs.epsilon
        ]
    ]);
}
exports.default = graticule;
function graticule10() {
    return graticule()();
}

},{"d3-array":"dclxS","./math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"9aGW3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _mathJs = require("./math.js");
exports.default = function(a, b) {
    var x0 = a[0] * _mathJs.radians, y0 = a[1] * _mathJs.radians, x1 = b[0] * _mathJs.radians, y1 = b[1] * _mathJs.radians, cy0 = _mathJs.cos(y0), sy0 = _mathJs.sin(y0), cy1 = _mathJs.cos(y1), sy1 = _mathJs.sin(y1), kx0 = cy0 * _mathJs.cos(x0), ky0 = cy0 * _mathJs.sin(x0), kx1 = cy1 * _mathJs.cos(x1), ky1 = cy1 * _mathJs.sin(x1), d = 2 * _mathJs.asin(_mathJs.sqrt(_mathJs.haversin(y1 - y0) + cy0 * cy1 * _mathJs.haversin(x1 - x0))), k = _mathJs.sin(d);
    var interpolate = d ? function(t) {
        var B = _mathJs.sin(t *= d) / k, A = _mathJs.sin(d - t) / k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
        return [
            _mathJs.atan2(y, x) * _mathJs.degrees,
            _mathJs.atan2(z, _mathJs.sqrt(x * x + y * y)) * _mathJs.degrees
        ];
    } : function() {
        return [
            x0 * _mathJs.degrees,
            y0 * _mathJs.degrees
        ];
    };
    interpolate.distance = d;
    return interpolate;
};

},{"./math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"k9P5v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _identityJs = require("../identity.js");
var _identityJsDefault = parcelHelpers.interopDefault(_identityJs);
var _streamJs = require("../stream.js");
var _streamJsDefault = parcelHelpers.interopDefault(_streamJs);
var _areaJs = require("./area.js");
var _areaJsDefault = parcelHelpers.interopDefault(_areaJs);
var _boundsJs = require("./bounds.js");
var _boundsJsDefault = parcelHelpers.interopDefault(_boundsJs);
var _centroidJs = require("./centroid.js");
var _centroidJsDefault = parcelHelpers.interopDefault(_centroidJs);
var _contextJs = require("./context.js");
var _contextJsDefault = parcelHelpers.interopDefault(_contextJs);
var _measureJs = require("./measure.js");
var _measureJsDefault = parcelHelpers.interopDefault(_measureJs);
var _stringJs = require("./string.js");
var _stringJsDefault = parcelHelpers.interopDefault(_stringJs);
exports.default = function(projection, context) {
    var pointRadius = 4.5, projectionStream, contextStream;
    function path(object) {
        if (object) {
            if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
            _streamJsDefault.default(object, projectionStream(contextStream));
        }
        return contextStream.result();
    }
    path.area = function(object) {
        _streamJsDefault.default(object, projectionStream(_areaJsDefault.default));
        return _areaJsDefault.default.result();
    };
    path.measure = function(object) {
        _streamJsDefault.default(object, projectionStream(_measureJsDefault.default));
        return _measureJsDefault.default.result();
    };
    path.bounds = function(object) {
        _streamJsDefault.default(object, projectionStream(_boundsJsDefault.default));
        return _boundsJsDefault.default.result();
    };
    path.centroid = function(object) {
        _streamJsDefault.default(object, projectionStream(_centroidJsDefault.default));
        return _centroidJsDefault.default.result();
    };
    path.projection = function(_) {
        return arguments.length ? (projectionStream = _ == null ? (projection = null, _identityJsDefault.default) : (projection = _).stream, path) : projection;
    };
    path.context = function(_) {
        if (!arguments.length) return context;
        contextStream = _ == null ? (context = null, new _stringJsDefault.default) : new _contextJsDefault.default(context = _);
        if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
        return path;
    };
    path.pointRadius = function(_) {
        if (!arguments.length) return pointRadius;
        pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
        return path;
    };
    return path.projection(projection).context(context);
};

},{"../identity.js":"kdbfP","../stream.js":"jck2Y","./area.js":"dU6mN","./bounds.js":"bA46O","./centroid.js":"22OCM","./context.js":"g2MCo","./measure.js":"fzRy5","./string.js":"9KApP","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"kdbfP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = (x)=>x
;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"dU6mN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Array = require("d3-array");
var _mathJs = require("../math.js");
var _noopJs = require("../noop.js");
var _noopJsDefault = parcelHelpers.interopDefault(_noopJs);
var areaSum = new _d3Array.Adder(), areaRingSum = new _d3Array.Adder(), x00, y00, x0, y0;
var areaStream = {
    point: _noopJsDefault.default,
    lineStart: _noopJsDefault.default,
    lineEnd: _noopJsDefault.default,
    polygonStart: function() {
        areaStream.lineStart = areaRingStart;
        areaStream.lineEnd = areaRingEnd;
    },
    polygonEnd: function() {
        areaStream.lineStart = areaStream.lineEnd = areaStream.point = _noopJsDefault.default;
        areaSum.add(_mathJs.abs(areaRingSum));
        areaRingSum = new _d3Array.Adder();
    },
    result: function() {
        var area = areaSum / 2;
        areaSum = new _d3Array.Adder();
        return area;
    }
};
function areaRingStart() {
    areaStream.point = areaPointFirst;
}
function areaPointFirst(x, y) {
    areaStream.point = areaPoint;
    x00 = x0 = x, y00 = y0 = y;
}
function areaPoint(x, y) {
    areaRingSum.add(y0 * x - x0 * y);
    x0 = x, y0 = y;
}
function areaRingEnd() {
    areaPoint(x00, y00);
}
exports.default = areaStream;

},{"d3-array":"dclxS","../math.js":"7JyYl","../noop.js":"a5Top","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"bA46O":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _noopJs = require("../noop.js");
var _noopJsDefault = parcelHelpers.interopDefault(_noopJs);
var x0 = Infinity, y0 = x0, x1 = -x0, y1 = x1;
var boundsStream = {
    point: boundsPoint,
    lineStart: _noopJsDefault.default,
    lineEnd: _noopJsDefault.default,
    polygonStart: _noopJsDefault.default,
    polygonEnd: _noopJsDefault.default,
    result: function() {
        var bounds = [
            [
                x0,
                y0
            ],
            [
                x1,
                y1
            ]
        ];
        x1 = y1 = -(y0 = x0 = Infinity);
        return bounds;
    }
};
function boundsPoint(x, y) {
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
}
exports.default = boundsStream;

},{"../noop.js":"a5Top","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"22OCM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _mathJs = require("../math.js");
// TODO Enforce positive area for exterior, negative area for interior?
var X0 = 0, Y0 = 0, Z0 = 0, X1 = 0, Y1 = 0, Z1 = 0, X2 = 0, Y2 = 0, Z2 = 0, x00, y00, x0, y0;
var centroidStream = {
    point: centroidPoint,
    lineStart: centroidLineStart,
    lineEnd: centroidLineEnd,
    polygonStart: function() {
        centroidStream.lineStart = centroidRingStart;
        centroidStream.lineEnd = centroidRingEnd;
    },
    polygonEnd: function() {
        centroidStream.point = centroidPoint;
        centroidStream.lineStart = centroidLineStart;
        centroidStream.lineEnd = centroidLineEnd;
    },
    result: function() {
        var centroid = Z2 ? [
            X2 / Z2,
            Y2 / Z2
        ] : Z1 ? [
            X1 / Z1,
            Y1 / Z1
        ] : Z0 ? [
            X0 / Z0,
            Y0 / Z0
        ] : [
            NaN,
            NaN
        ];
        X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
        return centroid;
    }
};
function centroidPoint(x, y) {
    X0 += x;
    Y0 += y;
    ++Z0;
}
function centroidLineStart() {
    centroidStream.point = centroidPointFirstLine;
}
function centroidPointFirstLine(x, y) {
    centroidStream.point = centroidPointLine;
    centroidPoint(x0 = x, y0 = y);
}
function centroidPointLine(x, y) {
    var dx = x - x0, dy = y - y0, z = _mathJs.sqrt(dx * dx + dy * dy);
    X1 += z * (x0 + x) / 2;
    Y1 += z * (y0 + y) / 2;
    Z1 += z;
    centroidPoint(x0 = x, y0 = y);
}
function centroidLineEnd() {
    centroidStream.point = centroidPoint;
}
function centroidRingStart() {
    centroidStream.point = centroidPointFirstRing;
}
function centroidRingEnd() {
    centroidPointRing(x00, y00);
}
function centroidPointFirstRing(x, y) {
    centroidStream.point = centroidPointRing;
    centroidPoint(x00 = x0 = x, y00 = y0 = y);
}
function centroidPointRing(x, y) {
    var dx = x - x0, dy = y - y0, z = _mathJs.sqrt(dx * dx + dy * dy);
    X1 += z * (x0 + x) / 2;
    Y1 += z * (y0 + y) / 2;
    Z1 += z;
    z = y0 * x - x0 * y;
    X2 += z * (x0 + x);
    Y2 += z * (y0 + y);
    Z2 += z * 3;
    centroidPoint(x0 = x, y0 = y);
}
exports.default = centroidStream;

},{"../math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"g2MCo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _mathJs = require("../math.js");
var _noopJs = require("../noop.js");
var _noopJsDefault = parcelHelpers.interopDefault(_noopJs);
function PathContext(context) {
    this._context = context;
}
exports.default = PathContext;
PathContext.prototype = {
    _radius: 4.5,
    pointRadius: function(_) {
        return this._radius = _, this;
    },
    polygonStart: function() {
        this._line = 0;
    },
    polygonEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._point = 0;
    },
    lineEnd: function() {
        if (this._line === 0) this._context.closePath();
        this._point = NaN;
    },
    point: function(x, y) {
        switch(this._point){
            case 0:
                this._context.moveTo(x, y);
                this._point = 1;
                break;
            case 1:
                this._context.lineTo(x, y);
                break;
            default:
                this._context.moveTo(x + this._radius, y);
                this._context.arc(x, y, this._radius, 0, _mathJs.tau);
                break;
        }
    },
    result: _noopJsDefault.default
};

},{"../math.js":"7JyYl","../noop.js":"a5Top","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"fzRy5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Array = require("d3-array");
var _mathJs = require("../math.js");
var _noopJs = require("../noop.js");
var _noopJsDefault = parcelHelpers.interopDefault(_noopJs);
var lengthSum = new _d3Array.Adder(), lengthRing, x00, y00, x0, y0;
var lengthStream = {
    point: _noopJsDefault.default,
    lineStart: function() {
        lengthStream.point = lengthPointFirst;
    },
    lineEnd: function() {
        if (lengthRing) lengthPoint(x00, y00);
        lengthStream.point = _noopJsDefault.default;
    },
    polygonStart: function() {
        lengthRing = true;
    },
    polygonEnd: function() {
        lengthRing = null;
    },
    result: function() {
        var length = +lengthSum;
        lengthSum = new _d3Array.Adder();
        return length;
    }
};
function lengthPointFirst(x, y) {
    lengthStream.point = lengthPoint;
    x00 = x0 = x, y00 = y0 = y;
}
function lengthPoint(x, y) {
    x0 -= x, y0 -= y;
    lengthSum.add(_mathJs.sqrt(x0 * x0 + y0 * y0));
    x0 = x, y0 = y;
}
exports.default = lengthStream;

},{"d3-array":"dclxS","../math.js":"7JyYl","../noop.js":"a5Top","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"9KApP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function PathString() {
    this._string = [];
}
exports.default = PathString;
PathString.prototype = {
    _radius: 4.5,
    _circle: circle(4.5),
    pointRadius: function(_) {
        if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
        return this;
    },
    polygonStart: function() {
        this._line = 0;
    },
    polygonEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._point = 0;
    },
    lineEnd: function() {
        if (this._line === 0) this._string.push("Z");
        this._point = NaN;
    },
    point: function(x, y) {
        switch(this._point){
            case 0:
                this._string.push("M", x, ",", y);
                this._point = 1;
                break;
            case 1:
                this._string.push("L", x, ",", y);
                break;
            default:
                if (this._circle == null) this._circle = circle(this._radius);
                this._string.push("M", x, ",", y, this._circle);
                break;
        }
    },
    result: function() {
        if (this._string.length) {
            var result = this._string.join("");
            this._string = [];
            return result;
        } else return null;
    }
};
function circle(radius) {
    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"3Xlta":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _conicEqualAreaJs = require("./conicEqualArea.js");
var _conicEqualAreaJsDefault = parcelHelpers.interopDefault(_conicEqualAreaJs);
exports.default = function() {
    return _conicEqualAreaJsDefault.default().parallels([
        29.5,
        45.5
    ]).scale(1070).translate([
        480,
        250
    ]).rotate([
        96,
        0
    ]).center([
        -0.6,
        38.7
    ]);
};

},{"./conicEqualArea.js":"c9BXq","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"c9BXq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "conicEqualAreaRaw", ()=>conicEqualAreaRaw
);
var _mathJs = require("../math.js");
var _conicJs = require("./conic.js");
var _cylindricalEqualAreaJs = require("./cylindricalEqualArea.js");
function conicEqualAreaRaw(y0, y1) {
    var sy0 = _mathJs.sin(y0), n = (sy0 + _mathJs.sin(y1)) / 2;
    // Are the parallels symmetrical around the Equator?
    if (_mathJs.abs(n) < _mathJs.epsilon) return _cylindricalEqualAreaJs.cylindricalEqualAreaRaw(y0);
    var c = 1 + sy0 * (2 * n - sy0), r0 = _mathJs.sqrt(c) / n;
    function project(x, y) {
        var r = _mathJs.sqrt(c - 2 * n * _mathJs.sin(y)) / n;
        return [
            r * _mathJs.sin(x *= n),
            r0 - r * _mathJs.cos(x)
        ];
    }
    project.invert = function(x, y) {
        var r0y = r0 - y, l = _mathJs.atan2(x, _mathJs.abs(r0y)) * _mathJs.sign(r0y);
        if (r0y * n < 0) l -= _mathJs.pi * _mathJs.sign(x) * _mathJs.sign(r0y);
        return [
            l / n,
            _mathJs.asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))
        ];
    };
    return project;
}
exports.default = function() {
    return _conicJs.conicProjection(conicEqualAreaRaw).scale(155.424).center([
        0,
        33.6442
    ]);
};

},{"../math.js":"7JyYl","./conic.js":"hA53y","./cylindricalEqualArea.js":"2kWMW","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hA53y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "conicProjection", ()=>conicProjection
);
var _mathJs = require("../math.js");
var _indexJs = require("./index.js");
function conicProjection(projectAt) {
    var phi0 = 0, phi1 = _mathJs.pi / 3, m = _indexJs.projectionMutator(projectAt), p = m(phi0, phi1);
    p.parallels = function(_) {
        return arguments.length ? m(phi0 = _[0] * _mathJs.radians, phi1 = _[1] * _mathJs.radians) : [
            phi0 * _mathJs.degrees,
            phi1 * _mathJs.degrees
        ];
    };
    return p;
}

},{"../math.js":"7JyYl","./index.js":"i24sF","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"i24sF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "projectionMutator", ()=>projectionMutator
);
var _antimeridianJs = require("../clip/antimeridian.js");
var _antimeridianJsDefault = parcelHelpers.interopDefault(_antimeridianJs);
var _circleJs = require("../clip/circle.js");
var _circleJsDefault = parcelHelpers.interopDefault(_circleJs);
var _rectangleJs = require("../clip/rectangle.js");
var _rectangleJsDefault = parcelHelpers.interopDefault(_rectangleJs);
var _composeJs = require("../compose.js");
var _composeJsDefault = parcelHelpers.interopDefault(_composeJs);
var _identityJs = require("../identity.js");
var _identityJsDefault = parcelHelpers.interopDefault(_identityJs);
var _mathJs = require("../math.js");
var _rotationJs = require("../rotation.js");
var _transformJs = require("../transform.js");
var _fitJs = require("./fit.js");
var _resampleJs = require("./resample.js");
var _resampleJsDefault = parcelHelpers.interopDefault(_resampleJs);
var transformRadians = _transformJs.transformer({
    point: function(x, y) {
        this.stream.point(x * _mathJs.radians, y * _mathJs.radians);
    }
});
function transformRotate(rotate) {
    return _transformJs.transformer({
        point: function(x, y) {
            var r = rotate(x, y);
            return this.stream.point(r[0], r[1]);
        }
    });
}
function scaleTranslate(k, dx, dy, sx, sy) {
    function transform(x, y) {
        x *= sx;
        y *= sy;
        return [
            dx + k * x,
            dy - k * y
        ];
    }
    transform.invert = function(x, y) {
        return [
            (x - dx) / k * sx,
            (dy - y) / k * sy
        ];
    };
    return transform;
}
function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {
    if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);
    var cosAlpha = _mathJs.cos(alpha), sinAlpha = _mathJs.sin(alpha), a = cosAlpha * k, b = sinAlpha * k, ai = cosAlpha / k, bi = sinAlpha / k, ci = (sinAlpha * dy - cosAlpha * dx) / k, fi = (sinAlpha * dx + cosAlpha * dy) / k;
    function transform(x, y) {
        x *= sx;
        y *= sy;
        return [
            a * x - b * y + dx,
            dy - b * x - a * y
        ];
    }
    transform.invert = function(x, y) {
        return [
            sx * (ai * x - bi * y + ci),
            sy * (fi - bi * x - ai * y)
        ];
    };
    return transform;
}
function projection(project) {
    return projectionMutator(function() {
        return project;
    })();
}
exports.default = projection;
function projectionMutator(projectAt) {
    var project, k = 150, x = 480, y = 250, lambda = 0, phi = 0, deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, alpha = 0, sx = 1, sy = 1, theta = null, preclip = _antimeridianJsDefault.default, x0 = null, y0, x1, y1, postclip = _identityJsDefault.default, delta2 = 0.5, projectResample, projectTransform, projectRotateTransform, cache, cacheStream;
    function projection1(point) {
        return projectRotateTransform(point[0] * _mathJs.radians, point[1] * _mathJs.radians);
    }
    function invert(point) {
        point = projectRotateTransform.invert(point[0], point[1]);
        return point && [
            point[0] * _mathJs.degrees,
            point[1] * _mathJs.degrees
        ];
    }
    projection1.stream = function(stream) {
        return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
    };
    projection1.preclip = function(_) {
        return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
    };
    projection1.postclip = function(_) {
        return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
    };
    projection1.clipAngle = function(_) {
        return arguments.length ? (preclip = +_ ? _circleJsDefault.default(theta = _ * _mathJs.radians) : (theta = null, _antimeridianJsDefault.default), reset()) : theta * _mathJs.degrees;
    };
    projection1.clipExtent = function(_) {
        return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identityJsDefault.default) : _rectangleJsDefault.default(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [
            [
                x0,
                y0
            ],
            [
                x1,
                y1
            ]
        ];
    };
    projection1.scale = function(_) {
        return arguments.length ? (k = +_, recenter()) : k;
    };
    projection1.translate = function(_) {
        return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [
            x,
            y
        ];
    };
    projection1.center = function(_) {
        return arguments.length ? (lambda = _[0] % 360 * _mathJs.radians, phi = _[1] % 360 * _mathJs.radians, recenter()) : [
            lambda * _mathJs.degrees,
            phi * _mathJs.degrees
        ];
    };
    projection1.rotate = function(_) {
        return arguments.length ? (deltaLambda = _[0] % 360 * _mathJs.radians, deltaPhi = _[1] % 360 * _mathJs.radians, deltaGamma = _.length > 2 ? _[2] % 360 * _mathJs.radians : 0, recenter()) : [
            deltaLambda * _mathJs.degrees,
            deltaPhi * _mathJs.degrees,
            deltaGamma * _mathJs.degrees
        ];
    };
    projection1.angle = function(_) {
        return arguments.length ? (alpha = _ % 360 * _mathJs.radians, recenter()) : alpha * _mathJs.degrees;
    };
    projection1.reflectX = function(_) {
        return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;
    };
    projection1.reflectY = function(_) {
        return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;
    };
    projection1.precision = function(_) {
        return arguments.length ? (projectResample = _resampleJsDefault.default(projectTransform, delta2 = _ * _), reset()) : _mathJs.sqrt(delta2);
    };
    projection1.fitExtent = function(extent, object) {
        return _fitJs.fitExtent(projection1, extent, object);
    };
    projection1.fitSize = function(size, object) {
        return _fitJs.fitSize(projection1, size, object);
    };
    projection1.fitWidth = function(width, object) {
        return _fitJs.fitWidth(projection1, width, object);
    };
    projection1.fitHeight = function(height, object) {
        return _fitJs.fitHeight(projection1, height, object);
    };
    function recenter() {
        var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)), transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);
        rotate = _rotationJs.rotateRadians(deltaLambda, deltaPhi, deltaGamma);
        projectTransform = _composeJsDefault.default(project, transform);
        projectRotateTransform = _composeJsDefault.default(rotate, projectTransform);
        projectResample = _resampleJsDefault.default(projectTransform, delta2);
        return reset();
    }
    function reset() {
        cache = cacheStream = null;
        return projection1;
    }
    return function() {
        project = projectAt.apply(this, arguments);
        projection1.invert = project.invert && invert;
        return recenter();
    };
}

},{"../clip/antimeridian.js":"5t4iH","../clip/circle.js":"iIbFI","../clip/rectangle.js":"2xswT","../compose.js":"hx08x","../identity.js":"kdbfP","../math.js":"7JyYl","../rotation.js":"54Lv8","../transform.js":"feffG","./fit.js":"4as5X","./resample.js":"6CVBg","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"feffG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "transformer", ()=>transformer
);
exports.default = function(methods) {
    return {
        stream: transformer(methods)
    };
};
function transformer(methods) {
    return function(stream) {
        var s = new TransformStream;
        for(var key in methods)s[key] = methods[key];
        s.stream = stream;
        return s;
    };
}
function TransformStream() {
}
TransformStream.prototype = {
    constructor: TransformStream,
    point: function(x, y) {
        this.stream.point(x, y);
    },
    sphere: function() {
        this.stream.sphere();
    },
    lineStart: function() {
        this.stream.lineStart();
    },
    lineEnd: function() {
        this.stream.lineEnd();
    },
    polygonStart: function() {
        this.stream.polygonStart();
    },
    polygonEnd: function() {
        this.stream.polygonEnd();
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"4as5X":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fitExtent", ()=>fitExtent
);
parcelHelpers.export(exports, "fitSize", ()=>fitSize
);
parcelHelpers.export(exports, "fitWidth", ()=>fitWidth
);
parcelHelpers.export(exports, "fitHeight", ()=>fitHeight
);
var _streamJs = require("../stream.js");
var _streamJsDefault = parcelHelpers.interopDefault(_streamJs);
var _boundsJs = require("../path/bounds.js");
var _boundsJsDefault = parcelHelpers.interopDefault(_boundsJs);
function fit(projection, fitBounds, object) {
    var clip = projection.clipExtent && projection.clipExtent();
    projection.scale(150).translate([
        0,
        0
    ]);
    if (clip != null) projection.clipExtent(null);
    _streamJsDefault.default(object, projection.stream(_boundsJsDefault.default));
    fitBounds(_boundsJsDefault.default.result());
    if (clip != null) projection.clipExtent(clip);
    return projection;
}
function fitExtent(projection, extent, object) {
    return fit(projection, function(b) {
        var w = extent[1][0] - extent[0][0], h = extent[1][1] - extent[0][1], k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])), x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2, y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
        projection.scale(150 * k).translate([
            x,
            y
        ]);
    }, object);
}
function fitSize(projection, size, object) {
    return fitExtent(projection, [
        [
            0,
            0
        ],
        size
    ], object);
}
function fitWidth(projection, width, object) {
    return fit(projection, function(b) {
        var w = +width, k = w / (b[1][0] - b[0][0]), x = (w - k * (b[1][0] + b[0][0])) / 2, y = -k * b[0][1];
        projection.scale(150 * k).translate([
            x,
            y
        ]);
    }, object);
}
function fitHeight(projection, height, object) {
    return fit(projection, function(b) {
        var h = +height, k = h / (b[1][1] - b[0][1]), x = -k * b[0][0], y = (h - k * (b[1][1] + b[0][1])) / 2;
        projection.scale(150 * k).translate([
            x,
            y
        ]);
    }, object);
}

},{"../stream.js":"jck2Y","../path/bounds.js":"bA46O","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6CVBg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _cartesianJs = require("../cartesian.js");
var _mathJs = require("../math.js");
var _transformJs = require("../transform.js");
var maxDepth = 16, cosMinDistance = _mathJs.cos(30 * _mathJs.radians); // cos(minimum angular distance)
exports.default = function(project, delta2) {
    return +delta2 ? resample(project, delta2) : resampleNone(project);
};
function resampleNone(project) {
    return _transformJs.transformer({
        point: function(x, y) {
            x = project(x, y);
            this.stream.point(x[0], x[1]);
        }
    });
}
function resample(project, delta2) {
    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
        var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
        if (d2 > 4 * delta2 && depth--) {
            var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = _mathJs.sqrt(a * a + b * b + c * c), phi2 = _mathJs.asin(c /= m), lambda2 = _mathJs.abs(_mathJs.abs(c) - 1) < _mathJs.epsilon || _mathJs.abs(lambda0 - lambda1) < _mathJs.epsilon ? (lambda0 + lambda1) / 2 : _mathJs.atan2(b, a), p = project(lambda2, phi2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
            if (dz * dz / d2 > delta2 // perpendicular projected distance
             || _mathJs.abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
             || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
                resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
                stream.point(x2, y2);
                resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
            }
        }
    }
    return function(stream) {
        var lambda00, x00, y00, a00, b00, c00, lambda0, x0, y0, a0, b0, c0; // previous point
        var resampleStream = {
            point: point,
            lineStart: lineStart,
            lineEnd: lineEnd,
            polygonStart: function() {
                stream.polygonStart();
                resampleStream.lineStart = ringStart;
            },
            polygonEnd: function() {
                stream.polygonEnd();
                resampleStream.lineStart = lineStart;
            }
        };
        function point(x, y) {
            x = project(x, y);
            stream.point(x[0], x[1]);
        }
        function lineStart() {
            x0 = NaN;
            resampleStream.point = linePoint;
            stream.lineStart();
        }
        function linePoint(lambda, phi) {
            var c = _cartesianJs.cartesian([
                lambda,
                phi
            ]), p = project(lambda, phi);
            resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
            stream.point(x0, y0);
        }
        function lineEnd() {
            resampleStream.point = point;
            stream.lineEnd();
        }
        function ringStart() {
            lineStart();
            resampleStream.point = ringPoint;
            resampleStream.lineEnd = ringEnd;
        }
        function ringPoint(lambda, phi) {
            linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
            resampleStream.point = linePoint;
        }
        function ringEnd() {
            resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
            resampleStream.lineEnd = lineEnd;
            lineEnd();
        }
        return resampleStream;
    };
}

},{"../cartesian.js":"evaJG","../math.js":"7JyYl","../transform.js":"feffG","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"2kWMW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cylindricalEqualAreaRaw", ()=>cylindricalEqualAreaRaw
);
var _mathJs = require("../math.js");
function cylindricalEqualAreaRaw(phi0) {
    var cosPhi0 = _mathJs.cos(phi0);
    function forward(lambda, phi) {
        return [
            lambda * cosPhi0,
            _mathJs.sin(phi) / cosPhi0
        ];
    }
    forward.invert = function(x, y) {
        return [
            x / cosPhi0,
            _mathJs.asin(y * cosPhi0)
        ];
    };
    return forward;
}

},{"../math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"YtNMK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _mathJs = require("../math.js");
var _albersJs = require("./albers.js");
var _albersJsDefault = parcelHelpers.interopDefault(_albersJs);
var _conicEqualAreaJs = require("./conicEqualArea.js");
var _conicEqualAreaJsDefault = parcelHelpers.interopDefault(_conicEqualAreaJs);
var _fitJs = require("./fit.js");
// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams) {
    var n = streams.length;
    return {
        point: function(x, y) {
            var i = -1;
            while(++i < n)streams[i].point(x, y);
        },
        sphere: function() {
            var i = -1;
            while(++i < n)streams[i].sphere();
        },
        lineStart: function() {
            var i = -1;
            while(++i < n)streams[i].lineStart();
        },
        lineEnd: function() {
            var i = -1;
            while(++i < n)streams[i].lineEnd();
        },
        polygonStart: function() {
            var i = -1;
            while(++i < n)streams[i].polygonStart();
        },
        polygonEnd: function() {
            var i = -1;
            while(++i < n)streams[i].polygonEnd();
        }
    };
}
exports.default = function() {
    var cache, cacheStream, lower48 = _albersJsDefault.default(), lower48Point, alaska = _conicEqualAreaJsDefault.default().rotate([
        154,
        0
    ]).center([
        -2,
        58.5
    ]).parallels([
        55,
        65
    ]), alaskaPoint, hawaii = _conicEqualAreaJsDefault.default().rotate([
        157,
        0
    ]).center([
        -3,
        19.9
    ]).parallels([
        8,
        18
    ]), hawaiiPoint, point, pointStream = {
        point: function(x, y) {
            point = [
                x,
                y
            ];
        }
    };
    function albersUsa(coordinates) {
        var x = coordinates[0], y = coordinates[1];
        return point = null, (lower48Point.point(x, y), point) || (alaskaPoint.point(x, y), point) || (hawaiiPoint.point(x, y), point);
    }
    albersUsa.invert = function(coordinates) {
        var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
        return (y >= 0.12 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);
    };
    albersUsa.stream = function(stream) {
        return cache && cacheStream === stream ? cache : cache = multiplex([
            lower48.stream(cacheStream = stream),
            alaska.stream(stream),
            hawaii.stream(stream)
        ]);
    };
    albersUsa.precision = function(_) {
        if (!arguments.length) return lower48.precision();
        lower48.precision(_), alaska.precision(_), hawaii.precision(_);
        return reset();
    };
    albersUsa.scale = function(_) {
        if (!arguments.length) return lower48.scale();
        lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
        return albersUsa.translate(lower48.translate());
    };
    albersUsa.translate = function(_) {
        if (!arguments.length) return lower48.translate();
        var k = lower48.scale(), x = +_[0], y = +_[1];
        lower48Point = lower48.translate(_).clipExtent([
            [
                x - 0.455 * k,
                y - 0.238 * k
            ],
            [
                x + 0.455 * k,
                y + 0.238 * k
            ]
        ]).stream(pointStream);
        alaskaPoint = alaska.translate([
            x - 0.307 * k,
            y + 0.201 * k
        ]).clipExtent([
            [
                x - 0.425 * k + _mathJs.epsilon,
                y + 0.12 * k + _mathJs.epsilon
            ],
            [
                x - 0.214 * k - _mathJs.epsilon,
                y + 0.234 * k - _mathJs.epsilon
            ]
        ]).stream(pointStream);
        hawaiiPoint = hawaii.translate([
            x - 0.205 * k,
            y + 0.212 * k
        ]).clipExtent([
            [
                x - 0.214 * k + _mathJs.epsilon,
                y + 0.166 * k + _mathJs.epsilon
            ],
            [
                x - 0.115 * k - _mathJs.epsilon,
                y + 0.234 * k - _mathJs.epsilon
            ]
        ]).stream(pointStream);
        return reset();
    };
    albersUsa.fitExtent = function(extent, object) {
        return _fitJs.fitExtent(albersUsa, extent, object);
    };
    albersUsa.fitSize = function(size, object) {
        return _fitJs.fitSize(albersUsa, size, object);
    };
    albersUsa.fitWidth = function(width, object) {
        return _fitJs.fitWidth(albersUsa, width, object);
    };
    albersUsa.fitHeight = function(height, object) {
        return _fitJs.fitHeight(albersUsa, height, object);
    };
    function reset() {
        cache = cacheStream = null;
        return albersUsa;
    }
    return albersUsa.scale(1070);
};

},{"../math.js":"7JyYl","./albers.js":"3Xlta","./conicEqualArea.js":"c9BXq","./fit.js":"4as5X","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"7HnSn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "azimuthalEqualAreaRaw", ()=>azimuthalEqualAreaRaw
);
var _mathJs = require("../math.js");
var _azimuthalJs = require("./azimuthal.js");
var _indexJs = require("./index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var azimuthalEqualAreaRaw = _azimuthalJs.azimuthalRaw(function(cxcy) {
    return _mathJs.sqrt(2 / (1 + cxcy));
});
azimuthalEqualAreaRaw.invert = _azimuthalJs.azimuthalInvert(function(z) {
    return 2 * _mathJs.asin(z / 2);
});
exports.default = function() {
    return _indexJsDefault.default(azimuthalEqualAreaRaw).scale(124.75).clipAngle(179.999);
};

},{"../math.js":"7JyYl","./azimuthal.js":"cX4Jq","./index.js":"i24sF","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"cX4Jq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "azimuthalRaw", ()=>azimuthalRaw
);
parcelHelpers.export(exports, "azimuthalInvert", ()=>azimuthalInvert
);
var _mathJs = require("../math.js");
function azimuthalRaw(scale) {
    return function(x, y) {
        var cx = _mathJs.cos(x), cy = _mathJs.cos(y), k = scale(cx * cy);
        if (k === Infinity) return [
            2,
            0
        ];
        return [
            k * cy * _mathJs.sin(x),
            k * _mathJs.sin(y)
        ];
    };
}
function azimuthalInvert(angle) {
    return function(x, y) {
        var z = _mathJs.sqrt(x * x + y * y), c = angle(z), sc = _mathJs.sin(c), cc = _mathJs.cos(c);
        return [
            _mathJs.atan2(x * sc, z * cc),
            _mathJs.asin(z && y * sc / z)
        ];
    };
}

},{"../math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"ggmAs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "azimuthalEquidistantRaw", ()=>azimuthalEquidistantRaw
);
var _mathJs = require("../math.js");
var _azimuthalJs = require("./azimuthal.js");
var _indexJs = require("./index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var azimuthalEquidistantRaw = _azimuthalJs.azimuthalRaw(function(c) {
    return (c = _mathJs.acos(c)) && c / _mathJs.sin(c);
});
azimuthalEquidistantRaw.invert = _azimuthalJs.azimuthalInvert(function(z) {
    return z;
});
exports.default = function() {
    return _indexJsDefault.default(azimuthalEquidistantRaw).scale(79.4188).clipAngle(179.999);
};

},{"../math.js":"7JyYl","./azimuthal.js":"cX4Jq","./index.js":"i24sF","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"qkL9e":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "conicConformalRaw", ()=>conicConformalRaw
);
var _mathJs = require("../math.js");
var _conicJs = require("./conic.js");
var _mercatorJs = require("./mercator.js");
function tany(y) {
    return _mathJs.tan((_mathJs.halfPi + y) / 2);
}
function conicConformalRaw(y0, y1) {
    var cy0 = _mathJs.cos(y0), n = y0 === y1 ? _mathJs.sin(y0) : _mathJs.log(cy0 / _mathJs.cos(y1)) / _mathJs.log(tany(y1) / tany(y0)), f = cy0 * _mathJs.pow(tany(y0), n) / n;
    if (!n) return _mercatorJs.mercatorRaw;
    function project(x, y) {
        if (f > 0) {
            if (y < -_mathJs.halfPi + _mathJs.epsilon) y = -_mathJs.halfPi + _mathJs.epsilon;
        } else if (y > _mathJs.halfPi - _mathJs.epsilon) y = _mathJs.halfPi - _mathJs.epsilon;
        var r = f / _mathJs.pow(tany(y), n);
        return [
            r * _mathJs.sin(n * x),
            f - r * _mathJs.cos(n * x)
        ];
    }
    project.invert = function(x, y) {
        var fy = f - y, r = _mathJs.sign(n) * _mathJs.sqrt(x * x + fy * fy), l = _mathJs.atan2(x, _mathJs.abs(fy)) * _mathJs.sign(fy);
        if (fy * n < 0) l -= _mathJs.pi * _mathJs.sign(x) * _mathJs.sign(fy);
        return [
            l / n,
            2 * _mathJs.atan(_mathJs.pow(f / r, 1 / n)) - _mathJs.halfPi
        ];
    };
    return project;
}
exports.default = function() {
    return _conicJs.conicProjection(conicConformalRaw).scale(109.5).parallels([
        30,
        30
    ]);
};

},{"../math.js":"7JyYl","./conic.js":"hA53y","./mercator.js":"fE71g","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"fE71g":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mercatorRaw", ()=>mercatorRaw
);
parcelHelpers.export(exports, "mercatorProjection", ()=>mercatorProjection
);
var _mathJs = require("../math.js");
var _rotationJs = require("../rotation.js");
var _rotationJsDefault = parcelHelpers.interopDefault(_rotationJs);
var _indexJs = require("./index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function mercatorRaw(lambda, phi) {
    return [
        lambda,
        _mathJs.log(_mathJs.tan((_mathJs.halfPi + phi) / 2))
    ];
}
mercatorRaw.invert = function(x, y) {
    return [
        x,
        2 * _mathJs.atan(_mathJs.exp(y)) - _mathJs.halfPi
    ];
};
exports.default = function() {
    return mercatorProjection(mercatorRaw).scale(961 / _mathJs.tau);
};
function mercatorProjection(project) {
    var m = _indexJsDefault.default(project), center = m.center, scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, x0 = null, y0, x1, y1; // clip extent
    m.scale = function(_) {
        return arguments.length ? (scale(_), reclip()) : scale();
    };
    m.translate = function(_) {
        return arguments.length ? (translate(_), reclip()) : translate();
    };
    m.center = function(_) {
        return arguments.length ? (center(_), reclip()) : center();
    };
    m.clipExtent = function(_) {
        return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [
            [
                x0,
                y0
            ],
            [
                x1,
                y1
            ]
        ];
    };
    function reclip() {
        var k = _mathJs.pi * scale(), t = m(_rotationJsDefault.default(m.rotate()).invert([
            0,
            0
        ]));
        return clipExtent(x0 == null ? [
            [
                t[0] - k,
                t[1] - k
            ],
            [
                t[0] + k,
                t[1] + k
            ]
        ] : project === mercatorRaw ? [
            [
                Math.max(t[0] - k, x0),
                y0
            ],
            [
                Math.min(t[0] + k, x1),
                y1
            ]
        ] : [
            [
                x0,
                Math.max(t[1] - k, y0)
            ],
            [
                x1,
                Math.min(t[1] + k, y1)
            ]
        ]);
    }
    return reclip();
}

},{"../math.js":"7JyYl","../rotation.js":"54Lv8","./index.js":"i24sF","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"i4E3R":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "conicEquidistantRaw", ()=>conicEquidistantRaw
);
var _mathJs = require("../math.js");
var _conicJs = require("./conic.js");
var _equirectangularJs = require("./equirectangular.js");
function conicEquidistantRaw(y0, y1) {
    var cy0 = _mathJs.cos(y0), n = y0 === y1 ? _mathJs.sin(y0) : (cy0 - _mathJs.cos(y1)) / (y1 - y0), g = cy0 / n + y0;
    if (_mathJs.abs(n) < _mathJs.epsilon) return _equirectangularJs.equirectangularRaw;
    function project(x, y) {
        var gy = g - y, nx = n * x;
        return [
            gy * _mathJs.sin(nx),
            g - gy * _mathJs.cos(nx)
        ];
    }
    project.invert = function(x, y) {
        var gy = g - y, l = _mathJs.atan2(x, _mathJs.abs(gy)) * _mathJs.sign(gy);
        if (gy * n < 0) l -= _mathJs.pi * _mathJs.sign(x) * _mathJs.sign(gy);
        return [
            l / n,
            g - _mathJs.sign(n) * _mathJs.sqrt(x * x + gy * gy)
        ];
    };
    return project;
}
exports.default = function() {
    return _conicJs.conicProjection(conicEquidistantRaw).scale(131.154).center([
        0,
        13.9389
    ]);
};

},{"../math.js":"7JyYl","./conic.js":"hA53y","./equirectangular.js":"6r5uk","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6r5uk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "equirectangularRaw", ()=>equirectangularRaw
);
var _indexJs = require("./index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function equirectangularRaw(lambda, phi) {
    return [
        lambda,
        phi
    ];
}
equirectangularRaw.invert = equirectangularRaw;
exports.default = function() {
    return _indexJsDefault.default(equirectangularRaw).scale(152.63);
};

},{"./index.js":"i24sF","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"2iIrI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "equalEarthRaw", ()=>equalEarthRaw
);
var _indexJs = require("./index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _mathJs = require("../math.js");
var A1 = 1.340264, A2 = -0.081106, A3 = 0.000893, A4 = 0.003796, M = _mathJs.sqrt(3) / 2, iterations = 12;
function equalEarthRaw(lambda, phi) {
    var l = _mathJs.asin(M * _mathJs.sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;
    return [
        lambda * _mathJs.cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),
        l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))
    ];
}
equalEarthRaw.invert = function(x, y) {
    var l = y, l2 = l * l, l6 = l2 * l2 * l2;
    for(var i = 0, delta, fy, fpy; i < iterations; ++i){
        fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
        fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
        l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
        if (_mathJs.abs(delta) < _mathJs.epsilon2) break;
    }
    return [
        M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / _mathJs.cos(l),
        _mathJs.asin(_mathJs.sin(l) / M)
    ];
};
exports.default = function() {
    return _indexJsDefault.default(equalEarthRaw).scale(177.158);
};

},{"./index.js":"i24sF","../math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"gz9Xc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "gnomonicRaw", ()=>gnomonicRaw
);
var _mathJs = require("../math.js");
var _azimuthalJs = require("./azimuthal.js");
var _indexJs = require("./index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function gnomonicRaw(x, y) {
    var cy = _mathJs.cos(y), k = _mathJs.cos(x) * cy;
    return [
        cy * _mathJs.sin(x) / k,
        _mathJs.sin(y) / k
    ];
}
gnomonicRaw.invert = _azimuthalJs.azimuthalInvert(_mathJs.atan);
exports.default = function() {
    return _indexJsDefault.default(gnomonicRaw).scale(144.049).clipAngle(60);
};

},{"../math.js":"7JyYl","./azimuthal.js":"cX4Jq","./index.js":"i24sF","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"ipPmW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _rectangleJs = require("../clip/rectangle.js");
var _rectangleJsDefault = parcelHelpers.interopDefault(_rectangleJs);
var _identityJs = require("../identity.js");
var _identityJsDefault = parcelHelpers.interopDefault(_identityJs);
var _transformJs = require("../transform.js");
var _fitJs = require("./fit.js");
var _mathJs = require("../math.js");
exports.default = function() {
    var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, alpha = 0, ca, sa, x0 = null, y0, x1, y1, kx = 1, ky = 1, transform = _transformJs.transformer({
        point: function(x, y) {
            var p = projection([
                x,
                y
            ]);
            this.stream.point(p[0], p[1]);
        }
    }), postclip = _identityJsDefault.default, cache, cacheStream;
    function reset() {
        kx = k * sx;
        ky = k * sy;
        cache = cacheStream = null;
        return projection;
    }
    function projection(p) {
        var x = p[0] * kx, y = p[1] * ky;
        if (alpha) {
            var t = y * ca - x * sa;
            x = x * ca + y * sa;
            y = t;
        }
        return [
            x + tx,
            y + ty
        ];
    }
    projection.invert = function(p) {
        var x = p[0] - tx, y = p[1] - ty;
        if (alpha) {
            var t = y * ca + x * sa;
            x = x * ca - y * sa;
            y = t;
        }
        return [
            x / kx,
            y / ky
        ];
    };
    projection.stream = function(stream) {
        return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
    };
    projection.postclip = function(_) {
        return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
    };
    projection.clipExtent = function(_) {
        return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identityJsDefault.default) : _rectangleJsDefault.default(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [
            [
                x0,
                y0
            ],
            [
                x1,
                y1
            ]
        ];
    };
    projection.scale = function(_) {
        return arguments.length ? (k = +_, reset()) : k;
    };
    projection.translate = function(_) {
        return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [
            tx,
            ty
        ];
    };
    projection.angle = function(_) {
        return arguments.length ? (alpha = _ % 360 * _mathJs.radians, sa = _mathJs.sin(alpha), ca = _mathJs.cos(alpha), reset()) : alpha * _mathJs.degrees;
    };
    projection.reflectX = function(_) {
        return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;
    };
    projection.reflectY = function(_) {
        return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;
    };
    projection.fitExtent = function(extent, object) {
        return _fitJs.fitExtent(projection, extent, object);
    };
    projection.fitSize = function(size, object) {
        return _fitJs.fitSize(projection, size, object);
    };
    projection.fitWidth = function(width, object) {
        return _fitJs.fitWidth(projection, width, object);
    };
    projection.fitHeight = function(height, object) {
        return _fitJs.fitHeight(projection, height, object);
    };
    return projection;
};

},{"../clip/rectangle.js":"2xswT","../identity.js":"kdbfP","../transform.js":"feffG","./fit.js":"4as5X","../math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"gQDpu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "naturalEarth1Raw", ()=>naturalEarth1Raw
);
var _indexJs = require("./index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _mathJs = require("../math.js");
function naturalEarth1Raw(lambda, phi) {
    var phi2 = phi * phi, phi4 = phi2 * phi2;
    return [
        lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),
        phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))
    ];
}
naturalEarth1Raw.invert = function(x, y) {
    var phi = y, i = 25, delta;
    do {
        var phi2 = phi * phi, phi4 = phi2 * phi2;
        phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.045255 + phi4 * (-0.311325 + 0.259866 * phi2 - 0.005916 * 11 * phi4)));
    }while (_mathJs.abs(delta) > _mathJs.epsilon && --i > 0)
    return [
        x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),
        phi
    ];
};
exports.default = function() {
    return _indexJsDefault.default(naturalEarth1Raw).scale(175.295);
};

},{"./index.js":"i24sF","../math.js":"7JyYl","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"3Wbli":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "orthographicRaw", ()=>orthographicRaw
);
var _mathJs = require("../math.js");
var _azimuthalJs = require("./azimuthal.js");
var _indexJs = require("./index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function orthographicRaw(x, y) {
    return [
        _mathJs.cos(y) * _mathJs.sin(x),
        _mathJs.sin(y)
    ];
}
orthographicRaw.invert = _azimuthalJs.azimuthalInvert(_mathJs.asin);
exports.default = function() {
    return _indexJsDefault.default(orthographicRaw).scale(249.5).clipAngle(90 + _mathJs.epsilon);
};

},{"../math.js":"7JyYl","./azimuthal.js":"cX4Jq","./index.js":"i24sF","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hIzPd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "stereographicRaw", ()=>stereographicRaw
);
var _mathJs = require("../math.js");
var _azimuthalJs = require("./azimuthal.js");
var _indexJs = require("./index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function stereographicRaw(x, y) {
    var cy = _mathJs.cos(y), k = 1 + _mathJs.cos(x) * cy;
    return [
        cy * _mathJs.sin(x) / k,
        _mathJs.sin(y) / k
    ];
}
stereographicRaw.invert = _azimuthalJs.azimuthalInvert(function(z) {
    return 2 * _mathJs.atan(z);
});
exports.default = function() {
    return _indexJsDefault.default(stereographicRaw).scale(250).clipAngle(142);
};

},{"../math.js":"7JyYl","./azimuthal.js":"cX4Jq","./index.js":"i24sF","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"4SRkZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "transverseMercatorRaw", ()=>transverseMercatorRaw
);
var _mathJs = require("../math.js");
var _mercatorJs = require("./mercator.js");
function transverseMercatorRaw(lambda, phi) {
    return [
        _mathJs.log(_mathJs.tan((_mathJs.halfPi + phi) / 2)),
        -lambda
    ];
}
transverseMercatorRaw.invert = function(x, y) {
    return [
        -y,
        2 * _mathJs.atan(_mathJs.exp(x)) - _mathJs.halfPi
    ];
};
exports.default = function() {
    var m = _mercatorJs.mercatorProjection(transverseMercatorRaw), center = m.center, rotate = m.rotate;
    m.center = function(_) {
        return arguments.length ? center([
            -_[1],
            _[0]
        ]) : (_ = center(), [
            _[1],
            -_[0]
        ]);
    };
    m.rotate = function(_) {
        return arguments.length ? rotate([
            _[0],
            _[1],
            _.length > 2 ? _[2] + 90 : 90
        ]) : (_ = rotate(), [
            _[0],
            _[1],
            _[2] - 90
        ]);
    };
    return rotate([
        0,
        0,
        90
    ]).scale(159.155);
};

},{"../math.js":"7JyYl","./mercator.js":"fE71g","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"dArDf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "bbox", ()=>_bboxJsDefault.default
);
parcelHelpers.export(exports, "feature", ()=>_featureJsDefault.default
);
parcelHelpers.export(exports, "mesh", ()=>_meshJsDefault.default
);
parcelHelpers.export(exports, "meshArcs", ()=>_meshJs.meshArcs
);
parcelHelpers.export(exports, "merge", ()=>_mergeJsDefault.default
);
parcelHelpers.export(exports, "mergeArcs", ()=>_mergeJs.mergeArcs
);
parcelHelpers.export(exports, "neighbors", ()=>_neighborsJsDefault.default
);
parcelHelpers.export(exports, "quantize", ()=>_quantizeJsDefault.default
);
parcelHelpers.export(exports, "transform", ()=>_transformJsDefault.default
);
parcelHelpers.export(exports, "untransform", ()=>_untransformJsDefault.default
);
var _bboxJs = require("./bbox.js");
var _bboxJsDefault = parcelHelpers.interopDefault(_bboxJs);
var _featureJs = require("./feature.js");
var _featureJsDefault = parcelHelpers.interopDefault(_featureJs);
var _meshJs = require("./mesh.js");
var _meshJsDefault = parcelHelpers.interopDefault(_meshJs);
var _mergeJs = require("./merge.js");
var _mergeJsDefault = parcelHelpers.interopDefault(_mergeJs);
var _neighborsJs = require("./neighbors.js");
var _neighborsJsDefault = parcelHelpers.interopDefault(_neighborsJs);
var _quantizeJs = require("./quantize.js");
var _quantizeJsDefault = parcelHelpers.interopDefault(_quantizeJs);
var _transformJs = require("./transform.js");
var _transformJsDefault = parcelHelpers.interopDefault(_transformJs);
var _untransformJs = require("./untransform.js");
var _untransformJsDefault = parcelHelpers.interopDefault(_untransformJs);

},{"./bbox.js":"1oy1b","./feature.js":"6f9ml","./mesh.js":"1wvts","./merge.js":"i0R6x","./neighbors.js":"hn7Jm","./quantize.js":"dwhkn","./transform.js":"3WBxE","./untransform.js":"214h8","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"1oy1b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _transformJs = require("./transform.js");
var _transformJsDefault = parcelHelpers.interopDefault(_transformJs);
exports.default = function(topology) {
    var t = _transformJsDefault.default(topology.transform), key, x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;
    function bboxPoint(p) {
        p = t(p);
        if (p[0] < x0) x0 = p[0];
        if (p[0] > x1) x1 = p[0];
        if (p[1] < y0) y0 = p[1];
        if (p[1] > y1) y1 = p[1];
    }
    function bboxGeometry(o) {
        switch(o.type){
            case "GeometryCollection":
                o.geometries.forEach(bboxGeometry);
                break;
            case "Point":
                bboxPoint(o.coordinates);
                break;
            case "MultiPoint":
                o.coordinates.forEach(bboxPoint);
                break;
        }
    }
    topology.arcs.forEach(function(arc) {
        var i = -1, n = arc.length, p;
        while(++i < n){
            p = t(arc[i], i);
            if (p[0] < x0) x0 = p[0];
            if (p[0] > x1) x1 = p[0];
            if (p[1] < y0) y0 = p[1];
            if (p[1] > y1) y1 = p[1];
        }
    });
    for(key in topology.objects)bboxGeometry(topology.objects[key]);
    return [
        x0,
        y0,
        x1,
        y1
    ];
};

},{"./transform.js":"3WBxE","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"3WBxE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _identityJs = require("./identity.js");
var _identityJsDefault = parcelHelpers.interopDefault(_identityJs);
exports.default = function(transform) {
    if (transform == null) return _identityJsDefault.default;
    var x0, y0, kx = transform.scale[0], ky = transform.scale[1], dx = transform.translate[0], dy = transform.translate[1];
    return function(input, i) {
        if (!i) x0 = y0 = 0;
        var j = 2, n = input.length, output = new Array(n);
        output[0] = (x0 += input[0]) * kx + dx;
        output[1] = (y0 += input[1]) * ky + dy;
        while(j < n)output[j] = input[j], ++j;
        return output;
    };
};

},{"./identity.js":"1j8ma","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"1j8ma":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(x) {
    return x;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6f9ml":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "object", ()=>object
);
var _reverseJs = require("./reverse.js");
var _reverseJsDefault = parcelHelpers.interopDefault(_reverseJs);
var _transformJs = require("./transform.js");
var _transformJsDefault = parcelHelpers.interopDefault(_transformJs);
exports.default = function(topology, o1) {
    if (typeof o1 === "string") o1 = topology.objects[o1];
    return o1.type === "GeometryCollection" ? {
        type: "FeatureCollection",
        features: o1.geometries.map(function(o) {
            return feature(topology, o);
        })
    } : feature(topology, o1);
};
function feature(topology, o) {
    var id = o.id, bbox = o.bbox, properties = o.properties == null ? {
    } : o.properties, geometry = object(topology, o);
    return id == null && bbox == null ? {
        type: "Feature",
        properties: properties,
        geometry: geometry
    } : bbox == null ? {
        type: "Feature",
        id: id,
        properties: properties,
        geometry: geometry
    } : {
        type: "Feature",
        id: id,
        bbox: bbox,
        properties: properties,
        geometry: geometry
    };
}
function object(topology, o2) {
    var transformPoint = _transformJsDefault.default(topology.transform), arcs1 = topology.arcs;
    function arc(i, points) {
        if (points.length) points.pop();
        for(var a = arcs1[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k)points.push(transformPoint(a[k], k));
        if (i < 0) _reverseJsDefault.default(points, n);
    }
    function point(p) {
        return transformPoint(p);
    }
    function line(arcs) {
        var points = [];
        for(var i = 0, n = arcs.length; i < n; ++i)arc(arcs[i], points);
        if (points.length < 2) points.push(points[0]); // This should never happen per the specification.
        return points;
    }
    function ring(arcs) {
        var points = line(arcs);
        while(points.length < 4)points.push(points[0]); // This may happen if an arc has only two points.
        return points;
    }
    function polygon(arcs) {
        return arcs.map(ring);
    }
    function geometry(o) {
        var type = o.type, coordinates;
        switch(type){
            case "GeometryCollection":
                return {
                    type: type,
                    geometries: o.geometries.map(geometry)
                };
            case "Point":
                coordinates = point(o.coordinates);
                break;
            case "MultiPoint":
                coordinates = o.coordinates.map(point);
                break;
            case "LineString":
                coordinates = line(o.arcs);
                break;
            case "MultiLineString":
                coordinates = o.arcs.map(line);
                break;
            case "Polygon":
                coordinates = polygon(o.arcs);
                break;
            case "MultiPolygon":
                coordinates = o.arcs.map(polygon);
                break;
            default:
                return null;
        }
        return {
            type: type,
            coordinates: coordinates
        };
    }
    return geometry(o2);
}

},{"./reverse.js":"ayIvy","./transform.js":"3WBxE","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"ayIvy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(array, n) {
    var t, j = array.length, i = j - n;
    while(i < --j)t = array[i], array[i++] = array[j], array[j] = t;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"1wvts":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "meshArcs", ()=>meshArcs
);
var _featureJs = require("./feature.js");
var _stitchJs = require("./stitch.js");
var _stitchJsDefault = parcelHelpers.interopDefault(_stitchJs);
exports.default = function(topology) {
    return _featureJs.object(topology, meshArcs.apply(this, arguments));
};
function meshArcs(topology, object, filter) {
    var arcs, i, n;
    if (arguments.length > 1) arcs = extractArcs(topology, object, filter);
    else for(i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i)arcs[i] = i;
    return {
        type: "MultiLineString",
        arcs: _stitchJsDefault.default(topology, arcs)
    };
}
function extractArcs(topology, object, filter) {
    var arcs1 = [], geomsByArc = [], geom;
    function extract0(i) {
        var j = i < 0 ? ~i : i;
        (geomsByArc[j] || (geomsByArc[j] = [])).push({
            i: i,
            g: geom
        });
    }
    function extract1(arcs) {
        arcs.forEach(extract0);
    }
    function extract2(arcs) {
        arcs.forEach(extract1);
    }
    function extract3(arcs) {
        arcs.forEach(extract2);
    }
    function geometry(o) {
        switch(geom = o, o.type){
            case "GeometryCollection":
                o.geometries.forEach(geometry);
                break;
            case "LineString":
                extract1(o.arcs);
                break;
            case "MultiLineString":
            case "Polygon":
                extract2(o.arcs);
                break;
            case "MultiPolygon":
                extract3(o.arcs);
                break;
        }
    }
    geometry(object);
    geomsByArc.forEach(filter == null ? function(geoms) {
        arcs1.push(geoms[0].i);
    } : function(geoms) {
        if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs1.push(geoms[0].i);
    });
    return arcs1;
}

},{"./feature.js":"6f9ml","./stitch.js":"hz1RZ","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hz1RZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(topology, arcs) {
    var stitchedArcs = {
    }, fragmentByStart1 = {
    }, fragmentByEnd1 = {
    }, fragments = [], emptyIndex = -1;
    // Stitch empty arcs first, since they may be subsumed by other arcs.
    arcs.forEach(function(i, j) {
        var arc = topology.arcs[i < 0 ? ~i : i], t;
        if (arc.length < 3 && !arc[1][0] && !arc[1][1]) t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;
    });
    arcs.forEach(function(i) {
        var e = ends(i), start = e[0], end = e[1], f, g;
        if (f = fragmentByEnd1[start]) {
            delete fragmentByEnd1[f.end];
            f.push(i);
            f.end = end;
            if (g = fragmentByStart1[end]) {
                delete fragmentByStart1[g.start];
                var fg = g === f ? f : f.concat(g);
                fragmentByStart1[fg.start = f.start] = fragmentByEnd1[fg.end = g.end] = fg;
            } else fragmentByStart1[f.start] = fragmentByEnd1[f.end] = f;
        } else if (f = fragmentByStart1[end]) {
            delete fragmentByStart1[f.start];
            f.unshift(i);
            f.start = start;
            if (g = fragmentByEnd1[start]) {
                delete fragmentByEnd1[g.end];
                var gf = g === f ? f : g.concat(f);
                fragmentByStart1[gf.start = g.start] = fragmentByEnd1[gf.end = f.end] = gf;
            } else fragmentByStart1[f.start] = fragmentByEnd1[f.end] = f;
        } else {
            f = [
                i
            ];
            fragmentByStart1[f.start = start] = fragmentByEnd1[f.end = end] = f;
        }
    });
    function ends(i) {
        var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;
        if (topology.transform) p1 = [
            0,
            0
        ], arc.forEach(function(dp) {
            p1[0] += dp[0], p1[1] += dp[1];
        });
        else p1 = arc[arc.length - 1];
        return i < 0 ? [
            p1,
            p0
        ] : [
            p0,
            p1
        ];
    }
    function flush(fragmentByEnd, fragmentByStart) {
        for(var k in fragmentByEnd){
            var f = fragmentByEnd[k];
            delete fragmentByStart[f.start];
            delete f.start;
            delete f.end;
            f.forEach(function(i) {
                stitchedArcs[i < 0 ? ~i : i] = 1;
            });
            fragments.push(f);
        }
    }
    flush(fragmentByEnd1, fragmentByStart1);
    flush(fragmentByStart1, fragmentByEnd1);
    arcs.forEach(function(i) {
        if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([
            i
        ]);
    });
    return fragments;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"i0R6x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mergeArcs", ()=>mergeArcs
);
var _featureJs = require("./feature.js");
var _stitchJs = require("./stitch.js");
var _stitchJsDefault = parcelHelpers.interopDefault(_stitchJs);
function planarRingArea(ring) {
    var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;
    while(++i < n)a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];
    return Math.abs(area); // Note: doubled area!
}
exports.default = function(topology) {
    return _featureJs.object(topology, mergeArcs.apply(this, arguments));
};
function mergeArcs(topology, objects) {
    var polygonsByArc = {
    }, polygons1 = [], groups = [];
    objects.forEach(geometry);
    function geometry(o) {
        switch(o.type){
            case "GeometryCollection":
                o.geometries.forEach(geometry);
                break;
            case "Polygon":
                extract(o.arcs);
                break;
            case "MultiPolygon":
                o.arcs.forEach(extract);
                break;
        }
    }
    function extract(polygon) {
        polygon.forEach(function(ring) {
            ring.forEach(function(arc) {
                (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);
            });
        });
        polygons1.push(polygon);
    }
    function area(ring) {
        return planarRingArea(_featureJs.object(topology, {
            type: "Polygon",
            arcs: [
                ring
            ]
        }).coordinates[0]);
    }
    polygons1.forEach(function(polygon1) {
        if (!polygon1._) {
            var group = [], neighbors = [
                polygon1
            ];
            polygon1._ = 1;
            groups.push(group);
            while(polygon1 = neighbors.pop()){
                group.push(polygon1);
                polygon1.forEach(function(ring) {
                    ring.forEach(function(arc) {
                        polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {
                            if (!polygon._) {
                                polygon._ = 1;
                                neighbors.push(polygon);
                            }
                        });
                    });
                });
            }
        }
    });
    polygons1.forEach(function(polygon) {
        delete polygon._;
    });
    return {
        type: "MultiPolygon",
        arcs: groups.map(function(polygons) {
            var arcs = [], n;
            // Extract the exterior (unique) arcs.
            polygons.forEach(function(polygon) {
                polygon.forEach(function(ring) {
                    ring.forEach(function(arc) {
                        if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) arcs.push(arc);
                    });
                });
            });
            // Stitch the arcs into one or more rings.
            arcs = _stitchJsDefault.default(topology, arcs);
            // If more than one ring is returned,
            // at most one of these rings can be the exterior;
            // choose the one with the greatest absolute area.
            if ((n = arcs.length) > 1) {
                for(var i = 1, k = area(arcs[0]), ki, t; i < n; ++i)if ((ki = area(arcs[i])) > k) t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;
            }
            return arcs;
        }).filter(function(arcs) {
            return arcs.length > 0;
        })
    };
}

},{"./feature.js":"6f9ml","./stitch.js":"hz1RZ","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hn7Jm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _bisectJs = require("./bisect.js");
var _bisectJsDefault = parcelHelpers.interopDefault(_bisectJs);
exports.default = function(objects) {
    var indexesByArc = {
    }, neighbors = objects.map(function() {
        return [];
    });
    function line(arcs, i) {
        arcs.forEach(function(a) {
            if (a < 0) a = ~a;
            var o = indexesByArc[a];
            if (o) o.push(i);
            else indexesByArc[a] = [
                i
            ];
        });
    }
    function polygon(arcs, i) {
        arcs.forEach(function(arc) {
            line(arc, i);
        });
    }
    function geometry(o1, i) {
        if (o1.type === "GeometryCollection") o1.geometries.forEach(function(o) {
            geometry(o, i);
        });
        else if (o1.type in geometryType) geometryType[o1.type](o1.arcs, i);
    }
    var geometryType = {
        LineString: line,
        MultiLineString: polygon,
        Polygon: polygon,
        MultiPolygon: function(arcs, i) {
            arcs.forEach(function(arc) {
                polygon(arc, i);
            });
        }
    };
    objects.forEach(geometry);
    for(var i1 in indexesByArc){
        for(var indexes = indexesByArc[i1], m = indexes.length, j = 0; j < m; ++j)for(var k = j + 1; k < m; ++k){
            var ij = indexes[j], ik = indexes[k], n;
            if ((n = neighbors[ij])[i1 = _bisectJsDefault.default(n, ik)] !== ik) n.splice(i1, 0, ik);
            if ((n = neighbors[ik])[i1 = _bisectJsDefault.default(n, ij)] !== ij) n.splice(i1, 0, ij);
        }
    }
    return neighbors;
};

},{"./bisect.js":"htLk5","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"htLk5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(a, x) {
    var lo = 0, hi = a.length;
    while(lo < hi){
        var mid = lo + hi >>> 1;
        if (a[mid] < x) lo = mid + 1;
        else hi = mid;
    }
    return lo;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"dwhkn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _bboxJs = require("./bbox.js");
var _bboxJsDefault = parcelHelpers.interopDefault(_bboxJs);
var _untransformJs = require("./untransform.js");
var _untransformJsDefault = parcelHelpers.interopDefault(_untransformJs);
exports.default = function(topology, transform) {
    if (topology.transform) throw new Error("already quantized");
    if (!transform || !transform.scale) {
        if (!((n = Math.floor(transform)) >= 2)) throw new Error("n must be ≥2");
        box = topology.bbox || _bboxJsDefault.default(topology);
        var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;
        transform = {
            scale: [
                x1 - x0 ? (x1 - x0) / (n - 1) : 1,
                y1 - y0 ? (y1 - y0) / (n - 1) : 1
            ],
            translate: [
                x0,
                y0
            ]
        };
    } else box = topology.bbox;
    var t = _untransformJsDefault.default(transform), box, key, inputs = topology.objects, outputs = {
    };
    function quantizePoint(point) {
        return t(point);
    }
    function quantizeGeometry(input) {
        var output;
        switch(input.type){
            case "GeometryCollection":
                output = {
                    type: "GeometryCollection",
                    geometries: input.geometries.map(quantizeGeometry)
                };
                break;
            case "Point":
                output = {
                    type: "Point",
                    coordinates: quantizePoint(input.coordinates)
                };
                break;
            case "MultiPoint":
                output = {
                    type: "MultiPoint",
                    coordinates: input.coordinates.map(quantizePoint)
                };
                break;
            default:
                return input;
        }
        if (input.id != null) output.id = input.id;
        if (input.bbox != null) output.bbox = input.bbox;
        if (input.properties != null) output.properties = input.properties;
        return output;
    }
    function quantizeArc(input) {
        var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic
        output[0] = t(input[0], 0);
        while(++i < n)if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points
        if (j === 1) output[j++] = [
            0,
            0
        ]; // an arc must have at least two points
        output.length = j;
        return output;
    }
    for(key in inputs)outputs[key] = quantizeGeometry(inputs[key]);
    return {
        type: "Topology",
        bbox: box,
        transform: transform,
        objects: outputs,
        arcs: topology.arcs.map(quantizeArc)
    };
};

},{"./bbox.js":"1oy1b","./untransform.js":"214h8","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"214h8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _identityJs = require("./identity.js");
var _identityJsDefault = parcelHelpers.interopDefault(_identityJs);
exports.default = function(transform) {
    if (transform == null) return _identityJsDefault.default;
    var x0, y0, kx = transform.scale[0], ky = transform.scale[1], dx = transform.translate[0], dy = transform.translate[1];
    return function(input, i) {
        if (!i) x0 = y0 = 0;
        var j = 2, n = input.length, output = new Array(n), x1 = Math.round((input[0] - dx) / kx), y1 = Math.round((input[1] - dy) / ky);
        output[0] = x1 - x0, x0 = x1;
        output[1] = y1 - y0, y0 = y1;
        while(j < n)output[j] = input[j], ++j;
        return output;
    };
};

},{"./identity.js":"1j8ma","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"7E00u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "zoom", ()=>_zoomJsDefault.default
);
parcelHelpers.export(exports, "zoomTransform", ()=>_transformJsDefault.default
);
parcelHelpers.export(exports, "zoomIdentity", ()=>_transformJs.identity
);
var _zoomJs = require("./zoom.js");
var _zoomJsDefault = parcelHelpers.interopDefault(_zoomJs);
var _transformJs = require("./transform.js");
var _transformJsDefault = parcelHelpers.interopDefault(_transformJs);

},{"./zoom.js":"lIHvw","./transform.js":"aPs4a","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"lIHvw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Dispatch = require("d3-dispatch");
var _d3Drag = require("d3-drag");
var _d3Interpolate = require("d3-interpolate");
var _d3Selection = require("d3-selection");
var _d3Transition = require("d3-transition");
var _constantJs = require("./constant.js");
var _constantJsDefault = parcelHelpers.interopDefault(_constantJs);
var _eventJs = require("./event.js");
var _eventJsDefault = parcelHelpers.interopDefault(_eventJs);
var _transformJs = require("./transform.js");
var _noeventJs = require("./noevent.js");
var _noeventJsDefault = parcelHelpers.interopDefault(_noeventJs);
// Ignore right-click, since that should open the context menu.
// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event
function defaultFilter(event) {
    return (!event.ctrlKey || event.type === 'wheel') && !event.button;
}
function defaultExtent() {
    var e = this;
    if (e instanceof SVGElement) {
        e = e.ownerSVGElement || e;
        if (e.hasAttribute("viewBox")) {
            e = e.viewBox.baseVal;
            return [
                [
                    e.x,
                    e.y
                ],
                [
                    e.x + e.width,
                    e.y + e.height
                ]
            ];
        }
        return [
            [
                0,
                0
            ],
            [
                e.width.baseVal.value,
                e.height.baseVal.value
            ]
        ];
    }
    return [
        [
            0,
            0
        ],
        [
            e.clientWidth,
            e.clientHeight
        ]
    ];
}
function defaultTransform() {
    return this.__zoom || _transformJs.identity;
}
function defaultWheelDelta(event) {
    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);
}
function defaultTouchable() {
    return navigator.maxTouchPoints || "ontouchstart" in this;
}
function defaultConstrain(transform, extent, translateExtent) {
    var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0], dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0], dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1], dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
    return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
}
exports.default = function() {
    var filter = defaultFilter, extent1 = defaultExtent, constrain = defaultConstrain, wheelDelta = defaultWheelDelta, touchable = defaultTouchable, scaleExtent = [
        0,
        Infinity
    ], translateExtent = [
        [
            -Infinity,
            -Infinity
        ],
        [
            Infinity,
            Infinity
        ]
    ], duration = 250, interpolate = _d3Interpolate.interpolateZoom, listeners = _d3Dispatch.dispatch("start", "zoom", "end"), touchstarting, touchfirst, touchending, touchDelay = 500, wheelDelay = 150, clickDistance2 = 0, tapDistance = 10;
    function zoom(selection) {
        selection.property("__zoom", defaultTransform).on("wheel.zoom", wheeled).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
    }
    zoom.transform = function(collection, transform, point, event) {
        var selection = collection.selection ? collection.selection() : collection;
        selection.property("__zoom", defaultTransform);
        if (collection !== selection) schedule(collection, transform, point, event);
        else selection.interrupt().each(function() {
            gesture(this, arguments).event(event).start().zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform).end();
        });
    };
    zoom.scaleBy = function(selection, k, p, event) {
        zoom.scaleTo(selection, function() {
            var k0 = this.__zoom.k, k1 = typeof k === "function" ? k.apply(this, arguments) : k;
            return k0 * k1;
        }, p, event);
    };
    zoom.scaleTo = function(selection, k, p, event) {
        zoom.transform(selection, function() {
            var e = extent1.apply(this, arguments), t0 = this.__zoom, p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p, p1 = t0.invert(p0), k1 = typeof k === "function" ? k.apply(this, arguments) : k;
            return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
        }, p, event);
    };
    zoom.translateBy = function(selection, x, y, event) {
        zoom.transform(selection, function() {
            return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent1.apply(this, arguments), translateExtent);
        }, null, event);
    };
    zoom.translateTo = function(selection, x, y, p, event) {
        zoom.transform(selection, function() {
            var e = extent1.apply(this, arguments), t = this.__zoom, p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
            return constrain(_transformJs.identity.translate(p0[0], p0[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);
        }, p, event);
    };
    function scale(transform, k) {
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
        return k === transform.k ? transform : new _transformJs.Transform(k, transform.x, transform.y);
    }
    function translate(transform, p0, p1) {
        var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;
        return x === transform.x && y === transform.y ? transform : new _transformJs.Transform(transform.k, x, y);
    }
    function centroid(extent) {
        return [
            (+extent[0][0] + +extent[1][0]) / 2,
            (+extent[0][1] + +extent[1][1]) / 2
        ];
    }
    function schedule(transition, transform, point, event) {
        transition.on("start.zoom", function() {
            gesture(this, arguments).event(event).start();
        }).on("interrupt.zoom end.zoom", function() {
            gesture(this, arguments).event(event).end();
        }).tween("zoom", function() {
            var that = this, args = arguments, g = gesture(that, args).event(event), e = extent1.apply(that, args), p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point, w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]), a = that.__zoom, b = typeof transform === "function" ? transform.apply(that, args) : transform, i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
            return function(t) {
                if (t === 1) t = b; // Avoid rounding error on end.
                else {
                    var l = i(t), k = w / l[2];
                    t = new _transformJs.Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);
                }
                g.zoom(null, t);
            };
        });
    }
    function gesture(that, args, clean) {
        return !clean && that.__zooming || new Gesture(that, args);
    }
    function Gesture(that, args) {
        this.that = that;
        this.args = args;
        this.active = 0;
        this.sourceEvent = null;
        this.extent = extent1.apply(that, args);
        this.taps = 0;
    }
    Gesture.prototype = {
        event: function(event) {
            if (event) this.sourceEvent = event;
            return this;
        },
        start: function() {
            if (++this.active === 1) {
                this.that.__zooming = this;
                this.emit("start");
            }
            return this;
        },
        zoom: function(key, transform) {
            if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
            if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
            if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
            this.that.__zoom = transform;
            this.emit("zoom");
            return this;
        },
        end: function() {
            if (--this.active === 0) {
                delete this.that.__zooming;
                this.emit("end");
            }
            return this;
        },
        emit: function(type) {
            var d = _d3Selection.select(this.that).datum();
            listeners.call(type, this.that, new _eventJsDefault.default(type, {
                sourceEvent: this.sourceEvent,
                target: zoom,
                type,
                transform: this.that.__zoom,
                dispatch: listeners
            }), d);
        }
    };
    function wheeled(event, ...args) {
        if (!filter.apply(this, arguments)) return;
        var g = gesture(this, args).event(event), t = this.__zoom, k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))), p = _d3Selection.pointer(event);
        // If the mouse is in the same location as before, reuse it.
        // If there were recent wheel events, reset the wheel idle timeout.
        if (g.wheel) {
            if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) g.mouse[1] = t.invert(g.mouse[0] = p);
            clearTimeout(g.wheel);
        } else if (t.k === k) return;
        else {
            g.mouse = [
                p,
                t.invert(p)
            ];
            _d3Transition.interrupt(this);
            g.start();
        }
        _noeventJsDefault.default(event);
        g.wheel = setTimeout(wheelidled, wheelDelay);
        g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));
        function wheelidled() {
            g.wheel = null;
            g.end();
        }
    }
    function mousedowned(event1, ...args) {
        if (touchending || !filter.apply(this, arguments)) return;
        var g = gesture(this, args, true).event(event1), v = _d3Selection.select(event1.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true), p = _d3Selection.pointer(event1, currentTarget), currentTarget = event1.currentTarget, x0 = event1.clientX, y0 = event1.clientY;
        _d3Drag.dragDisable(event1.view);
        _noeventJs.nopropagation(event1);
        g.mouse = [
            p,
            this.__zoom.invert(p)
        ];
        _d3Transition.interrupt(this);
        g.start();
        function mousemoved(event) {
            _noeventJsDefault.default(event);
            if (!g.moved) {
                var dx = event.clientX - x0, dy = event.clientY - y0;
                g.moved = dx * dx + dy * dy > clickDistance2;
            }
            g.event(event).zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = _d3Selection.pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));
        }
        function mouseupped(event) {
            v.on("mousemove.zoom mouseup.zoom", null);
            _d3Drag.dragEnable(event.view, g.moved);
            _noeventJsDefault.default(event);
            g.event(event).end();
        }
    }
    function dblclicked(event, ...args) {
        if (!filter.apply(this, arguments)) return;
        var t0 = this.__zoom, p0 = _d3Selection.pointer(event.changedTouches ? event.changedTouches[0] : event, this), p1 = t0.invert(p0), k1 = t0.k * (event.shiftKey ? 0.5 : 2), t1 = constrain(translate(scale(t0, k1), p0, p1), extent1.apply(this, args), translateExtent);
        _noeventJsDefault.default(event);
        if (duration > 0) _d3Selection.select(this).transition().duration(duration).call(schedule, t1, p0, event);
        else _d3Selection.select(this).call(zoom.transform, t1, p0, event);
    }
    function touchstarted(event, ...args) {
        if (!filter.apply(this, arguments)) return;
        var touches = event.touches, n = touches.length, g = gesture(this, args, event.changedTouches.length === n).event(event), started, i, t, p;
        _noeventJs.nopropagation(event);
        for(i = 0; i < n; ++i){
            t = touches[i], p = _d3Selection.pointer(t, this);
            p = [
                p,
                this.__zoom.invert(p),
                t.identifier
            ];
            if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;
            else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
        }
        if (touchstarting) touchstarting = clearTimeout(touchstarting);
        if (started) {
            if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() {
                touchstarting = null;
            }, touchDelay);
            _d3Transition.interrupt(this);
            g.start();
        }
    }
    function touchmoved(event, ...args) {
        if (!this.__zooming) return;
        var g = gesture(this, args).event(event), touches = event.changedTouches, n = touches.length, i, t, p, l;
        _noeventJsDefault.default(event);
        for(i = 0; i < n; ++i){
            t = touches[i], p = _d3Selection.pointer(t, this);
            if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;
            else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
        }
        t = g.that.__zoom;
        if (g.touch1) {
            var p0 = g.touch0[0], l0 = g.touch0[1], p1 = g.touch1[0], l1 = g.touch1[1], dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp, dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
            t = scale(t, Math.sqrt(dp / dl));
            p = [
                (p0[0] + p1[0]) / 2,
                (p0[1] + p1[1]) / 2
            ];
            l = [
                (l0[0] + l1[0]) / 2,
                (l0[1] + l1[1]) / 2
            ];
        } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];
        else return;
        g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
    }
    function touchended(event, ...args) {
        if (!this.__zooming) return;
        var g = gesture(this, args).event(event), touches = event.changedTouches, n = touches.length, i, t;
        _noeventJs.nopropagation(event);
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function() {
            touchending = null;
        }, touchDelay);
        for(i = 0; i < n; ++i){
            t = touches[i];
            if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;
            else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
        }
        if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
        if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);
        else {
            g.end();
            // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.
            if (g.taps === 2) {
                t = _d3Selection.pointer(t, this);
                if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {
                    var p = _d3Selection.select(this).on("dblclick.zoom");
                    if (p) p.apply(this, arguments);
                }
            }
        }
    }
    zoom.wheelDelta = function(_) {
        return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : _constantJsDefault.default(+_), zoom) : wheelDelta;
    };
    zoom.filter = function(_) {
        return arguments.length ? (filter = typeof _ === "function" ? _ : _constantJsDefault.default(!!_), zoom) : filter;
    };
    zoom.touchable = function(_) {
        return arguments.length ? (touchable = typeof _ === "function" ? _ : _constantJsDefault.default(!!_), zoom) : touchable;
    };
    zoom.extent = function(_) {
        return arguments.length ? (extent1 = typeof _ === "function" ? _ : _constantJsDefault.default([
            [
                +_[0][0],
                +_[0][1]
            ],
            [
                +_[1][0],
                +_[1][1]
            ]
        ]), zoom) : extent1;
    };
    zoom.scaleExtent = function(_) {
        return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [
            scaleExtent[0],
            scaleExtent[1]
        ];
    };
    zoom.translateExtent = function(_) {
        return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [
            [
                translateExtent[0][0],
                translateExtent[0][1]
            ],
            [
                translateExtent[1][0],
                translateExtent[1][1]
            ]
        ];
    };
    zoom.constrain = function(_) {
        return arguments.length ? (constrain = _, zoom) : constrain;
    };
    zoom.duration = function(_) {
        return arguments.length ? (duration = +_, zoom) : duration;
    };
    zoom.interpolate = function(_) {
        return arguments.length ? (interpolate = _, zoom) : interpolate;
    };
    zoom.on = function() {
        var value = listeners.on.apply(listeners, arguments);
        return value === listeners ? zoom : value;
    };
    zoom.clickDistance = function(_) {
        return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
    };
    zoom.tapDistance = function(_) {
        return arguments.length ? (tapDistance = +_, zoom) : tapDistance;
    };
    return zoom;
};

},{"d3-dispatch":"9d2te","d3-drag":"dKCUo","d3-interpolate":"e7XwA","d3-selection":"hgWtk","d3-transition":"cRYyR","./constant.js":"5Itz2","./event.js":"bMq36","./transform.js":"aPs4a","./noevent.js":"cgyVb","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"9d2te":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "dispatch", ()=>_dispatchJsDefault.default
);
var _dispatchJs = require("./dispatch.js");
var _dispatchJsDefault = parcelHelpers.interopDefault(_dispatchJs);

},{"./dispatch.js":"fEgH3","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"fEgH3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var noop = {
    value: ()=>{
    }
};
function dispatch() {
    for(var i = 0, n = arguments.length, _ = {
    }, t; i < n; ++i){
        if (!(t = arguments[i] + "") || t in _ || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
        _[t] = [];
    }
    return new Dispatch(_);
}
function Dispatch(_) {
    this._ = _;
}
function parseTypenames(typenames, types) {
    return typenames.trim().split(/^|\s+/).map(function(t) {
        var name = "", i = t.indexOf(".");
        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
        if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
        return {
            type: t,
            name: name
        };
    });
}
Dispatch.prototype = dispatch.prototype = {
    constructor: Dispatch,
    on: function(typename, callback) {
        var _ = this._, T = parseTypenames(typename + "", _), t, i = -1, n = T.length;
        // If no callback was specified, return the callback of the given type and name.
        if (arguments.length < 2) {
            while(++i < n)if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
            return;
        }
        // If a type was specified, set the callback for the given type and name.
        // Otherwise, if a null callback was specified, remove callbacks of the given name.
        if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
        while(++i < n){
            if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);
            else if (callback == null) for(t in _)_[t] = set(_[t], typename.name, null);
        }
        return this;
    },
    copy: function() {
        var copy = {
        }, _ = this._;
        for(var t in _)copy[t] = _[t].slice();
        return new Dispatch(copy);
    },
    call: function(type, that) {
        if ((n = arguments.length - 2) > 0) for(var args = new Array(n), i = 0, n, t; i < n; ++i)args[i] = arguments[i + 2];
        if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
        for(t = this._[type], i = 0, n = t.length; i < n; ++i)t[i].value.apply(that, args);
    },
    apply: function(type, that, args) {
        if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
        for(var t = this._[type], i = 0, n = t.length; i < n; ++i)t[i].value.apply(that, args);
    }
};
function get(type, name) {
    for(var i = 0, n = type.length, c; i < n; ++i){
        if ((c = type[i]).name === name) return c.value;
    }
}
function set(type, name, callback) {
    for(var i = 0, n = type.length; i < n; ++i)if (type[i].name === name) {
        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
        break;
    }
    if (callback != null) type.push({
        name: name,
        value: callback
    });
    return type;
}
exports.default = dispatch;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"dKCUo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "drag", ()=>_dragJsDefault.default
);
parcelHelpers.export(exports, "dragDisable", ()=>_nodragJsDefault.default
);
parcelHelpers.export(exports, "dragEnable", ()=>_nodragJs.yesdrag
);
var _dragJs = require("./drag.js");
var _dragJsDefault = parcelHelpers.interopDefault(_dragJs);
var _nodragJs = require("./nodrag.js");
var _nodragJsDefault = parcelHelpers.interopDefault(_nodragJs);

},{"./drag.js":false,"./nodrag.js":"1WTbI","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"1WTbI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "yesdrag", ()=>yesdrag
);
var _d3Selection = require("d3-selection");
var _noeventJs = require("./noevent.js");
var _noeventJsDefault = parcelHelpers.interopDefault(_noeventJs);
exports.default = function(view) {
    var root = view.document.documentElement, selection = _d3Selection.select(view).on("dragstart.drag", _noeventJsDefault.default, true);
    if ("onselectstart" in root) selection.on("selectstart.drag", _noeventJsDefault.default, true);
    else {
        root.__noselect = root.style.MozUserSelect;
        root.style.MozUserSelect = "none";
    }
};
function yesdrag(view, noclick) {
    var root = view.document.documentElement, selection = _d3Selection.select(view).on("dragstart.drag", null);
    if (noclick) {
        selection.on("click.drag", _noeventJsDefault.default, true);
        setTimeout(function() {
            selection.on("click.drag", null);
        }, 0);
    }
    if ("onselectstart" in root) selection.on("selectstart.drag", null);
    else {
        root.style.MozUserSelect = root.__noselect;
        delete root.__noselect;
    }
}

},{"d3-selection":"hgWtk","./noevent.js":"hhrgp","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hgWtk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "create", ()=>_createJsDefault.default
);
parcelHelpers.export(exports, "creator", ()=>_creatorJsDefault.default
);
parcelHelpers.export(exports, "local", ()=>_localJsDefault.default
);
parcelHelpers.export(exports, "matcher", ()=>_matcherJsDefault.default
);
parcelHelpers.export(exports, "namespace", ()=>_namespaceJsDefault.default
);
parcelHelpers.export(exports, "namespaces", ()=>_namespacesJsDefault.default
);
parcelHelpers.export(exports, "pointer", ()=>_pointerJsDefault.default
);
parcelHelpers.export(exports, "pointers", ()=>_pointersJsDefault.default
);
parcelHelpers.export(exports, "select", ()=>_selectJsDefault.default
);
parcelHelpers.export(exports, "selectAll", ()=>_selectAllJsDefault.default
);
parcelHelpers.export(exports, "selection", ()=>_indexJsDefault.default
);
parcelHelpers.export(exports, "selector", ()=>_selectorJsDefault.default
);
parcelHelpers.export(exports, "selectorAll", ()=>_selectorAllJsDefault.default
);
parcelHelpers.export(exports, "style", ()=>_styleJs.styleValue
);
parcelHelpers.export(exports, "window", ()=>_windowJsDefault.default
);
var _createJs = require("./create.js");
var _createJsDefault = parcelHelpers.interopDefault(_createJs);
var _creatorJs = require("./creator.js");
var _creatorJsDefault = parcelHelpers.interopDefault(_creatorJs);
var _localJs = require("./local.js");
var _localJsDefault = parcelHelpers.interopDefault(_localJs);
var _matcherJs = require("./matcher.js");
var _matcherJsDefault = parcelHelpers.interopDefault(_matcherJs);
var _namespaceJs = require("./namespace.js");
var _namespaceJsDefault = parcelHelpers.interopDefault(_namespaceJs);
var _namespacesJs = require("./namespaces.js");
var _namespacesJsDefault = parcelHelpers.interopDefault(_namespacesJs);
var _pointerJs = require("./pointer.js");
var _pointerJsDefault = parcelHelpers.interopDefault(_pointerJs);
var _pointersJs = require("./pointers.js");
var _pointersJsDefault = parcelHelpers.interopDefault(_pointersJs);
var _selectJs = require("./select.js");
var _selectJsDefault = parcelHelpers.interopDefault(_selectJs);
var _selectAllJs = require("./selectAll.js");
var _selectAllJsDefault = parcelHelpers.interopDefault(_selectAllJs);
var _indexJs = require("./selection/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _selectorJs = require("./selector.js");
var _selectorJsDefault = parcelHelpers.interopDefault(_selectorJs);
var _selectorAllJs = require("./selectorAll.js");
var _selectorAllJsDefault = parcelHelpers.interopDefault(_selectorAllJs);
var _styleJs = require("./selection/style.js");
var _windowJs = require("./window.js");
var _windowJsDefault = parcelHelpers.interopDefault(_windowJs);

},{"./create.js":"luWz7","./creator.js":"hzFln","./local.js":"85ofP","./matcher.js":"5hMoc","./namespace.js":"k6t5I","./namespaces.js":"jlwhh","./pointer.js":"lRJOw","./pointers.js":"4HqJY","./select.js":"g0UZK","./selectAll.js":"lhfgm","./selection/index.js":"f38xv","./selector.js":"e9mWc","./selectorAll.js":"6FR5I","./selection/style.js":"lVr8f","./window.js":"c51LV","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"luWz7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _creatorJs = require("./creator.js");
var _creatorJsDefault = parcelHelpers.interopDefault(_creatorJs);
var _selectJs = require("./select.js");
var _selectJsDefault = parcelHelpers.interopDefault(_selectJs);
exports.default = function(name) {
    return _selectJsDefault.default(_creatorJsDefault.default(name).call(document.documentElement));
};

},{"./creator.js":"hzFln","./select.js":"g0UZK","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hzFln":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _namespaceJs = require("./namespace.js");
var _namespaceJsDefault = parcelHelpers.interopDefault(_namespaceJs);
var _namespacesJs = require("./namespaces.js");
function creatorInherit(name) {
    return function() {
        var document = this.ownerDocument, uri = this.namespaceURI;
        return uri === _namespacesJs.xhtml && document.documentElement.namespaceURI === _namespacesJs.xhtml ? document.createElement(name) : document.createElementNS(uri, name);
    };
}
function creatorFixed(fullname) {
    return function() {
        return this.ownerDocument.createElementNS(fullname.space, fullname.local);
    };
}
exports.default = function(name) {
    var fullname = _namespaceJsDefault.default(name);
    return (fullname.local ? creatorFixed : creatorInherit)(fullname);
};

},{"./namespace.js":"k6t5I","./namespaces.js":"jlwhh","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"k6t5I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _namespacesJs = require("./namespaces.js");
var _namespacesJsDefault = parcelHelpers.interopDefault(_namespacesJs);
exports.default = function(name) {
    var prefix = name += "", i = prefix.indexOf(":");
    if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
    return _namespacesJsDefault.default.hasOwnProperty(prefix) ? {
        space: _namespacesJsDefault.default[prefix],
        local: name
    } : name; // eslint-disable-line no-prototype-builtins
};

},{"./namespaces.js":"jlwhh","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"jlwhh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "xhtml", ()=>xhtml
);
var xhtml = "http://www.w3.org/1999/xhtml";
exports.default = {
    svg: "http://www.w3.org/2000/svg",
    xhtml: xhtml,
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"g0UZK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./selection/index.js");
exports.default = function(selector) {
    return typeof selector === "string" ? new _indexJs.Selection([
        [
            document.querySelector(selector)
        ]
    ], [
        document.documentElement
    ]) : new _indexJs.Selection([
        [
            selector
        ]
    ], _indexJs.root);
};

},{"./selection/index.js":"f38xv","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"f38xv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "root", ()=>root
);
parcelHelpers.export(exports, "Selection", ()=>Selection
);
var _selectJs = require("./select.js");
var _selectJsDefault = parcelHelpers.interopDefault(_selectJs);
var _selectAllJs = require("./selectAll.js");
var _selectAllJsDefault = parcelHelpers.interopDefault(_selectAllJs);
var _selectChildJs = require("./selectChild.js");
var _selectChildJsDefault = parcelHelpers.interopDefault(_selectChildJs);
var _selectChildrenJs = require("./selectChildren.js");
var _selectChildrenJsDefault = parcelHelpers.interopDefault(_selectChildrenJs);
var _filterJs = require("./filter.js");
var _filterJsDefault = parcelHelpers.interopDefault(_filterJs);
var _dataJs = require("./data.js");
var _dataJsDefault = parcelHelpers.interopDefault(_dataJs);
var _enterJs = require("./enter.js");
var _enterJsDefault = parcelHelpers.interopDefault(_enterJs);
var _exitJs = require("./exit.js");
var _exitJsDefault = parcelHelpers.interopDefault(_exitJs);
var _joinJs = require("./join.js");
var _joinJsDefault = parcelHelpers.interopDefault(_joinJs);
var _mergeJs = require("./merge.js");
var _mergeJsDefault = parcelHelpers.interopDefault(_mergeJs);
var _orderJs = require("./order.js");
var _orderJsDefault = parcelHelpers.interopDefault(_orderJs);
var _sortJs = require("./sort.js");
var _sortJsDefault = parcelHelpers.interopDefault(_sortJs);
var _callJs = require("./call.js");
var _callJsDefault = parcelHelpers.interopDefault(_callJs);
var _nodesJs = require("./nodes.js");
var _nodesJsDefault = parcelHelpers.interopDefault(_nodesJs);
var _nodeJs = require("./node.js");
var _nodeJsDefault = parcelHelpers.interopDefault(_nodeJs);
var _sizeJs = require("./size.js");
var _sizeJsDefault = parcelHelpers.interopDefault(_sizeJs);
var _emptyJs = require("./empty.js");
var _emptyJsDefault = parcelHelpers.interopDefault(_emptyJs);
var _eachJs = require("./each.js");
var _eachJsDefault = parcelHelpers.interopDefault(_eachJs);
var _attrJs = require("./attr.js");
var _attrJsDefault = parcelHelpers.interopDefault(_attrJs);
var _styleJs = require("./style.js");
var _styleJsDefault = parcelHelpers.interopDefault(_styleJs);
var _propertyJs = require("./property.js");
var _propertyJsDefault = parcelHelpers.interopDefault(_propertyJs);
var _classedJs = require("./classed.js");
var _classedJsDefault = parcelHelpers.interopDefault(_classedJs);
var _textJs = require("./text.js");
var _textJsDefault = parcelHelpers.interopDefault(_textJs);
var _htmlJs = require("./html.js");
var _htmlJsDefault = parcelHelpers.interopDefault(_htmlJs);
var _raiseJs = require("./raise.js");
var _raiseJsDefault = parcelHelpers.interopDefault(_raiseJs);
var _lowerJs = require("./lower.js");
var _lowerJsDefault = parcelHelpers.interopDefault(_lowerJs);
var _appendJs = require("./append.js");
var _appendJsDefault = parcelHelpers.interopDefault(_appendJs);
var _insertJs = require("./insert.js");
var _insertJsDefault = parcelHelpers.interopDefault(_insertJs);
var _removeJs = require("./remove.js");
var _removeJsDefault = parcelHelpers.interopDefault(_removeJs);
var _cloneJs = require("./clone.js");
var _cloneJsDefault = parcelHelpers.interopDefault(_cloneJs);
var _datumJs = require("./datum.js");
var _datumJsDefault = parcelHelpers.interopDefault(_datumJs);
var _onJs = require("./on.js");
var _onJsDefault = parcelHelpers.interopDefault(_onJs);
var _dispatchJs = require("./dispatch.js");
var _dispatchJsDefault = parcelHelpers.interopDefault(_dispatchJs);
var _iteratorJs = require("./iterator.js");
var _iteratorJsDefault = parcelHelpers.interopDefault(_iteratorJs);
var root = [
    null
];
function Selection(groups, parents) {
    this._groups = groups;
    this._parents = parents;
}
function selection() {
    return new Selection([
        [
            document.documentElement
        ]
    ], root);
}
function selection_selection() {
    return this;
}
Selection.prototype = selection.prototype = {
    constructor: Selection,
    select: _selectJsDefault.default,
    selectAll: _selectAllJsDefault.default,
    selectChild: _selectChildJsDefault.default,
    selectChildren: _selectChildrenJsDefault.default,
    filter: _filterJsDefault.default,
    data: _dataJsDefault.default,
    enter: _enterJsDefault.default,
    exit: _exitJsDefault.default,
    join: _joinJsDefault.default,
    merge: _mergeJsDefault.default,
    selection: selection_selection,
    order: _orderJsDefault.default,
    sort: _sortJsDefault.default,
    call: _callJsDefault.default,
    nodes: _nodesJsDefault.default,
    node: _nodeJsDefault.default,
    size: _sizeJsDefault.default,
    empty: _emptyJsDefault.default,
    each: _eachJsDefault.default,
    attr: _attrJsDefault.default,
    style: _styleJsDefault.default,
    property: _propertyJsDefault.default,
    classed: _classedJsDefault.default,
    text: _textJsDefault.default,
    html: _htmlJsDefault.default,
    raise: _raiseJsDefault.default,
    lower: _lowerJsDefault.default,
    append: _appendJsDefault.default,
    insert: _insertJsDefault.default,
    remove: _removeJsDefault.default,
    clone: _cloneJsDefault.default,
    datum: _datumJsDefault.default,
    on: _onJsDefault.default,
    dispatch: _dispatchJsDefault.default,
    [Symbol.iterator]: _iteratorJsDefault.default
};
exports.default = selection;

},{"./select.js":"1jbDi","./selectAll.js":"cGFzy","./selectChild.js":"8DwO9","./selectChildren.js":"dHwnc","./filter.js":"79RzA","./data.js":"4ZVP3","./enter.js":"iCNmI","./exit.js":"8hgeS","./join.js":"4nZM4","./merge.js":"2Dn1o","./order.js":"g79rT","./sort.js":"6sxcI","./call.js":"jtSbo","./nodes.js":"56G5R","./node.js":"kRhWy","./size.js":"26GBx","./empty.js":"2pmiA","./each.js":"50lbW","./attr.js":"aUlJ3","./style.js":"lVr8f","./property.js":"49sSE","./classed.js":"6VMaw","./text.js":"ch5qt","./html.js":"jyrYS","./raise.js":"aWlYS","./lower.js":"43Imn","./append.js":"62Ily","./insert.js":"4D2zc","./remove.js":"ezirt","./clone.js":"ERvNe","./datum.js":"cElUS","./on.js":"6sHag","./dispatch.js":"eo73B","./iterator.js":"6AbO6","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"1jbDi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./index.js");
var _selectorJs = require("../selector.js");
var _selectorJsDefault = parcelHelpers.interopDefault(_selectorJs);
exports.default = function(select) {
    if (typeof select !== "function") select = _selectorJsDefault.default(select);
    for(var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j){
        for(var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i)if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
            if ("__data__" in node) subnode.__data__ = node.__data__;
            subgroup[i] = subnode;
        }
    }
    return new _indexJs.Selection(subgroups, this._parents);
};

},{"./index.js":"f38xv","../selector.js":"e9mWc","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"e9mWc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function none() {
}
exports.default = function(selector) {
    return selector == null ? none : function() {
        return this.querySelector(selector);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"cGFzy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./index.js");
var _arrayJs = require("../array.js");
var _arrayJsDefault = parcelHelpers.interopDefault(_arrayJs);
var _selectorAllJs = require("../selectorAll.js");
var _selectorAllJsDefault = parcelHelpers.interopDefault(_selectorAllJs);
function arrayAll(select) {
    return function() {
        var group = select.apply(this, arguments);
        return group == null ? [] : _arrayJsDefault.default(group);
    };
}
exports.default = function(select) {
    if (typeof select === "function") select = arrayAll(select);
    else select = _selectorAllJsDefault.default(select);
    for(var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j){
        for(var group = groups[j], n = group.length, node, i = 0; i < n; ++i)if (node = group[i]) {
            subgroups.push(select.call(node, node.__data__, i, group));
            parents.push(node);
        }
    }
    return new _indexJs.Selection(subgroups, parents);
};

},{"./index.js":"f38xv","../array.js":"cirh5","../selectorAll.js":"6FR5I","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"cirh5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(x) {
    return typeof x === "object" && "length" in x ? x // Array, TypedArray, NodeList, array-like
     : Array.from(x); // Map, Set, iterable, string, or anything else
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6FR5I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function empty() {
    return [];
}
exports.default = function(selector) {
    return selector == null ? empty : function() {
        return this.querySelectorAll(selector);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"8DwO9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _matcherJs = require("../matcher.js");
var find = Array.prototype.find;
function childFind(match) {
    return function() {
        return find.call(this.children, match);
    };
}
function childFirst() {
    return this.firstElementChild;
}
exports.default = function(match) {
    return this.select(match == null ? childFirst : childFind(typeof match === "function" ? match : _matcherJs.childMatcher(match)));
};

},{"../matcher.js":"5hMoc","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"5hMoc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "childMatcher", ()=>childMatcher
);
exports.default = function(selector) {
    return function() {
        return this.matches(selector);
    };
};
function childMatcher(selector) {
    return function(node) {
        return node.matches(selector);
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"dHwnc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _matcherJs = require("../matcher.js");
var filter = Array.prototype.filter;
function children() {
    return this.children;
}
function childrenFilter(match) {
    return function() {
        return filter.call(this.children, match);
    };
}
exports.default = function(match) {
    return this.selectAll(match == null ? children : childrenFilter(typeof match === "function" ? match : _matcherJs.childMatcher(match)));
};

},{"../matcher.js":"5hMoc","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"79RzA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./index.js");
var _matcherJs = require("../matcher.js");
var _matcherJsDefault = parcelHelpers.interopDefault(_matcherJs);
exports.default = function(match) {
    if (typeof match !== "function") match = _matcherJsDefault.default(match);
    for(var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j){
        for(var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i)if ((node = group[i]) && match.call(node, node.__data__, i, group)) subgroup.push(node);
    }
    return new _indexJs.Selection(subgroups, this._parents);
};

},{"./index.js":"f38xv","../matcher.js":"5hMoc","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"4ZVP3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./index.js");
var _enterJs = require("./enter.js");
var _arrayJs = require("../array.js");
var _arrayJsDefault = parcelHelpers.interopDefault(_arrayJs);
var _constantJs = require("../constant.js");
var _constantJsDefault = parcelHelpers.interopDefault(_constantJs);
function bindIndex(parent, group, enter, update, exit, data) {
    var i = 0, node, groupLength = group.length, dataLength = data.length;
    // Put any non-null nodes that fit into update.
    // Put any null nodes into enter.
    // Put any remaining data into enter.
    for(; i < dataLength; ++i)if (node = group[i]) {
        node.__data__ = data[i];
        update[i] = node;
    } else enter[i] = new _enterJs.EnterNode(parent, data[i]);
    // Put any non-null nodes that don’t fit into exit.
    for(; i < groupLength; ++i)if (node = group[i]) exit[i] = node;
}
function bindKey(parent, group, enter, update, exit, data, key) {
    var i, node, nodeByKeyValue = new Map, groupLength = group.length, dataLength = data.length, keyValues = new Array(groupLength), keyValue;
    // Compute the key for each node.
    // If multiple nodes have the same key, the duplicates are added to exit.
    for(i = 0; i < groupLength; ++i)if (node = group[i]) {
        keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";
        if (nodeByKeyValue.has(keyValue)) exit[i] = node;
        else nodeByKeyValue.set(keyValue, node);
    }
    // Compute the key for each datum.
    // If there a node associated with this key, join and add it to update.
    // If there is not (or the key is a duplicate), add it to enter.
    for(i = 0; i < dataLength; ++i){
        keyValue = key.call(parent, data[i], i, data) + "";
        if (node = nodeByKeyValue.get(keyValue)) {
            update[i] = node;
            node.__data__ = data[i];
            nodeByKeyValue.delete(keyValue);
        } else enter[i] = new _enterJs.EnterNode(parent, data[i]);
    }
    // Add any remaining nodes that were not bound to data to exit.
    for(i = 0; i < groupLength; ++i)if ((node = group[i]) && nodeByKeyValue.get(keyValues[i]) === node) exit[i] = node;
}
function datum(node) {
    return node.__data__;
}
exports.default = function(value, key) {
    if (!arguments.length) return Array.from(this, datum);
    var bind = key ? bindKey : bindIndex, parents = this._parents, groups = this._groups;
    if (typeof value !== "function") value = _constantJsDefault.default(value);
    for(var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j){
        var parent = parents[j], group = groups[j], groupLength = group.length, data = _arrayJsDefault.default(value.call(parent, parent && parent.__data__, j, parents)), dataLength = data.length, enterGroup = enter[j] = new Array(dataLength), updateGroup = update[j] = new Array(dataLength), exitGroup = exit[j] = new Array(groupLength);
        bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);
        // Now connect the enter nodes to their following update node, such that
        // appendChild can insert the materialized enter node before this node,
        // rather than at the end of the parent node.
        for(var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0)if (previous = enterGroup[i0]) {
            if (i0 >= i1) i1 = i0 + 1;
            while(!(next = updateGroup[i1]) && ++i1 < dataLength);
            previous._next = next || null;
        }
    }
    update = new _indexJs.Selection(update, parents);
    update._enter = enter;
    update._exit = exit;
    return update;
};

},{"./index.js":"f38xv","./enter.js":"iCNmI","../array.js":"cirh5","../constant.js":"2yBTe","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"iCNmI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EnterNode", ()=>EnterNode
);
var _sparseJs = require("./sparse.js");
var _sparseJsDefault = parcelHelpers.interopDefault(_sparseJs);
var _indexJs = require("./index.js");
exports.default = function() {
    return new _indexJs.Selection(this._enter || this._groups.map(_sparseJsDefault.default), this._parents);
};
function EnterNode(parent, datum) {
    this.ownerDocument = parent.ownerDocument;
    this.namespaceURI = parent.namespaceURI;
    this._next = null;
    this._parent = parent;
    this.__data__ = datum;
}
EnterNode.prototype = {
    constructor: EnterNode,
    appendChild: function(child) {
        return this._parent.insertBefore(child, this._next);
    },
    insertBefore: function(child, next) {
        return this._parent.insertBefore(child, next);
    },
    querySelector: function(selector) {
        return this._parent.querySelector(selector);
    },
    querySelectorAll: function(selector) {
        return this._parent.querySelectorAll(selector);
    }
};

},{"./sparse.js":"bkLEG","./index.js":"f38xv","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"bkLEG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(update) {
    return new Array(update.length);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"2yBTe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(x) {
    return function() {
        return x;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"8hgeS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _sparseJs = require("./sparse.js");
var _sparseJsDefault = parcelHelpers.interopDefault(_sparseJs);
var _indexJs = require("./index.js");
exports.default = function() {
    return new _indexJs.Selection(this._exit || this._groups.map(_sparseJsDefault.default), this._parents);
};

},{"./sparse.js":"bkLEG","./index.js":"f38xv","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"4nZM4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(onenter, onupdate, onexit) {
    var enter = this.enter(), update = this, exit = this.exit();
    enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
    if (onupdate != null) update = onupdate(update);
    if (onexit == null) exit.remove();
    else onexit(exit);
    return enter && update ? enter.merge(update).order() : update;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"2Dn1o":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./index.js");
exports.default = function(selection) {
    if (!(selection instanceof _indexJs.Selection)) throw new Error("invalid merge");
    for(var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j){
        for(var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i)if (node = group0[i] || group1[i]) merge[i] = node;
    }
    for(; j < m0; ++j)merges[j] = groups0[j];
    return new _indexJs.Selection(merges, this._parents);
};

},{"./index.js":"f38xv","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"g79rT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function() {
    for(var groups = this._groups, j = -1, m = groups.length; ++j < m;){
        for(var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;)if (node = group[i]) {
            if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
            next = node;
        }
    }
    return this;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6sxcI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./index.js");
exports.default = function(compare) {
    if (!compare) compare = ascending;
    function compareNode(a, b) {
        return a && b ? compare(a.__data__, b.__data__) : !a - !b;
    }
    for(var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j){
        for(var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i)if (node = group[i]) sortgroup[i] = node;
        sortgroup.sort(compareNode);
    }
    return new _indexJs.Selection(sortgroups, this._parents).order();
};
function ascending(a, b) {
    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

},{"./index.js":"f38xv","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"jtSbo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function() {
    var callback = arguments[0];
    arguments[0] = this;
    callback.apply(null, arguments);
    return this;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"56G5R":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function() {
    return Array.from(this);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"kRhWy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function() {
    for(var groups = this._groups, j = 0, m = groups.length; j < m; ++j)for(var group = groups[j], i = 0, n = group.length; i < n; ++i){
        var node = group[i];
        if (node) return node;
    }
    return null;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"26GBx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function() {
    let size = 0;
    for (const node of this)++size; // eslint-disable-line no-unused-vars
    return size;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"2pmiA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function() {
    return !this.node();
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"50lbW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(callback) {
    for(var groups = this._groups, j = 0, m = groups.length; j < m; ++j){
        for(var group = groups[j], i = 0, n = group.length, node; i < n; ++i)if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
    return this;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"aUlJ3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _namespaceJs = require("../namespace.js");
var _namespaceJsDefault = parcelHelpers.interopDefault(_namespaceJs);
function attrRemove(name) {
    return function() {
        this.removeAttribute(name);
    };
}
function attrRemoveNS(fullname) {
    return function() {
        this.removeAttributeNS(fullname.space, fullname.local);
    };
}
function attrConstant(name, value) {
    return function() {
        this.setAttribute(name, value);
    };
}
function attrConstantNS(fullname, value) {
    return function() {
        this.setAttributeNS(fullname.space, fullname.local, value);
    };
}
function attrFunction(name, value) {
    return function() {
        var v = value.apply(this, arguments);
        if (v == null) this.removeAttribute(name);
        else this.setAttribute(name, v);
    };
}
function attrFunctionNS(fullname, value) {
    return function() {
        var v = value.apply(this, arguments);
        if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
        else this.setAttributeNS(fullname.space, fullname.local, v);
    };
}
exports.default = function(name, value) {
    var fullname = _namespaceJsDefault.default(name);
    if (arguments.length < 2) {
        var node = this.node();
        return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
    }
    return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
};

},{"../namespace.js":"k6t5I","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"lVr8f":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleValue", ()=>styleValue
);
var _windowJs = require("../window.js");
var _windowJsDefault = parcelHelpers.interopDefault(_windowJs);
function styleRemove(name) {
    return function() {
        this.style.removeProperty(name);
    };
}
function styleConstant(name, value, priority) {
    return function() {
        this.style.setProperty(name, value, priority);
    };
}
function styleFunction(name, value, priority) {
    return function() {
        var v = value.apply(this, arguments);
        if (v == null) this.style.removeProperty(name);
        else this.style.setProperty(name, v, priority);
    };
}
exports.default = function(name, value, priority) {
    return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
};
function styleValue(node, name) {
    return node.style.getPropertyValue(name) || _windowJsDefault.default(node).getComputedStyle(node, null).getPropertyValue(name);
}

},{"../window.js":"c51LV","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"c51LV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(node) {
    return node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView; // node is a Document
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"49sSE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function propertyRemove(name) {
    return function() {
        delete this[name];
    };
}
function propertyConstant(name, value) {
    return function() {
        this[name] = value;
    };
}
function propertyFunction(name, value) {
    return function() {
        var v = value.apply(this, arguments);
        if (v == null) delete this[name];
        else this[name] = v;
    };
}
exports.default = function(name, value) {
    return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6VMaw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function classArray(string) {
    return string.trim().split(/^|\s+/);
}
function classList(node) {
    return node.classList || new ClassList(node);
}
function ClassList(node) {
    this._node = node;
    this._names = classArray(node.getAttribute("class") || "");
}
ClassList.prototype = {
    add: function(name) {
        var i = this._names.indexOf(name);
        if (i < 0) {
            this._names.push(name);
            this._node.setAttribute("class", this._names.join(" "));
        }
    },
    remove: function(name) {
        var i = this._names.indexOf(name);
        if (i >= 0) {
            this._names.splice(i, 1);
            this._node.setAttribute("class", this._names.join(" "));
        }
    },
    contains: function(name) {
        return this._names.indexOf(name) >= 0;
    }
};
function classedAdd(node, names) {
    var list = classList(node), i = -1, n = names.length;
    while(++i < n)list.add(names[i]);
}
function classedRemove(node, names) {
    var list = classList(node), i = -1, n = names.length;
    while(++i < n)list.remove(names[i]);
}
function classedTrue(names) {
    return function() {
        classedAdd(this, names);
    };
}
function classedFalse(names) {
    return function() {
        classedRemove(this, names);
    };
}
function classedFunction(names, value) {
    return function() {
        (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
    };
}
exports.default = function(name, value) {
    var names = classArray(name + "");
    if (arguments.length < 2) {
        var list = classList(this.node()), i = -1, n = names.length;
        while(++i < n)if (!list.contains(names[i])) return false;
        return true;
    }
    return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"ch5qt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function textRemove() {
    this.textContent = "";
}
function textConstant(value) {
    return function() {
        this.textContent = value;
    };
}
function textFunction(value) {
    return function() {
        var v = value.apply(this, arguments);
        this.textContent = v == null ? "" : v;
    };
}
exports.default = function(value) {
    return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"jyrYS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function htmlRemove() {
    this.innerHTML = "";
}
function htmlConstant(value) {
    return function() {
        this.innerHTML = value;
    };
}
function htmlFunction(value) {
    return function() {
        var v = value.apply(this, arguments);
        this.innerHTML = v == null ? "" : v;
    };
}
exports.default = function(value) {
    return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"aWlYS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function raise() {
    if (this.nextSibling) this.parentNode.appendChild(this);
}
exports.default = function() {
    return this.each(raise);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"43Imn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function lower() {
    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}
exports.default = function() {
    return this.each(lower);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"62Ily":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _creatorJs = require("../creator.js");
var _creatorJsDefault = parcelHelpers.interopDefault(_creatorJs);
exports.default = function(name) {
    var create = typeof name === "function" ? name : _creatorJsDefault.default(name);
    return this.select(function() {
        return this.appendChild(create.apply(this, arguments));
    });
};

},{"../creator.js":"hzFln","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"4D2zc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _creatorJs = require("../creator.js");
var _creatorJsDefault = parcelHelpers.interopDefault(_creatorJs);
var _selectorJs = require("../selector.js");
var _selectorJsDefault = parcelHelpers.interopDefault(_selectorJs);
function constantNull() {
    return null;
}
exports.default = function(name, before) {
    var create = typeof name === "function" ? name : _creatorJsDefault.default(name), select = before == null ? constantNull : typeof before === "function" ? before : _selectorJsDefault.default(before);
    return this.select(function() {
        return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
    });
};

},{"../creator.js":"hzFln","../selector.js":"e9mWc","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"ezirt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function remove() {
    var parent = this.parentNode;
    if (parent) parent.removeChild(this);
}
exports.default = function() {
    return this.each(remove);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"ERvNe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function selection_cloneShallow() {
    var clone = this.cloneNode(false), parent = this.parentNode;
    return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}
function selection_cloneDeep() {
    var clone = this.cloneNode(true), parent = this.parentNode;
    return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}
exports.default = function(deep) {
    return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"cElUS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(value) {
    return arguments.length ? this.property("__data__", value) : this.node().__data__;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6sHag":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function contextListener(listener) {
    return function(event) {
        listener.call(this, event, this.__data__);
    };
}
function parseTypenames(typenames) {
    return typenames.trim().split(/^|\s+/).map(function(t) {
        var name = "", i = t.indexOf(".");
        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
        return {
            type: t,
            name: name
        };
    });
}
function onRemove(typename) {
    return function() {
        var on = this.__on;
        if (!on) return;
        for(var j = 0, i = -1, m = on.length, o; j < m; ++j)if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) this.removeEventListener(o.type, o.listener, o.options);
        else on[++i] = o;
        if (++i) on.length = i;
        else delete this.__on;
    };
}
function onAdd(typename, value, options) {
    return function() {
        var on = this.__on, o, listener = contextListener(value);
        if (on) {
            for(var j = 0, m = on.length; j < m; ++j)if ((o = on[j]).type === typename.type && o.name === typename.name) {
                this.removeEventListener(o.type, o.listener, o.options);
                this.addEventListener(o.type, o.listener = listener, o.options = options);
                o.value = value;
                return;
            }
        }
        this.addEventListener(typename.type, listener, options);
        o = {
            type: typename.type,
            name: typename.name,
            value: value,
            listener: listener,
            options: options
        };
        if (!on) this.__on = [
            o
        ];
        else on.push(o);
    };
}
exports.default = function(typename, value, options) {
    var typenames = parseTypenames(typename + ""), i, n = typenames.length, t;
    if (arguments.length < 2) {
        var on = this.node().__on;
        if (on) for(var j = 0, m = on.length, o; j < m; ++j)for(i = 0, o = on[j]; i < n; ++i){
            if ((t = typenames[i]).type === o.type && t.name === o.name) return o.value;
        }
        return;
    }
    on = value ? onAdd : onRemove;
    for(i = 0; i < n; ++i)this.each(on(typenames[i], value, options));
    return this;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"eo73B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _windowJs = require("../window.js");
var _windowJsDefault = parcelHelpers.interopDefault(_windowJs);
function dispatchEvent(node, type, params) {
    var window = _windowJsDefault.default(node), event = window.CustomEvent;
    if (typeof event === "function") event = new event(type, params);
    else {
        event = window.document.createEvent("Event");
        if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
        else event.initEvent(type, false, false);
    }
    node.dispatchEvent(event);
}
function dispatchConstant(type, params) {
    return function() {
        return dispatchEvent(this, type, params);
    };
}
function dispatchFunction(type, params) {
    return function() {
        return dispatchEvent(this, type, params.apply(this, arguments));
    };
}
exports.default = function(type, params) {
    return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
};

},{"../window.js":"c51LV","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6AbO6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function*() {
    for(var groups = this._groups, j = 0, m = groups.length; j < m; ++j){
        for(var group = groups[j], i = 0, n = group.length, node; i < n; ++i)if (node = group[i]) yield node;
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"85ofP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var nextId = 0;
function local() {
    return new Local;
}
exports.default = local;
function Local() {
    this._ = "@" + (++nextId).toString(36);
}
Local.prototype = local.prototype = {
    constructor: Local,
    get: function(node) {
        var id = this._;
        while(!(id in node))if (!(node = node.parentNode)) return;
        return node[id];
    },
    set: function(node, value) {
        return node[this._] = value;
    },
    remove: function(node) {
        return this._ in node && delete node[this._];
    },
    toString: function() {
        return this._;
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"lRJOw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _sourceEventJs = require("./sourceEvent.js");
var _sourceEventJsDefault = parcelHelpers.interopDefault(_sourceEventJs);
exports.default = function(event, node) {
    event = _sourceEventJsDefault.default(event);
    if (node === undefined) node = event.currentTarget;
    if (node) {
        var svg = node.ownerSVGElement || node;
        if (svg.createSVGPoint) {
            var point = svg.createSVGPoint();
            point.x = event.clientX, point.y = event.clientY;
            point = point.matrixTransform(node.getScreenCTM().inverse());
            return [
                point.x,
                point.y
            ];
        }
        if (node.getBoundingClientRect) {
            var rect = node.getBoundingClientRect();
            return [
                event.clientX - rect.left - node.clientLeft,
                event.clientY - rect.top - node.clientTop
            ];
        }
    }
    return [
        event.pageX,
        event.pageY
    ];
};

},{"./sourceEvent.js":"3beDu","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"3beDu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(event) {
    let sourceEvent;
    while(sourceEvent = event.sourceEvent)event = sourceEvent;
    return event;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"4HqJY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _pointerJs = require("./pointer.js");
var _pointerJsDefault = parcelHelpers.interopDefault(_pointerJs);
var _sourceEventJs = require("./sourceEvent.js");
var _sourceEventJsDefault = parcelHelpers.interopDefault(_sourceEventJs);
exports.default = function(events, node) {
    if (events.target) {
        events = _sourceEventJsDefault.default(events);
        if (node === undefined) node = events.currentTarget;
        events = events.touches || [
            events
        ];
    }
    return Array.from(events, (event)=>_pointerJsDefault.default(event, node)
    );
};

},{"./pointer.js":"lRJOw","./sourceEvent.js":"3beDu","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"lhfgm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _arrayJs = require("./array.js");
var _arrayJsDefault = parcelHelpers.interopDefault(_arrayJs);
var _indexJs = require("./selection/index.js");
exports.default = function(selector) {
    return typeof selector === "string" ? new _indexJs.Selection([
        document.querySelectorAll(selector)
    ], [
        document.documentElement
    ]) : new _indexJs.Selection([
        selector == null ? [] : _arrayJsDefault.default(selector)
    ], _indexJs.root);
};

},{"./array.js":"cirh5","./selection/index.js":"f38xv","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hhrgp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "nopropagation", ()=>nopropagation
);
function nopropagation(event) {
    event.stopImmediatePropagation();
}
exports.default = function(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"e7XwA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "interpolate", ()=>_valueJsDefault.default
);
parcelHelpers.export(exports, "interpolateArray", ()=>_arrayJsDefault.default
);
parcelHelpers.export(exports, "interpolateBasis", ()=>_basisJsDefault.default
);
parcelHelpers.export(exports, "interpolateBasisClosed", ()=>_basisClosedJsDefault.default
);
parcelHelpers.export(exports, "interpolateDate", ()=>_dateJsDefault.default
);
parcelHelpers.export(exports, "interpolateDiscrete", ()=>_discreteJsDefault.default
);
parcelHelpers.export(exports, "interpolateHue", ()=>_hueJsDefault.default
);
parcelHelpers.export(exports, "interpolateNumber", ()=>_numberJsDefault.default
);
parcelHelpers.export(exports, "interpolateNumberArray", ()=>_numberArrayJsDefault.default
);
parcelHelpers.export(exports, "interpolateObject", ()=>_objectJsDefault.default
);
parcelHelpers.export(exports, "interpolateRound", ()=>_roundJsDefault.default
);
parcelHelpers.export(exports, "interpolateString", ()=>_stringJsDefault.default
);
parcelHelpers.export(exports, "interpolateTransformCss", ()=>_indexJs.interpolateTransformCss
);
parcelHelpers.export(exports, "interpolateTransformSvg", ()=>_indexJs.interpolateTransformSvg
);
parcelHelpers.export(exports, "interpolateZoom", ()=>_zoomJsDefault.default
);
parcelHelpers.export(exports, "interpolateRgb", ()=>_rgbJsDefault.default
);
parcelHelpers.export(exports, "interpolateRgbBasis", ()=>_rgbJs.rgbBasis
);
parcelHelpers.export(exports, "interpolateRgbBasisClosed", ()=>_rgbJs.rgbBasisClosed
);
parcelHelpers.export(exports, "interpolateHsl", ()=>_hslJsDefault.default
);
parcelHelpers.export(exports, "interpolateHslLong", ()=>_hslJs.hslLong
);
parcelHelpers.export(exports, "interpolateLab", ()=>_labJsDefault.default
);
parcelHelpers.export(exports, "interpolateHcl", ()=>_hclJsDefault.default
);
parcelHelpers.export(exports, "interpolateHclLong", ()=>_hclJs.hclLong
);
parcelHelpers.export(exports, "interpolateCubehelix", ()=>_cubehelixJsDefault.default
);
parcelHelpers.export(exports, "interpolateCubehelixLong", ()=>_cubehelixJs.cubehelixLong
);
parcelHelpers.export(exports, "piecewise", ()=>_piecewiseJsDefault.default
);
parcelHelpers.export(exports, "quantize", ()=>_quantizeJsDefault.default
);
var _valueJs = require("./value.js");
var _valueJsDefault = parcelHelpers.interopDefault(_valueJs);
var _arrayJs = require("./array.js");
var _arrayJsDefault = parcelHelpers.interopDefault(_arrayJs);
var _basisJs = require("./basis.js");
var _basisJsDefault = parcelHelpers.interopDefault(_basisJs);
var _basisClosedJs = require("./basisClosed.js");
var _basisClosedJsDefault = parcelHelpers.interopDefault(_basisClosedJs);
var _dateJs = require("./date.js");
var _dateJsDefault = parcelHelpers.interopDefault(_dateJs);
var _discreteJs = require("./discrete.js");
var _discreteJsDefault = parcelHelpers.interopDefault(_discreteJs);
var _hueJs = require("./hue.js");
var _hueJsDefault = parcelHelpers.interopDefault(_hueJs);
var _numberJs = require("./number.js");
var _numberJsDefault = parcelHelpers.interopDefault(_numberJs);
var _numberArrayJs = require("./numberArray.js");
var _numberArrayJsDefault = parcelHelpers.interopDefault(_numberArrayJs);
var _objectJs = require("./object.js");
var _objectJsDefault = parcelHelpers.interopDefault(_objectJs);
var _roundJs = require("./round.js");
var _roundJsDefault = parcelHelpers.interopDefault(_roundJs);
var _stringJs = require("./string.js");
var _stringJsDefault = parcelHelpers.interopDefault(_stringJs);
var _indexJs = require("./transform/index.js");
var _zoomJs = require("./zoom.js");
var _zoomJsDefault = parcelHelpers.interopDefault(_zoomJs);
var _rgbJs = require("./rgb.js");
var _rgbJsDefault = parcelHelpers.interopDefault(_rgbJs);
var _hslJs = require("./hsl.js");
var _hslJsDefault = parcelHelpers.interopDefault(_hslJs);
var _labJs = require("./lab.js");
var _labJsDefault = parcelHelpers.interopDefault(_labJs);
var _hclJs = require("./hcl.js");
var _hclJsDefault = parcelHelpers.interopDefault(_hclJs);
var _cubehelixJs = require("./cubehelix.js");
var _cubehelixJsDefault = parcelHelpers.interopDefault(_cubehelixJs);
var _piecewiseJs = require("./piecewise.js");
var _piecewiseJsDefault = parcelHelpers.interopDefault(_piecewiseJs);
var _quantizeJs = require("./quantize.js");
var _quantizeJsDefault = parcelHelpers.interopDefault(_quantizeJs);

},{"./value.js":false,"./array.js":false,"./basis.js":"1DJ3x","./basisClosed.js":"d28oA","./date.js":false,"./discrete.js":false,"./hue.js":false,"./number.js":"igEfY","./numberArray.js":false,"./object.js":false,"./round.js":false,"./string.js":"hmd3K","./transform/index.js":"etDRQ","./zoom.js":"HiDI0","./rgb.js":"9bAoa","./hsl.js":false,"./lab.js":false,"./hcl.js":false,"./cubehelix.js":false,"./piecewise.js":false,"./quantize.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"1DJ3x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "basis", ()=>basis
);
function basis(t1, v0, v1, v2, v3) {
    var t2 = t1 * t1, t3 = t2 * t1;
    return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}
exports.default = function(values) {
    var n = values.length - 1;
    return function(t) {
        var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n), v1 = values[i], v2 = values[i + 1], v0 = i > 0 ? values[i - 1] : 2 * v1 - v2, v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
        return basis((t - i / n) * n, v0, v1, v2, v3);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"d28oA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _basisJs = require("./basis.js");
exports.default = function(values) {
    var n = values.length;
    return function(t) {
        var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n), v0 = values[(i + n - 1) % n], v1 = values[i % n], v2 = values[(i + 1) % n], v3 = values[(i + 2) % n];
        return _basisJs.basis((t - i / n) * n, v0, v1, v2, v3);
    };
};

},{"./basis.js":"1DJ3x","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"igEfY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = function(a, b) {
    return a = +a, b = +b, function(t) {
        return a * (1 - t) + b * t;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hmd3K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _numberJs = require("./number.js");
var _numberJsDefault = parcelHelpers.interopDefault(_numberJs);
var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, reB = new RegExp(reA.source, "g");
function zero(b) {
    return function() {
        return b;
    };
}
function one(b) {
    return function(t) {
        return b(t) + "";
    };
}
exports.default = function(a, b) {
    var bi = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i1 = -1, s = [], q = []; // number interpolators
    // Coerce inputs to strings.
    a = a + "", b = b + "";
    // Interpolate pairs of numbers in a & b.
    while((am = reA.exec(a)) && (bm = reB.exec(b))){
        if ((bs = bm.index) > bi) {
            bs = b.slice(bi, bs);
            if (s[i1]) s[i1] += bs; // coalesce with previous string
            else s[++i1] = bs;
        }
        if ((am = am[0]) === (bm = bm[0])) {
            if (s[i1]) s[i1] += bm; // coalesce with previous string
            else s[++i1] = bm;
        } else {
            s[++i1] = null;
            q.push({
                i: i1,
                x: _numberJsDefault.default(am, bm)
            });
        }
        bi = reB.lastIndex;
    }
    // Add remains of b.
    if (bi < b.length) {
        bs = b.slice(bi);
        if (s[i1]) s[i1] += bs; // coalesce with previous string
        else s[++i1] = bs;
    }
    // Special optimization for only a single match.
    // Otherwise, interpolate each of the numbers and rejoin the string.
    return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function(t) {
        for(var i = 0, o; i < b; ++i)s[(o = q[i]).i] = o.x(t);
        return s.join("");
    });
};

},{"./number.js":"igEfY","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"etDRQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "interpolateTransformCss", ()=>interpolateTransformCss
);
parcelHelpers.export(exports, "interpolateTransformSvg", ()=>interpolateTransformSvg
);
var _numberJs = require("../number.js");
var _numberJsDefault = parcelHelpers.interopDefault(_numberJs);
var _parseJs = require("./parse.js");
function interpolateTransform(parse, pxComma, pxParen, degParen) {
    function pop(s) {
        return s.length ? s.pop() + " " : "";
    }
    function translate(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
            var i = s.push("translate(", null, pxComma, null, pxParen);
            q.push({
                i: i - 4,
                x: _numberJsDefault.default(xa, xb)
            }, {
                i: i - 2,
                x: _numberJsDefault.default(ya, yb)
            });
        } else if (xb || yb) s.push("translate(" + xb + pxComma + yb + pxParen);
    }
    function rotate(a, b, s, q) {
        if (a !== b) {
            if (a - b > 180) b += 360;
            else if (b - a > 180) a += 360; // shortest path
            q.push({
                i: s.push(pop(s) + "rotate(", null, degParen) - 2,
                x: _numberJsDefault.default(a, b)
            });
        } else if (b) s.push(pop(s) + "rotate(" + b + degParen);
    }
    function skewX(a, b, s, q) {
        if (a !== b) q.push({
            i: s.push(pop(s) + "skewX(", null, degParen) - 2,
            x: _numberJsDefault.default(a, b)
        });
        else if (b) s.push(pop(s) + "skewX(" + b + degParen);
    }
    function scale(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
            var i = s.push(pop(s) + "scale(", null, ",", null, ")");
            q.push({
                i: i - 4,
                x: _numberJsDefault.default(xa, xb)
            }, {
                i: i - 2,
                x: _numberJsDefault.default(ya, yb)
            });
        } else if (xb !== 1 || yb !== 1) s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
    return function(a, b) {
        var s = [], q = []; // number interpolators
        a = parse(a), b = parse(b);
        translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
        rotate(a.rotate, b.rotate, s, q);
        skewX(a.skewX, b.skewX, s, q);
        scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
        a = b = null; // gc
        return function(t) {
            var i = -1, n = q.length, o;
            while(++i < n)s[(o = q[i]).i] = o.x(t);
            return s.join("");
        };
    };
}
var interpolateTransformCss = interpolateTransform(_parseJs.parseCss, "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(_parseJs.parseSvg, ", ", ")", ")");

},{"../number.js":"igEfY","./parse.js":"TQc0q","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"TQc0q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* eslint-disable no-undef */ parcelHelpers.export(exports, "parseCss", ()=>parseCss
);
parcelHelpers.export(exports, "parseSvg", ()=>parseSvg
);
var _decomposeJs = require("./decompose.js");
var _decomposeJsDefault = parcelHelpers.interopDefault(_decomposeJs);
var svgNode;
function parseCss(value) {
    const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
    return m.isIdentity ? _decomposeJs.identity : _decomposeJsDefault.default(m.a, m.b, m.c, m.d, m.e, m.f);
}
function parseSvg(value) {
    if (value == null) return _decomposeJs.identity;
    if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
    svgNode.setAttribute("transform", value);
    if (!(value = svgNode.transform.baseVal.consolidate())) return _decomposeJs.identity;
    value = value.matrix;
    return _decomposeJsDefault.default(value.a, value.b, value.c, value.d, value.e, value.f);
}

},{"./decompose.js":"CTixW","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"CTixW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "identity", ()=>identity
);
var degrees = 180 / Math.PI;
var identity = {
    translateX: 0,
    translateY: 0,
    rotate: 0,
    skewX: 0,
    scaleX: 1,
    scaleY: 1
};
exports.default = function(a, b, c, d, e, f) {
    var scaleX, scaleY, skewX;
    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
    return {
        translateX: e,
        translateY: f,
        rotate: Math.atan2(b, a) * degrees,
        skewX: Math.atan(skewX) * degrees,
        scaleX: scaleX,
        scaleY: scaleY
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"HiDI0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var epsilon2 = 0.000000000001;
function cosh(x) {
    return ((x = Math.exp(x)) + 1 / x) / 2;
}
function sinh(x) {
    return ((x = Math.exp(x)) - 1 / x) / 2;
}
function tanh(x) {
    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
}
exports.default = (function zoomRho(rho, rho2, rho4) {
    // p0 = [ux0, uy0, w0]
    // p1 = [ux1, uy1, w1]
    function zoom(p0, p1) {
        var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
        // Special case for u0 ≅ u1.
        if (d2 < epsilon2) {
            S = Math.log(w1 / w0) / rho;
            i = function(t) {
                return [
                    ux0 + t * dx,
                    uy0 + t * dy,
                    w0 * Math.exp(rho * t * S)
                ];
            };
        } else {
            var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1), b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
            S = (r1 - r0) / rho;
            i = function(t) {
                var s = t * S, coshr0 = cosh(r0), u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
                return [
                    ux0 + u * dx,
                    uy0 + u * dy,
                    w0 * coshr0 / cosh(rho * s + r0)
                ];
            };
        }
        i.duration = S * 1000 * rho / Math.SQRT2;
        return i;
    }
    zoom.rho = function(_) {
        var _1 = Math.max(0.001, +_), _2 = _1 * _1, _4 = _2 * _2;
        return zoomRho(_1, _2, _4);
    };
    return zoom;
})(Math.SQRT2, 2, 4);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"9bAoa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "rgbBasis", ()=>rgbBasis
);
parcelHelpers.export(exports, "rgbBasisClosed", ()=>rgbBasisClosed
);
var _d3Color = require("d3-color");
var _basisJs = require("./basis.js");
var _basisJsDefault = parcelHelpers.interopDefault(_basisJs);
var _basisClosedJs = require("./basisClosed.js");
var _basisClosedJsDefault = parcelHelpers.interopDefault(_basisClosedJs);
var _colorJs = require("./color.js");
var _colorJsDefault = parcelHelpers.interopDefault(_colorJs);
exports.default = (function rgbGamma(y) {
    var color = _colorJs.gamma(y);
    function rgb(start, end) {
        var r = color((start = _d3Color.rgb(start)).r, (end = _d3Color.rgb(end)).r), g = color(start.g, end.g), b = color(start.b, end.b), opacity = _colorJsDefault.default(start.opacity, end.opacity);
        return function(t) {
            start.r = r(t);
            start.g = g(t);
            start.b = b(t);
            start.opacity = opacity(t);
            return start + "";
        };
    }
    rgb.gamma = rgbGamma;
    return rgb;
})(1);
function rgbSpline(spline) {
    return function(colors) {
        var n = colors.length, r = new Array(n), g = new Array(n), b = new Array(n), i, color;
        for(i = 0; i < n; ++i){
            color = _d3Color.rgb(colors[i]);
            r[i] = color.r || 0;
            g[i] = color.g || 0;
            b[i] = color.b || 0;
        }
        r = spline(r);
        g = spline(g);
        b = spline(b);
        color.opacity = 1;
        return function(t) {
            color.r = r(t);
            color.g = g(t);
            color.b = b(t);
            return color + "";
        };
    };
}
var rgbBasis = rgbSpline(_basisJsDefault.default);
var rgbBasisClosed = rgbSpline(_basisClosedJsDefault.default);

},{"d3-color":"ap3Jg","./basis.js":"1DJ3x","./basisClosed.js":"d28oA","./color.js":"8Wcc3","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"ap3Jg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "color", ()=>_colorJsDefault.default
);
parcelHelpers.export(exports, "rgb", ()=>_colorJs.rgb
);
parcelHelpers.export(exports, "hsl", ()=>_colorJs.hsl
);
parcelHelpers.export(exports, "lab", ()=>_labJsDefault.default
);
parcelHelpers.export(exports, "hcl", ()=>_labJs.hcl
);
parcelHelpers.export(exports, "lch", ()=>_labJs.lch
);
parcelHelpers.export(exports, "gray", ()=>_labJs.gray
);
parcelHelpers.export(exports, "cubehelix", ()=>_cubehelixJsDefault.default
);
var _colorJs = require("./color.js");
var _colorJsDefault = parcelHelpers.interopDefault(_colorJs);
var _labJs = require("./lab.js");
var _labJsDefault = parcelHelpers.interopDefault(_labJs);
var _cubehelixJs = require("./cubehelix.js");
var _cubehelixJsDefault = parcelHelpers.interopDefault(_cubehelixJs);

},{"./color.js":"hAUDV","./lab.js":false,"./cubehelix.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hAUDV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Color", ()=>Color
);
parcelHelpers.export(exports, "darker", ()=>darker
);
parcelHelpers.export(exports, "brighter", ()=>brighter
);
parcelHelpers.export(exports, "rgbConvert", ()=>rgbConvert
);
parcelHelpers.export(exports, "rgb", ()=>rgb
);
parcelHelpers.export(exports, "Rgb", ()=>Rgb
);
parcelHelpers.export(exports, "hslConvert", ()=>hslConvert
);
parcelHelpers.export(exports, "hsl", ()=>hsl
);
var _defineJs = require("./define.js");
var _defineJsDefault = parcelHelpers.interopDefault(_defineJs);
function Color() {
}
var darker = 0.7;
var brighter = 1 / darker;
var reI = "\\s*([+-]?\\d+)\\s*", reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*", reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*", reHex = /^#([0-9a-f]{3,8})$/, reRgbInteger = new RegExp("^rgb\\(" + [
    reI,
    reI,
    reI
] + "\\)$"), reRgbPercent = new RegExp("^rgb\\(" + [
    reP,
    reP,
    reP
] + "\\)$"), reRgbaInteger = new RegExp("^rgba\\(" + [
    reI,
    reI,
    reI,
    reN
] + "\\)$"), reRgbaPercent = new RegExp("^rgba\\(" + [
    reP,
    reP,
    reP,
    reN
] + "\\)$"), reHslPercent = new RegExp("^hsl\\(" + [
    reN,
    reP,
    reP
] + "\\)$"), reHslaPercent = new RegExp("^hsla\\(" + [
    reN,
    reP,
    reP,
    reN
] + "\\)$");
var named = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
};
_defineJsDefault.default(Color, color, {
    copy: function(channels) {
        return Object.assign(new this.constructor, this, channels);
    },
    displayable: function() {
        return this.rgb().displayable();
    },
    hex: color_formatHex,
    formatHex: color_formatHex,
    formatHsl: color_formatHsl,
    formatRgb: color_formatRgb,
    toString: color_formatRgb
});
function color_formatHex() {
    return this.rgb().formatHex();
}
function color_formatHsl() {
    return hslConvert(this).formatHsl();
}
function color_formatRgb() {
    return this.rgb().formatRgb();
}
function color(format) {
    var m, l;
    format = (format + "").trim().toLowerCase();
    return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
     : l === 3 ? new Rgb(m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, (m & 15) << 4 | m & 15, 1) // #f00
     : l === 8 ? rgba(m >> 24 & 255, m >> 16 & 255, m >> 8 & 255, (m & 255) / 255) // #ff000000
     : l === 4 ? rgba(m >> 12 & 15 | m >> 8 & 240, m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, ((m & 15) << 4 | m & 15) / 255) // #f000
     : null) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
     : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
     : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
     : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
     : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
     : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
     : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
     : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}
exports.default = color;
function rgbn(n) {
    return new Rgb(n >> 16 & 255, n >> 8 & 255, n & 255, 1);
}
function rgba(r, g, b, a) {
    if (a <= 0) r = g = b = NaN;
    return new Rgb(r, g, b, a);
}
function rgbConvert(o) {
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Rgb;
    o = o.rgb();
    return new Rgb(o.r, o.g, o.b, o.opacity);
}
function rgb(r, g, b, opacity) {
    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}
function Rgb(r, g, b, opacity) {
    this.r = +r;
    this.g = +g;
    this.b = +b;
    this.opacity = +opacity;
}
_defineJsDefault.default(Rgb, rgb, _defineJs.extend(Color, {
    brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
    },
    darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
    },
    rgb: function() {
        return this;
    },
    displayable: function() {
        return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
    },
    hex: rgb_formatHex,
    formatHex: rgb_formatHex,
    formatRgb: rgb_formatRgb,
    toString: rgb_formatRgb
}));
function rgb_formatHex() {
    return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}
function rgb_formatRgb() {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}
function hex(value) {
    value = Math.max(0, Math.min(255, Math.round(value) || 0));
    return (value < 16 ? "0" : "") + value.toString(16);
}
function hsla(h, s, l, a) {
    if (a <= 0) h = s = l = NaN;
    else if (l <= 0 || l >= 1) h = s = NaN;
    else if (s <= 0) h = NaN;
    return new Hsl(h, s, l, a);
}
function hslConvert(o) {
    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Hsl;
    if (o instanceof Hsl) return o;
    o = o.rgb();
    var r = o.r / 255, g = o.g / 255, b = o.b / 255, min = Math.min(r, g, b), max = Math.max(r, g, b), h = NaN, s = max - min, l = (max + min) / 2;
    if (s) {
        if (r === max) h = (g - b) / s + (g < b) * 6;
        else if (g === max) h = (b - r) / s + 2;
        else h = (r - g) / s + 4;
        s /= l < 0.5 ? max + min : 2 - max - min;
        h *= 60;
    } else s = l > 0 && l < 1 ? 0 : h;
    return new Hsl(h, s, l, o.opacity);
}
function hsl(h, s, l, opacity) {
    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}
function Hsl(h, s, l, opacity) {
    this.h = +h;
    this.s = +s;
    this.l = +l;
    this.opacity = +opacity;
}
_defineJsDefault.default(Hsl, hsl, _defineJs.extend(Color, {
    brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
    },
    darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
    },
    rgb: function() {
        var h = this.h % 360 + (this.h < 0) * 360, s = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s, m1 = 2 * l - m2;
        return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
    },
    displayable: function() {
        return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
    },
    formatHsl: function() {
        var a = this.opacity;
        a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
        return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
    }
}));
/* From FvD 13.37, CSS Color Module Level 3 */ function hsl2rgb(h, m1, m2) {
    return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}

},{"./define.js":"5yZbK","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"5yZbK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "extend", ()=>extend
);
exports.default = function(constructor, factory, prototype) {
    constructor.prototype = factory.prototype = prototype;
    prototype.constructor = constructor;
};
function extend(parent, definition) {
    var prototype = Object.create(parent.prototype);
    for(var key in definition)prototype[key] = definition[key];
    return prototype;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"8Wcc3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hue", ()=>hue
);
parcelHelpers.export(exports, "gamma", ()=>gamma
);
var _constantJs = require("./constant.js");
var _constantJsDefault = parcelHelpers.interopDefault(_constantJs);
function linear(a, d) {
    return function(t) {
        return a + t * d;
    };
}
function exponential(a, b, y) {
    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
        return Math.pow(a + t * b, y);
    };
}
function hue(a, b) {
    var d = b - a;
    return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : _constantJsDefault.default(isNaN(a) ? b : a);
}
function gamma(y) {
    return (y = +y) === 1 ? nogamma : function(a, b) {
        return b - a ? exponential(a, b, y) : _constantJsDefault.default(isNaN(a) ? b : a);
    };
}
function nogamma(a, b) {
    var d = b - a;
    return d ? linear(a, d) : _constantJsDefault.default(isNaN(a) ? b : a);
}
exports.default = nogamma;

},{"./constant.js":"hWtul","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hWtul":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = (x)=>()=>x
;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"cRYyR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "transition", ()=>_indexJsDefault.default
);
parcelHelpers.export(exports, "active", ()=>_activeJsDefault.default
);
parcelHelpers.export(exports, "interrupt", ()=>_interruptJsDefault.default
);
var _indexJs = require("./selection/index.js");
var _indexJs1 = require("./transition/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs1);
var _activeJs = require("./active.js");
var _activeJsDefault = parcelHelpers.interopDefault(_activeJs);
var _interruptJs = require("./interrupt.js");
var _interruptJsDefault = parcelHelpers.interopDefault(_interruptJs);

},{"./selection/index.js":"gNdN5","./transition/index.js":"18i1e","./active.js":"e5Mev","./interrupt.js":"d4VjA","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"gNdN5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _d3Selection = require("d3-selection");
var _interruptJs = require("./interrupt.js");
var _interruptJsDefault = parcelHelpers.interopDefault(_interruptJs);
var _transitionJs = require("./transition.js");
var _transitionJsDefault = parcelHelpers.interopDefault(_transitionJs);
_d3Selection.selection.prototype.interrupt = _interruptJsDefault.default;
_d3Selection.selection.prototype.transition = _transitionJsDefault.default;

},{"d3-selection":"hgWtk","./interrupt.js":"hoP2s","./transition.js":"7r67v","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hoP2s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _interruptJs = require("../interrupt.js");
var _interruptJsDefault = parcelHelpers.interopDefault(_interruptJs);
exports.default = function(name) {
    return this.each(function() {
        _interruptJsDefault.default(this, name);
    });
};

},{"../interrupt.js":"d4VjA","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"d4VjA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _scheduleJs = require("./transition/schedule.js");
exports.default = function(node, name) {
    var schedules = node.__transition, schedule, active, empty = true, i;
    if (!schedules) return;
    name = name == null ? null : name + "";
    for(i in schedules){
        if ((schedule = schedules[i]).name !== name) {
            empty = false;
            continue;
        }
        active = schedule.state > _scheduleJs.STARTING && schedule.state < _scheduleJs.ENDING;
        schedule.state = _scheduleJs.ENDED;
        schedule.timer.stop();
        schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
        delete schedules[i];
    }
    if (empty) delete node.__transition;
};

},{"./transition/schedule.js":"dTpjR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"dTpjR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CREATED", ()=>CREATED
);
parcelHelpers.export(exports, "SCHEDULED", ()=>SCHEDULED
);
parcelHelpers.export(exports, "STARTING", ()=>STARTING
);
parcelHelpers.export(exports, "STARTED", ()=>STARTED
);
parcelHelpers.export(exports, "RUNNING", ()=>RUNNING
);
parcelHelpers.export(exports, "ENDING", ()=>ENDING
);
parcelHelpers.export(exports, "ENDED", ()=>ENDED
);
parcelHelpers.export(exports, "init", ()=>init
);
parcelHelpers.export(exports, "set", ()=>set
);
parcelHelpers.export(exports, "get", ()=>get
);
var _d3Dispatch = require("d3-dispatch");
var _d3Timer = require("d3-timer");
var emptyOn = _d3Dispatch.dispatch("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
var SCHEDULED = 1;
var STARTING = 2;
var STARTED = 3;
var RUNNING = 4;
var ENDING = 5;
var ENDED = 6;
exports.default = function(node, name, id, index, group, timing) {
    var schedules = node.__transition;
    if (!schedules) node.__transition = {
    };
    else if (id in schedules) return;
    create(node, id, {
        name: name,
        index: index,
        group: group,
        on: emptyOn,
        tween: emptyTween,
        time: timing.time,
        delay: timing.delay,
        duration: timing.duration,
        ease: timing.ease,
        timer: null,
        state: CREATED
    });
};
function init(node, id) {
    var schedule = get(node, id);
    if (schedule.state > CREATED) throw new Error("too late; already scheduled");
    return schedule;
}
function set(node, id) {
    var schedule = get(node, id);
    if (schedule.state > STARTED) throw new Error("too late; already running");
    return schedule;
}
function get(node, id) {
    var schedule = node.__transition;
    if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
    return schedule;
}
function create(node, id, self) {
    var schedules = node.__transition, tween;
    // Initialize the self timer when the transition is created.
    // Note the actual delay is not known until the first callback!
    schedules[id] = self;
    self.timer = _d3Timer.timer(schedule, 0, self.time);
    function schedule(elapsed) {
        self.state = SCHEDULED;
        self.timer.restart(start, self.delay, self.time);
        // If the elapsed delay is less than our first sleep, start immediately.
        if (self.delay <= elapsed) start(elapsed - self.delay);
    }
    function start(elapsed) {
        var i, j, n, o;
        // If the state is not SCHEDULED, then we previously errored on start.
        if (self.state !== SCHEDULED) return stop();
        for(i in schedules){
            o = schedules[i];
            if (o.name !== self.name) continue;
            // While this element already has a starting transition during this frame,
            // defer starting an interrupting transition until that transition has a
            // chance to tick (and possibly end); see d3/d3-transition#54!
            if (o.state === STARTED) return _d3Timer.timeout(start);
            // Interrupt the active transition, if any.
            if (o.state === RUNNING) {
                o.state = ENDED;
                o.timer.stop();
                o.on.call("interrupt", node, node.__data__, o.index, o.group);
                delete schedules[i];
            } else if (+i < id) {
                o.state = ENDED;
                o.timer.stop();
                o.on.call("cancel", node, node.__data__, o.index, o.group);
                delete schedules[i];
            }
        }
        // Defer the first tick to end of the current frame; see d3/d3#1576.
        // Note the transition may be canceled after start and before the first tick!
        // Note this must be scheduled before the start event; see d3/d3-transition#16!
        // Assuming this is successful, subsequent callbacks go straight to tick.
        _d3Timer.timeout(function() {
            if (self.state === STARTED) {
                self.state = RUNNING;
                self.timer.restart(tick, self.delay, self.time);
                tick(elapsed);
            }
        });
        // Dispatch the start event.
        // Note this must be done before the tween are initialized.
        self.state = STARTING;
        self.on.call("start", node, node.__data__, self.index, self.group);
        if (self.state !== STARTING) return; // interrupted
        self.state = STARTED;
        // Initialize the tween, deleting null tween.
        tween = new Array(n = self.tween.length);
        for(i = 0, j = -1; i < n; ++i)if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) tween[++j] = o;
        tween.length = j + 1;
    }
    function tick(elapsed) {
        var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1), i = -1, n = tween.length;
        while(++i < n)tween[i].call(node, t);
        // Dispatch the end event.
        if (self.state === ENDING) {
            self.on.call("end", node, node.__data__, self.index, self.group);
            stop();
        }
    }
    function stop() {
        self.state = ENDED;
        self.timer.stop();
        delete schedules[id];
        for(var i in schedules)return; // eslint-disable-line no-unused-vars
        delete node.__transition;
    }
}

},{"d3-dispatch":"9d2te","d3-timer":"82ygz","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"82ygz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "now", ()=>_timerJs.now
);
parcelHelpers.export(exports, "timer", ()=>_timerJs.timer
);
parcelHelpers.export(exports, "timerFlush", ()=>_timerJs.timerFlush
);
parcelHelpers.export(exports, "timeout", ()=>_timeoutJsDefault.default
);
parcelHelpers.export(exports, "interval", ()=>_intervalJsDefault.default
);
var _timerJs = require("./timer.js");
var _timeoutJs = require("./timeout.js");
var _timeoutJsDefault = parcelHelpers.interopDefault(_timeoutJs);
var _intervalJs = require("./interval.js");
var _intervalJsDefault = parcelHelpers.interopDefault(_intervalJs);

},{"./timer.js":"e5Yqg","./timeout.js":"iPlus","./interval.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"e5Yqg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "now", ()=>now
);
parcelHelpers.export(exports, "Timer", ()=>Timer
);
parcelHelpers.export(exports, "timer", ()=>timer
);
parcelHelpers.export(exports, "timerFlush", ()=>timerFlush
);
var frame = 0, timeout = 0, interval = 0, pokeDelay = 1000, taskHead, taskTail, clockLast = 0, clockNow = 0, clockSkew = 0, clock = typeof performance === "object" && performance.now ? performance : Date, setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) {
    setTimeout(f, 17);
};
function now() {
    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}
function clearNow() {
    clockNow = 0;
}
function Timer() {
    this._call = this._time = this._next = null;
}
Timer.prototype = timer.prototype = {
    constructor: Timer,
    restart: function(callback, delay, time) {
        if (typeof callback !== "function") throw new TypeError("callback is not a function");
        time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
        if (!this._next && taskTail !== this) {
            if (taskTail) taskTail._next = this;
            else taskHead = this;
            taskTail = this;
        }
        this._call = callback;
        this._time = time;
        sleep();
    },
    stop: function() {
        if (this._call) {
            this._call = null;
            this._time = Infinity;
            sleep();
        }
    }
};
function timer(callback, delay, time) {
    var t = new Timer;
    t.restart(callback, delay, time);
    return t;
}
function timerFlush() {
    now(); // Get the current time, if not already set.
    ++frame; // Pretend we’ve set an alarm, if we haven’t already.
    var t = taskHead, e;
    while(t){
        if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
        t = t._next;
    }
    --frame;
}
function wake() {
    clockNow = (clockLast = clock.now()) + clockSkew;
    frame = timeout = 0;
    try {
        timerFlush();
    } finally{
        frame = 0;
        nap();
        clockNow = 0;
    }
}
function poke() {
    var now1 = clock.now(), delay = now1 - clockLast;
    if (delay > pokeDelay) clockSkew -= delay, clockLast = now1;
}
function nap() {
    var t0, t1 = taskHead, t2, time = Infinity;
    while(t1)if (t1._call) {
        if (time > t1._time) time = t1._time;
        t0 = t1, t1 = t1._next;
    } else {
        t2 = t1._next, t1._next = null;
        t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
    taskTail = t0;
    sleep(time);
}
function sleep(time) {
    if (frame) return; // Soonest alarm already set, or will be.
    if (timeout) timeout = clearTimeout(timeout);
    var delay = time - clockNow; // Strictly less than if we recomputed clockNow.
    if (delay > 24) {
        if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
        if (interval) interval = clearInterval(interval);
    } else {
        if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
        frame = 1, setFrame(wake);
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"iPlus":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _timerJs = require("./timer.js");
exports.default = function(callback, delay, time) {
    var t = new _timerJs.Timer;
    delay = delay == null ? 0 : +delay;
    t.restart((elapsed)=>{
        t.stop();
        callback(elapsed + delay);
    }, delay, time);
    return t;
};

},{"./timer.js":"e5Yqg","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"7r67v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../transition/index.js");
var _scheduleJs = require("../transition/schedule.js");
var _scheduleJsDefault = parcelHelpers.interopDefault(_scheduleJs);
var _d3Ease = require("d3-ease");
var _d3Timer = require("d3-timer");
var defaultTiming = {
    time: null,
    delay: 0,
    duration: 250,
    ease: _d3Ease.easeCubicInOut
};
function inherit(node, id) {
    var timing;
    while(!(timing = node.__transition) || !(timing = timing[id])){
        if (!(node = node.parentNode)) throw new Error(`transition ${id} not found`);
    }
    return timing;
}
exports.default = function(name) {
    var id, timing;
    if (name instanceof _indexJs.Transition) id = name._id, name = name._name;
    else id = _indexJs.newId(), (timing = defaultTiming).time = _d3Timer.now(), name = name == null ? null : name + "";
    for(var groups = this._groups, m = groups.length, j = 0; j < m; ++j){
        for(var group = groups[j], n = group.length, node, i = 0; i < n; ++i)if (node = group[i]) _scheduleJsDefault.default(node, name, id, i, group, timing || inherit(node, id));
    }
    return new _indexJs.Transition(groups, this._parents, name, id);
};

},{"../transition/index.js":"18i1e","../transition/schedule.js":"dTpjR","d3-ease":"elZFc","d3-timer":"82ygz","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"18i1e":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Transition", ()=>Transition
);
parcelHelpers.export(exports, "newId", ()=>newId
);
var _d3Selection = require("d3-selection");
var _attrJs = require("./attr.js");
var _attrJsDefault = parcelHelpers.interopDefault(_attrJs);
var _attrTweenJs = require("./attrTween.js");
var _attrTweenJsDefault = parcelHelpers.interopDefault(_attrTweenJs);
var _delayJs = require("./delay.js");
var _delayJsDefault = parcelHelpers.interopDefault(_delayJs);
var _durationJs = require("./duration.js");
var _durationJsDefault = parcelHelpers.interopDefault(_durationJs);
var _easeJs = require("./ease.js");
var _easeJsDefault = parcelHelpers.interopDefault(_easeJs);
var _easeVaryingJs = require("./easeVarying.js");
var _easeVaryingJsDefault = parcelHelpers.interopDefault(_easeVaryingJs);
var _filterJs = require("./filter.js");
var _filterJsDefault = parcelHelpers.interopDefault(_filterJs);
var _mergeJs = require("./merge.js");
var _mergeJsDefault = parcelHelpers.interopDefault(_mergeJs);
var _onJs = require("./on.js");
var _onJsDefault = parcelHelpers.interopDefault(_onJs);
var _removeJs = require("./remove.js");
var _removeJsDefault = parcelHelpers.interopDefault(_removeJs);
var _selectJs = require("./select.js");
var _selectJsDefault = parcelHelpers.interopDefault(_selectJs);
var _selectAllJs = require("./selectAll.js");
var _selectAllJsDefault = parcelHelpers.interopDefault(_selectAllJs);
var _selectionJs = require("./selection.js");
var _selectionJsDefault = parcelHelpers.interopDefault(_selectionJs);
var _styleJs = require("./style.js");
var _styleJsDefault = parcelHelpers.interopDefault(_styleJs);
var _styleTweenJs = require("./styleTween.js");
var _styleTweenJsDefault = parcelHelpers.interopDefault(_styleTweenJs);
var _textJs = require("./text.js");
var _textJsDefault = parcelHelpers.interopDefault(_textJs);
var _textTweenJs = require("./textTween.js");
var _textTweenJsDefault = parcelHelpers.interopDefault(_textTweenJs);
var _transitionJs = require("./transition.js");
var _transitionJsDefault = parcelHelpers.interopDefault(_transitionJs);
var _tweenJs = require("./tween.js");
var _tweenJsDefault = parcelHelpers.interopDefault(_tweenJs);
var _endJs = require("./end.js");
var _endJsDefault = parcelHelpers.interopDefault(_endJs);
var id = 0;
function Transition(groups, parents, name, id1) {
    this._groups = groups;
    this._parents = parents;
    this._name = name;
    this._id = id1;
}
function transition(name) {
    return _d3Selection.selection().transition(name);
}
exports.default = transition;
function newId() {
    return ++id;
}
var selection_prototype = _d3Selection.selection.prototype;
Transition.prototype = transition.prototype = {
    constructor: Transition,
    select: _selectJsDefault.default,
    selectAll: _selectAllJsDefault.default,
    filter: _filterJsDefault.default,
    merge: _mergeJsDefault.default,
    selection: _selectionJsDefault.default,
    transition: _transitionJsDefault.default,
    call: selection_prototype.call,
    nodes: selection_prototype.nodes,
    node: selection_prototype.node,
    size: selection_prototype.size,
    empty: selection_prototype.empty,
    each: selection_prototype.each,
    on: _onJsDefault.default,
    attr: _attrJsDefault.default,
    attrTween: _attrTweenJsDefault.default,
    style: _styleJsDefault.default,
    styleTween: _styleTweenJsDefault.default,
    text: _textJsDefault.default,
    textTween: _textTweenJsDefault.default,
    remove: _removeJsDefault.default,
    tween: _tweenJsDefault.default,
    delay: _delayJsDefault.default,
    duration: _durationJsDefault.default,
    ease: _easeJsDefault.default,
    easeVarying: _easeVaryingJsDefault.default,
    end: _endJsDefault.default,
    [Symbol.iterator]: selection_prototype[Symbol.iterator]
};

},{"d3-selection":"hgWtk","./attr.js":"a88nM","./attrTween.js":"4rwV3","./delay.js":"zwknt","./duration.js":"fXFoC","./ease.js":"d7SOb","./easeVarying.js":"6ms9d","./filter.js":"koiOg","./merge.js":"66rfJ","./on.js":"2whzO","./remove.js":"jdITm","./select.js":"fZfF3","./selectAll.js":"lJAHb","./selection.js":"a9rwa","./style.js":"8dHzR","./styleTween.js":"8Kz8d","./text.js":"hhhZ2","./textTween.js":"ezXKs","./transition.js":"eIPZ1","./tween.js":"8L0br","./end.js":"bGIdi","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"a88nM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Interpolate = require("d3-interpolate");
var _d3Selection = require("d3-selection");
var _tweenJs = require("./tween.js");
var _interpolateJs = require("./interpolate.js");
var _interpolateJsDefault = parcelHelpers.interopDefault(_interpolateJs);
function attrRemove(name) {
    return function() {
        this.removeAttribute(name);
    };
}
function attrRemoveNS(fullname) {
    return function() {
        this.removeAttributeNS(fullname.space, fullname.local);
    };
}
function attrConstant(name, interpolate, value1) {
    var string00, string1 = value1 + "", interpolate0;
    return function() {
        var string0 = this.getAttribute(name);
        return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
    };
}
function attrConstantNS(fullname, interpolate, value1) {
    var string00, string1 = value1 + "", interpolate0;
    return function() {
        var string0 = this.getAttributeNS(fullname.space, fullname.local);
        return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
    };
}
function attrFunction(name, interpolate, value) {
    var string00, string10, interpolate0;
    return function() {
        var string0, value1 = value(this), string1;
        if (value1 == null) return void this.removeAttribute(name);
        string0 = this.getAttribute(name);
        string1 = value1 + "";
        return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
    };
}
function attrFunctionNS(fullname, interpolate, value) {
    var string00, string10, interpolate0;
    return function() {
        var string0, value1 = value(this), string1;
        if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
        string0 = this.getAttributeNS(fullname.space, fullname.local);
        string1 = value1 + "";
        return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
    };
}
exports.default = function(name, value) {
    var fullname = _d3Selection.namespace(name), i = fullname === "transform" ? _d3Interpolate.interpolateTransformSvg : _interpolateJsDefault.default;
    return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, _tweenJs.tweenValue(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
};

},{"d3-interpolate":"e7XwA","d3-selection":"hgWtk","./tween.js":"8L0br","./interpolate.js":"1aR0B","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"8L0br":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "tweenValue", ()=>tweenValue
);
var _scheduleJs = require("./schedule.js");
function tweenRemove(id, name) {
    var tween0, tween1;
    return function() {
        var schedule = _scheduleJs.set(this, id), tween = schedule.tween;
        // If this node shared tween with the previous node,
        // just assign the updated shared tween and we’re done!
        // Otherwise, copy-on-write.
        if (tween !== tween0) {
            tween1 = tween0 = tween;
            for(var i = 0, n = tween1.length; i < n; ++i)if (tween1[i].name === name) {
                tween1 = tween1.slice();
                tween1.splice(i, 1);
                break;
            }
        }
        schedule.tween = tween1;
    };
}
function tweenFunction(id, name, value) {
    var tween0, tween1;
    if (typeof value !== "function") throw new Error;
    return function() {
        var schedule = _scheduleJs.set(this, id), tween = schedule.tween;
        // If this node shared tween with the previous node,
        // just assign the updated shared tween and we’re done!
        // Otherwise, copy-on-write.
        if (tween !== tween0) {
            tween1 = (tween0 = tween).slice();
            for(var t = {
                name: name,
                value: value
            }, i = 0, n = tween1.length; i < n; ++i)if (tween1[i].name === name) {
                tween1[i] = t;
                break;
            }
            if (i === n) tween1.push(t);
        }
        schedule.tween = tween1;
    };
}
exports.default = function(name, value) {
    var id = this._id;
    name += "";
    if (arguments.length < 2) {
        var tween = _scheduleJs.get(this.node(), id).tween;
        for(var i = 0, n = tween.length, t; i < n; ++i){
            if ((t = tween[i]).name === name) return t.value;
        }
        return null;
    }
    return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
};
function tweenValue(transition, name, value) {
    var id = transition._id;
    transition.each(function() {
        var schedule = _scheduleJs.set(this, id);
        (schedule.value || (schedule.value = {
        }))[name] = value.apply(this, arguments);
    });
    return function(node) {
        return _scheduleJs.get(node, id).value[name];
    };
}

},{"./schedule.js":"dTpjR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"1aR0B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Color = require("d3-color");
var _d3Interpolate = require("d3-interpolate");
exports.default = function(a, b) {
    var c;
    return (typeof b === "number" ? _d3Interpolate.interpolateNumber : b instanceof _d3Color.color ? _d3Interpolate.interpolateRgb : (c = _d3Color.color(b)) ? (b = c, _d3Interpolate.interpolateRgb) : _d3Interpolate.interpolateString)(a, b);
};

},{"d3-color":"ap3Jg","d3-interpolate":"e7XwA","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"4rwV3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Selection = require("d3-selection");
function attrInterpolate(name, i) {
    return function(t) {
        this.setAttribute(name, i.call(this, t));
    };
}
function attrInterpolateNS(fullname, i) {
    return function(t) {
        this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
    };
}
function attrTweenNS(fullname, value) {
    var t0, i0;
    function tween() {
        var i = value.apply(this, arguments);
        if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
        return t0;
    }
    tween._value = value;
    return tween;
}
function attrTween(name, value) {
    var t0, i0;
    function tween() {
        var i = value.apply(this, arguments);
        if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
        return t0;
    }
    tween._value = value;
    return tween;
}
exports.default = function(name, value) {
    var key = "attr." + name;
    if (arguments.length < 2) return (key = this.tween(key)) && key._value;
    if (value == null) return this.tween(key, null);
    if (typeof value !== "function") throw new Error;
    var fullname = _d3Selection.namespace(name);
    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
};

},{"d3-selection":"hgWtk","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"zwknt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _scheduleJs = require("./schedule.js");
function delayFunction(id, value) {
    return function() {
        _scheduleJs.init(this, id).delay = +value.apply(this, arguments);
    };
}
function delayConstant(id, value) {
    return value = +value, function() {
        _scheduleJs.init(this, id).delay = value;
    };
}
exports.default = function(value) {
    var id = this._id;
    return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : _scheduleJs.get(this.node(), id).delay;
};

},{"./schedule.js":"dTpjR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"fXFoC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _scheduleJs = require("./schedule.js");
function durationFunction(id, value) {
    return function() {
        _scheduleJs.set(this, id).duration = +value.apply(this, arguments);
    };
}
function durationConstant(id, value) {
    return value = +value, function() {
        _scheduleJs.set(this, id).duration = value;
    };
}
exports.default = function(value) {
    var id = this._id;
    return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : _scheduleJs.get(this.node(), id).duration;
};

},{"./schedule.js":"dTpjR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"d7SOb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _scheduleJs = require("./schedule.js");
function easeConstant(id, value) {
    if (typeof value !== "function") throw new Error;
    return function() {
        _scheduleJs.set(this, id).ease = value;
    };
}
exports.default = function(value) {
    var id = this._id;
    return arguments.length ? this.each(easeConstant(id, value)) : _scheduleJs.get(this.node(), id).ease;
};

},{"./schedule.js":"dTpjR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6ms9d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _scheduleJs = require("./schedule.js");
function easeVarying(id, value) {
    return function() {
        var v = value.apply(this, arguments);
        if (typeof v !== "function") throw new Error;
        _scheduleJs.set(this, id).ease = v;
    };
}
exports.default = function(value) {
    if (typeof value !== "function") throw new Error;
    return this.each(easeVarying(this._id, value));
};

},{"./schedule.js":"dTpjR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"koiOg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Selection = require("d3-selection");
var _indexJs = require("./index.js");
exports.default = function(match) {
    if (typeof match !== "function") match = _d3Selection.matcher(match);
    for(var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j){
        for(var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i)if ((node = group[i]) && match.call(node, node.__data__, i, group)) subgroup.push(node);
    }
    return new _indexJs.Transition(subgroups, this._parents, this._name, this._id);
};

},{"d3-selection":"hgWtk","./index.js":"18i1e","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"66rfJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./index.js");
exports.default = function(transition) {
    if (transition._id !== this._id) throw new Error;
    for(var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j){
        for(var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i)if (node = group0[i] || group1[i]) merge[i] = node;
    }
    for(; j < m0; ++j)merges[j] = groups0[j];
    return new _indexJs.Transition(merges, this._parents, this._name, this._id);
};

},{"./index.js":"18i1e","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"2whzO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _scheduleJs = require("./schedule.js");
function start(name) {
    return (name + "").trim().split(/^|\s+/).every(function(t) {
        var i = t.indexOf(".");
        if (i >= 0) t = t.slice(0, i);
        return !t || t === "start";
    });
}
function onFunction(id, name, listener) {
    var on0, on1, sit = start(name) ? _scheduleJs.init : _scheduleJs.set;
    return function() {
        var schedule = sit(this, id), on = schedule.on;
        // If this node shared a dispatch with the previous node,
        // just assign the updated shared dispatch and we’re done!
        // Otherwise, copy-on-write.
        if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
        schedule.on = on1;
    };
}
exports.default = function(name, listener) {
    var id = this._id;
    return arguments.length < 2 ? _scheduleJs.get(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
};

},{"./schedule.js":"dTpjR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"jdITm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function removeFunction(id) {
    return function() {
        var parent = this.parentNode;
        for(var i in this.__transition)if (+i !== id) return;
        if (parent) parent.removeChild(this);
    };
}
exports.default = function() {
    return this.on("end.remove", removeFunction(this._id));
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"fZfF3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Selection = require("d3-selection");
var _indexJs = require("./index.js");
var _scheduleJs = require("./schedule.js");
var _scheduleJsDefault = parcelHelpers.interopDefault(_scheduleJs);
exports.default = function(select) {
    var name = this._name, id = this._id;
    if (typeof select !== "function") select = _d3Selection.selector(select);
    for(var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j){
        for(var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i)if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
            if ("__data__" in node) subnode.__data__ = node.__data__;
            subgroup[i] = subnode;
            _scheduleJsDefault.default(subgroup[i], name, id, i, subgroup, _scheduleJs.get(node, id));
        }
    }
    return new _indexJs.Transition(subgroups, this._parents, name, id);
};

},{"d3-selection":"hgWtk","./index.js":"18i1e","./schedule.js":"dTpjR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"lJAHb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Selection = require("d3-selection");
var _indexJs = require("./index.js");
var _scheduleJs = require("./schedule.js");
var _scheduleJsDefault = parcelHelpers.interopDefault(_scheduleJs);
exports.default = function(select) {
    var name = this._name, id = this._id;
    if (typeof select !== "function") select = _d3Selection.selectorAll(select);
    for(var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j){
        for(var group = groups[j], n = group.length, node, i = 0; i < n; ++i)if (node = group[i]) {
            for(var children = select.call(node, node.__data__, i, group), child, inherit = _scheduleJs.get(node, id), k = 0, l = children.length; k < l; ++k)if (child = children[k]) _scheduleJsDefault.default(child, name, id, k, children, inherit);
            subgroups.push(children);
            parents.push(node);
        }
    }
    return new _indexJs.Transition(subgroups, parents, name, id);
};

},{"d3-selection":"hgWtk","./index.js":"18i1e","./schedule.js":"dTpjR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"a9rwa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Selection = require("d3-selection");
var Selection = _d3Selection.selection.prototype.constructor;
exports.default = function() {
    return new Selection(this._groups, this._parents);
};

},{"d3-selection":"hgWtk","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"8dHzR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _d3Interpolate = require("d3-interpolate");
var _d3Selection = require("d3-selection");
var _scheduleJs = require("./schedule.js");
var _tweenJs = require("./tween.js");
var _interpolateJs = require("./interpolate.js");
var _interpolateJsDefault = parcelHelpers.interopDefault(_interpolateJs);
function styleNull(name, interpolate) {
    var string00, string10, interpolate0;
    return function() {
        var string0 = _d3Selection.style(this, name), string1 = (this.style.removeProperty(name), _d3Selection.style(this, name));
        return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
    };
}
function styleRemove(name) {
    return function() {
        this.style.removeProperty(name);
    };
}
function styleConstant(name, interpolate, value1) {
    var string00, string1 = value1 + "", interpolate0;
    return function() {
        var string0 = _d3Selection.style(this, name);
        return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
    };
}
function styleFunction(name, interpolate, value) {
    var string00, string10, interpolate0;
    return function() {
        var string0 = _d3Selection.style(this, name), value1 = value(this), string1 = value1 + "";
        if (value1 == null) string1 = value1 = (this.style.removeProperty(name), _d3Selection.style(this, name));
        return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
    };
}
function styleMaybeRemove(id, name) {
    var on0, on1, listener0, key = "style." + name, event = "end." + key, remove;
    return function() {
        var schedule = _scheduleJs.set(this, id), on = schedule.on, listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;
        // If this node shared a dispatch with the previous node,
        // just assign the updated shared dispatch and we’re done!
        // Otherwise, copy-on-write.
        if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);
        schedule.on = on1;
    };
}
exports.default = function(name, value, priority) {
    var i = (name += "") === "transform" ? _d3Interpolate.interpolateTransformCss : _interpolateJsDefault.default;
    return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove(name)) : typeof value === "function" ? this.styleTween(name, styleFunction(name, i, _tweenJs.tweenValue(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant(name, i, value), priority).on("end.style." + name, null);
};

},{"d3-interpolate":"e7XwA","d3-selection":"hgWtk","./schedule.js":"dTpjR","./tween.js":"8L0br","./interpolate.js":"1aR0B","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"8Kz8d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function styleInterpolate(name, i, priority) {
    return function(t) {
        this.style.setProperty(name, i.call(this, t), priority);
    };
}
function styleTween(name, value, priority) {
    var t, i0;
    function tween() {
        var i = value.apply(this, arguments);
        if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
        return t;
    }
    tween._value = value;
    return tween;
}
exports.default = function(name, value, priority) {
    var key = "style." + (name += "");
    if (arguments.length < 2) return (key = this.tween(key)) && key._value;
    if (value == null) return this.tween(key, null);
    if (typeof value !== "function") throw new Error;
    return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"hhhZ2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _tweenJs = require("./tween.js");
function textConstant(value) {
    return function() {
        this.textContent = value;
    };
}
function textFunction(value) {
    return function() {
        var value1 = value(this);
        this.textContent = value1 == null ? "" : value1;
    };
}
exports.default = function(value) {
    return this.tween("text", typeof value === "function" ? textFunction(_tweenJs.tweenValue(this, "text", value)) : textConstant(value == null ? "" : value + ""));
};

},{"./tween.js":"8L0br","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"ezXKs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function textInterpolate(i) {
    return function(t) {
        this.textContent = i.call(this, t);
    };
}
function textTween(value) {
    var t0, i0;
    function tween() {
        var i = value.apply(this, arguments);
        if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
        return t0;
    }
    tween._value = value;
    return tween;
}
exports.default = function(value) {
    var key = "text";
    if (arguments.length < 1) return (key = this.tween(key)) && key._value;
    if (value == null) return this.tween(key, null);
    if (typeof value !== "function") throw new Error;
    return this.tween(key, textTween(value));
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"eIPZ1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./index.js");
var _scheduleJs = require("./schedule.js");
var _scheduleJsDefault = parcelHelpers.interopDefault(_scheduleJs);
exports.default = function() {
    var name = this._name, id0 = this._id, id1 = _indexJs.newId();
    for(var groups = this._groups, m = groups.length, j = 0; j < m; ++j){
        for(var group = groups[j], n = group.length, node, i = 0; i < n; ++i)if (node = group[i]) {
            var inherit = _scheduleJs.get(node, id0);
            _scheduleJsDefault.default(node, name, id1, i, group, {
                time: inherit.time + inherit.delay + inherit.duration,
                delay: 0,
                duration: inherit.duration,
                ease: inherit.ease
            });
        }
    }
    return new _indexJs.Transition(groups, this._parents, name, id1);
};

},{"./index.js":"18i1e","./schedule.js":"dTpjR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"bGIdi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _scheduleJs = require("./schedule.js");
exports.default = function() {
    var on0, on1, that = this, id = that._id, size = that.size();
    return new Promise(function(resolve, reject) {
        var cancel = {
            value: reject
        }, end = {
            value: function() {
                if (--size === 0) resolve();
            }
        };
        that.each(function() {
            var schedule = _scheduleJs.set(this, id), on = schedule.on;
            // If this node shared a dispatch with the previous node,
            // just assign the updated shared dispatch and we’re done!
            // Otherwise, copy-on-write.
            if (on !== on0) {
                on1 = (on0 = on).copy();
                on1._.cancel.push(cancel);
                on1._.interrupt.push(cancel);
                on1._.end.push(end);
            }
            schedule.on = on1;
        });
        // The selection was empty, resolve end immediately
        if (size === 0) resolve();
    });
};

},{"./schedule.js":"dTpjR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"elZFc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "easeLinear", ()=>_linearJs.linear
);
parcelHelpers.export(exports, "easeQuad", ()=>_quadJs.quadInOut
);
parcelHelpers.export(exports, "easeQuadIn", ()=>_quadJs.quadIn
);
parcelHelpers.export(exports, "easeQuadOut", ()=>_quadJs.quadOut
);
parcelHelpers.export(exports, "easeQuadInOut", ()=>_quadJs.quadInOut
);
parcelHelpers.export(exports, "easeCubic", ()=>_cubicJs.cubicInOut
);
parcelHelpers.export(exports, "easeCubicIn", ()=>_cubicJs.cubicIn
);
parcelHelpers.export(exports, "easeCubicOut", ()=>_cubicJs.cubicOut
);
parcelHelpers.export(exports, "easeCubicInOut", ()=>_cubicJs.cubicInOut
);
parcelHelpers.export(exports, "easePoly", ()=>_polyJs.polyInOut
);
parcelHelpers.export(exports, "easePolyIn", ()=>_polyJs.polyIn
);
parcelHelpers.export(exports, "easePolyOut", ()=>_polyJs.polyOut
);
parcelHelpers.export(exports, "easePolyInOut", ()=>_polyJs.polyInOut
);
parcelHelpers.export(exports, "easeSin", ()=>_sinJs.sinInOut
);
parcelHelpers.export(exports, "easeSinIn", ()=>_sinJs.sinIn
);
parcelHelpers.export(exports, "easeSinOut", ()=>_sinJs.sinOut
);
parcelHelpers.export(exports, "easeSinInOut", ()=>_sinJs.sinInOut
);
parcelHelpers.export(exports, "easeExp", ()=>_expJs.expInOut
);
parcelHelpers.export(exports, "easeExpIn", ()=>_expJs.expIn
);
parcelHelpers.export(exports, "easeExpOut", ()=>_expJs.expOut
);
parcelHelpers.export(exports, "easeExpInOut", ()=>_expJs.expInOut
);
parcelHelpers.export(exports, "easeCircle", ()=>_circleJs.circleInOut
);
parcelHelpers.export(exports, "easeCircleIn", ()=>_circleJs.circleIn
);
parcelHelpers.export(exports, "easeCircleOut", ()=>_circleJs.circleOut
);
parcelHelpers.export(exports, "easeCircleInOut", ()=>_circleJs.circleInOut
);
parcelHelpers.export(exports, "easeBounce", ()=>_bounceJs.bounceOut
);
parcelHelpers.export(exports, "easeBounceIn", ()=>_bounceJs.bounceIn
);
parcelHelpers.export(exports, "easeBounceOut", ()=>_bounceJs.bounceOut
);
parcelHelpers.export(exports, "easeBounceInOut", ()=>_bounceJs.bounceInOut
);
parcelHelpers.export(exports, "easeBack", ()=>_backJs.backInOut
);
parcelHelpers.export(exports, "easeBackIn", ()=>_backJs.backIn
);
parcelHelpers.export(exports, "easeBackOut", ()=>_backJs.backOut
);
parcelHelpers.export(exports, "easeBackInOut", ()=>_backJs.backInOut
);
parcelHelpers.export(exports, "easeElastic", ()=>_elasticJs.elasticOut
);
parcelHelpers.export(exports, "easeElasticIn", ()=>_elasticJs.elasticIn
);
parcelHelpers.export(exports, "easeElasticOut", ()=>_elasticJs.elasticOut
);
parcelHelpers.export(exports, "easeElasticInOut", ()=>_elasticJs.elasticInOut
);
var _linearJs = require("./linear.js");
var _quadJs = require("./quad.js");
var _cubicJs = require("./cubic.js");
var _polyJs = require("./poly.js");
var _sinJs = require("./sin.js");
var _expJs = require("./exp.js");
var _circleJs = require("./circle.js");
var _bounceJs = require("./bounce.js");
var _backJs = require("./back.js");
var _elasticJs = require("./elastic.js");

},{"./linear.js":false,"./quad.js":false,"./cubic.js":"aZIHk","./poly.js":false,"./sin.js":false,"./exp.js":false,"./circle.js":false,"./bounce.js":false,"./back.js":false,"./elastic.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"aZIHk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cubicIn", ()=>cubicIn
);
parcelHelpers.export(exports, "cubicOut", ()=>cubicOut
);
parcelHelpers.export(exports, "cubicInOut", ()=>cubicInOut
);
function cubicIn(t) {
    return t * t * t;
}
function cubicOut(t) {
    return --t * t * t + 1;
}
function cubicInOut(t) {
    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"e5Mev":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./transition/index.js");
var _scheduleJs = require("./transition/schedule.js");
var root = [
    null
];
exports.default = function(node, name) {
    var schedules = node.__transition, schedule, i;
    if (schedules) {
        name = name == null ? null : name + "";
        for(i in schedules){
            if ((schedule = schedules[i]).state > _scheduleJs.SCHEDULED && schedule.name === name) return new _indexJs.Transition([
                [
                    node
                ]
            ], root, name, +i);
        }
    }
    return null;
};

},{"./transition/index.js":"18i1e","./transition/schedule.js":"dTpjR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"5Itz2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = (x)=>()=>x
;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"bMq36":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function ZoomEvent(type, { sourceEvent , target , transform , dispatch  }) {
    Object.defineProperties(this, {
        type: {
            value: type,
            enumerable: true,
            configurable: true
        },
        sourceEvent: {
            value: sourceEvent,
            enumerable: true,
            configurable: true
        },
        target: {
            value: target,
            enumerable: true,
            configurable: true
        },
        transform: {
            value: transform,
            enumerable: true,
            configurable: true
        },
        _: {
            value: dispatch
        }
    });
}
exports.default = ZoomEvent;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"aPs4a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Transform", ()=>Transform
);
parcelHelpers.export(exports, "identity", ()=>identity
);
function Transform(k, x, y) {
    this.k = k;
    this.x = x;
    this.y = y;
}
Transform.prototype = {
    constructor: Transform,
    scale: function(k) {
        return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
    },
    translate: function(x, y) {
        return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
    },
    apply: function(point) {
        return [
            point[0] * this.k + this.x,
            point[1] * this.k + this.y
        ];
    },
    applyX: function(x) {
        return x * this.k + this.x;
    },
    applyY: function(y) {
        return y * this.k + this.y;
    },
    invert: function(location) {
        return [
            (location[0] - this.x) / this.k,
            (location[1] - this.y) / this.k
        ];
    },
    invertX: function(x) {
        return (x - this.x) / this.k;
    },
    invertY: function(y) {
        return (y - this.y) / this.k;
    },
    rescaleX: function(x) {
        return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
    },
    rescaleY: function(y) {
        return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
    },
    toString: function() {
        return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
    }
};
var identity = new Transform(1, 0, 0);
transform.prototype = Transform.prototype;
function transform(node) {
    while(!node.__zoom)if (!(node = node.parentNode)) return identity;
    return node.__zoom;
}
exports.default = transform;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"cgyVb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "nopropagation", ()=>nopropagation
);
function nopropagation(event) {
    event.stopImmediatePropagation();
}
exports.default = function(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"g9bhJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _uuid = require("uuid");
var global = arguments[3];
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(object, enumerableOnly) {
    var keys1 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys1.push.apply(keys1, symbols);
    }
    return keys1;
}
function _objectSpread2(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {
        };
        if (i % 2) ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _getPrototypeOf(o1) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o1);
}
function _setPrototypeOf(o2, p1) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o2, p1);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) return call;
    return _assertThisInitialized(self);
}
var CONSTANT = {
    GLOBAL: {
        HIDE: '__react_tooltip_hide_event',
        REBUILD: '__react_tooltip_rebuild_event',
        SHOW: '__react_tooltip_show_event'
    }
};
/**
 * Static methods for react-tooltip
 */ var dispatchGlobalEvent = function dispatchGlobalEvent(eventName, opts) {
    // Compatible with IE
    // @see http://stackoverflow.com/questions/26596123/internet-explorer-9-10-11-event-constructor-doesnt-work
    // @see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent
    var event;
    if (typeof window.CustomEvent === 'function') event = new window.CustomEvent(eventName, {
        detail: opts
    });
    else {
        event = document.createEvent('Event');
        event.initEvent(eventName, false, true, opts);
    }
    window.dispatchEvent(event);
};
function staticMethods(target1) {
    /**
   * Hide all tooltip
   * @trigger ReactTooltip.hide()
   */ target1.hide = function(target) {
        dispatchGlobalEvent(CONSTANT.GLOBAL.HIDE, {
            target: target
        });
    };
    /**
   * Rebuild all tooltip
   * @trigger ReactTooltip.rebuild()
   */ target1.rebuild = function() {
        dispatchGlobalEvent(CONSTANT.GLOBAL.REBUILD);
    };
    /**
   * Show specific tooltip
   * @trigger ReactTooltip.show()
   */ target1.show = function(target) {
        dispatchGlobalEvent(CONSTANT.GLOBAL.SHOW, {
            target: target
        });
    };
    target1.prototype.globalRebuild = function() {
        if (this.mount) {
            this.unbindListener();
            this.bindListener();
        }
    };
    target1.prototype.globalShow = function(event) {
        if (this.mount) {
            var hasTarget = event && event.detail && event.detail.target && true || false; // Create a fake event, specific show will limit the type to `solid`
            // only `float` type cares e.clientX e.clientY
            this.showTooltip({
                currentTarget: hasTarget && event.detail.target
            }, true);
        }
    };
    target1.prototype.globalHide = function(event) {
        if (this.mount) {
            var hasTarget = event && event.detail && event.detail.target && true || false;
            this.hideTooltip({
                currentTarget: hasTarget && event.detail.target
            }, hasTarget);
        }
    };
}
/**
 * Events that should be bound to the window
 */ function windowListener(target) {
    target.prototype.bindWindowEvents = function(resizeHide) {
        // ReactTooltip.hide
        window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);
        window.addEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide, false); // ReactTooltip.rebuild
        window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);
        window.addEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild, false); // ReactTooltip.show
        window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);
        window.addEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow, false); // Resize
        if (resizeHide) {
            window.removeEventListener('resize', this.onWindowResize);
            window.addEventListener('resize', this.onWindowResize, false);
        }
    };
    target.prototype.unbindWindowEvents = function() {
        window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);
        window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);
        window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);
        window.removeEventListener('resize', this.onWindowResize);
    };
    /**
   * invoked by resize event of window
   */ target.prototype.onWindowResize = function() {
        if (!this.mount) return;
        this.hideTooltip();
    };
}
/**
 * Custom events to control showing and hiding of tooltip
 *
 * @attributes
 * - `event` {String}
 * - `eventOff` {String}
 */ var checkStatus = function checkStatus(dataEventOff, e) {
    var show = this.state.show;
    var id1 = this.props.id;
    var isCapture1 = this.isCapture(e.currentTarget);
    var currentItem = e.currentTarget.getAttribute('currentItem');
    if (!isCapture1) e.stopPropagation();
    if (show && currentItem === 'true') {
        if (!dataEventOff) this.hideTooltip(e);
    } else {
        e.currentTarget.setAttribute('currentItem', 'true');
        setUntargetItems(e.currentTarget, this.getTargetArray(id1));
        this.showTooltip(e);
    }
};
var setUntargetItems = function setUntargetItems(currentTarget, targetArray) {
    for(var i = 0; i < targetArray.length; i++)if (currentTarget !== targetArray[i]) targetArray[i].setAttribute('currentItem', 'false');
    else targetArray[i].setAttribute('currentItem', 'true');
};
var customListeners = {
    id: '9b69f92e-d3fe-498b-b1b4-c5e63a51b0cf',
    set: function set(target, event, listener) {
        if (this.id in target) {
            var map = target[this.id];
            map[event] = listener;
        } else // this is workaround for WeakMap, which is not supported in older browsers, such as IE
        Object.defineProperty(target, this.id, {
            configurable: true,
            value: _defineProperty({
            }, event, listener)
        });
    },
    get: function get(target, event) {
        var map = target[this.id];
        if (map !== undefined) return map[event];
    }
};
function customEvent(target) {
    target.prototype.isCustomEvent = function(ele) {
        var event = this.state.event;
        return event || !!ele.getAttribute('data-event');
    };
    /* Bind listener for custom event */ target.prototype.customBindListener = function(ele) {
        var _this = this;
        var _this$state = this.state, event1 = _this$state.event, eventOff = _this$state.eventOff;
        var dataEvent = ele.getAttribute('data-event') || event1;
        var dataEventOff = ele.getAttribute('data-event-off') || eventOff;
        dataEvent.split(' ').forEach(function(event) {
            ele.removeEventListener(event, customListeners.get(ele, event));
            var customListener = checkStatus.bind(_this, dataEventOff);
            customListeners.set(ele, event, customListener);
            ele.addEventListener(event, customListener, false);
        });
        if (dataEventOff) dataEventOff.split(' ').forEach(function(event) {
            ele.removeEventListener(event, _this.hideTooltip);
            ele.addEventListener(event, _this.hideTooltip, false);
        });
    };
    /* Unbind listener for custom event */ target.prototype.customUnbindListener = function(ele) {
        var _this$state2 = this.state, event = _this$state2.event, eventOff = _this$state2.eventOff;
        var dataEvent = event || ele.getAttribute('data-event');
        var dataEventOff = eventOff || ele.getAttribute('data-event-off');
        ele.removeEventListener(dataEvent, customListeners.get(ele, event));
        if (dataEventOff) ele.removeEventListener(dataEventOff, this.hideTooltip);
    };
}
/**
 * Util method to judge if it should follow capture model
 */ function isCapture(target) {
    target.prototype.isCapture = function(currentTarget) {
        return currentTarget && currentTarget.getAttribute('data-iscapture') === 'true' || this.props.isCapture || false;
    };
}
/**
 * Util method to get effect
 */ function getEffect(target) {
    target.prototype.getEffect = function(currentTarget) {
        var dataEffect = currentTarget.getAttribute('data-effect');
        return dataEffect || this.props.effect || 'float';
    };
}
/**
 * Util method to get effect
 */ var makeProxy = function makeProxy(e) {
    var proxy = {
    };
    for(var key in e)if (typeof e[key] === 'function') proxy[key] = e[key].bind(e);
    else proxy[key] = e[key];
    return proxy;
};
var bodyListener = function bodyListener(callback, options, e) {
    var _options$respectEffec = options.respectEffect, respectEffect = _options$respectEffec === void 0 ? false : _options$respectEffec, _options$customEvent = options.customEvent, customEvent1 = _options$customEvent === void 0 ? false : _options$customEvent;
    var id2 = this.props.id;
    var tip = e.target.getAttribute('data-tip') || null;
    var forId = e.target.getAttribute('data-for') || null;
    var target = e.target;
    if (this.isCustomEvent(target) && !customEvent1) return;
    var isTargetBelongsToTooltip = id2 == null && forId == null || forId === id2;
    if (tip != null && (!respectEffect || this.getEffect(target) === 'float') && isTargetBelongsToTooltip) {
        var proxy = makeProxy(e);
        proxy.currentTarget = target;
        callback(proxy);
    }
};
var findCustomEvents = function findCustomEvents(targetArray, dataAttribute) {
    var events = {
    };
    targetArray.forEach(function(target) {
        var event = target.getAttribute(dataAttribute);
        if (event) event.split(' ').forEach(function(event) {
            return events[event] = true;
        });
    });
    return events;
};
var getBody = function getBody() {
    return document.getElementsByTagName('body')[0];
};
function bodyMode(target) {
    target.prototype.isBodyMode = function() {
        return !!this.props.bodyMode;
    };
    target.prototype.bindBodyListener = function(targetArray) {
        var _this = this;
        var _this$state = this.state, event = _this$state.event, eventOff = _this$state.eventOff, possibleCustomEvents = _this$state.possibleCustomEvents, possibleCustomEventsOff = _this$state.possibleCustomEventsOff;
        var body = getBody();
        var customEvents = findCustomEvents(targetArray, 'data-event');
        var customEventsOff = findCustomEvents(targetArray, 'data-event-off');
        if (event != null) customEvents[event] = true;
        if (eventOff != null) customEventsOff[eventOff] = true;
        possibleCustomEvents.split(' ').forEach(function(event) {
            return customEvents[event] = true;
        });
        possibleCustomEventsOff.split(' ').forEach(function(event) {
            return customEventsOff[event] = true;
        });
        this.unbindBodyListener(body);
        var listeners = this.bodyModeListeners = {
        };
        if (event == null) {
            listeners.mouseover = bodyListener.bind(this, this.showTooltip, {
            });
            listeners.mousemove = bodyListener.bind(this, this.updateTooltip, {
                respectEffect: true
            });
            listeners.mouseout = bodyListener.bind(this, this.hideTooltip, {
            });
        }
        for(var _event in customEvents)listeners[_event] = bodyListener.bind(this, function(e) {
            var targetEventOff = e.currentTarget.getAttribute('data-event-off') || eventOff;
            checkStatus.call(_this, targetEventOff, e);
        }, {
            customEvent: true
        });
        for(var _event2 in customEventsOff)listeners[_event2] = bodyListener.bind(this, this.hideTooltip, {
            customEvent: true
        });
        for(var _event3 in listeners)body.addEventListener(_event3, listeners[_event3]);
    };
    target.prototype.unbindBodyListener = function(body) {
        body = body || getBody();
        var listeners = this.bodyModeListeners;
        for(var event in listeners)body.removeEventListener(event, listeners[event]);
    };
}
/**
 * Tracking target removing from DOM.
 * It's necessary to hide tooltip when it's target disappears.
 * Otherwise, the tooltip would be shown forever until another target
 * is triggered.
 *
 * If MutationObserver is not available, this feature just doesn't work.
 */ // https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/
var getMutationObserverClass = function getMutationObserverClass() {
    return window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
};
function trackRemoval(target) {
    target.prototype.bindRemovalTracker = function() {
        var _this = this;
        var MutationObserver = getMutationObserverClass();
        if (MutationObserver == null) return;
        var observer = new MutationObserver(function(mutations) {
            for(var m1 = 0; m1 < mutations.length; m1++){
                var mutation = mutations[m1];
                for(var m2 = 0; m2 < mutation.removedNodes.length; m2++){
                    var element = mutation.removedNodes[m2];
                    if (element === _this.state.currentTarget) {
                        _this.hideTooltip();
                        return;
                    }
                }
            }
        });
        observer.observe(window.document, {
            childList: true,
            subtree: true
        });
        this.removalTracker = observer;
    };
    target.prototype.unbindRemovalTracker = function() {
        if (this.removalTracker) {
            this.removalTracker.disconnect();
            this.removalTracker = null;
        }
    };
}
/**
 * Calculate the position of tooltip
 *
 * @params
 * - `e` {Event} the event of current mouse
 * - `target` {Element} the currentTarget of the event
 * - `node` {DOM} the react-tooltip object
 * - `place` {String} top / right / bottom / left
 * - `effect` {String} float / solid
 * - `offset` {Object} the offset to default position
 *
 * @return {Object}
 * - `isNewState` {Bool} required
 * - `newState` {Object}
 * - `position` {Object} {left: {Number}, top: {Number}}
 */ function getPosition(e, target, node, place, desiredPlace, effect, offset) {
    var _getDimensions = getDimensions(node), tipWidth = _getDimensions.width, tipHeight = _getDimensions.height;
    var _getDimensions2 = getDimensions(target), targetWidth = _getDimensions2.width, targetHeight = _getDimensions2.height;
    var _getCurrentOffset = getCurrentOffset(e, target, effect), mouseX = _getCurrentOffset.mouseX, mouseY = _getCurrentOffset.mouseY;
    var defaultOffset = getDefaultPosition(effect, targetWidth, targetHeight, tipWidth, tipHeight);
    var _calculateOffset = calculateOffset(offset), extraOffsetX = _calculateOffset.extraOffsetX, extraOffsetY = _calculateOffset.extraOffsetY;
    var windowWidth = window.innerWidth;
    var windowHeight = window.innerHeight;
    var _getParent = getParent(node), parentTop = _getParent.parentTop, parentLeft = _getParent.parentLeft; // Get the edge offset of the tooltip
    var getTipOffsetLeft = function getTipOffsetLeft(place) {
        var offsetX = defaultOffset[place].l;
        return mouseX + offsetX + extraOffsetX;
    };
    var getTipOffsetRight = function getTipOffsetRight(place) {
        var offsetX = defaultOffset[place].r;
        return mouseX + offsetX + extraOffsetX;
    };
    var getTipOffsetTop = function getTipOffsetTop(place) {
        var offsetY = defaultOffset[place].t;
        return mouseY + offsetY + extraOffsetY;
    };
    var getTipOffsetBottom = function getTipOffsetBottom(place) {
        var offsetY = defaultOffset[place].b;
        return mouseY + offsetY + extraOffsetY;
    }; //
    // Functions to test whether the tooltip's sides are inside
    // the client window for a given orientation p
    //
    //  _____________
    // |             | <-- Right side
    // | p = 'left'  |\
    // |             |/  |\
    // |_____________|   |_\  <-- Mouse
    //      / \           |
    //       |
    //       |
    //  Bottom side
    //
    var outsideLeft = function outsideLeft(p) {
        return getTipOffsetLeft(p) < 0;
    };
    var outsideRight = function outsideRight(p) {
        return getTipOffsetRight(p) > windowWidth;
    };
    var outsideTop = function outsideTop(p) {
        return getTipOffsetTop(p) < 0;
    };
    var outsideBottom = function outsideBottom(p) {
        return getTipOffsetBottom(p) > windowHeight;
    }; // Check whether the tooltip with orientation p is completely inside the client window
    var outside = function outside(p) {
        return outsideLeft(p) || outsideRight(p) || outsideTop(p) || outsideBottom(p);
    };
    var inside = function inside(p) {
        return !outside(p);
    };
    var placesList = [
        'top',
        'bottom',
        'left',
        'right'
    ];
    var insideList = [];
    for(var i = 0; i < 4; i++){
        var p2 = placesList[i];
        if (inside(p2)) insideList.push(p2);
    }
    var isNewState = false;
    var newPlace;
    var shouldUpdatePlace = desiredPlace !== place;
    if (inside(desiredPlace) && shouldUpdatePlace) {
        isNewState = true;
        newPlace = desiredPlace;
    } else if (insideList.length > 0 && outside(desiredPlace) && outside(place)) {
        isNewState = true;
        newPlace = insideList[0];
    }
    if (isNewState) return {
        isNewState: true,
        newState: {
            place: newPlace
        }
    };
    return {
        isNewState: false,
        position: {
            left: parseInt(getTipOffsetLeft(place) - parentLeft, 10),
            top: parseInt(getTipOffsetTop(place) - parentTop, 10)
        }
    };
}
var getDimensions = function getDimensions(node) {
    var _node$getBoundingClie = node.getBoundingClientRect(), height = _node$getBoundingClie.height, width = _node$getBoundingClie.width;
    return {
        height: parseInt(height, 10),
        width: parseInt(width, 10)
    };
}; // Get current mouse offset
var getCurrentOffset = function getCurrentOffset(e, currentTarget, effect) {
    var boundingClientRect = currentTarget.getBoundingClientRect();
    var targetTop = boundingClientRect.top;
    var targetLeft = boundingClientRect.left;
    var _getDimensions3 = getDimensions(currentTarget), targetWidth = _getDimensions3.width, targetHeight = _getDimensions3.height;
    if (effect === 'float') return {
        mouseX: e.clientX,
        mouseY: e.clientY
    };
    return {
        mouseX: targetLeft + targetWidth / 2,
        mouseY: targetTop + targetHeight / 2
    };
}; // List all possibility of tooltip final offset
// This is useful in judging if it is necessary for tooltip to switch position when out of window
var getDefaultPosition = function getDefaultPosition(effect, targetWidth, targetHeight, tipWidth, tipHeight) {
    var top;
    var right;
    var bottom;
    var left;
    var disToMouse = 3;
    var triangleHeight = 2;
    var cursorHeight = 12; // Optimize for float bottom only, cause the cursor will hide the tooltip
    if (effect === 'float') {
        top = {
            l: -(tipWidth / 2),
            r: tipWidth / 2,
            t: -(tipHeight + disToMouse + triangleHeight),
            b: -disToMouse
        };
        bottom = {
            l: -(tipWidth / 2),
            r: tipWidth / 2,
            t: disToMouse + cursorHeight,
            b: tipHeight + disToMouse + triangleHeight + cursorHeight
        };
        left = {
            l: -(tipWidth + disToMouse + triangleHeight),
            r: -disToMouse,
            t: -(tipHeight / 2),
            b: tipHeight / 2
        };
        right = {
            l: disToMouse,
            r: tipWidth + disToMouse + triangleHeight,
            t: -(tipHeight / 2),
            b: tipHeight / 2
        };
    } else if (effect === 'solid') {
        top = {
            l: -(tipWidth / 2),
            r: tipWidth / 2,
            t: -(targetHeight / 2 + tipHeight + triangleHeight),
            b: -(targetHeight / 2)
        };
        bottom = {
            l: -(tipWidth / 2),
            r: tipWidth / 2,
            t: targetHeight / 2,
            b: targetHeight / 2 + tipHeight + triangleHeight
        };
        left = {
            l: -(tipWidth + targetWidth / 2 + triangleHeight),
            r: -(targetWidth / 2),
            t: -(tipHeight / 2),
            b: tipHeight / 2
        };
        right = {
            l: targetWidth / 2,
            r: tipWidth + targetWidth / 2 + triangleHeight,
            t: -(tipHeight / 2),
            b: tipHeight / 2
        };
    }
    return {
        top: top,
        bottom: bottom,
        left: left,
        right: right
    };
}; // Consider additional offset into position calculation
var calculateOffset = function calculateOffset(offset) {
    var extraOffsetX = 0;
    var extraOffsetY = 0;
    if (Object.prototype.toString.apply(offset) === '[object String]') offset = JSON.parse(offset.toString().replace(/'/g, '"'));
    for(var key in offset){
        if (key === 'top') extraOffsetY -= parseInt(offset[key], 10);
        else if (key === 'bottom') extraOffsetY += parseInt(offset[key], 10);
        else if (key === 'left') extraOffsetX -= parseInt(offset[key], 10);
        else if (key === 'right') extraOffsetX += parseInt(offset[key], 10);
    }
    return {
        extraOffsetX: extraOffsetX,
        extraOffsetY: extraOffsetY
    };
}; // Get the offset of the parent elements
var getParent = function getParent(currentTarget) {
    var currentParent = currentTarget;
    while(currentParent){
        var computedStyle = window.getComputedStyle(currentParent); // transform and will-change: transform change the containing block
        // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_Block
        if (computedStyle.getPropertyValue('transform') !== 'none' || computedStyle.getPropertyValue('will-change') === 'transform') break;
        currentParent = currentParent.parentElement;
    }
    var parentTop = currentParent && currentParent.getBoundingClientRect().top || 0;
    var parentLeft = currentParent && currentParent.getBoundingClientRect().left || 0;
    return {
        parentTop: parentTop,
        parentLeft: parentLeft
    };
};
/**
 * To get the tooltip content
 * it may comes from data-tip or this.props.children
 * it should support multiline
 *
 * @params
 * - `tip` {String} value of data-tip
 * - `children` {ReactElement} this.props.children
 * - `multiline` {Any} could be Bool(true/false) or String('true'/'false')
 *
 * @return
 * - String or react component
 */ function getTipContent(tip, children, getContent, multiline) {
    if (children) return children;
    if (getContent !== undefined && getContent !== null) return getContent; // getContent can be 0, '', etc.
    if (getContent === null) return null; // Tip not exist and children is null or undefined
    var regexp = /<br\s*\/?>/;
    if (!multiline || multiline === 'false' || !regexp.test(tip)) // No trim(), so that user can keep their input
    return tip;
     // Multiline tooltip content
    return tip.split(regexp).map(function(d, i) {
        return _reactDefault.default.createElement("span", {
            key: i,
            className: "multi-line"
        }, d);
    });
}
/**
 * Support aria- and role in ReactTooltip
 *
 * @params props {Object}
 * @return {Object}
 */ function parseAria(props) {
    var ariaObj = {
    };
    Object.keys(props).filter(function(prop) {
        // aria-xxx and role is acceptable
        return /(^aria-\w+$|^role$)/.test(prop);
    }).forEach(function(prop) {
        ariaObj[prop] = props[prop];
    });
    return ariaObj;
}
/**
 * Convert nodelist to array
 * @see https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/core/createArrayFromMixed.js#L24
 * NodeLists are functions in Safari
 */ function nodeListToArray(nodeList) {
    var length = nodeList.length;
    if (nodeList.hasOwnProperty) return Array.prototype.slice.call(nodeList);
    return new Array(length).fill().map(function(index) {
        return nodeList[index];
    });
}
function generateUUID() {
    return 't' + _uuid.v4();
}
var baseCss = ".__react_component_tooltip {\n  border-radius: 3px;\n  display: inline-block;\n  font-size: 13px;\n  left: -999em;\n  opacity: 0;\n  padding: 8px 21px;\n  position: fixed;\n  pointer-events: none;\n  transition: opacity 0.3s ease-out;\n  top: -999em;\n  visibility: hidden;\n  z-index: 999;\n}\n.__react_component_tooltip.allow_hover, .__react_component_tooltip.allow_click {\n  pointer-events: auto;\n}\n.__react_component_tooltip::before, .__react_component_tooltip::after {\n  content: \"\";\n  width: 0;\n  height: 0;\n  position: absolute;\n}\n.__react_component_tooltip.show {\n  opacity: 0.9;\n  margin-top: 0;\n  margin-left: 0;\n  visibility: visible;\n}\n.__react_component_tooltip.place-top::before {\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  bottom: -8px;\n  left: 50%;\n  margin-left: -10px;\n}\n.__react_component_tooltip.place-bottom::before {\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  top: -8px;\n  left: 50%;\n  margin-left: -10px;\n}\n.__react_component_tooltip.place-left::before {\n  border-top: 6px solid transparent;\n  border-bottom: 6px solid transparent;\n  right: -8px;\n  top: 50%;\n  margin-top: -5px;\n}\n.__react_component_tooltip.place-right::before {\n  border-top: 6px solid transparent;\n  border-bottom: 6px solid transparent;\n  left: -8px;\n  top: 50%;\n  margin-top: -5px;\n}\n.__react_component_tooltip .multi-line {\n  display: block;\n  padding: 2px 0;\n  text-align: center;\n}";
/**
 * Default pop-up style values (text color, background color).
 */ var defaultColors = {
    dark: {
        text: '#fff',
        background: '#222',
        border: 'transparent',
        arrow: '#222'
    },
    success: {
        text: '#fff',
        background: '#8DC572',
        border: 'transparent',
        arrow: '#8DC572'
    },
    warning: {
        text: '#fff',
        background: '#F0AD4E',
        border: 'transparent',
        arrow: '#F0AD4E'
    },
    error: {
        text: '#fff',
        background: '#BE6464',
        border: 'transparent',
        arrow: '#BE6464'
    },
    info: {
        text: '#fff',
        background: '#337AB7',
        border: 'transparent',
        arrow: '#337AB7'
    },
    light: {
        text: '#222',
        background: '#fff',
        border: 'transparent',
        arrow: '#fff'
    }
};
function getDefaultPopupColors(type) {
    return defaultColors[type] ? _objectSpread2({
    }, defaultColors[type]) : undefined;
}
/**
 * Generates the specific tooltip style for use on render.
 */ function generateTooltipStyle(uuid, customColors, type, hasBorder) {
    return generateStyle(uuid, getPopupColors(customColors, type, hasBorder));
}
/**
 * Generates the tooltip style rules based on the element-specified "data-type" property.
 */ function generateStyle(uuid, colors) {
    var textColor = colors.text;
    var backgroundColor = colors.background;
    var borderColor = colors.border;
    var arrowColor = colors.arrow;
    return "\n  \t.".concat(uuid, " {\n\t    color: ").concat(textColor, ";\n\t    background: ").concat(backgroundColor, ";\n\t    border: 1px solid ").concat(borderColor, ";\n  \t}\n\n  \t.").concat(uuid, ".place-top {\n        margin-top: -10px;\n    }\n    .").concat(uuid, ".place-top::before {\n        border-top: 8px solid ").concat(borderColor, ";\n    }\n    .").concat(uuid, ".place-top::after {\n        border-left: 8px solid transparent;\n        border-right: 8px solid transparent;\n        bottom: -6px;\n        left: 50%;\n        margin-left: -8px;\n        border-top-color: ").concat(arrowColor, ";\n        border-top-style: solid;\n        border-top-width: 6px;\n    }\n\n    .").concat(uuid, ".place-bottom {\n        margin-top: 10px;\n    }\n    .").concat(uuid, ".place-bottom::before {\n        border-bottom: 8px solid ").concat(borderColor, ";\n    }\n    .").concat(uuid, ".place-bottom::after {\n        border-left: 8px solid transparent;\n        border-right: 8px solid transparent;\n        top: -6px;\n        left: 50%;\n        margin-left: -8px;\n        border-bottom-color: ").concat(arrowColor, ";\n        border-bottom-style: solid;\n        border-bottom-width: 6px;\n    }\n\n    .").concat(uuid, ".place-left {\n        margin-left: -10px;\n    }\n    .").concat(uuid, ".place-left::before {\n        border-left: 8px solid ").concat(borderColor, ";\n    }\n    .").concat(uuid, ".place-left::after {\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        right: -6px;\n        top: 50%;\n        margin-top: -4px;\n        border-left-color: ").concat(arrowColor, ";\n        border-left-style: solid;\n        border-left-width: 6px;\n    }\n\n    .").concat(uuid, ".place-right {\n        margin-left: 10px;\n    }\n    .").concat(uuid, ".place-right::before {\n        border-right: 8px solid ").concat(borderColor, ";\n    }\n    .").concat(uuid, ".place-right::after {\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        left: -6px;\n        top: 50%;\n        margin-top: -4px;\n        border-right-color: ").concat(arrowColor, ";\n        border-right-style: solid;\n        border-right-width: 6px;\n    }\n  ");
}
function getPopupColors(customColors, type, hasBorder) {
    var textColor = customColors.text;
    var backgroundColor = customColors.background;
    var borderColor = customColors.border;
    var arrowColor = customColors.arrow ? customColors.arrow : customColors.background;
    var colors = getDefaultPopupColors(type);
    if (textColor) colors.text = textColor;
    if (backgroundColor) colors.background = backgroundColor;
    if (hasBorder) {
        if (borderColor) colors.border = borderColor;
        else colors.border = type === 'light' ? 'black' : 'white';
    }
    if (arrowColor) colors.arrow = arrowColor;
    return colors;
}
var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {
};
function createCommonjsModule(fn, module) {
    return module = {
        exports: {
        }
    }, fn(module, module.exports), module.exports;
}
var check = function(it) {
    return it && it.Math == Math && it;
};
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global_1 = // eslint-disable-next-line es/no-global-this -- safe
check(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) || // eslint-disable-next-line no-restricted-globals -- safe
check(typeof self == 'object' && self) || check(typeof commonjsGlobal == 'object' && commonjsGlobal) || // eslint-disable-next-line no-new-func -- fallback
function() {
    return this;
}() || Function('return this')();
var fails = function(exec) {
    try {
        return !!exec();
    } catch (error) {
        return true;
    }
};
// Detect IE8's incomplete defineProperty implementation
var descriptors = !fails(function() {
    // eslint-disable-next-line es/no-object-defineproperty -- required for testing
    return Object.defineProperty({
    }, 1, {
        get: function() {
            return 7;
        }
    })[1] != 7;
});
var $propertyIsEnumerable = {
}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({
    1: 2
}, 1);
// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
var f = NASHORN_BUG ? function propertyIsEnumerable(V) {
    var descriptor = getOwnPropertyDescriptor(this, V);
    return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;
var objectPropertyIsEnumerable = {
    f: f
};
var createPropertyDescriptor = function(bitmap, value) {
    return {
        enumerable: !(bitmap & 1),
        configurable: !(bitmap & 2),
        writable: !(bitmap & 4),
        value: value
    };
};
var toString = {
}.toString;
var classofRaw = function(it) {
    return toString.call(it).slice(8, -1);
};
var split = ''.split;
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject = fails(function() {
    // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
    // eslint-disable-next-line no-prototype-builtins -- safe
    return !Object('z').propertyIsEnumerable(0);
}) ? function(it) {
    return classofRaw(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;
// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible = function(it) {
    if (it == undefined) throw TypeError("Can't call method on " + it);
    return it;
};
// toObject with fallback for non-array-like ES3 strings
var toIndexedObject = function(it) {
    return indexedObject(requireObjectCoercible(it));
};
var isObject = function(it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
};
// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
var toPrimitive = function(input, PREFERRED_STRING) {
    if (!isObject(input)) return input;
    var fn, val;
    if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
    if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
    if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
    throw TypeError("Can't convert object to primitive value");
};
// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject = function(argument) {
    return Object(requireObjectCoercible(argument));
};
var hasOwnProperty = {
}.hasOwnProperty;
var has = function hasOwn(it, key) {
    return hasOwnProperty.call(toObject(it), key);
};
var document$1 = global_1.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document$1) && isObject(document$1.createElement);
var documentCreateElement = function(it) {
    return EXISTS ? document$1.createElement(it) : {
    };
};
// Thank's IE8 for his funny defineProperty
var ie8DomDefine = !descriptors && !fails(function() {
    // eslint-disable-next-line es/no-object-defineproperty -- requied for testing
    return Object.defineProperty(documentCreateElement('div'), 'a', {
        get: function() {
            return 7;
        }
    }).a != 7;
});
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
var f$1 = descriptors ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
    O = toIndexedObject(O);
    P = toPrimitive(P, true);
    if (ie8DomDefine) try {
        return $getOwnPropertyDescriptor(O, P);
    } catch (error) {
    }
    if (has(O, P)) return createPropertyDescriptor(!objectPropertyIsEnumerable.f.call(O, P), O[P]);
};
var objectGetOwnPropertyDescriptor = {
    f: f$1
};
var anObject = function(it) {
    if (!isObject(it)) throw TypeError(String(it) + ' is not an object');
    return it;
};
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
var f$2 = descriptors ? $defineProperty : function defineProperty(O, P, Attributes) {
    anObject(O);
    P = toPrimitive(P, true);
    anObject(Attributes);
    if (ie8DomDefine) try {
        return $defineProperty(O, P, Attributes);
    } catch (error) {
    }
    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
};
var objectDefineProperty = {
    f: f$2
};
var createNonEnumerableProperty = descriptors ? function(object, key, value) {
    return objectDefineProperty.f(object, key, createPropertyDescriptor(1, value));
} : function(object, key, value) {
    object[key] = value;
    return object;
};
var setGlobal = function(key, value) {
    try {
        createNonEnumerableProperty(global_1, key, value);
    } catch (error) {
        global_1[key] = value;
    }
    return value;
};
var SHARED = '__core-js_shared__';
var store = global_1[SHARED] || setGlobal(SHARED, {
});
var sharedStore = store;
var functionToString = Function.toString;
// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof sharedStore.inspectSource != 'function') sharedStore.inspectSource = function(it) {
    return functionToString.call(it);
};
var inspectSource = sharedStore.inspectSource;
var WeakMap = global_1.WeakMap;
var nativeWeakMap = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));
var shared = createCommonjsModule(function(module) {
    (module.exports = function(key, value) {
        return sharedStore[key] || (sharedStore[key] = value !== undefined ? value : {
        });
    })('versions', []).push({
        version: '3.12.1',
        mode: 'global',
        copyright: '© 2021 Denis Pushkarev (zloirock.ru)'
    });
});
var id = 0;
var postfix = Math.random();
var uid = function(key) {
    return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};
var keys = shared('keys');
var sharedKey = function(key) {
    return keys[key] || (keys[key] = uid(key));
};
var hiddenKeys = {
};
var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var WeakMap$1 = global_1.WeakMap;
var set, get, has$1;
var enforce = function(it) {
    return has$1(it) ? get(it) : set(it, {
    });
};
var getterFor = function(TYPE) {
    return function(it) {
        var state;
        if (!isObject(it) || (state = get(it)).type !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required');
        return state;
    };
};
if (nativeWeakMap || sharedStore.state) {
    var store$1 = sharedStore.state || (sharedStore.state = new WeakMap$1());
    var wmget = store$1.get;
    var wmhas = store$1.has;
    var wmset = store$1.set;
    set = function(it, metadata) {
        if (wmhas.call(store$1, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
        metadata.facade = it;
        wmset.call(store$1, it, metadata);
        return metadata;
    };
    get = function(it) {
        return wmget.call(store$1, it) || {
        };
    };
    has$1 = function(it) {
        return wmhas.call(store$1, it);
    };
} else {
    var STATE = sharedKey('state');
    hiddenKeys[STATE] = true;
    set = function(it, metadata) {
        if (has(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
        metadata.facade = it;
        createNonEnumerableProperty(it, STATE, metadata);
        return metadata;
    };
    get = function(it) {
        return has(it, STATE) ? it[STATE] : {
        };
    };
    has$1 = function(it) {
        return has(it, STATE);
    };
}
var internalState = {
    set: set,
    get: get,
    has: has$1,
    enforce: enforce,
    getterFor: getterFor
};
var redefine = createCommonjsModule(function(module) {
    var getInternalState = internalState.get;
    var enforceInternalState = internalState.enforce;
    var TEMPLATE = String(String).split('String');
    (module.exports = function(O, key, value, options) {
        var unsafe = options ? !!options.unsafe : false;
        var simple = options ? !!options.enumerable : false;
        var noTargetGet = options ? !!options.noTargetGet : false;
        var state;
        if (typeof value == 'function') {
            if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);
            state = enforceInternalState(value);
            if (!state.source) state.source = TEMPLATE.join(typeof key == 'string' ? key : '');
        }
        if (O === global_1) {
            if (simple) O[key] = value;
            else setGlobal(key, value);
            return;
        } else if (!unsafe) delete O[key];
        else if (!noTargetGet && O[key]) simple = true;
        if (simple) O[key] = value;
        else createNonEnumerableProperty(O, key, value);
    // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
    })(Function.prototype, 'toString', function toString() {
        return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
    });
});
var path = global_1;
var aFunction = function(variable) {
    return typeof variable == 'function' ? variable : undefined;
};
var getBuiltIn = function(namespace, method) {
    return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global_1[namespace]) : path[namespace] && path[namespace][method] || global_1[namespace] && global_1[namespace][method];
};
var ceil = Math.ceil;
var floor = Math.floor;
// `ToInteger` abstract operation
// https://tc39.es/ecma262/#sec-tointeger
var toInteger = function(argument) {
    return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};
var min = Math.min;
// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength = function(argument) {
    return argument > 0 ? min(toInteger(argument), 9007199254740991) : 0; // 2 ** 53 - 1 == 9007199254740991
};
var max = Math.max;
var min$1 = Math.min;
// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex = function(index, length) {
    var integer = toInteger(index);
    return integer < 0 ? max(integer + length, 0) : min$1(integer, length);
};
// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function(IS_INCLUDES) {
    return function($this, el, fromIndex) {
        var O = toIndexedObject($this);
        var length = toLength(O.length);
        var index = toAbsoluteIndex(fromIndex, length);
        var value;
        // Array#includes uses SameValueZero equality algorithm
        // eslint-disable-next-line no-self-compare -- NaN check
        if (IS_INCLUDES && el != el) while(length > index){
            value = O[index++];
            // eslint-disable-next-line no-self-compare -- NaN check
            if (value != value) return true;
        // Array#indexOf ignores holes, Array#includes - not
        }
        else for(; length > index; index++){
            if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
        }
        return !IS_INCLUDES && -1;
    };
};
var arrayIncludes = {
    // `Array.prototype.includes` method
    // https://tc39.es/ecma262/#sec-array.prototype.includes
    includes: createMethod(true),
    // `Array.prototype.indexOf` method
    // https://tc39.es/ecma262/#sec-array.prototype.indexof
    indexOf: createMethod(false)
};
var indexOf = arrayIncludes.indexOf;
var objectKeysInternal = function(object, names) {
    var O = toIndexedObject(object);
    var i = 0;
    var result = [];
    var key;
    for(key in O)!has(hiddenKeys, key) && has(O, key) && result.push(key);
    // Don't enum bug & hidden keys
    while(names.length > i)if (has(O, key = names[i++])) ~indexOf(result, key) || result.push(key);
    return result;
};
// IE8- don't enum bug keys
var enumBugKeys = [
    'constructor',
    'hasOwnProperty',
    'isPrototypeOf',
    'propertyIsEnumerable',
    'toLocaleString',
    'toString',
    'valueOf'
];
var hiddenKeys$1 = enumBugKeys.concat('length', 'prototype');
// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
var f$3 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return objectKeysInternal(O, hiddenKeys$1);
};
var objectGetOwnPropertyNames = {
    f: f$3
};
// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
var f$4 = Object.getOwnPropertySymbols;
var objectGetOwnPropertySymbols = {
    f: f$4
};
// all object keys, includes non-enumerable and symbols
var ownKeys$1 = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
    var keys2 = objectGetOwnPropertyNames.f(anObject(it));
    var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;
    return getOwnPropertySymbols ? keys2.concat(getOwnPropertySymbols(it)) : keys2;
};
var copyConstructorProperties = function(target, source) {
    var keys3 = ownKeys$1(source);
    var defineProperty = objectDefineProperty.f;
    var getOwnPropertyDescriptor1 = objectGetOwnPropertyDescriptor.f;
    for(var i = 0; i < keys3.length; i++){
        var key = keys3[i];
        if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor1(source, key));
    }
};
var replacement = /#|\.prototype\./;
var isForced = function(feature, detection) {
    var value = data[normalize(feature)];
    return value == POLYFILL ? true : value == NATIVE ? false : typeof detection == 'function' ? fails(detection) : !!detection;
};
var normalize = isForced.normalize = function(string) {
    return String(string).replace(replacement, '.').toLowerCase();
};
var data = isForced.data = {
};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';
var isForced_1 = isForced;
var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/ var _export = function(options, source) {
    var TARGET = options.target;
    var GLOBAL = options.global;
    var STATIC = options.stat;
    var FORCED, target, key, targetProperty, sourceProperty, descriptor;
    if (GLOBAL) target = global_1;
    else if (STATIC) target = global_1[TARGET] || setGlobal(TARGET, {
    });
    else target = (global_1[TARGET] || {
    }).prototype;
    if (target) for(key in source){
        sourceProperty = source[key];
        if (options.noTargetGet) {
            descriptor = getOwnPropertyDescriptor$1(target, key);
            targetProperty = descriptor && descriptor.value;
        } else targetProperty = target[key];
        FORCED = isForced_1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
        // contained in target
        if (!FORCED && targetProperty !== undefined) {
            if (typeof sourceProperty === typeof targetProperty) continue;
            copyConstructorProperties(sourceProperty, targetProperty);
        }
        // add a flag to not completely full polyfills
        if (options.sham || targetProperty && targetProperty.sham) createNonEnumerableProperty(sourceProperty, 'sham', true);
        // extend global
        redefine(target, key, sourceProperty, options);
    }
};
var aFunction$1 = function(it) {
    if (typeof it != 'function') throw TypeError(String(it) + ' is not a function');
    return it;
};
// optional / simple context binding
var functionBindContext = function(fn, that, length) {
    aFunction$1(fn);
    if (that === undefined) return fn;
    switch(length){
        case 0:
            return function() {
                return fn.call(that);
            };
        case 1:
            return function(a) {
                return fn.call(that, a);
            };
        case 2:
            return function(a, b) {
                return fn.call(that, a, b);
            };
        case 3:
            return function(a, b, c) {
                return fn.call(that, a, b, c);
            };
    }
    return function() {
        return fn.apply(that, arguments);
    };
};
// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
var isArray = Array.isArray || function isArray(arg) {
    return classofRaw(arg) == 'Array';
};
var engineUserAgent = getBuiltIn('navigator', 'userAgent') || '';
var process = global_1.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;
if (v8) {
    match = v8.split('.');
    version = match[0] < 4 ? 1 : match[0] + match[1];
} else if (engineUserAgent) {
    match = engineUserAgent.match(/Edge\/(\d+)/);
    if (!match || match[1] >= 74) {
        match = engineUserAgent.match(/Chrome\/(\d+)/);
        if (match) version = match[1];
    }
}
var engineV8Version = version && +version;
/* eslint-disable es/no-symbol -- required for testing */ // eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var nativeSymbol = !!Object.getOwnPropertySymbols && !fails(function() {
    return !String(Symbol()) || // Chrome 38 Symbol has incorrect toString conversion
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && engineV8Version && engineV8Version < 41;
});
/* eslint-disable es/no-symbol -- required for testing */ var useSymbolAsUid = nativeSymbol && !Symbol.sham && typeof Symbol.iterator == 'symbol';
var WellKnownSymbolsStore = shared('wks');
var Symbol$1 = global_1.Symbol;
var createWellKnownSymbol = useSymbolAsUid ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid;
var wellKnownSymbol = function(name) {
    if (!has(WellKnownSymbolsStore, name) || !(nativeSymbol || typeof WellKnownSymbolsStore[name] == 'string')) {
        if (nativeSymbol && has(Symbol$1, name)) WellKnownSymbolsStore[name] = Symbol$1[name];
        else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
    }
    return WellKnownSymbolsStore[name];
};
var SPECIES = wellKnownSymbol('species');
// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
var arraySpeciesCreate = function(originalArray, length) {
    var C;
    if (isArray(originalArray)) {
        C = originalArray.constructor;
        // cross-realm fallback
        if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
        else if (isObject(C)) {
            C = C[SPECIES];
            if (C === null) C = undefined;
        }
    }
    return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};
var push = [].push;
// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation
var createMethod$1 = function(TYPE) {
    var IS_MAP = TYPE == 1;
    var IS_FILTER = TYPE == 2;
    var IS_SOME = TYPE == 3;
    var IS_EVERY = TYPE == 4;
    var IS_FIND_INDEX = TYPE == 6;
    var IS_FILTER_OUT = TYPE == 7;
    var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
    return function($this, callbackfn, that, specificCreate) {
        var O = toObject($this);
        var self = indexedObject(O);
        var boundFunction = functionBindContext(callbackfn, that, 3);
        var length = toLength(self.length);
        var index = 0;
        var create = specificCreate || arraySpeciesCreate;
        var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;
        var value, result;
        for(; length > index; index++)if (NO_HOLES || index in self) {
            value = self[index];
            result = boundFunction(value, index, O);
            if (TYPE) {
                if (IS_MAP) target[index] = result; // map
                else if (result) switch(TYPE){
                    case 3:
                        return true; // some
                    case 5:
                        return value; // find
                    case 6:
                        return index; // findIndex
                    case 2:
                        push.call(target, value); // filter
                }
                else switch(TYPE){
                    case 4:
                        return false; // every
                    case 7:
                        push.call(target, value); // filterOut
                }
            }
        }
        return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
    };
};
var arrayIteration = {
    // `Array.prototype.forEach` method
    // https://tc39.es/ecma262/#sec-array.prototype.foreach
    forEach: createMethod$1(0),
    // `Array.prototype.map` method
    // https://tc39.es/ecma262/#sec-array.prototype.map
    map: createMethod$1(1),
    // `Array.prototype.filter` method
    // https://tc39.es/ecma262/#sec-array.prototype.filter
    filter: createMethod$1(2),
    // `Array.prototype.some` method
    // https://tc39.es/ecma262/#sec-array.prototype.some
    some: createMethod$1(3),
    // `Array.prototype.every` method
    // https://tc39.es/ecma262/#sec-array.prototype.every
    every: createMethod$1(4),
    // `Array.prototype.find` method
    // https://tc39.es/ecma262/#sec-array.prototype.find
    find: createMethod$1(5),
    // `Array.prototype.findIndex` method
    // https://tc39.es/ecma262/#sec-array.prototype.findIndex
    findIndex: createMethod$1(6),
    // `Array.prototype.filterOut` method
    // https://github.com/tc39/proposal-array-filtering
    filterOut: createMethod$1(7)
};
// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
var objectKeys = Object.keys || function keys(O) {
    return objectKeysInternal(O, enumBugKeys);
};
// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
var objectDefineProperties = descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
    anObject(O);
    var keys4 = objectKeys(Properties);
    var length = keys4.length;
    var index = 0;
    var key;
    while(length > index)objectDefineProperty.f(O, key = keys4[index++], Properties[key]);
    return O;
};
var html = getBuiltIn('document', 'documentElement');
var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');
var EmptyConstructor = function() {
};
var scriptTag = function(content) {
    return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};
// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function(activeXDocument1) {
    activeXDocument1.write(scriptTag(''));
    activeXDocument1.close();
    var temp = activeXDocument1.parentWindow.Object;
    activeXDocument1 = null; // avoid memory leak
    return temp;
};
// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function() {
    // Thrash, waste and sodomy: IE GC bug
    var iframe = documentCreateElement('iframe');
    var JS = 'java' + SCRIPT + ':';
    var iframeDocument;
    iframe.style.display = 'none';
    html.appendChild(iframe);
    // https://github.com/zloirock/core-js/issues/475
    iframe.src = String(JS);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(scriptTag('document.F=Object'));
    iframeDocument.close();
    return iframeDocument.F;
};
// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function() {
    try {
        /* global ActiveXObject -- old IE */ activeXDocument = document.domain && new ActiveXObject('htmlfile');
    } catch (error) {
    }
    NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
    var length = enumBugKeys.length;
    while(length--)delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
    return NullProtoObject();
};
hiddenKeys[IE_PROTO] = true;
// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
var objectCreate = Object.create || function create(O, Properties) {
    var result;
    if (O !== null) {
        EmptyConstructor[PROTOTYPE] = anObject(O);
        result = new EmptyConstructor();
        EmptyConstructor[PROTOTYPE] = null;
        // add "__proto__" for Object.getPrototypeOf polyfill
        result[IE_PROTO] = O;
    } else result = NullProtoObject();
    return Properties === undefined ? result : objectDefineProperties(result, Properties);
};
var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;
// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) objectDefineProperty.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: objectCreate(null)
});
// add a key to Array.prototype[@@unscopables]
var addToUnscopables = function(key) {
    ArrayPrototype[UNSCOPABLES][key] = true;
};
var $find = arrayIteration.find;
var FIND = 'find';
var SKIPS_HOLES = true;
// Shouldn't skip holes
if (FIND in []) Array(1)[FIND](function() {
    SKIPS_HOLES = false;
});
// `Array.prototype.find` method
// https://tc39.es/ecma262/#sec-array.prototype.find
_export({
    target: 'Array',
    proto: true,
    forced: SKIPS_HOLES
}, {
    find: function find(callbackfn /* , that = undefined */ ) {
        return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
});
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND);
var _class, _class2, _temp;
var ReactTooltip = staticMethods(_class = windowListener(_class = customEvent(_class = isCapture(_class = getEffect(_class = bodyMode(_class = trackRemoval(_class = (_temp = _class2 = /*#__PURE__*/ function(_React$Component) {
    _inherits(ReactTooltip1, _React$Component);
    _createClass(ReactTooltip1, null, [
        {
            key: "propTypes",
            get: function get() {
                return {
                    uuid: _propTypesDefault.default.string,
                    children: _propTypesDefault.default.any,
                    place: _propTypesDefault.default.string,
                    type: _propTypesDefault.default.string,
                    effect: _propTypesDefault.default.string,
                    offset: _propTypesDefault.default.object,
                    multiline: _propTypesDefault.default.bool,
                    border: _propTypesDefault.default.bool,
                    textColor: _propTypesDefault.default.string,
                    backgroundColor: _propTypesDefault.default.string,
                    borderColor: _propTypesDefault.default.string,
                    arrowColor: _propTypesDefault.default.string,
                    insecure: _propTypesDefault.default.bool,
                    "class": _propTypesDefault.default.string,
                    className: _propTypesDefault.default.string,
                    id: _propTypesDefault.default.string,
                    html: _propTypesDefault.default.bool,
                    delayHide: _propTypesDefault.default.number,
                    delayUpdate: _propTypesDefault.default.number,
                    delayShow: _propTypesDefault.default.number,
                    event: _propTypesDefault.default.string,
                    eventOff: _propTypesDefault.default.string,
                    isCapture: _propTypesDefault.default.bool,
                    globalEventOff: _propTypesDefault.default.string,
                    getContent: _propTypesDefault.default.any,
                    afterShow: _propTypesDefault.default.func,
                    afterHide: _propTypesDefault.default.func,
                    overridePosition: _propTypesDefault.default.func,
                    disable: _propTypesDefault.default.bool,
                    scrollHide: _propTypesDefault.default.bool,
                    resizeHide: _propTypesDefault.default.bool,
                    wrapper: _propTypesDefault.default.string,
                    bodyMode: _propTypesDefault.default.bool,
                    possibleCustomEvents: _propTypesDefault.default.string,
                    possibleCustomEventsOff: _propTypesDefault.default.string,
                    clickable: _propTypesDefault.default.bool
                };
            }
        }
    ]);
    function ReactTooltip1(props) {
        var _this;
        _classCallCheck(this, ReactTooltip1);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactTooltip1).call(this, props));
        _this.state = {
            uuid: props.uuid || generateUUID(),
            place: props.place || 'top',
            // Direction of tooltip
            desiredPlace: props.place || 'top',
            type: 'dark',
            // Color theme of tooltip
            effect: 'float',
            // float or fixed
            show: false,
            border: false,
            customColors: {
            },
            offset: {
            },
            extraClass: '',
            html: false,
            delayHide: 0,
            delayShow: 0,
            event: props.event || null,
            eventOff: props.eventOff || null,
            currentEvent: null,
            // Current mouse event
            currentTarget: null,
            // Current target of mouse event
            ariaProps: parseAria(props),
            // aria- and role attributes
            isEmptyTip: false,
            disable: false,
            possibleCustomEvents: props.possibleCustomEvents || '',
            possibleCustomEventsOff: props.possibleCustomEventsOff || '',
            originTooltip: null,
            isMultiline: false
        };
        _this.bind([
            'showTooltip',
            'updateTooltip',
            'hideTooltip',
            'hideTooltipOnScroll',
            'getTooltipContent',
            'globalRebuild',
            'globalShow',
            'globalHide',
            'onWindowResize',
            'mouseOnToolTip'
        ]);
        _this.mount = true;
        _this.delayShowLoop = null;
        _this.delayHideLoop = null;
        _this.delayReshow = null;
        _this.intervalUpdateContent = null;
        return _this;
    }
    /**
   * For unify the bind and unbind listener
   */ _createClass(ReactTooltip1, [
        {
            key: "bind",
            value: function bind(methodArray) {
                var _this2 = this;
                methodArray.forEach(function(method) {
                    _this2[method] = _this2[method].bind(_this2);
                });
            }
        },
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this$props = this.props, insecure = _this$props.insecure, resizeHide = _this$props.resizeHide;
                this.bindListener(); // Bind listener for tooltip
                this.bindWindowEvents(resizeHide); // Bind global event for static method
                this.injectStyles(); // Inject styles for each DOM root having tooltip.
            }
        },
        {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.mount = false;
                this.clearTimer();
                this.unbindListener();
                this.removeScrollListener(this.state.currentTarget);
                this.unbindWindowEvents();
            }
        },
        {
            key: "injectStyles",
            value: function injectStyles() {
                var tooltipRef = this.tooltipRef;
                if (!tooltipRef) return;
                var parentNode = tooltipRef.parentNode;
                while(parentNode.parentNode)parentNode = parentNode.parentNode;
                var domRoot;
                switch(parentNode.constructor.name){
                    case 'Document':
                    case 'HTMLDocument':
                    case undefined:
                        domRoot = parentNode.head;
                        break;
                    case 'ShadowRoot':
                    default:
                        domRoot = parentNode;
                        break;
                } // Prevent styles duplication.
                if (!domRoot.querySelector('style[data-react-tooltip]')) {
                    var style = document.createElement('style');
                    style.textContent = baseCss;
                    style.setAttribute('data-react-tooltip', 'true');
                    domRoot.appendChild(style);
                }
            }
        },
        {
            key: "mouseOnToolTip",
            value: function mouseOnToolTip() {
                var show = this.state.show;
                if (show && this.tooltipRef) {
                    /* old IE or Firefox work around */ if (!this.tooltipRef.matches) {
                        /* old IE work around */ if (this.tooltipRef.msMatchesSelector) this.tooltipRef.matches = this.tooltipRef.msMatchesSelector;
                        else /* old Firefox work around */ this.tooltipRef.matches = this.tooltipRef.mozMatchesSelector;
                    }
                    return this.tooltipRef.matches(':hover');
                }
                return false;
            }
        },
        {
            key: "getTargetArray",
            value: function getTargetArray(id3) {
                var targetArray = [];
                var selector;
                if (!id3) selector = '[data-tip]:not([data-for])';
                else {
                    var escaped = id3.replace(/\\/g, '\\\\').replace(/"/g, '\\"');
                    selector = "[data-tip][data-for=\"".concat(escaped, "\"]");
                } // Scan document for shadow DOM elements
                nodeListToArray(document.getElementsByTagName('*')).filter(function(element) {
                    return element.shadowRoot;
                }).forEach(function(element) {
                    targetArray = targetArray.concat(nodeListToArray(element.shadowRoot.querySelectorAll(selector)));
                });
                return targetArray.concat(nodeListToArray(document.querySelectorAll(selector)));
            }
        },
        {
            key: "bindListener",
            value: function bindListener() {
                var _this3 = this;
                var _this$props2 = this.props, id4 = _this$props2.id, globalEventOff = _this$props2.globalEventOff, isCapture2 = _this$props2.isCapture;
                var targetArray = this.getTargetArray(id4);
                targetArray.forEach(function(target) {
                    if (target.getAttribute('currentItem') === null) target.setAttribute('currentItem', 'false');
                    _this3.unbindBasicListener(target);
                    if (_this3.isCustomEvent(target)) _this3.customUnbindListener(target);
                });
                if (this.isBodyMode()) this.bindBodyListener(targetArray);
                else targetArray.forEach(function(target) {
                    var isCaptureMode = _this3.isCapture(target);
                    var effect = _this3.getEffect(target);
                    if (_this3.isCustomEvent(target)) {
                        _this3.customBindListener(target);
                        return;
                    }
                    target.addEventListener('mouseenter', _this3.showTooltip, isCaptureMode);
                    target.addEventListener('focus', _this3.showTooltip, isCaptureMode);
                    if (effect === 'float') target.addEventListener('mousemove', _this3.updateTooltip, isCaptureMode);
                    target.addEventListener('mouseleave', _this3.hideTooltip, isCaptureMode);
                    target.addEventListener('blur', _this3.hideTooltip, isCaptureMode);
                });
                 // Global event to hide tooltip
                if (globalEventOff) {
                    window.removeEventListener(globalEventOff, this.hideTooltip);
                    window.addEventListener(globalEventOff, this.hideTooltip, isCapture2);
                } // Track removal of targetArray elements from DOM
                this.bindRemovalTracker();
            }
        },
        {
            key: "unbindListener",
            value: function unbindListener() {
                var _this4 = this;
                var _this$props3 = this.props, id5 = _this$props3.id, globalEventOff = _this$props3.globalEventOff;
                if (this.isBodyMode()) this.unbindBodyListener();
                else {
                    var targetArray = this.getTargetArray(id5);
                    targetArray.forEach(function(target) {
                        _this4.unbindBasicListener(target);
                        if (_this4.isCustomEvent(target)) _this4.customUnbindListener(target);
                    });
                }
                if (globalEventOff) window.removeEventListener(globalEventOff, this.hideTooltip);
                this.unbindRemovalTracker();
            }
        },
        {
            key: "unbindBasicListener",
            value: function unbindBasicListener(target) {
                var isCaptureMode = this.isCapture(target);
                target.removeEventListener('mouseenter', this.showTooltip, isCaptureMode);
                target.removeEventListener('mousemove', this.updateTooltip, isCaptureMode);
                target.removeEventListener('mouseleave', this.hideTooltip, isCaptureMode);
            }
        },
        {
            key: "getTooltipContent",
            value: function getTooltipContent() {
                var _this$props4 = this.props, getContent = _this$props4.getContent, children = _this$props4.children; // Generate tooltip content
                var content;
                if (getContent) {
                    if (Array.isArray(getContent)) content = getContent[0] && getContent[0](this.state.originTooltip);
                    else content = getContent(this.state.originTooltip);
                }
                return getTipContent(this.state.originTooltip, children, content, this.state.isMultiline);
            }
        },
        {
            key: "isEmptyTip",
            value: function isEmptyTip(placeholder) {
                return typeof placeholder === 'string' && placeholder === '' || placeholder === null;
            }
        },
        {
            key: "showTooltip",
            value: function showTooltip(e, isGlobalCall) {
                if (!this.tooltipRef) return;
                if (isGlobalCall) {
                    // Don't trigger other elements belongs to other ReactTooltip
                    var targetArray = this.getTargetArray(this.props.id);
                    var isMyElement = targetArray.some(function(ele) {
                        return ele === e.currentTarget;
                    });
                    if (!isMyElement) return;
                } // Get the tooltip content
                // calculate in this phrase so that tip width height can be detected
                var _this$props5 = this.props, multiline = _this$props5.multiline, getContent = _this$props5.getContent;
                var originTooltip = e.currentTarget.getAttribute('data-tip');
                var isMultiline = e.currentTarget.getAttribute('data-multiline') || multiline || false; // If it is focus event or called by ReactTooltip.show, switch to `solid` effect
                var switchToSolid = e instanceof window.FocusEvent || isGlobalCall; // if it needs to skip adding hide listener to scroll
                var scrollHide = true;
                if (e.currentTarget.getAttribute('data-scroll-hide')) scrollHide = e.currentTarget.getAttribute('data-scroll-hide') === 'true';
                else if (this.props.scrollHide != null) scrollHide = this.props.scrollHide;
                 // adding aria-describedby to target to make tooltips read by screen readers
                if (e && e.currentTarget && e.currentTarget.setAttribute) e.currentTarget.setAttribute('aria-describedby', this.state.uuid);
                 // Make sure the correct place is set
                var desiredPlace = e.currentTarget.getAttribute('data-place') || this.props.place || 'top';
                var effect = switchToSolid && 'solid' || this.getEffect(e.currentTarget);
                var offset = e.currentTarget.getAttribute('data-offset') || this.props.offset || {
                };
                var result = getPosition(e, e.currentTarget, this.tooltipRef, desiredPlace, desiredPlace, effect, offset);
                if (result.position && this.props.overridePosition) result.position = this.props.overridePosition(result.position, e, e.currentTarget, this.tooltipRef, desiredPlace, desiredPlace, effect, offset);
                var place = result.isNewState ? result.newState.place : desiredPlace; // To prevent previously created timers from triggering
                this.clearTimer();
                var target = e.currentTarget;
                var reshowDelay = this.state.show ? target.getAttribute('data-delay-update') || this.props.delayUpdate : 0;
                var self = this;
                var updateState = function updateState() {
                    self.setState({
                        originTooltip: originTooltip,
                        isMultiline: isMultiline,
                        desiredPlace: desiredPlace,
                        place: place,
                        type: target.getAttribute('data-type') || self.props.type || 'dark',
                        customColors: {
                            text: target.getAttribute('data-text-color') || self.props.textColor || null,
                            background: target.getAttribute('data-background-color') || self.props.backgroundColor || null,
                            border: target.getAttribute('data-border-color') || self.props.borderColor || null,
                            arrow: target.getAttribute('data-arrow-color') || self.props.arrowColor || null
                        },
                        effect: effect,
                        offset: offset,
                        html: (target.getAttribute('data-html') ? target.getAttribute('data-html') === 'true' : self.props.html) || false,
                        delayShow: target.getAttribute('data-delay-show') || self.props.delayShow || 0,
                        delayHide: target.getAttribute('data-delay-hide') || self.props.delayHide || 0,
                        delayUpdate: target.getAttribute('data-delay-update') || self.props.delayUpdate || 0,
                        border: (target.getAttribute('data-border') ? target.getAttribute('data-border') === 'true' : self.props.border) || false,
                        extraClass: target.getAttribute('data-class') || self.props["class"] || self.props.className || '',
                        disable: (target.getAttribute('data-tip-disable') ? target.getAttribute('data-tip-disable') === 'true' : self.props.disable) || false,
                        currentTarget: target
                    }, function() {
                        if (scrollHide) self.addScrollListener(self.state.currentTarget);
                        self.updateTooltip(e);
                        if (getContent && Array.isArray(getContent)) self.intervalUpdateContent = setInterval(function() {
                            if (self.mount) {
                                var _getContent = self.props.getContent;
                                var placeholder = getTipContent(originTooltip, '', _getContent[0](), isMultiline);
                                var isEmptyTip = self.isEmptyTip(placeholder);
                                self.setState({
                                    isEmptyTip: isEmptyTip
                                });
                                self.updatePosition();
                            }
                        }, getContent[1]);
                    });
                }; // If there is no delay call immediately, don't allow events to get in first.
                if (reshowDelay) this.delayReshow = setTimeout(updateState, reshowDelay);
                else updateState();
            }
        },
        {
            key: "updateTooltip",
            value: function updateTooltip(e) {
                var _this5 = this;
                var _this$state = this.state, delayShow = _this$state.delayShow, disable = _this$state.disable;
                var afterShow = this.props.afterShow;
                var placeholder = this.getTooltipContent();
                var eventTarget = e.currentTarget || e.target; // Check if the mouse is actually over the tooltip, if so don't hide the tooltip
                if (this.mouseOnToolTip()) return;
                 // if the tooltip is empty, disable the tooltip
                if (this.isEmptyTip(placeholder) || disable) return;
                var delayTime = !this.state.show ? parseInt(delayShow, 10) : 0;
                var updateState = function updateState() {
                    if (Array.isArray(placeholder) && placeholder.length > 0 || placeholder) {
                        var isInvisible = !_this5.state.show;
                        _this5.setState({
                            currentEvent: e,
                            currentTarget: eventTarget,
                            show: true
                        }, function() {
                            _this5.updatePosition();
                            if (isInvisible && afterShow) afterShow(e);
                        });
                    }
                };
                clearTimeout(this.delayShowLoop);
                if (delayTime) this.delayShowLoop = setTimeout(updateState, delayTime);
                else updateState();
            }
        },
        {
            key: "listenForTooltipExit",
            value: function listenForTooltipExit() {
                var show = this.state.show;
                if (show && this.tooltipRef) this.tooltipRef.addEventListener('mouseleave', this.hideTooltip);
            }
        },
        {
            key: "removeListenerForTooltipExit",
            value: function removeListenerForTooltipExit() {
                var show = this.state.show;
                if (show && this.tooltipRef) this.tooltipRef.removeEventListener('mouseleave', this.hideTooltip);
            }
        },
        {
            key: "hideTooltip",
            value: function hideTooltip(e, hasTarget) {
                var _this6 = this;
                var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
                    isScroll: false
                };
                var disable = this.state.disable;
                var isScroll = options.isScroll;
                var delayHide = isScroll ? 0 : this.state.delayHide;
                var afterHide = this.props.afterHide;
                var placeholder = this.getTooltipContent();
                if (!this.mount) return;
                if (this.isEmptyTip(placeholder) || disable) return; // if the tooltip is empty, disable the tooltip
                if (hasTarget) {
                    // Don't trigger other elements belongs to other ReactTooltip
                    var targetArray = this.getTargetArray(this.props.id);
                    var isMyElement = targetArray.some(function(ele) {
                        return ele === e.currentTarget;
                    });
                    if (!isMyElement || !this.state.show) return;
                } // clean up aria-describedby when hiding tooltip
                if (e && e.currentTarget && e.currentTarget.removeAttribute) e.currentTarget.removeAttribute('aria-describedby');
                var resetState = function resetState() {
                    var isVisible = _this6.state.show; // Check if the mouse is actually over the tooltip, if so don't hide the tooltip
                    if (_this6.mouseOnToolTip()) {
                        _this6.listenForTooltipExit();
                        return;
                    }
                    _this6.removeListenerForTooltipExit();
                    _this6.setState({
                        show: false
                    }, function() {
                        _this6.removeScrollListener(_this6.state.currentTarget);
                        if (isVisible && afterHide) afterHide(e);
                    });
                };
                this.clearTimer();
                if (delayHide) this.delayHideLoop = setTimeout(resetState, parseInt(delayHide, 10));
                else resetState();
            }
        },
        {
            key: "hideTooltipOnScroll",
            value: function hideTooltipOnScroll(event, hasTarget) {
                this.hideTooltip(event, hasTarget, {
                    isScroll: true
                });
            }
        },
        {
            key: "addScrollListener",
            value: function addScrollListener(currentTarget) {
                var isCaptureMode = this.isCapture(currentTarget);
                window.addEventListener('scroll', this.hideTooltipOnScroll, isCaptureMode);
            }
        },
        {
            key: "removeScrollListener",
            value: function removeScrollListener(currentTarget) {
                var isCaptureMode = this.isCapture(currentTarget);
                window.removeEventListener('scroll', this.hideTooltipOnScroll, isCaptureMode);
            } // Calculation the position
        },
        {
            key: "updatePosition",
            value: function updatePosition() {
                var _this7 = this;
                var _this$state2 = this.state, currentEvent = _this$state2.currentEvent, currentTarget = _this$state2.currentTarget, place = _this$state2.place, desiredPlace = _this$state2.desiredPlace, effect = _this$state2.effect, offset = _this$state2.offset;
                var node = this.tooltipRef;
                var result = getPosition(currentEvent, currentTarget, node, place, desiredPlace, effect, offset);
                if (result.position && this.props.overridePosition) result.position = this.props.overridePosition(result.position, currentEvent, currentTarget, node, place, desiredPlace, effect, offset);
                if (result.isNewState) // Switch to reverse placement
                return this.setState(result.newState, function() {
                    _this7.updatePosition();
                });
                 // Set tooltip position
                node.style.left = result.position.left + 'px';
                node.style.top = result.position.top + 'px';
            }
        },
        {
            key: "clearTimer",
            value: function clearTimer() {
                clearTimeout(this.delayShowLoop);
                clearTimeout(this.delayHideLoop);
                clearTimeout(this.delayReshow);
                clearInterval(this.intervalUpdateContent);
            }
        },
        {
            key: "hasCustomColors",
            value: function hasCustomColors() {
                var _this8 = this;
                return Boolean(Object.keys(this.state.customColors).find(function(color) {
                    return color !== 'border' && _this8.state.customColors[color];
                }) || this.state.border && this.state.customColors['border']);
            }
        },
        {
            key: "render",
            value: function render() {
                var _this9 = this;
                var _this$state3 = this.state, extraClass = _this$state3.extraClass, html1 = _this$state3.html, ariaProps = _this$state3.ariaProps, disable = _this$state3.disable, uuid = _this$state3.uuid;
                var content = this.getTooltipContent();
                var isEmptyTip = this.isEmptyTip(content);
                var style = generateTooltipStyle(this.state.uuid, this.state.customColors, this.state.type, this.state.border);
                var tooltipClass = '__react_component_tooltip' + " ".concat(this.state.uuid) + (this.state.show && !disable && !isEmptyTip ? ' show' : '') + (this.state.border ? ' border' : '') + " place-".concat(this.state.place) + " type-".concat(this.hasCustomColors() ? 'custom' : this.state.type) + (this.props.delayUpdate ? ' allow_hover' : '') + (this.props.clickable ? ' allow_click' : '');
                var Wrapper = this.props.wrapper;
                if (ReactTooltip1.supportedWrappers.indexOf(Wrapper) < 0) Wrapper = ReactTooltip1.defaultProps.wrapper;
                var wrapperClassName = [
                    tooltipClass,
                    extraClass
                ].filter(Boolean).join(' ');
                if (html1) {
                    var htmlContent = "".concat(content, "\n<style aria-hidden=\"true\">").concat(style, "</style>");
                    return _reactDefault.default.createElement(Wrapper, _extends({
                        className: "".concat(wrapperClassName),
                        id: this.props.id || uuid,
                        ref: function ref(_ref) {
                            return _this9.tooltipRef = _ref;
                        }
                    }, ariaProps, {
                        "data-id": "tooltip",
                        dangerouslySetInnerHTML: {
                            __html: htmlContent
                        }
                    }));
                } else return _reactDefault.default.createElement(Wrapper, _extends({
                    className: "".concat(wrapperClassName),
                    id: this.props.id || uuid
                }, ariaProps, {
                    ref: function ref(_ref2) {
                        return _this9.tooltipRef = _ref2;
                    },
                    "data-id": "tooltip"
                }), _reactDefault.default.createElement("style", {
                    dangerouslySetInnerHTML: {
                        __html: style
                    },
                    "aria-hidden": "true"
                }), content);
            }
        }
    ], [
        {
            key: "getDerivedStateFromProps",
            value: function getDerivedStateFromProps(nextProps, prevState) {
                var ariaProps = prevState.ariaProps;
                var newAriaProps = parseAria(nextProps);
                var isChanged = Object.keys(newAriaProps).some(function(props) {
                    return newAriaProps[props] !== ariaProps[props];
                });
                if (!isChanged) return null;
                return _objectSpread2({
                }, prevState, {
                    ariaProps: newAriaProps
                });
            }
        }
    ]);
    return ReactTooltip1;
}(_reactDefault.default.Component), _defineProperty(_class2, "defaultProps", {
    insecure: true,
    resizeHide: true,
    wrapper: 'div',
    clickable: false
}), _defineProperty(_class2, "supportedWrappers", [
    'div',
    'span'
]), _defineProperty(_class2, "displayName", 'ReactTooltip'), _temp)) || _class) || _class) || _class) || _class) || _class) || _class) || _class;
exports.default = ReactTooltip;

},{"react":"4mchR","prop-types":"2bysO","uuid":"cQ42Y","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"cQ42Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "v1", ()=>_v1JsDefault.default
);
parcelHelpers.export(exports, "v3", ()=>_v3JsDefault.default
);
parcelHelpers.export(exports, "v4", ()=>_v4JsDefault.default
);
parcelHelpers.export(exports, "v5", ()=>_v5JsDefault.default
);
var _v1Js = require("./v1.js");
var _v1JsDefault = parcelHelpers.interopDefault(_v1Js);
var _v3Js = require("./v3.js");
var _v3JsDefault = parcelHelpers.interopDefault(_v3Js);
var _v4Js = require("./v4.js");
var _v4JsDefault = parcelHelpers.interopDefault(_v4Js);
var _v5Js = require("./v5.js");
var _v5JsDefault = parcelHelpers.interopDefault(_v5Js);

},{"./v1.js":false,"./v3.js":false,"./v4.js":"ioYVZ","./v5.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"ioYVZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _rngJs = require("./rng.js");
var _rngJsDefault = parcelHelpers.interopDefault(_rngJs);
var _bytesToUuidJs = require("./bytesToUuid.js");
var _bytesToUuidJsDefault = parcelHelpers.interopDefault(_bytesToUuidJs);
function v4(options, buf, offset) {
    var i = buf && offset || 0;
    if (typeof options == 'string') {
        buf = options === 'binary' ? new Array(16) : null;
        options = null;
    }
    options = options || {
    };
    var rnds = options.random || (options.rng || _rngJsDefault.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
    rnds[6] = rnds[6] & 15 | 64;
    rnds[8] = rnds[8] & 63 | 128; // Copy bytes to buffer, if provided
    if (buf) for(var ii = 0; ii < 16; ++ii)buf[i + ii] = rnds[ii];
    return buf || _bytesToUuidJsDefault.default(rnds);
}
exports.default = v4;

},{"./rng.js":"jqBjd","./bytesToUuid.js":"81tkg","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"jqBjd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
// find the complete implementation of crypto (msCrypto) on IE11.
var getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);
var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef
function rng() {
    if (!getRandomValues) throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
    return getRandomValues(rnds8);
}
exports.default = rng;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"81tkg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */ var byteToHex = [];
for(var i = 0; i < 256; ++i)byteToHex[i] = (i + 256).toString(16).substr(1);
function bytesToUuid(buf, offset) {
    var i = offset || 0;
    var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4
    return [
        bth[buf[i++]],
        bth[buf[i++]],
        bth[buf[i++]],
        bth[buf[i++]],
        '-',
        bth[buf[i++]],
        bth[buf[i++]],
        '-',
        bth[buf[i++]],
        bth[buf[i++]],
        '-',
        bth[buf[i++]],
        bth[buf[i++]],
        '-',
        bth[buf[i++]],
        bth[buf[i++]],
        bth[buf[i++]],
        bth[buf[i++]],
        bth[buf[i++]],
        bth[buf[i++]]
    ].join('');
}
exports.default = bytesToUuid;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"apysV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Accordion", ()=>Accordion$1
);
parcelHelpers.export(exports, "AccordionBody", ()=>AccordionItem$1
);
parcelHelpers.export(exports, "AccordionContext", ()=>AccordionContext
);
parcelHelpers.export(exports, "AccordionHeader", ()=>AccordionHeader$1
);
parcelHelpers.export(exports, "AccordionItem", ()=>AccordionItem$3
);
parcelHelpers.export(exports, "Alert", ()=>Alert
);
parcelHelpers.export(exports, "Badge", ()=>Badge$1
);
parcelHelpers.export(exports, "Breadcrumb", ()=>Breadcrumb$1
);
parcelHelpers.export(exports, "BreadcrumbItem", ()=>BreadcrumbItem$1
);
parcelHelpers.export(exports, "Button", ()=>Button$1
);
parcelHelpers.export(exports, "ButtonDropdown", ()=>ButtonDropdown$1
);
parcelHelpers.export(exports, "ButtonGroup", ()=>ButtonGroup$1
);
parcelHelpers.export(exports, "ButtonToggle", ()=>ButtonToggle$1
);
parcelHelpers.export(exports, "ButtonToolbar", ()=>ButtonToolbar$1
);
parcelHelpers.export(exports, "Card", ()=>Card$1
);
parcelHelpers.export(exports, "CardBody", ()=>CardBody$1
);
parcelHelpers.export(exports, "CardColumns", ()=>CardColumns$1
);
parcelHelpers.export(exports, "CardDeck", ()=>CardDeck$1
);
parcelHelpers.export(exports, "CardFooter", ()=>CardFooter$1
);
parcelHelpers.export(exports, "CardGroup", ()=>CardGroup$1
);
parcelHelpers.export(exports, "CardHeader", ()=>CardHeader$1
);
parcelHelpers.export(exports, "CardImg", ()=>CardImg$1
);
parcelHelpers.export(exports, "CardImgOverlay", ()=>CardImgOverlay$1
);
parcelHelpers.export(exports, "CardLink", ()=>CardLink$1
);
parcelHelpers.export(exports, "CardSubtitle", ()=>CardSubtitle$1
);
parcelHelpers.export(exports, "CardText", ()=>CardText$1
);
parcelHelpers.export(exports, "CardTitle", ()=>CardTitle$1
);
parcelHelpers.export(exports, "Carousel", ()=>Carousel$1
);
parcelHelpers.export(exports, "CarouselCaption", ()=>CarouselCaption$1
);
parcelHelpers.export(exports, "CarouselControl", ()=>CarouselControl$1
);
parcelHelpers.export(exports, "CarouselIndicators", ()=>CarouselIndicators$1
);
parcelHelpers.export(exports, "CarouselItem", ()=>CarouselItem$1
);
parcelHelpers.export(exports, "Col", ()=>Col$1
);
parcelHelpers.export(exports, "Collapse", ()=>Collapse$1
);
parcelHelpers.export(exports, "Container", ()=>Container$1
);
parcelHelpers.export(exports, "Dropdown", ()=>Dropdown$1
);
parcelHelpers.export(exports, "DropdownContext", ()=>DropdownContext
);
parcelHelpers.export(exports, "DropdownItem", ()=>DropdownItem$1
);
parcelHelpers.export(exports, "DropdownMenu", ()=>DropdownMenu$1
);
parcelHelpers.export(exports, "DropdownToggle", ()=>DropdownToggle$1
);
parcelHelpers.export(exports, "Fade", ()=>Fade
);
parcelHelpers.export(exports, "Form", ()=>Form$1
);
parcelHelpers.export(exports, "FormFeedback", ()=>FormFeedback$1
);
parcelHelpers.export(exports, "FormGroup", ()=>FormGroup$1
);
parcelHelpers.export(exports, "FormText", ()=>FormText$1
);
parcelHelpers.export(exports, "Input", ()=>Input$1
);
parcelHelpers.export(exports, "InputGroup", ()=>InputGroup$1
);
parcelHelpers.export(exports, "InputGroupText", ()=>InputGroupText$1
);
parcelHelpers.export(exports, "Label", ()=>Label$1
);
parcelHelpers.export(exports, "List", ()=>List$1
);
parcelHelpers.export(exports, "ListGroup", ()=>ListGroup$1
);
parcelHelpers.export(exports, "ListGroupItem", ()=>ListGroupItem$1
);
parcelHelpers.export(exports, "ListGroupItemHeading", ()=>ListGroupItemHeading$1
);
parcelHelpers.export(exports, "ListGroupItemText", ()=>ListGroupItemText$1
);
parcelHelpers.export(exports, "ListInlineItem", ()=>ListInlineItem$1
);
parcelHelpers.export(exports, "Media", ()=>Media$1
);
parcelHelpers.export(exports, "Modal", ()=>Modal$1
);
parcelHelpers.export(exports, "ModalBody", ()=>ModalBody$1
);
parcelHelpers.export(exports, "ModalFooter", ()=>ModalFooter$1
);
parcelHelpers.export(exports, "ModalHeader", ()=>ModalHeader$1
);
parcelHelpers.export(exports, "Nav", ()=>Nav$1
);
parcelHelpers.export(exports, "NavItem", ()=>NavItem$1
);
parcelHelpers.export(exports, "NavLink", ()=>NavLink$1
);
parcelHelpers.export(exports, "Navbar", ()=>Navbar$1
);
parcelHelpers.export(exports, "NavbarBrand", ()=>NavbarBrand$1
);
parcelHelpers.export(exports, "NavbarText", ()=>NavbarText$1
);
parcelHelpers.export(exports, "NavbarToggler", ()=>NavbarToggler$1
);
parcelHelpers.export(exports, "Offcanvas", ()=>Offcanvas$1
);
parcelHelpers.export(exports, "OffcanvasBody", ()=>OffcanvasBody$1
);
parcelHelpers.export(exports, "OffcanvasHeader", ()=>OffcanvasHeader$1
);
parcelHelpers.export(exports, "Pagination", ()=>Pagination$1
);
parcelHelpers.export(exports, "PaginationItem", ()=>PaginationItem$1
);
parcelHelpers.export(exports, "PaginationLink", ()=>PaginationLink$1
);
parcelHelpers.export(exports, "Placeholder", ()=>Placeholder$1
);
parcelHelpers.export(exports, "PlaceholderButton", ()=>PlaceholderButton$1
);
parcelHelpers.export(exports, "Polyfill", ()=>polyfill
);
parcelHelpers.export(exports, "Popover", ()=>Popover$1
);
parcelHelpers.export(exports, "PopoverBody", ()=>PopoverBody$1
);
parcelHelpers.export(exports, "PopoverHeader", ()=>PopoverHeader$1
);
parcelHelpers.export(exports, "PopperContent", ()=>PopperContent$1
);
parcelHelpers.export(exports, "PopperTargetHelper", ()=>PopperTargetHelper$1
);
parcelHelpers.export(exports, "Progress", ()=>Progress$1
);
parcelHelpers.export(exports, "Row", ()=>Row$1
);
parcelHelpers.export(exports, "Spinner", ()=>Spinner$1
);
parcelHelpers.export(exports, "TabContent", ()=>TabContent$1
);
parcelHelpers.export(exports, "TabPane", ()=>TabPane
);
parcelHelpers.export(exports, "Table", ()=>Table$1
);
parcelHelpers.export(exports, "Toast", ()=>Toast
);
parcelHelpers.export(exports, "ToastBody", ()=>ToastBody$1
);
parcelHelpers.export(exports, "ToastHeader", ()=>ToastHeader$1
);
parcelHelpers.export(exports, "Tooltip", ()=>Tooltip$1
);
parcelHelpers.export(exports, "UncontrolledAccordion", ()=>UncontrolledAccordion$1
);
parcelHelpers.export(exports, "UncontrolledAlert", ()=>UncontrolledAlert$1
);
parcelHelpers.export(exports, "UncontrolledButtonDropdown", ()=>UncontrolledButtonDropdown
);
parcelHelpers.export(exports, "UncontrolledCarousel", ()=>UncontrolledCarousel$1
);
parcelHelpers.export(exports, "UncontrolledCollapse", ()=>UncontrolledCollapse$1
);
parcelHelpers.export(exports, "UncontrolledDropdown", ()=>UncontrolledDropdown
);
parcelHelpers.export(exports, "UncontrolledPopover", ()=>UncontrolledPopover
);
parcelHelpers.export(exports, "UncontrolledTooltip", ()=>UncontrolledTooltip
);
parcelHelpers.export(exports, "Util", ()=>utils
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _reactPopper = require("react-popper");
var _reactDom = require("react-dom");
var _reactDomDefault = parcelHelpers.interopDefault(_reactDom);
var _reactTransitionGroup = require("react-transition-group");
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _objectSpread2(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {
        };
        if (i % 2) ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o1, p1) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o1, p1);
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {
    };
    var target = {
    };
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function getScrollbarWidth() {
    var scrollDiv = document.createElement('div'); // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113
    scrollDiv.style.position = 'absolute';
    scrollDiv.style.top = '-9999px';
    scrollDiv.style.width = '50px';
    scrollDiv.style.height = '50px';
    scrollDiv.style.overflow = 'scroll';
    document.body.appendChild(scrollDiv);
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    document.body.removeChild(scrollDiv);
    return scrollbarWidth;
}
function setScrollbarWidth(padding) {
    document.body.style.paddingRight = padding > 0 ? padding + "px" : null;
}
function isBodyOverflowing() {
    return document.body.clientWidth < window.innerWidth;
}
function getOriginalBodyPadding() {
    var style = window.getComputedStyle(document.body, null);
    return parseInt(style && style.getPropertyValue('padding-right') || 0, 10);
}
function conditionallyUpdateScrollbar() {
    var scrollbarWidth = getScrollbarWidth(); // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433
    var fixedContent = document.querySelectorAll('.fixed-top, .fixed-bottom, .is-fixed, .sticky-top')[0];
    var bodyPadding = fixedContent ? parseInt(fixedContent.style.paddingRight || 0, 10) : 0;
    if (isBodyOverflowing()) setScrollbarWidth(bodyPadding + scrollbarWidth);
}
var globalCssModule;
function setGlobalCssModule(cssModule) {
    globalCssModule = cssModule;
}
function mapToCssModules(className, cssModule) {
    if (className === void 0) className = '';
    if (cssModule === void 0) cssModule = globalCssModule;
    if (!cssModule) return className;
    return className.split(' ').map(function(c) {
        return cssModule[c] || c;
    }).join(' ');
}
/**
 * Returns a new object with the key/value pairs from `obj` that are not in the array `omitKeys`.
 */ function omit(obj, omitKeys1) {
    var result = {
    };
    Object.keys(obj).forEach(function(key) {
        if (omitKeys1.indexOf(key) === -1) result[key] = obj[key];
    });
    return result;
}
/**
 * Returns a filtered copy of an object with only the specified keys.
 */ function pick(obj, keys) {
    var pickKeys = Array.isArray(keys) ? keys : [
        keys
    ];
    var length = pickKeys.length;
    var key;
    var result = {
    };
    while(length > 0){
        length -= 1;
        key = pickKeys[length];
        result[key] = obj[key];
    }
    return result;
}
var warned = {
};
function warnOnce(message) {
    if (!warned[message]) {
        /* istanbul ignore else */ if (typeof console !== 'undefined') console.error(message); // eslint-disable-line no-console
        warned[message] = true;
    }
}
function deprecated(propType, explanation) {
    return function validate(props, propName, componentName) {
        if (props[propName] !== null && typeof props[propName] !== 'undefined') warnOnce("\"" + propName + "\" property of \"" + componentName + "\" has been deprecated.\n" + explanation);
        return propType.apply(void 0, [
            props,
            propName,
            componentName
        ].concat([].slice.call(arguments, 3)));
    };
} // Shim Element if needed (e.g. in Node environment)
var Element = typeof window === 'object' && window.Element || function() {
};
function DOMElement(props, propName, componentName) {
    if (!(props[propName] instanceof Element)) return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`. Expected prop to be an instance of Element. Validation failed.');
}
var targetPropType = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.string,
    _propTypesDefault.default.func,
    DOMElement,
    _propTypesDefault.default.shape({
        current: _propTypesDefault.default.any
    })
]);
var tagPropType = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.func,
    _propTypesDefault.default.string,
    _propTypesDefault.default.shape({
        $$typeof: _propTypesDefault.default.symbol,
        render: _propTypesDefault.default.func
    }),
    _propTypesDefault.default.arrayOf(_propTypesDefault.default.oneOfType([
        _propTypesDefault.default.func,
        _propTypesDefault.default.string,
        _propTypesDefault.default.shape({
            $$typeof: _propTypesDefault.default.symbol,
            render: _propTypesDefault.default.func
        })
    ]))
]);
/* eslint key-spacing: ["error", { afterColon: true, align: "value" }] */ // These are all setup to match what is in the bootstrap _variables.scss
// https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss
var TransitionTimeouts = {
    Fade: 150,
    // $transition-fade
    Collapse: 350,
    // $transition-collapse
    Modal: 300,
    // $modal-transition
    Carousel: 600,
    // $carousel-transition
    Offcanvas: 300 // $offcanvas-transition
}; // Duplicated Transition.propType keys to ensure that Reactstrap builds
// for distribution properly exclude these keys for nested child HTML attributes
// since `react-transition-group` removes propTypes in production builds.
var TransitionPropTypeKeys = [
    'in',
    'mountOnEnter',
    'unmountOnExit',
    'appear',
    'enter',
    'exit',
    'timeout',
    'onEnter',
    'onEntering',
    'onEntered',
    'onExit',
    'onExiting',
    'onExited'
];
var TransitionStatuses = {
    ENTERING: 'entering',
    ENTERED: 'entered',
    EXITING: 'exiting',
    EXITED: 'exited'
};
var keyCodes = {
    esc: 27,
    space: 32,
    enter: 13,
    tab: 9,
    up: 38,
    down: 40,
    home: 36,
    end: 35,
    n: 78,
    p: 80
};
var PopperPlacements = [
    'auto-start',
    'auto',
    'auto-end',
    'top-start',
    'top',
    'top-end',
    'right-start',
    'right',
    'right-end',
    'bottom-end',
    'bottom',
    'bottom-start',
    'left-end',
    'left',
    'left-start'
];
var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
function isReactRefObj(target) {
    if (target && typeof target === 'object') return 'current' in target;
    return false;
}
function getTag(value) {
    if (value == null) return value === undefined ? '[object Undefined]' : '[object Null]';
    return Object.prototype.toString.call(value);
}
function toNumber(value) {
    var type = typeof value;
    var NAN = 0 / 0;
    if (type === 'number') return value;
    if (type === 'symbol' || type === 'object' && getTag(value) === '[object Symbol]') return NAN;
    if (isObject(value)) {
        var other = typeof value.valueOf === 'function' ? value.valueOf() : value;
        value = isObject(other) ? "" + other : other;
    }
    if (type !== 'string') return value === 0 ? value : +value;
    value = value.replace(/^\s+|\s+$/g, '');
    var isBinary = /^0b[01]+$/i.test(value);
    return isBinary || /^0o[0-7]+$/i.test(value) ? parseInt(value.slice(2), isBinary ? 2 : 8) : /^[-+]0x[0-9a-f]+$/i.test(value) ? NAN : +value;
}
function isObject(value) {
    var type = typeof value;
    return value != null && (type === 'object' || type === 'function');
}
function isFunction(value) {
    if (!isObject(value)) return false;
    var tag = getTag(value);
    return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object Proxy]';
}
function findDOMElements(target) {
    if (isReactRefObj(target)) return target.current;
    if (isFunction(target)) return target();
    if (typeof target === 'string' && canUseDOM) {
        var selection = document.querySelectorAll(target);
        if (!selection.length) selection = document.querySelectorAll("#" + target);
        if (!selection.length) throw new Error("The target '" + target + "' could not be identified in the dom, tip: check spelling");
        return selection;
    }
    return target;
}
function isArrayOrNodeList(els) {
    if (els === null) return false;
    return Array.isArray(els) || canUseDOM && typeof els.length === 'number';
}
function getTarget(target, allElements) {
    var els = findDOMElements(target);
    if (allElements) {
        if (isArrayOrNodeList(els)) return els;
        if (els === null) return [];
        return [
            els
        ];
    } else {
        if (isArrayOrNodeList(els)) return els[0];
        return els;
    }
}
var defaultToggleEvents = [
    'touchstart',
    'click'
];
function addMultipleEventListeners(_els, handler, _events, useCapture) {
    var els = _els;
    if (!isArrayOrNodeList(els)) els = [
        els
    ];
    var events = _events;
    if (typeof events === 'string') events = events.split(/\s+/);
    if (!isArrayOrNodeList(els) || typeof handler !== 'function' || !Array.isArray(events)) throw new Error("\n      The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\n      The second must be a function.\n      The third is a string or an array of strings that represents DOM events\n    ");
    Array.prototype.forEach.call(events, function(event) {
        Array.prototype.forEach.call(els, function(el) {
            el.addEventListener(event, handler, useCapture);
        });
    });
    return function removeEvents() {
        Array.prototype.forEach.call(events, function(event) {
            Array.prototype.forEach.call(els, function(el) {
                el.removeEventListener(event, handler, useCapture);
            });
        });
    };
}
var focusableElements = [
    'a[href]',
    'area[href]',
    'input:not([disabled]):not([type=hidden])',
    'select:not([disabled])',
    'textarea:not([disabled])',
    'button:not([disabled])',
    'object',
    'embed',
    '[tabindex]:not(.modal)',
    'audio[controls]',
    'video[controls]',
    '[contenteditable]:not([contenteditable="false"])'
];
var utils = {
    __proto__: null,
    getScrollbarWidth: getScrollbarWidth,
    setScrollbarWidth: setScrollbarWidth,
    isBodyOverflowing: isBodyOverflowing,
    getOriginalBodyPadding: getOriginalBodyPadding,
    conditionallyUpdateScrollbar: conditionallyUpdateScrollbar,
    setGlobalCssModule: setGlobalCssModule,
    mapToCssModules: mapToCssModules,
    omit: omit,
    pick: pick,
    warnOnce: warnOnce,
    deprecated: deprecated,
    DOMElement: DOMElement,
    targetPropType: targetPropType,
    tagPropType: tagPropType,
    TransitionTimeouts: TransitionTimeouts,
    TransitionPropTypeKeys: TransitionPropTypeKeys,
    TransitionStatuses: TransitionStatuses,
    keyCodes: keyCodes,
    PopperPlacements: PopperPlacements,
    canUseDOM: canUseDOM,
    isReactRefObj: isReactRefObj,
    toNumber: toNumber,
    isObject: isObject,
    isFunction: isFunction,
    findDOMElements: findDOMElements,
    isArrayOrNodeList: isArrayOrNodeList,
    getTarget: getTarget,
    defaultToggleEvents: defaultToggleEvents,
    addMultipleEventListeners: addMultipleEventListeners,
    focusableElements: focusableElements
};
var _excluded$1e = [
    "className",
    "cssModule",
    "fluid",
    "tag"
];
var propTypes$1k = {
    tag: tagPropType,
    fluid: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.bool,
        _propTypesDefault.default.string
    ]),
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$1i = {
    tag: 'div'
};
var Container = function Container(props) {
    var className = props.className, cssModule = props.cssModule, fluid = props.fluid, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$1e);
    var containerClass = 'container';
    if (fluid === true) containerClass = 'container-fluid';
    else if (fluid) containerClass = "container-" + fluid;
    var classes = mapToCssModules(_classnamesDefault.default(className, containerClass), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
Container.propTypes = propTypes$1k;
Container.defaultProps = defaultProps$1i;
var Container$1 = Container;
var _excluded$1d = [
    "className",
    "cssModule",
    "noGutters",
    "tag",
    "form",
    "widths"
];
var rowColWidths = [
    'xs',
    'sm',
    'md',
    'lg',
    'xl',
    'xxl'
];
var rowColsPropType = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.number,
    _propTypesDefault.default.string
]);
var propTypes$1j = {
    tag: tagPropType,
    noGutters: deprecated(_propTypesDefault.default.bool, "Please use Bootstrap 5 gutter utility classes. https://getbootstrap.com/docs/5.0/layout/gutters/"),
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    form: _propTypesDefault.default.bool,
    xs: rowColsPropType,
    sm: rowColsPropType,
    md: rowColsPropType,
    lg: rowColsPropType,
    xl: rowColsPropType,
    xxl: rowColsPropType
};
var defaultProps$1h = {
    tag: 'div',
    widths: rowColWidths
};
var Row = function Row(props) {
    var className = props.className, cssModule = props.cssModule, noGutters = props.noGutters, Tag = props.tag, form = props.form, widths = props.widths, attributes = _objectWithoutPropertiesLoose(props, _excluded$1d);
    var colClasses = [];
    widths.forEach(function(colWidth, i) {
        var colSize = props[colWidth];
        delete attributes[colWidth];
        if (!colSize) return;
        var isXs = !i;
        colClasses.push(isXs ? "row-cols-" + colSize : "row-cols-" + colWidth + "-" + colSize);
    });
    var classes = mapToCssModules(_classnamesDefault.default(className, noGutters ? 'gx-0' : null, form ? 'form-row' : 'row', colClasses), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
Row.propTypes = propTypes$1j;
Row.defaultProps = defaultProps$1h;
var Row$1 = Row;
var _excluded$1c = [
    "className",
    "cssModule",
    "widths",
    "tag"
];
var colWidths$1 = [
    'xs',
    'sm',
    'md',
    'lg',
    'xl',
    'xxl'
];
var stringOrNumberProp$1 = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.number,
    _propTypesDefault.default.string
]);
var columnProps$1 = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.bool,
    _propTypesDefault.default.number,
    _propTypesDefault.default.string,
    _propTypesDefault.default.shape({
        size: _propTypesDefault.default.oneOfType([
            _propTypesDefault.default.bool,
            _propTypesDefault.default.number,
            _propTypesDefault.default.string
        ]),
        order: stringOrNumberProp$1,
        offset: stringOrNumberProp$1
    })
]);
var propTypes$1i = {
    tag: tagPropType,
    xs: columnProps$1,
    sm: columnProps$1,
    md: columnProps$1,
    lg: columnProps$1,
    xl: columnProps$1,
    xxl: columnProps$1,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    widths: _propTypesDefault.default.array
};
var defaultProps$1g = {
    tag: 'div',
    widths: colWidths$1
};
var getColumnSizeClass$1 = function getColumnSizeClass(isXs, colWidth, colSize) {
    if (colSize === true || colSize === '') return isXs ? 'col' : "col-" + colWidth;
    else if (colSize === 'auto') return isXs ? 'col-auto' : "col-" + colWidth + "-auto";
    return isXs ? "col-" + colSize : "col-" + colWidth + "-" + colSize;
};
var getColumnClasses = function getColumnClasses(attributes, cssModule, widths) {
    if (widths === void 0) widths = colWidths$1;
    var colClasses = [];
    widths.forEach(function(colWidth, i) {
        var columnProp = attributes[colWidth];
        delete attributes[colWidth];
        if (!columnProp && columnProp !== '') return;
        var isXs = !i;
        if (isObject(columnProp)) {
            var _classNames;
            var colSizeInterfix = isXs ? '-' : "-" + colWidth + "-";
            var colClass = getColumnSizeClass$1(isXs, colWidth, columnProp.size);
            colClasses.push(mapToCssModules(_classnamesDefault.default((_classNames = {
            }, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames["order" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames["offset" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));
        } else {
            var _colClass = getColumnSizeClass$1(isXs, colWidth, columnProp);
            colClasses.push(_colClass);
        }
    });
    return {
        colClasses: colClasses,
        attributes: attributes
    };
};
var Col = function Col(props) {
    var className = props.className, cssModule = props.cssModule, widths = props.widths, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$1c);
    var _getColumnClasses = getColumnClasses(attributes, cssModule, widths), modifiedAttributes = _getColumnClasses.attributes, colClasses = _getColumnClasses.colClasses;
    if (!colClasses.length) colClasses.push('col');
    var classes = mapToCssModules(_classnamesDefault.default(className, colClasses), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, modifiedAttributes, {
        className: classes
    })));
};
Col.propTypes = propTypes$1i;
Col.defaultProps = defaultProps$1g;
var Col$1 = Col;
var _excluded$1b = [
    "expand",
    "className",
    "cssModule",
    "light",
    "dark",
    "fixed",
    "sticky",
    "color",
    "container",
    "tag",
    "children"
];
var propTypes$1h = {
    light: _propTypesDefault.default.bool,
    dark: _propTypesDefault.default.bool,
    full: _propTypesDefault.default.bool,
    fixed: _propTypesDefault.default.string,
    sticky: _propTypesDefault.default.string,
    color: _propTypesDefault.default.string,
    role: _propTypesDefault.default.string,
    tag: tagPropType,
    container: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.bool,
        _propTypesDefault.default.string
    ]),
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    expand: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.bool,
        _propTypesDefault.default.string
    ]),
    children: _propTypesDefault.default.node
};
var defaultProps$1f = {
    tag: 'nav',
    expand: false,
    container: 'fluid'
};
var getExpandClass = function getExpandClass(expand) {
    if (expand === false) return false;
    else if (expand === true || expand === 'xs') return 'navbar-expand';
    return "navbar-expand-" + expand;
};
var Navbar = function Navbar(props) {
    var _classNames;
    var expand = props.expand, className = props.className, cssModule = props.cssModule, light = props.light, dark = props.dark, fixed = props.fixed, sticky = props.sticky, color = props.color, container = props.container, Tag = props.tag, children = props.children, attributes = _objectWithoutPropertiesLoose(props, _excluded$1b);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'navbar', getExpandClass(expand), (_classNames = {
        'navbar-light': light,
        'navbar-dark': dark
    }, _classNames["bg-" + color] = color, _classNames["fixed-" + fixed] = fixed, _classNames["sticky-" + sticky] = sticky, _classNames)), cssModule);
    var containerClass = container && container === true ? 'container' : "container-" + container;
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    }), container ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: containerClass
    }, children) : children));
};
Navbar.propTypes = propTypes$1h;
Navbar.defaultProps = defaultProps$1f;
var Navbar$1 = Navbar;
var _excluded$1a = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$1g = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$1e = {
    tag: 'a'
};
var NavbarBrand = function NavbarBrand(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$1a);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'navbar-brand'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
NavbarBrand.propTypes = propTypes$1g;
NavbarBrand.defaultProps = defaultProps$1e;
var NavbarBrand$1 = NavbarBrand;
var _excluded$19 = [
    "className",
    "cssModule",
    "active",
    "tag"
];
var propTypes$1f = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$1d = {
    tag: 'span'
};
var NavbarText = function NavbarText(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$19);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'navbar-text'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
NavbarText.propTypes = propTypes$1f;
NavbarText.defaultProps = defaultProps$1d;
var NavbarText$1 = NavbarText;
var _excluded$18 = [
    "className",
    "cssModule",
    "children",
    "tag"
];
var propTypes$1e = {
    tag: tagPropType,
    type: _propTypesDefault.default.string,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    children: _propTypesDefault.default.node
};
var defaultProps$1c = {
    tag: 'button',
    type: 'button'
};
var NavbarToggler = function NavbarToggler(props) {
    var className = props.className, cssModule = props.cssModule, children = props.children, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$18);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'navbar-toggler'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
        "aria-label": "Toggle navigation"
    }, attributes, {
        className: classes
    }), children || /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: mapToCssModules('navbar-toggler-icon', cssModule)
    })));
};
NavbarToggler.propTypes = propTypes$1e;
NavbarToggler.defaultProps = defaultProps$1c;
var NavbarToggler$1 = NavbarToggler;
var _excluded$17 = [
    "className",
    "cssModule",
    "tabs",
    "pills",
    "vertical",
    "horizontal",
    "justified",
    "fill",
    "navbar",
    "card",
    "tag"
];
var propTypes$1d = {
    tabs: _propTypesDefault.default.bool,
    pills: _propTypesDefault.default.bool,
    vertical: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.bool,
        _propTypesDefault.default.string
    ]),
    horizontal: _propTypesDefault.default.string,
    justified: _propTypesDefault.default.bool,
    fill: _propTypesDefault.default.bool,
    navbar: _propTypesDefault.default.bool,
    card: _propTypesDefault.default.bool,
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$1b = {
    tag: 'ul',
    vertical: false
};
var getVerticalClass = function getVerticalClass(vertical) {
    if (vertical === false) return false;
    else if (vertical === true || vertical === 'xs') return 'flex-column';
    return "flex-" + vertical + "-column";
};
var Nav = function Nav(props) {
    var className = props.className, cssModule = props.cssModule, tabs = props.tabs, pills = props.pills, vertical = props.vertical, horizontal = props.horizontal, justified = props.justified, fill = props.fill, navbar = props.navbar, card = props.card, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$17);
    var classes = mapToCssModules(_classnamesDefault.default(className, navbar ? 'navbar-nav' : 'nav', horizontal ? "justify-content-" + horizontal : false, getVerticalClass(vertical), {
        'nav-tabs': tabs,
        'card-header-tabs': card && tabs,
        'nav-pills': pills,
        'card-header-pills': card && pills,
        'nav-justified': justified,
        'nav-fill': fill
    }), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
Nav.propTypes = propTypes$1d;
Nav.defaultProps = defaultProps$1b;
var Nav$1 = Nav;
var _excluded$16 = [
    "className",
    "cssModule",
    "active",
    "tag"
];
var propTypes$1c = {
    tag: tagPropType,
    active: _propTypesDefault.default.bool,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$1a = {
    tag: 'li'
};
var NavItem = function NavItem(props) {
    var className = props.className, cssModule = props.cssModule, active = props.active, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$16);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'nav-item', active ? 'active' : false), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
NavItem.propTypes = propTypes$1c;
NavItem.defaultProps = defaultProps$1a;
var NavItem$1 = NavItem;
var _excluded$15 = [
    "className",
    "cssModule",
    "active",
    "tag",
    "innerRef"
];
var propTypes$1b = {
    tag: tagPropType,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.func,
        _propTypesDefault.default.string
    ]),
    disabled: _propTypesDefault.default.bool,
    active: _propTypesDefault.default.bool,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    onClick: _propTypesDefault.default.func,
    href: _propTypesDefault.default.any
};
var defaultProps$19 = {
    tag: 'a'
};
var NavLink = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(NavLink1, _React$Component);
    function NavLink1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = NavLink1.prototype;
    _proto.onClick = function onClick(e) {
        if (this.props.disabled) {
            e.preventDefault();
            return;
        }
        if (this.props.href === '#') e.preventDefault();
        if (this.props.onClick) this.props.onClick(e);
    };
    _proto.render = function render() {
        var _this$props = this.props, className = _this$props.className, cssModule = _this$props.cssModule, active = _this$props.active, Tag = _this$props.tag, innerRef = _this$props.innerRef, attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$15);
        var classes = mapToCssModules(_classnamesDefault.default(className, 'nav-link', {
            disabled: attributes.disabled,
            active: active
        }), cssModule);
        return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
        }, attributes, {
            ref: innerRef,
            onClick: this.onClick,
            className: classes
        })));
    };
    return NavLink1;
}(_reactDefault.default.Component);
NavLink.propTypes = propTypes$1b;
NavLink.defaultProps = defaultProps$19;
var NavLink$1 = NavLink;
var _excluded$14 = [
    "className",
    "listClassName",
    "cssModule",
    "children",
    "tag",
    "listTag",
    "aria-label"
];
var propTypes$1a = {
    tag: tagPropType,
    listTag: tagPropType,
    className: _propTypesDefault.default.string,
    listClassName: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    children: _propTypesDefault.default.node,
    'aria-label': _propTypesDefault.default.string
};
var defaultProps$18 = {
    tag: 'nav',
    listTag: 'ol',
    'aria-label': 'breadcrumb'
};
var Breadcrumb = function Breadcrumb(props) {
    var className = props.className, listClassName = props.listClassName, cssModule = props.cssModule, children = props.children, Tag = props.tag, ListTag = props.listTag, label = props['aria-label'], attributes = _objectWithoutPropertiesLoose(props, _excluded$14);
    var classes = mapToCssModules(_classnamesDefault.default(className), cssModule);
    var listClasses = mapToCssModules(_classnamesDefault.default('breadcrumb', listClassName), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes,
        "aria-label": label
    }), /*#__PURE__*/ _reactDefault.default.createElement(ListTag, {
        className: listClasses
    }, children)));
};
Breadcrumb.propTypes = propTypes$1a;
Breadcrumb.defaultProps = defaultProps$18;
var Breadcrumb$1 = Breadcrumb;
var _excluded$13 = [
    "className",
    "cssModule",
    "active",
    "tag"
];
var propTypes$19 = {
    tag: tagPropType,
    active: _propTypesDefault.default.bool,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$17 = {
    tag: 'li'
};
var BreadcrumbItem = function BreadcrumbItem(props) {
    var className = props.className, cssModule = props.cssModule, active = props.active, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$13);
    var classes = mapToCssModules(_classnamesDefault.default(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes,
        "aria-current": active ? 'page' : undefined
    })));
};
BreadcrumbItem.propTypes = propTypes$19;
BreadcrumbItem.defaultProps = defaultProps$17;
var BreadcrumbItem$1 = BreadcrumbItem;
var _excluded$12 = [
    "active",
    "aria-label",
    "block",
    "className",
    "close",
    "cssModule",
    "color",
    "outline",
    "size",
    "tag",
    "innerRef"
];
var propTypes$18 = {
    active: _propTypesDefault.default.bool,
    'aria-label': _propTypesDefault.default.string,
    block: _propTypesDefault.default.bool,
    color: _propTypesDefault.default.string,
    disabled: _propTypesDefault.default.bool,
    outline: _propTypesDefault.default.bool,
    tag: tagPropType,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.func,
        _propTypesDefault.default.string
    ]),
    onClick: _propTypesDefault.default.func,
    size: _propTypesDefault.default.string,
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    close: _propTypesDefault.default.bool
};
var defaultProps$16 = {
    color: 'secondary',
    tag: 'button'
};
var Button = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(Button1, _React$Component);
    function Button1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = Button1.prototype;
    _proto.onClick = function onClick(e) {
        if (this.props.disabled) {
            e.preventDefault();
            return;
        }
        if (this.props.onClick) return this.props.onClick(e);
    };
    _proto.render = function render() {
        var _this$props = this.props, active = _this$props.active, ariaLabel = _this$props['aria-label'], block = _this$props.block, className = _this$props.className, close = _this$props.close, cssModule = _this$props.cssModule, color = _this$props.color, outline = _this$props.outline, size = _this$props.size, Tag = _this$props.tag, innerRef = _this$props.innerRef, attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$12);
        var btnOutlineColor = "btn" + (outline ? '-outline' : '') + "-" + color;
        var classes = mapToCssModules(_classnamesDefault.default(className, close && 'btn-close', close || 'btn', close || btnOutlineColor, size ? "btn-" + size : false, block ? 'd-block w-100' : false, {
            active: active,
            disabled: this.props.disabled
        }), cssModule);
        if (attributes.href && Tag === 'button') Tag = 'a';
        var defaultAriaLabel = close ? 'Close' : null;
        return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
            type: Tag === 'button' && attributes.onClick ? 'button' : undefined
        }, attributes, {
            className: classes,
            ref: innerRef,
            onClick: this.onClick,
            "aria-label": ariaLabel || defaultAriaLabel
        })));
    };
    return Button1;
}(_reactDefault.default.Component);
Button.propTypes = propTypes$18;
Button.defaultProps = defaultProps$16;
var Button$1 = Button;
var _excluded$11 = [
    "className"
];
var propTypes$17 = {
    onClick: _propTypesDefault.default.func,
    onBlur: _propTypesDefault.default.func,
    onFocus: _propTypesDefault.default.func,
    defaultValue: _propTypesDefault.default.bool
};
var defaultProps$15 = {
    defaultValue: false
};
var ButtonToggle = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(ButtonToggle1, _React$Component);
    function ButtonToggle1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this.state = {
            toggled: props.defaultValue,
            focus: false
        };
        _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));
        _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));
        _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = ButtonToggle1.prototype;
    _proto.onBlur = function onBlur(e) {
        if (this.props.onBlur) this.props.onBlur(e);
        this.setState({
            focus: false
        });
    };
    _proto.onFocus = function onFocus(e) {
        if (this.props.onFocus) this.props.onFocus(e);
        this.setState({
            focus: true
        });
    };
    _proto.onClick = function onClick(e) {
        if (this.props.onClick) this.props.onClick(e);
        this.setState(function(_ref) {
            var toggled = _ref.toggled;
            return {
                toggled: !toggled
            };
        });
    };
    _proto.render = function render() {
        var _this$props = this.props, className = _this$props.className, attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$11);
        var classes = mapToCssModules(_classnamesDefault.default(className, {
            focus: this.state.focus
        }), this.props.cssModule);
        return(/*#__PURE__*/ _reactDefault.default.createElement(Button$1, _extends({
            active: this.state.toggled,
            onBlur: this.onBlur,
            onFocus: this.onFocus,
            onClick: this.onClick,
            className: classes
        }, attributes)));
    };
    return ButtonToggle1;
}(_reactDefault.default.Component);
ButtonToggle.propTypes = propTypes$17;
ButtonToggle.defaultProps = defaultProps$15;
var ButtonToggle$1 = ButtonToggle;
/**
 * DropdownContext
 * {
 *  toggle: PropTypes.func.isRequired,
 *  isOpen: PropTypes.bool.isRequired,
 *  direction: PropTypes.oneOf(['up', 'down', 'start', 'end']).isRequired,
 *  inNavbar: PropTypes.bool.isRequired,
 *  disabled: PropTypes.bool
 * }
 */ var DropdownContext = _reactDefault.default.createContext({
});
var _excluded$10 = [
    "className",
    "cssModule",
    "direction",
    "isOpen",
    "group",
    "size",
    "nav",
    "setActiveFromChild",
    "active",
    "tag",
    "menuRole"
];
var propTypes$16 = {
    a11y: _propTypesDefault.default.bool,
    disabled: _propTypesDefault.default.bool,
    direction: _propTypesDefault.default.oneOf([
        'up',
        'down',
        'start',
        'end',
        'left',
        'right'
    ]),
    group: _propTypesDefault.default.bool,
    isOpen: _propTypesDefault.default.bool,
    nav: _propTypesDefault.default.bool,
    active: _propTypesDefault.default.bool,
    size: _propTypesDefault.default.string,
    tag: tagPropType,
    toggle: _propTypesDefault.default.func,
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    inNavbar: _propTypesDefault.default.bool,
    setActiveFromChild: _propTypesDefault.default.bool,
    menuRole: _propTypesDefault.default.oneOf([
        'listbox',
        'menu'
    ])
};
var defaultProps$14 = {
    a11y: true,
    isOpen: false,
    direction: 'down',
    nav: false,
    active: false,
    inNavbar: false,
    setActiveFromChild: false
};
var preventDefaultKeys = [
    keyCodes.space,
    keyCodes.enter,
    keyCodes.up,
    keyCodes.down,
    keyCodes.end,
    keyCodes.home
];
var Dropdown = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(Dropdown1, _React$Component);
    function Dropdown1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this.addEvents = _this.addEvents.bind(_assertThisInitialized(_this));
        _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));
        _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_this));
        _this.removeEvents = _this.removeEvents.bind(_assertThisInitialized(_this));
        _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));
        _this.handleMenuRef = _this.handleMenuRef.bind(_assertThisInitialized(_this));
        _this.containerRef = _reactDefault.default.createRef();
        _this.menuRef = _reactDefault.default.createRef();
        return _this;
    }
    var _proto = Dropdown1.prototype;
    _proto.handleMenuRef = function handleMenuRef(menuRef) {
        this.menuRef.current = menuRef;
    };
    _proto.getContextValue = function getContextValue() {
        return {
            toggle: this.toggle,
            isOpen: this.props.isOpen,
            direction: this.props.direction === 'down' && this.props.dropup ? 'up' : this.props.direction,
            inNavbar: this.props.inNavbar,
            disabled: this.props.disabled,
            // Callback that should be called by DropdownMenu to provide a ref to
            // a HTML tag that's used for the DropdownMenu
            onMenuRef: this.handleMenuRef,
            menuRole: this.props.menuRole
        };
    };
    _proto.componentDidMount = function componentDidMount() {
        this.handleProps();
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
        if (this.props.isOpen !== prevProps.isOpen) this.handleProps();
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.removeEvents();
    };
    _proto.getContainer = function getContainer() {
        return this.containerRef.current;
    };
    _proto.getMenu = function getMenu() {
        return this.menuRef.current;
    };
    _proto.getMenuCtrl = function getMenuCtrl() {
        if (this._$menuCtrl) return this._$menuCtrl;
        this._$menuCtrl = this.getContainer().querySelector('[aria-expanded]');
        return this._$menuCtrl;
    };
    _proto.getItemType = function getItemType() {
        if (this.context.menuRole === 'listbox') return 'option';
        return 'menuitem';
    };
    _proto.getMenuItems = function getMenuItems() {
        // In a real menu with a child DropdownMenu, `this.getMenu()` should never
        // be null, but it is sometimes null in tests. To mitigate that, we just
        // use `this.getContainer()` as the fallback `menuContainer`.
        var menuContainer = this.getMenu() || this.getContainer();
        return [].slice.call(menuContainer.querySelectorAll("[role=\"" + this.getItemType() + "\"]"));
    };
    _proto.addEvents = function addEvents() {
        var _this2 = this;
        [
            'click',
            'touchstart',
            'keyup'
        ].forEach(function(event) {
            return document.addEventListener(event, _this2.handleDocumentClick, true);
        });
    };
    _proto.removeEvents = function removeEvents() {
        var _this3 = this;
        [
            'click',
            'touchstart',
            'keyup'
        ].forEach(function(event) {
            return document.removeEventListener(event, _this3.handleDocumentClick, true);
        });
    };
    _proto.handleDocumentClick = function handleDocumentClick(e) {
        if (e && (e.which === 3 || e.type === 'keyup' && e.which !== keyCodes.tab)) return;
        var container = this.getContainer();
        var menu = this.getMenu();
        var clickIsInContainer = container.contains(e.target) && container !== e.target;
        var clickIsInInput = container.classList.contains('input-group') && container.classList.contains('dropdown') && e.target.tagName === 'INPUT';
        var clickIsInMenu = menu && menu.contains(e.target) && menu !== e.target;
        if ((clickIsInContainer && !clickIsInInput || clickIsInMenu) && (e.type !== 'keyup' || e.which === keyCodes.tab)) return;
        this.toggle(e);
    };
    _proto.handleKeyDown = function handleKeyDown(e) {
        var _this4 = this;
        var isTargetMenuItem = e.target.getAttribute('role') === 'menuitem' || e.target.getAttribute('role') === 'option';
        var isTargetMenuCtrl = this.getMenuCtrl() === e.target;
        var isTab = keyCodes.tab === e.which;
        if (/input|textarea/i.test(e.target.tagName) || isTab && !this.props.a11y || isTab && !(isTargetMenuItem || isTargetMenuCtrl)) return;
        if (preventDefaultKeys.indexOf(e.which) !== -1 || e.which >= 48 && e.which <= 90) e.preventDefault();
        if (this.props.disabled) return;
        if (isTargetMenuCtrl) {
            if ([
                keyCodes.space,
                keyCodes.enter,
                keyCodes.up,
                keyCodes.down
            ].indexOf(e.which) > -1) {
                // Open the menu (if not open) and focus the first menu item
                if (!this.props.isOpen) this.toggle(e);
                setTimeout(function() {
                    return _this4.getMenuItems()[0].focus();
                });
            } else if (this.props.isOpen && isTab) {
                // Focus the first menu item if tabbing from an open menu. We need this
                // for cases where the DropdownMenu sets a custom container, which may
                // not be the natural next item to tab to from the DropdownToggle.
                e.preventDefault();
                this.getMenuItems()[0].focus();
            } else if (this.props.isOpen && e.which === keyCodes.esc) this.toggle(e);
        }
        if (this.props.isOpen && isTargetMenuItem) {
            if ([
                keyCodes.tab,
                keyCodes.esc
            ].indexOf(e.which) > -1) {
                this.toggle(e);
                this.getMenuCtrl().focus();
            } else if ([
                keyCodes.space,
                keyCodes.enter
            ].indexOf(e.which) > -1) {
                e.target.click();
                this.getMenuCtrl().focus();
            } else if ([
                keyCodes.down,
                keyCodes.up
            ].indexOf(e.which) > -1 || [
                keyCodes.n,
                keyCodes.p
            ].indexOf(e.which) > -1 && e.ctrlKey) {
                var $menuitems = this.getMenuItems();
                var index = $menuitems.indexOf(e.target);
                if (keyCodes.up === e.which || keyCodes.p === e.which && e.ctrlKey) index = index !== 0 ? index - 1 : $menuitems.length - 1;
                else if (keyCodes.down === e.which || keyCodes.n === e.which && e.ctrlKey) index = index === $menuitems.length - 1 ? 0 : index + 1;
                $menuitems[index].focus();
            } else if (keyCodes.end === e.which) {
                var _$menuitems = this.getMenuItems();
                _$menuitems[_$menuitems.length - 1].focus();
            } else if (keyCodes.home === e.which) {
                var _$menuitems2 = this.getMenuItems();
                _$menuitems2[0].focus();
            } else if (e.which >= 48 && e.which <= 90) {
                var _$menuitems3 = this.getMenuItems();
                var charPressed = String.fromCharCode(e.which).toLowerCase();
                for(var i = 0; i < _$menuitems3.length; i += 1){
                    var firstLetter = _$menuitems3[i].textContent && _$menuitems3[i].textContent[0].toLowerCase();
                    if (firstLetter === charPressed) {
                        _$menuitems3[i].focus();
                        break;
                    }
                }
            }
        }
    };
    _proto.handleProps = function handleProps() {
        if (this.props.isOpen) this.addEvents();
        else this.removeEvents();
    };
    _proto.toggle = function toggle(e) {
        if (this.props.disabled) return e && e.preventDefault();
        return this.props.toggle(e);
    };
    _proto.render = function render() {
        var _classNames, _ref;
        var _omit = omit(this.props, [
            'toggle',
            'disabled',
            'inNavbar',
            'a11y'
        ]), className = _omit.className, cssModule = _omit.cssModule, direction = _omit.direction, isOpen = _omit.isOpen, group = _omit.group, size = _omit.size, nav = _omit.nav, setActiveFromChild = _omit.setActiveFromChild, active = _omit.active, tag = _omit.tag, attrs = _objectWithoutPropertiesLoose(_omit, _excluded$10);
        var Tag = tag || (nav ? 'li' : 'div');
        var subItemIsActive = false;
        if (setActiveFromChild) _reactDefault.default.Children.map(this.props.children[1].props.children, function(dropdownItem) {
            if (dropdownItem && dropdownItem.props.active) subItemIsActive = true;
        });
        var classes = mapToCssModules(_classnamesDefault.default(className, nav && active ? 'active' : false, setActiveFromChild && subItemIsActive ? 'active' : false, (_classNames = {
            'btn-group': group
        }, _classNames["btn-group-" + size] = !!size, _classNames.dropdown = !group, _classNames.dropup = direction === 'up', _classNames.dropstart = direction === 'start' || direction === 'left', _classNames.dropend = direction === 'end' || direction === 'right', _classNames.show = isOpen, _classNames['nav-item'] = nav, _classNames)), cssModule);
        return(/*#__PURE__*/ _reactDefault.default.createElement(DropdownContext.Provider, {
            value: this.getContextValue()
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactPopper.Manager, null, /*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
        }, attrs, (_ref = {
        }, _ref[typeof Tag === 'string' ? 'ref' : 'innerRef'] = this.containerRef, _ref), {
            onKeyDown: this.handleKeyDown,
            className: classes
        })))));
    };
    return Dropdown1;
}(_reactDefault.default.Component);
Dropdown.propTypes = propTypes$16;
Dropdown.defaultProps = defaultProps$14;
var Dropdown$1 = Dropdown;
var propTypes$15 = {
    children: _propTypesDefault.default.node
};
var ButtonDropdown = function ButtonDropdown(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement(Dropdown$1, _extends({
        group: true
    }, props)));
};
ButtonDropdown.propTypes = propTypes$15;
var ButtonDropdown$1 = ButtonDropdown;
var _excluded$$ = [
    "className",
    "cssModule",
    "size",
    "vertical",
    "tag"
];
var propTypes$14 = {
    tag: tagPropType,
    'aria-label': _propTypesDefault.default.string,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    role: _propTypesDefault.default.string,
    size: _propTypesDefault.default.string,
    vertical: _propTypesDefault.default.bool
};
var defaultProps$13 = {
    tag: 'div',
    role: 'group'
};
var ButtonGroup = function ButtonGroup(props) {
    var className = props.className, cssModule = props.cssModule, size = props.size, vertical = props.vertical, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$$);
    var classes = mapToCssModules(_classnamesDefault.default(className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
ButtonGroup.propTypes = propTypes$14;
ButtonGroup.defaultProps = defaultProps$13;
var ButtonGroup$1 = ButtonGroup;
var _excluded$_ = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$13 = {
    tag: tagPropType,
    'aria-label': _propTypesDefault.default.string,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    role: _propTypesDefault.default.string
};
var defaultProps$12 = {
    tag: 'div',
    role: 'toolbar'
};
var ButtonToolbar = function ButtonToolbar(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$_);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'btn-toolbar'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
ButtonToolbar.propTypes = propTypes$13;
ButtonToolbar.defaultProps = defaultProps$12;
var ButtonToolbar$1 = ButtonToolbar;
var _excluded$Z = [
    "className",
    "cssModule",
    "divider",
    "tag",
    "header",
    "active",
    "text"
];
var propTypes$12 = {
    children: _propTypesDefault.default.node,
    active: _propTypesDefault.default.bool,
    disabled: _propTypesDefault.default.bool,
    divider: _propTypesDefault.default.bool,
    tag: tagPropType,
    header: _propTypesDefault.default.bool,
    onClick: _propTypesDefault.default.func,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    toggle: _propTypesDefault.default.bool,
    text: _propTypesDefault.default.bool
};
var defaultProps$11 = {
    tag: 'button',
    toggle: true
};
var DropdownItem = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(DropdownItem1, _React$Component);
    function DropdownItem1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));
        _this.getTabIndex = _this.getTabIndex.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = DropdownItem1.prototype;
    _proto.getRole = function getRole() {
        if (this.context.menuRole === 'listbox') return 'option';
        return 'menuitem';
    };
    _proto.onClick = function onClick(e) {
        var _this$props = this.props, disabled = _this$props.disabled, header = _this$props.header, divider = _this$props.divider, text = _this$props.text;
        if (disabled || header || divider || text) {
            e.preventDefault();
            return;
        }
        if (this.props.onClick) this.props.onClick(e);
        if (this.props.toggle) this.context.toggle(e);
    };
    _proto.getTabIndex = function getTabIndex() {
        var _this$props2 = this.props, disabled = _this$props2.disabled, header = _this$props2.header, divider = _this$props2.divider, text = _this$props2.text;
        if (disabled || header || divider || text) return '-1';
        return '0';
    };
    _proto.render = function render() {
        var tabIndex = this.getTabIndex();
        var role = tabIndex > -1 ? this.getRole() : undefined;
        var _omit = omit(this.props, [
            'toggle'
        ]), className = _omit.className, cssModule = _omit.cssModule, divider = _omit.divider, Tag = _omit.tag, header = _omit.header, active = _omit.active, text = _omit.text, props = _objectWithoutPropertiesLoose(_omit, _excluded$Z);
        var classes = mapToCssModules(_classnamesDefault.default(className, {
            disabled: props.disabled,
            'dropdown-item': !divider && !header && !text,
            active: active,
            'dropdown-header': header,
            'dropdown-divider': divider,
            'dropdown-item-text': text
        }), cssModule);
        if (Tag === 'button') {
            if (header) Tag = 'h6';
            else if (divider) Tag = 'div';
            else if (props.href) Tag = 'a';
            else if (text) Tag = 'span';
        }
        return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
            type: Tag === 'button' && (props.onClick || this.props.toggle) ? 'button' : undefined
        }, props, {
            tabIndex: tabIndex,
            role: role,
            className: classes,
            onClick: this.onClick
        })));
    };
    return DropdownItem1;
}(_reactDefault.default.Component);
DropdownItem.propTypes = propTypes$12;
DropdownItem.defaultProps = defaultProps$11;
DropdownItem.contextType = DropdownContext;
var DropdownItem$1 = DropdownItem;
var _excluded$Y = [
    "className",
    "cssModule",
    "dark",
    "end",
    "right",
    "tag",
    "flip",
    "modifiers",
    "persist",
    "strategy",
    "container"
];
var propTypes$11 = {
    tag: tagPropType,
    children: _propTypesDefault.default.node.isRequired,
    dark: _propTypesDefault.default.bool,
    end: _propTypesDefault.default.bool,
    flip: _propTypesDefault.default.bool,
    modifiers: _propTypesDefault.default.array,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    persist: _propTypesDefault.default.bool,
    strategy: _propTypesDefault.default.string,
    container: targetPropType,
    right: deprecated(_propTypesDefault.default.bool, 'Please use "end" instead.')
};
var defaultProps$10 = {
    tag: 'div',
    flip: true,
    modifiers: []
};
var directionPositionMap = {
    up: 'top',
    left: 'left',
    right: 'right',
    start: 'left',
    end: 'right',
    down: 'bottom'
};
var DropdownMenu = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(DropdownMenu1, _React$Component);
    function DropdownMenu1() {
        return _React$Component.apply(this, arguments) || this;
    }
    var _proto = DropdownMenu1.prototype;
    _proto.getRole = function getRole() {
        if (this.context.menuRole === 'listbox') return 'listbox';
        return 'menu';
    };
    _proto.render = function render() {
        var _this = this;
        var _this$props = this.props, className = _this$props.className, cssModule = _this$props.cssModule, dark = _this$props.dark, end = _this$props.end, right = _this$props.right, tag = _this$props.tag, flip = _this$props.flip, modifiers = _this$props.modifiers, persist = _this$props.persist, strategy = _this$props.strategy, container = _this$props.container, attrs = _objectWithoutPropertiesLoose(_this$props, _excluded$Y);
        var classes = mapToCssModules(_classnamesDefault.default(className, 'dropdown-menu', {
            'dropdown-menu-dark': dark,
            'dropdown-menu-end': end || right,
            show: this.context.isOpen
        }), cssModule);
        var Tag = tag;
        if (persist || this.context.isOpen && !this.context.inNavbar) {
            var position1 = directionPositionMap[this.context.direction] || 'bottom';
            var position2 = end || right ? 'end' : 'start';
            var poperPlacement = position1 + "-" + position2;
            var poperModifiers = [].concat(modifiers, [
                {
                    name: 'flip',
                    enabled: !!flip
                }
            ]);
            var popper = /*#__PURE__*/ _reactDefault.default.createElement(_reactPopper.Popper, {
                placement: poperPlacement,
                modifiers: poperModifiers,
                strategy: strategy
            }, function(_ref) {
                var ref = _ref.ref, style = _ref.style, placement = _ref.placement;
                var combinedStyle = _objectSpread2(_objectSpread2({
                }, _this.props.style), style);
                var handleRef = function handleRef(tagRef) {
                    // Send the ref to `react-popper`
                    ref(tagRef); // Send the ref to the parent Dropdown so that clicks outside
                    // it will cause it to close
                    var onMenuRef = _this.context.onMenuRef;
                    if (onMenuRef) onMenuRef(tagRef);
                };
                return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
                    tabIndex: "-1",
                    role: _this.getRole(),
                    ref: handleRef
                }, attrs, {
                    style: combinedStyle,
                    "aria-hidden": !_this.context.isOpen,
                    className: classes,
                    "data-popper-placement": placement
                })));
            });
            if (container) return _reactDomDefault.default.createPortal(popper, getTarget(container));
            else return popper;
        }
        return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
            tabIndex: "-1",
            role: this.getRole()
        }, attrs, {
            "aria-hidden": !this.context.isOpen,
            className: classes,
            "data-popper-placement": attrs.placement
        })));
    };
    return DropdownMenu1;
}(_reactDefault.default.Component);
DropdownMenu.propTypes = propTypes$11;
DropdownMenu.defaultProps = defaultProps$10;
DropdownMenu.contextType = DropdownContext;
var DropdownMenu$1 = DropdownMenu;
var _excluded$X = [
    "className",
    "color",
    "cssModule",
    "caret",
    "split",
    "nav",
    "tag",
    "innerRef"
];
var propTypes$10 = {
    caret: _propTypesDefault.default.bool,
    color: _propTypesDefault.default.string,
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    disabled: _propTypesDefault.default.bool,
    onClick: _propTypesDefault.default.func,
    'aria-haspopup': _propTypesDefault.default.bool,
    split: _propTypesDefault.default.bool,
    tag: tagPropType,
    nav: _propTypesDefault.default.bool
};
var defaultProps$$ = {
    color: 'secondary',
    'aria-haspopup': true
};
var DropdownToggle = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(DropdownToggle1, _React$Component);
    function DropdownToggle1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = DropdownToggle1.prototype;
    _proto.onClick = function onClick(e) {
        if (this.props.disabled || this.context.disabled) {
            e.preventDefault();
            return;
        }
        if (this.props.nav && !this.props.tag) e.preventDefault();
        if (this.props.onClick) this.props.onClick(e);
        this.context.toggle(e);
    };
    _proto.getRole = function getRole() {
        return this.context.menuRole || this.props['aria-haspopup'];
    };
    _proto.render = function render() {
        var _this2 = this;
        var _this$props = this.props, className = _this$props.className, color = _this$props.color, cssModule = _this$props.cssModule, caret = _this$props.caret, split = _this$props.split, nav = _this$props.nav, tag = _this$props.tag, innerRef = _this$props.innerRef, props = _objectWithoutPropertiesLoose(_this$props, _excluded$X);
        var ariaLabel = props['aria-label'] || 'Toggle Dropdown';
        var classes = mapToCssModules(_classnamesDefault.default(className, {
            'dropdown-toggle': caret || split,
            'dropdown-toggle-split': split,
            'nav-link': nav
        }), cssModule);
        var children = typeof props.children !== 'undefined' ? props.children : /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: "visually-hidden"
        }, ariaLabel);
        var Tag;
        if (nav && !tag) {
            Tag = 'a';
            props.href = '#';
        } else if (!tag) {
            Tag = Button$1;
            props.color = color;
            props.cssModule = cssModule;
        } else Tag = tag;
        if (this.context.inNavbar) return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
        }, props, {
            className: classes,
            onClick: this.onClick,
            "aria-expanded": this.context.isOpen,
            "aria-haspopup": this.getRole(),
            children: children
        })));
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactPopper.Reference, {
            innerRef: innerRef
        }, function(_ref) {
            var _ref2;
            var ref = _ref.ref;
            return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
            }, props, (_ref2 = {
            }, _ref2[typeof Tag === 'string' ? 'ref' : 'innerRef'] = ref, _ref2), {
                className: classes,
                onClick: _this2.onClick,
                "aria-expanded": _this2.context.isOpen,
                "aria-haspopup": _this2.getRole(),
                children: children
            })));
        }));
    };
    return DropdownToggle1;
}(_reactDefault.default.Component);
DropdownToggle.propTypes = propTypes$10;
DropdownToggle.defaultProps = defaultProps$$;
DropdownToggle.contextType = DropdownContext;
var DropdownToggle$1 = DropdownToggle;
var _excluded$W = [
    "tag",
    "baseClass",
    "baseClassActive",
    "className",
    "cssModule",
    "children",
    "innerRef"
];
var propTypes$$ = _objectSpread2(_objectSpread2({
}, _reactTransitionGroup.Transition.propTypes), {
}, {
    children: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.arrayOf(_propTypesDefault.default.node),
        _propTypesDefault.default.node
    ]),
    tag: tagPropType,
    baseClass: _propTypesDefault.default.string,
    baseClassActive: _propTypesDefault.default.string,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ])
});
var defaultProps$_ = _objectSpread2(_objectSpread2({
}, _reactTransitionGroup.Transition.defaultProps), {
}, {
    tag: 'div',
    baseClass: 'fade',
    baseClassActive: 'show',
    timeout: TransitionTimeouts.Fade,
    appear: true,
    enter: true,
    exit: true,
    "in": true
});
function Fade(props) {
    var Tag = props.tag, baseClass = props.baseClass, baseClassActive = props.baseClassActive, className = props.className, cssModule = props.cssModule, children = props.children, innerRef = props.innerRef, otherProps = _objectWithoutPropertiesLoose(props, _excluded$W);
    var transitionProps = pick(otherProps, TransitionPropTypeKeys);
    var childProps = omit(otherProps, TransitionPropTypeKeys);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.Transition, transitionProps, function(status) {
        var isActive = status === 'entered';
        var classes = mapToCssModules(_classnamesDefault.default(className, baseClass, isActive && baseClassActive), cssModule);
        return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
            className: classes
        }, childProps, {
            ref: innerRef
        }), children));
    }));
}
Fade.propTypes = propTypes$$;
Fade.defaultProps = defaultProps$_;
/**
 * AccordionContext
 * {
 *  toggle: PropTypes.func.isRequired,
 *  openId: PropTypes.string,    
 * }
 */ var AccordionContext = _reactDefault.default.createContext({
});
var _excluded$V = [
    "flush",
    "open",
    "toggle",
    "className",
    "cssModule",
    "tag",
    "innerRef"
];
var propTypes$_ = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ]),
    children: _propTypesDefault.default.node,
    flush: _propTypesDefault.default.bool,
    open: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.array,
        _propTypesDefault.default.string
    ]).isRequired,
    toggle: _propTypesDefault.default.func.isRequired
};
var defaultProps$Z = {
    tag: 'div'
};
var Accordion = function Accordion(props) {
    var flush = props.flush, open = props.open, toggle = props.toggle, className = props.className, cssModule = props.cssModule, Tag = props.tag, innerRef = props.innerRef, attributes = _objectWithoutPropertiesLoose(props, _excluded$V);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'accordion', {
        'accordion-flush': flush
    }), cssModule);
    var accordionContext = _react.useMemo(function() {
        return {
            open: open,
            toggle: toggle
        };
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement(AccordionContext.Provider, {
        value: accordionContext
    }, /*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes,
        ref: innerRef
    }))));
};
Accordion.propTypes = propTypes$_;
Accordion.defaultProps = defaultProps$Z;
var Accordion$1 = Accordion;
var _excluded$U = [
    "defaultOpen",
    "stayOpen"
];
var propTypes$Z = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ]),
    children: _propTypesDefault.default.node,
    defaultOpen: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.array,
        _propTypesDefault.default.string
    ]),
    stayOpen: _propTypesDefault.default.bool
};
var defaultProps$Y = {
    tag: 'div'
};
var UncontrolledAccordion = function UncontrolledAccordion(_ref) {
    var defaultOpen = _ref.defaultOpen, stayOpen = _ref.stayOpen, props = _objectWithoutPropertiesLoose(_ref, _excluded$U);
    var _useState = _react.useState(defaultOpen || (stayOpen ? [] : undefined)), open = _useState[0], setOpen = _useState[1];
    var toggle = function toggle(id) {
        if (stayOpen) open.includes(id) ? setOpen(open.filter(function(accordionId) {
            return accordionId !== id;
        })) : setOpen([].concat(open, [
            id
        ]));
        else open === id ? setOpen(undefined) : setOpen(id);
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement(Accordion$1, _extends({
    }, props, {
        open: open,
        toggle: toggle
    })));
};
Accordion$1.propTypes = propTypes$Z;
Accordion$1.defaultProps = defaultProps$Y;
var UncontrolledAccordion$1 = UncontrolledAccordion;
var _excluded$T = [
    "className",
    "cssModule",
    "tag",
    "innerRef",
    "children",
    "targetId"
];
var propTypes$Y = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ]),
    children: _propTypesDefault.default.node,
    targetId: _propTypesDefault.default.string.isRequired
};
var defaultProps$X = {
    tag: 'h2'
};
var AccordionHeader = function AccordionHeader(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, innerRef = props.innerRef, children = props.children, targetId = props.targetId, attributes = _objectWithoutPropertiesLoose(props, _excluded$T);
    var _useContext = _react.useContext(AccordionContext), open = _useContext.open, toggle = _useContext.toggle;
    var classes = mapToCssModules(_classnamesDefault.default(className, 'accordion-header'), cssModule);
    var buttonClasses = mapToCssModules(_classnamesDefault.default('accordion-button', {
        collapsed: !(Array.isArray(open) ? open.includes(targetId) : open === targetId)
    }), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes,
        ref: innerRef
    }), /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        className: buttonClasses,
        onClick: function onClick() {
            return toggle(targetId);
        }
    }, children)));
};
AccordionHeader.propTypes = propTypes$Y;
AccordionHeader.defaultProps = defaultProps$X;
var AccordionHeader$1 = AccordionHeader;
var _excluded$S = [
    "className",
    "cssModule",
    "tag",
    "innerRef"
];
var propTypes$X = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ]),
    children: _propTypesDefault.default.node
};
var defaultProps$W = {
    tag: 'div'
};
var AccordionItem$2 = function AccordionItem(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, innerRef = props.innerRef, attributes = _objectWithoutPropertiesLoose(props, _excluded$S);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'accordion-item'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes,
        ref: innerRef
    })));
};
AccordionItem$2.propTypes = propTypes$X;
AccordionItem$2.defaultProps = defaultProps$W;
var AccordionItem$3 = AccordionItem$2;
var _excluded$R = [
    "tag",
    "horizontal",
    "isOpen",
    "className",
    "navbar",
    "cssModule",
    "children",
    "innerRef"
];
var _transitionStatusToCl;
var propTypes$W = _objectSpread2(_objectSpread2({
}, _reactTransitionGroup.Transition.propTypes), {
}, {
    horizontal: _propTypesDefault.default.bool,
    isOpen: _propTypesDefault.default.bool,
    children: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.arrayOf(_propTypesDefault.default.node),
        _propTypesDefault.default.node
    ]),
    tag: tagPropType,
    className: _propTypesDefault.default.node,
    navbar: _propTypesDefault.default.bool,
    cssModule: _propTypesDefault.default.object,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.func,
        _propTypesDefault.default.string,
        _propTypesDefault.default.object
    ])
});
var defaultProps$V = _objectSpread2(_objectSpread2({
}, _reactTransitionGroup.Transition.defaultProps), {
}, {
    horizontal: false,
    isOpen: false,
    appear: false,
    enter: true,
    exit: true,
    tag: 'div',
    timeout: TransitionTimeouts.Collapse
});
var transitionStatusToClassHash = (_transitionStatusToCl = {
}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);
function getTransitionClass(status) {
    return transitionStatusToClassHash[status] || 'collapse';
}
var Collapse = /*#__PURE__*/ function(_Component) {
    _inheritsLoose(Collapse1, _Component);
    function Collapse1(props) {
        var _this;
        _this = _Component.call(this, props) || this;
        _this.state = {
            dimension: null
        };
        [
            'onEntering',
            'onEntered',
            'onExit',
            'onExiting',
            'onExited'
        ].forEach(function(name) {
            _this[name] = _this[name].bind(_assertThisInitialized(_this));
        });
        return _this;
    }
    var _proto = Collapse1.prototype;
    _proto.getDimension = function getDimension(node) {
        return this.props.horizontal ? node.scrollWidth : node.scrollHeight;
    };
    _proto.onEntering = function onEntering(node, isAppearing) {
        this.setState({
            dimension: this.getDimension(node)
        });
        this.props.onEntering(node, isAppearing);
    };
    _proto.onEntered = function onEntered(node, isAppearing) {
        this.setState({
            dimension: null
        });
        this.props.onEntered(node, isAppearing);
    };
    _proto.onExit = function onExit(node) {
        this.setState({
            dimension: this.getDimension(node)
        });
        this.props.onExit(node);
    };
    _proto.onExiting = function onExiting(node) {
        // getting this variable triggers a reflow
        this.getDimension(node); // eslint-disable-line no-unused-vars
        this.setState({
            dimension: 0
        });
        this.props.onExiting(node);
    };
    _proto.onExited = function onExited(node) {
        this.setState({
            dimension: null
        });
        this.props.onExited(node);
    };
    _proto.render = function render() {
        var _this2 = this;
        var _this$props = this.props, Tag = _this$props.tag, horizontal = _this$props.horizontal, isOpen = _this$props.isOpen, className = _this$props.className, navbar = _this$props.navbar, cssModule = _this$props.cssModule, children = _this$props.children, otherProps = _objectWithoutPropertiesLoose(_this$props, _excluded$R);
        var dimension = this.state.dimension;
        var transitionProps = pick(otherProps, TransitionPropTypeKeys);
        var childProps = omit(otherProps, TransitionPropTypeKeys);
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.Transition, _extends({
        }, transitionProps, {
            "in": isOpen,
            onEntering: this.onEntering,
            onEntered: this.onEntered,
            onExit: this.onExit,
            onExiting: this.onExiting,
            onExited: this.onExited
        }), function(status) {
            var _ref;
            var collapseClass = getTransitionClass(status);
            var classes = mapToCssModules(_classnamesDefault.default(className, horizontal && 'collapse-horizontal', collapseClass, navbar && 'navbar-collapse'), cssModule);
            var style = dimension === null ? null : (_ref = {
            }, _ref[horizontal ? 'width' : 'height'] = dimension, _ref);
            return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
            }, childProps, {
                style: _objectSpread2(_objectSpread2({
                }, childProps.style), style),
                className: classes,
                ref: _this2.props.innerRef
            }), children));
        }));
    };
    return Collapse1;
}(_react.Component);
Collapse.propTypes = propTypes$W;
Collapse.defaultProps = defaultProps$V;
var Collapse$1 = Collapse;
var _excluded$Q = [
    "className",
    "cssModule",
    "tag",
    "innerRef",
    "children",
    "accordionId"
];
var propTypes$V = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ]),
    children: _propTypesDefault.default.node,
    accordionId: _propTypesDefault.default.string.isRequired
};
var defaultProps$U = {
    tag: 'div'
};
var AccordionItem = function AccordionItem(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, innerRef = props.innerRef, children = props.children, accordionId = props.accordionId, attributes = _objectWithoutPropertiesLoose(props, _excluded$Q);
    var _useContext = _react.useContext(AccordionContext), open = _useContext.open;
    var classes = mapToCssModules(_classnamesDefault.default(className, 'accordion-collapse'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Collapse$1, _extends({
    }, attributes, {
        className: classes,
        ref: innerRef,
        isOpen: Array.isArray(open) ? open.includes(accordionId) : open === accordionId
    }), /*#__PURE__*/ _reactDefault.default.createElement(Tag, {
        className: "accordion-body"
    }, children)));
};
AccordionItem.propTypes = propTypes$V;
AccordionItem.defaultProps = defaultProps$U;
var AccordionItem$1 = AccordionItem;
var _excluded$P = [
    "className",
    "cssModule",
    "color",
    "innerRef",
    "pill",
    "tag"
];
var propTypes$U = {
    color: _propTypesDefault.default.string,
    pill: _propTypesDefault.default.bool,
    tag: tagPropType,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.func,
        _propTypesDefault.default.string
    ]),
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$T = {
    color: 'secondary',
    pill: false,
    tag: 'span'
};
var Badge = function Badge(props) {
    var className = props.className, cssModule = props.cssModule, color = props.color, innerRef = props.innerRef, pill = props.pill, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$P);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'badge', 'bg-' + color, pill ? 'rounded-pill' : false), cssModule);
    if (attributes.href && Tag === 'span') Tag = 'a';
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes,
        ref: innerRef
    })));
};
Badge.propTypes = propTypes$U;
Badge.defaultProps = defaultProps$T;
var Badge$1 = Badge;
var _excluded$O = [
    "className",
    "cssModule",
    "color",
    "body",
    "inverse",
    "outline",
    "tag",
    "innerRef"
];
var propTypes$T = {
    tag: tagPropType,
    inverse: _propTypesDefault.default.bool,
    color: _propTypesDefault.default.string,
    body: _propTypesDefault.default.bool,
    outline: _propTypesDefault.default.bool,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ])
};
var defaultProps$S = {
    tag: 'div'
};
var Card = function Card(props) {
    var className = props.className, cssModule = props.cssModule, color = props.color, body = props.body, inverse = props.inverse, outline = props.outline, Tag = props.tag, innerRef = props.innerRef, attributes = _objectWithoutPropertiesLoose(props, _excluded$O);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + "-" + color : false), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes,
        ref: innerRef
    })));
};
Card.propTypes = propTypes$T;
Card.defaultProps = defaultProps$S;
var Card$1 = Card;
var _excluded$N = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$S = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$R = {
    tag: 'div'
};
var CardGroup = function CardGroup(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$N);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'card-group'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
CardGroup.propTypes = propTypes$S;
CardGroup.defaultProps = defaultProps$R;
var CardGroup$1 = CardGroup;
var _excluded$M = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$R = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$Q = {
    tag: 'div'
};
var CardDeck = function CardDeck(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$M);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'card-deck'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
CardDeck.propTypes = propTypes$R;
CardDeck.defaultProps = defaultProps$Q;
var CardDeck$1 = CardDeck;
var _excluded$L = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$Q = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$P = {
    tag: 'div'
};
var CardColumns = function CardColumns(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$L);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'card-columns'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
CardColumns.propTypes = propTypes$Q;
CardColumns.defaultProps = defaultProps$P;
var CardColumns$1 = CardColumns;
var _excluded$K = [
    "className",
    "cssModule",
    "innerRef",
    "tag"
];
var propTypes$P = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ])
};
var defaultProps$O = {
    tag: 'div'
};
var CardBody = function CardBody(props) {
    var className = props.className, cssModule = props.cssModule, innerRef = props.innerRef, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$K);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'card-body'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes,
        ref: innerRef
    })));
};
CardBody.propTypes = propTypes$P;
CardBody.defaultProps = defaultProps$O;
var CardBody$1 = CardBody;
var _excluded$J = [
    "className",
    "cssModule",
    "tag",
    "innerRef"
];
var propTypes$O = {
    tag: tagPropType,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.func,
        _propTypesDefault.default.string
    ]),
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$N = {
    tag: 'a'
};
var CardLink = function CardLink(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, innerRef = props.innerRef, attributes = _objectWithoutPropertiesLoose(props, _excluded$J);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'card-link'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        ref: innerRef,
        className: classes
    })));
};
CardLink.propTypes = propTypes$O;
CardLink.defaultProps = defaultProps$N;
var CardLink$1 = CardLink;
var _excluded$I = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$N = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$M = {
    tag: 'div'
};
var CardFooter = function CardFooter(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$I);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'card-footer'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
CardFooter.propTypes = propTypes$N;
CardFooter.defaultProps = defaultProps$M;
var CardFooter$1 = CardFooter;
var _excluded$H = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$M = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$L = {
    tag: 'div'
};
var CardHeader = function CardHeader(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$H);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'card-header'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
CardHeader.propTypes = propTypes$M;
CardHeader.defaultProps = defaultProps$L;
var CardHeader$1 = CardHeader;
var _excluded$G = [
    "className",
    "cssModule",
    "top",
    "bottom",
    "tag"
];
var propTypes$L = {
    tag: tagPropType,
    top: _propTypesDefault.default.bool,
    bottom: _propTypesDefault.default.bool,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$K = {
    tag: 'img'
};
var CardImg = function CardImg(props) {
    var className = props.className, cssModule = props.cssModule, top = props.top, bottom = props.bottom, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$G);
    var cardImgClassName = 'card-img';
    if (top) cardImgClassName = 'card-img-top';
    if (bottom) cardImgClassName = 'card-img-bottom';
    var classes = mapToCssModules(_classnamesDefault.default(className, cardImgClassName), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
CardImg.propTypes = propTypes$L;
CardImg.defaultProps = defaultProps$K;
var CardImg$1 = CardImg;
var _excluded$F = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$K = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$J = {
    tag: 'div'
};
var CardImgOverlay = function CardImgOverlay(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$F);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'card-img-overlay'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
CardImgOverlay.propTypes = propTypes$K;
CardImgOverlay.defaultProps = defaultProps$J;
var CardImgOverlay$1 = CardImgOverlay;
var _excluded$E = [
    "in",
    "children",
    "cssModule",
    "slide",
    "tag",
    "className"
];
var CarouselItem = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(CarouselItem1, _React$Component);
    function CarouselItem1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this.state = {
            startAnimation: false
        };
        _this.onEnter = _this.onEnter.bind(_assertThisInitialized(_this));
        _this.onEntering = _this.onEntering.bind(_assertThisInitialized(_this));
        _this.onExit = _this.onExit.bind(_assertThisInitialized(_this));
        _this.onExiting = _this.onExiting.bind(_assertThisInitialized(_this));
        _this.onExited = _this.onExited.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = CarouselItem1.prototype;
    _proto.onEnter = function onEnter(node, isAppearing) {
        this.setState({
            startAnimation: false
        });
        this.props.onEnter(node, isAppearing);
    };
    _proto.onEntering = function onEntering(node, isAppearing) {
        // getting this variable triggers a reflow
        var offsetHeight = node.offsetHeight;
        this.setState({
            startAnimation: true
        });
        this.props.onEntering(node, isAppearing);
        return offsetHeight;
    };
    _proto.onExit = function onExit(node) {
        this.setState({
            startAnimation: false
        });
        this.props.onExit(node);
    };
    _proto.onExiting = function onExiting(node) {
        this.setState({
            startAnimation: true
        });
        node.dispatchEvent(new CustomEvent('slide.bs.carousel'));
        this.props.onExiting(node);
    };
    _proto.onExited = function onExited(node) {
        node.dispatchEvent(new CustomEvent('slid.bs.carousel'));
        this.props.onExited(node);
    };
    _proto.render = function render() {
        var _this2 = this;
        var _this$props = this.props, isIn = _this$props["in"], children = _this$props.children, cssModule = _this$props.cssModule, slide = _this$props.slide, Tag = _this$props.tag, className = _this$props.className, transitionProps = _objectWithoutPropertiesLoose(_this$props, _excluded$E);
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.Transition, _extends({
        }, transitionProps, {
            enter: slide,
            exit: slide,
            "in": isIn,
            onEnter: this.onEnter,
            onEntering: this.onEntering,
            onExit: this.onExit,
            onExiting: this.onExiting,
            onExited: this.onExited
        }), function(status) {
            var direction = _this2.context.direction;
            var isActive = status === TransitionStatuses.ENTERED || status === TransitionStatuses.EXITING;
            var directionClassName = (status === TransitionStatuses.ENTERING || status === TransitionStatuses.EXITING) && _this2.state.startAnimation && (direction === 'end' ? 'carousel-item-start' : 'carousel-item-end');
            var orderClassName = status === TransitionStatuses.ENTERING && (direction === 'end' ? 'carousel-item-next' : 'carousel-item-prev');
            var itemClasses = mapToCssModules(_classnamesDefault.default(className, 'carousel-item', isActive && 'active', directionClassName, orderClassName), cssModule);
            return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, {
                className: itemClasses
            }, children));
        }));
    };
    return CarouselItem1;
}(_reactDefault.default.Component);
CarouselItem.propTypes = _objectSpread2(_objectSpread2({
}, _reactTransitionGroup.Transition.propTypes), {
}, {
    tag: tagPropType,
    "in": _propTypesDefault.default.bool,
    cssModule: _propTypesDefault.default.object,
    children: _propTypesDefault.default.node,
    slide: _propTypesDefault.default.bool,
    className: _propTypesDefault.default.string
});
CarouselItem.defaultProps = _objectSpread2(_objectSpread2({
}, _reactTransitionGroup.Transition.defaultProps), {
}, {
    tag: 'div',
    timeout: TransitionTimeouts.Carousel,
    slide: true
});
CarouselItem.contextTypes = {
    direction: _propTypesDefault.default.string
};
var CarouselItem$1 = CarouselItem;
/**
 * CarouselContext
 * {
 *  direction: PropTypes.oneOf(['start', 'end']).isRequired,
 * }
 */ var CarouselContext = _reactDefault.default.createContext({
});
var SWIPE_THRESHOLD = 40;
var Carousel = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(Carousel1, _React$Component);
    function Carousel1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this.handleKeyPress = _this.handleKeyPress.bind(_assertThisInitialized(_this));
        _this.renderItems = _this.renderItems.bind(_assertThisInitialized(_this));
        _this.hoverStart = _this.hoverStart.bind(_assertThisInitialized(_this));
        _this.hoverEnd = _this.hoverEnd.bind(_assertThisInitialized(_this));
        _this.handleTouchStart = _this.handleTouchStart.bind(_assertThisInitialized(_this));
        _this.handleTouchEnd = _this.handleTouchEnd.bind(_assertThisInitialized(_this));
        _this.touchStartX = 0;
        _this.touchStartY = 0;
        _this.state = {
            activeIndex: _this.props.activeIndex,
            direction: 'end',
            indicatorClicked: false
        };
        return _this;
    }
    var _proto = Carousel1.prototype;
    _proto.getContextValue = function getContextValue() {
        return {
            direction: this.state.direction
        };
    };
    _proto.componentDidMount = function componentDidMount() {
        // Set up the cycle
        if (this.props.ride === 'carousel') this.setInterval();
         // TODO: move this to the specific carousel like bootstrap. Currently it will trigger ALL carousels on the page.
        document.addEventListener('keyup', this.handleKeyPress);
    };
    Carousel1.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var newState = null;
        var activeIndex = prevState.activeIndex, direction = prevState.direction, indicatorClicked = prevState.indicatorClicked;
        if (nextProps.activeIndex !== activeIndex) {
            // Calculate the direction to turn
            if (nextProps.activeIndex === activeIndex + 1) direction = 'end';
            else if (nextProps.activeIndex === activeIndex - 1) direction = 'start';
            else if (nextProps.activeIndex < activeIndex) direction = indicatorClicked ? 'start' : 'end';
            else if (nextProps.activeIndex !== activeIndex) direction = indicatorClicked ? 'end' : 'start';
            newState = {
                activeIndex: nextProps.activeIndex,
                direction: direction,
                indicatorClicked: false
            };
        }
        return newState;
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        if (prevState.activeIndex === this.state.activeIndex) return;
        this.setInterval(this.props);
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.clearInterval();
        document.removeEventListener('keyup', this.handleKeyPress);
    };
    _proto.setInterval = (function(_setInterval) {
        function setInterval() {
            return _setInterval.apply(this, arguments);
        }
        setInterval.toString = function() {
            return _setInterval.toString();
        };
        return setInterval;
    })(function(props) {
        if (props === void 0) props = this.props;
        // make sure not to have multiple intervals going...
        this.clearInterval();
        if (props.interval) this.cycleInterval = setInterval(function() {
            props.next();
        }, parseInt(props.interval, 10));
    });
    _proto.clearInterval = (function(_clearInterval) {
        function clearInterval() {
            return _clearInterval.apply(this, arguments);
        }
        clearInterval.toString = function() {
            return _clearInterval.toString();
        };
        return clearInterval;
    })(function() {
        clearInterval(this.cycleInterval);
    });
    _proto.hoverStart = function hoverStart() {
        if (this.props.pause === 'hover') this.clearInterval();
        if (this.props.mouseEnter) {
            var _this$props;
            (_this$props = this.props).mouseEnter.apply(_this$props, [].slice.call(arguments));
        }
    };
    _proto.hoverEnd = function hoverEnd() {
        if (this.props.pause === 'hover') this.setInterval();
        if (this.props.mouseLeave) {
            var _this$props2;
            (_this$props2 = this.props).mouseLeave.apply(_this$props2, [].slice.call(arguments));
        }
    };
    _proto.handleKeyPress = function handleKeyPress(evt) {
        if (this.props.keyboard) {
            if (evt.keyCode === 37) this.props.previous();
            else if (evt.keyCode === 39) this.props.next();
        }
    };
    _proto.handleTouchStart = function handleTouchStart(e) {
        if (!this.props.enableTouch) return;
        this.touchStartX = e.changedTouches[0].screenX;
        this.touchStartY = e.changedTouches[0].screenY;
    };
    _proto.handleTouchEnd = function handleTouchEnd(e) {
        if (!this.props.enableTouch) return;
        var currentX = e.changedTouches[0].screenX;
        var currentY = e.changedTouches[0].screenY;
        var diffX = Math.abs(this.touchStartX - currentX);
        var diffY = Math.abs(this.touchStartY - currentY); // Don't swipe if Y-movement is bigger than X-movement
        if (diffX < diffY) return;
        if (diffX < SWIPE_THRESHOLD) return;
        if (currentX < this.touchStartX) this.props.next();
        else this.props.previous();
    };
    _proto.renderItems = function renderItems(carouselItems, className) {
        var _this2 = this;
        var slide = this.props.slide;
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: className
        }, carouselItems.map(function(item, index) {
            var isIn = index === _this2.state.activeIndex;
            return _reactDefault.default.cloneElement(item, {
                "in": isIn,
                slide: slide
            });
        })));
    };
    _proto.render = function render() {
        var _this3 = this;
        var _this$props3 = this.props, cssModule = _this$props3.cssModule, slide = _this$props3.slide, className = _this$props3.className, dark = _this$props3.dark, fade = _this$props3.fade;
        var outerClasses = mapToCssModules(_classnamesDefault.default(className, 'carousel', fade, slide && 'slide', dark && 'carousel-dark'), cssModule);
        var innerClasses = mapToCssModules(_classnamesDefault.default('carousel-inner'), cssModule); // filter out booleans, null, or undefined
        var children = this.props.children.filter(function(child) {
            return child !== null && child !== undefined && typeof child !== 'boolean';
        });
        var slidesOnly = children.every(function(child) {
            return child.type === CarouselItem$1;
        }); // Rendering only slides
        if (slidesOnly) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: outerClasses,
            onMouseEnter: this.hoverStart,
            onMouseLeave: this.hoverEnd
        }, /*#__PURE__*/ _reactDefault.default.createElement(CarouselContext.Provider, {
            value: this.getContextValue()
        }, this.renderItems(children, innerClasses))));
         // Rendering slides and controls
        if (children[0] instanceof Array) {
            var _carouselItems = children[0];
            var _controlLeft = children[1];
            var _controlRight = children[2];
            return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: outerClasses,
                onMouseEnter: this.hoverStart,
                onMouseLeave: this.hoverEnd
            }, /*#__PURE__*/ _reactDefault.default.createElement(CarouselContext.Provider, {
                value: this.getContextValue()
            }, this.renderItems(_carouselItems, innerClasses), _controlLeft, _controlRight)));
        } // Rendering indicators, slides and controls
        var indicators = children[0];
        var wrappedOnClick = function wrappedOnClick(e) {
            if (typeof indicators.props.onClickHandler === 'function') _this3.setState({
                indicatorClicked: true
            }, function() {
                return indicators.props.onClickHandler(e);
            });
        };
        var wrappedIndicators = _reactDefault.default.cloneElement(indicators, {
            onClickHandler: wrappedOnClick
        });
        var carouselItems = children[1];
        var controlLeft = children[2];
        var controlRight = children[3];
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: outerClasses,
            onMouseEnter: this.hoverStart,
            onMouseLeave: this.hoverEnd,
            onTouchStart: this.handleTouchStart,
            onTouchEnd: this.handleTouchEnd
        }, /*#__PURE__*/ _reactDefault.default.createElement(CarouselContext.Provider, {
            value: this.getContextValue()
        }, wrappedIndicators, this.renderItems(carouselItems, innerClasses), controlLeft, controlRight)));
    };
    return Carousel1;
}(_reactDefault.default.Component);
Carousel.propTypes = {
    // the current active slide of the carousel
    activeIndex: _propTypesDefault.default.number,
    // a function which should advance the carousel to the next slide (via activeIndex)
    next: _propTypesDefault.default.func.isRequired,
    // a function which should advance the carousel to the previous slide (via activeIndex)
    previous: _propTypesDefault.default.func.isRequired,
    // controls if the left and right arrow keys should control the carousel
    keyboard: _propTypesDefault.default.bool,
    /* If set to "hover", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on
   * mouseleave. If set to false, hovering over the carousel won't pause it. (default: "hover")
   */ pause: _propTypesDefault.default.oneOf([
        'hover',
        false
    ]),
    // Autoplays the carousel after the user manually cycles the first item. If "carousel", autoplays the carousel on load.
    // This is how bootstrap defines it... I would prefer a bool named autoplay or something...
    ride: _propTypesDefault.default.oneOf([
        'carousel'
    ]),
    // the interval at which the carousel automatically cycles (default: 5000)
    // eslint-disable-next-line react/no-unused-prop-types
    interval: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string,
        _propTypesDefault.default.bool
    ]),
    children: _propTypesDefault.default.array,
    // called when the mouse enters the Carousel
    mouseEnter: _propTypesDefault.default.func,
    // called when the mouse exits the Carousel
    mouseLeave: _propTypesDefault.default.func,
    // controls whether the slide animation on the Carousel works or not
    slide: _propTypesDefault.default.bool,
    // make the controls, indicators and captions dark on the Carousel
    dark: _propTypesDefault.default.bool,
    cssModule: _propTypesDefault.default.object,
    className: _propTypesDefault.default.string,
    enableTouch: _propTypesDefault.default.bool
};
Carousel.defaultProps = {
    interval: 5000,
    pause: 'hover',
    keyboard: true,
    slide: true,
    enableTouch: true,
    fade: false
};
Carousel.childContextTypes = {
    direction: _propTypesDefault.default.string
};
var Carousel$1 = Carousel;
var CarouselControl = function CarouselControl(props) {
    var direction = props.direction, onClickHandler = props.onClickHandler, cssModule = props.cssModule, directionText = props.directionText, className = props.className;
    var anchorClasses = mapToCssModules(_classnamesDefault.default(className, "carousel-control-" + direction), cssModule);
    var iconClasses = mapToCssModules(_classnamesDefault.default("carousel-control-" + direction + "-icon"), cssModule);
    var screenReaderClasses = mapToCssModules(_classnamesDefault.default('visually-hidden'), cssModule);
    return(/*#__PURE__*/ // We need to disable this linting rule to use an `<a>` instead of
    // `<button>` because that's what the Bootstrap examples require:
    // https://getbootstrap.com/docs/4.5/components/carousel/#with-controls
    // eslint-disable-next-line jsx-a11y/anchor-is-valid
    _reactDefault.default.createElement("a", {
        className: anchorClasses,
        style: {
            cursor: "pointer"
        },
        role: "button",
        tabIndex: "0",
        onClick: function onClick(e) {
            e.preventDefault();
            onClickHandler();
        }
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: iconClasses,
        "aria-hidden": "true"
    }), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: screenReaderClasses
    }, directionText || direction)));
};
CarouselControl.propTypes = {
    direction: _propTypesDefault.default.oneOf([
        'prev',
        'next'
    ]).isRequired,
    onClickHandler: _propTypesDefault.default.func.isRequired,
    cssModule: _propTypesDefault.default.object,
    directionText: _propTypesDefault.default.string,
    className: _propTypesDefault.default.string
};
var CarouselControl$1 = CarouselControl;
var CarouselIndicators = function CarouselIndicators(props) {
    var items = props.items, activeIndex = props.activeIndex, cssModule = props.cssModule, onClickHandler = props.onClickHandler, className = props.className;
    var listClasses = mapToCssModules(_classnamesDefault.default(className, 'carousel-indicators'), cssModule);
    var indicators = items.map(function(item, idx) {
        var indicatorClasses = mapToCssModules(_classnamesDefault.default({
            active: activeIndex === idx
        }), cssModule);
        return(/*#__PURE__*/ _reactDefault.default.createElement("button", {
            "aria-label": item.caption,
            "data-bs-target": true,
            key: "" + (item.key || Object.values(item).join('')),
            onClick: function onClick(e) {
                e.preventDefault();
                onClickHandler(idx);
            },
            className: indicatorClasses
        }, item.caption));
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: listClasses
    }, indicators));
};
CarouselIndicators.propTypes = {
    items: _propTypesDefault.default.array.isRequired,
    activeIndex: _propTypesDefault.default.number.isRequired,
    cssModule: _propTypesDefault.default.object,
    onClickHandler: _propTypesDefault.default.func.isRequired,
    className: _propTypesDefault.default.string
};
var CarouselIndicators$1 = CarouselIndicators;
var CarouselCaption = function CarouselCaption(props) {
    var captionHeader = props.captionHeader, captionText = props.captionText, cssModule = props.cssModule, className = props.className;
    var classes = mapToCssModules(_classnamesDefault.default(className, 'carousel-caption', 'd-none', 'd-md-block'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: classes
    }, /*#__PURE__*/ _reactDefault.default.createElement("h3", null, captionHeader), /*#__PURE__*/ _reactDefault.default.createElement("p", null, captionText)));
};
CarouselCaption.propTypes = {
    captionHeader: _propTypesDefault.default.node,
    captionText: _propTypesDefault.default.node.isRequired,
    cssModule: _propTypesDefault.default.object,
    className: _propTypesDefault.default.string
};
var CarouselCaption$1 = CarouselCaption;
var _excluded$D = [
    "defaultActiveIndex",
    "autoPlay",
    "indicators",
    "controls",
    "items",
    "goToIndex"
];
var propTypes$J = {
    items: _propTypesDefault.default.array.isRequired,
    indicators: _propTypesDefault.default.bool,
    controls: _propTypesDefault.default.bool,
    autoPlay: _propTypesDefault.default.bool,
    defaultActiveIndex: _propTypesDefault.default.number,
    activeIndex: _propTypesDefault.default.number,
    next: _propTypesDefault.default.func,
    previous: _propTypesDefault.default.func,
    goToIndex: _propTypesDefault.default.func
};
var UncontrolledCarousel = /*#__PURE__*/ function(_Component) {
    _inheritsLoose(UncontrolledCarousel1, _Component);
    function UncontrolledCarousel1(props) {
        var _this;
        _this = _Component.call(this, props) || this;
        _this.animating = false;
        _this.state = {
            activeIndex: props.defaultActiveIndex || 0
        };
        _this.next = _this.next.bind(_assertThisInitialized(_this));
        _this.previous = _this.previous.bind(_assertThisInitialized(_this));
        _this.goToIndex = _this.goToIndex.bind(_assertThisInitialized(_this));
        _this.onExiting = _this.onExiting.bind(_assertThisInitialized(_this));
        _this.onExited = _this.onExited.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = UncontrolledCarousel1.prototype;
    _proto.onExiting = function onExiting() {
        this.animating = true;
    };
    _proto.onExited = function onExited() {
        this.animating = false;
    };
    _proto.next = function next() {
        if (this.animating) return;
        var nextIndex = this.state.activeIndex === this.props.items.length - 1 ? 0 : this.state.activeIndex + 1;
        this.setState({
            activeIndex: nextIndex
        });
    };
    _proto.previous = function previous() {
        if (this.animating) return;
        var nextIndex = this.state.activeIndex === 0 ? this.props.items.length - 1 : this.state.activeIndex - 1;
        this.setState({
            activeIndex: nextIndex
        });
    };
    _proto.goToIndex = function goToIndex(newIndex) {
        if (this.animating) return;
        this.setState({
            activeIndex: newIndex
        });
    };
    _proto.render = function render() {
        var _this2 = this;
        var _this$props = this.props, autoPlay = _this$props.autoPlay, indicators = _this$props.indicators, controls = _this$props.controls, items = _this$props.items, goToIndex = _this$props.goToIndex, props = _objectWithoutPropertiesLoose(_this$props, _excluded$D);
        var activeIndex = this.state.activeIndex;
        var slides = items.map(function(item) {
            var key = item.key || item.src;
            return(/*#__PURE__*/ _reactDefault.default.createElement(CarouselItem$1, {
                onExiting: _this2.onExiting,
                onExited: _this2.onExited,
                key: key
            }, /*#__PURE__*/ _reactDefault.default.createElement("img", {
                className: "d-block w-100",
                src: item.src,
                alt: item.altText
            }), /*#__PURE__*/ _reactDefault.default.createElement(CarouselCaption$1, {
                captionText: item.caption,
                captionHeader: item.header || item.caption
            })));
        });
        return(/*#__PURE__*/ _reactDefault.default.createElement(Carousel$1, _extends({
            activeIndex: activeIndex,
            next: this.next,
            previous: this.previous,
            ride: autoPlay ? 'carousel' : undefined
        }, props), indicators && /*#__PURE__*/ _reactDefault.default.createElement(CarouselIndicators$1, {
            items: items,
            activeIndex: props.activeIndex || activeIndex,
            onClickHandler: goToIndex || this.goToIndex
        }), slides, controls && /*#__PURE__*/ _reactDefault.default.createElement(CarouselControl$1, {
            direction: "prev",
            directionText: "Previous",
            onClickHandler: props.previous || this.previous
        }), controls && /*#__PURE__*/ _reactDefault.default.createElement(CarouselControl$1, {
            direction: "next",
            directionText: "Next",
            onClickHandler: props.next || this.next
        })));
    };
    return UncontrolledCarousel1;
}(_react.Component);
UncontrolledCarousel.propTypes = propTypes$J;
UncontrolledCarousel.defaultProps = {
    controls: true,
    indicators: true,
    autoPlay: true
};
var UncontrolledCarousel$1 = UncontrolledCarousel;
var _excluded$C = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$I = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$I = {
    tag: 'div'
};
var CardSubtitle = function CardSubtitle(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$C);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'card-subtitle'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
CardSubtitle.propTypes = propTypes$I;
CardSubtitle.defaultProps = defaultProps$I;
var CardSubtitle$1 = CardSubtitle;
var _excluded$B = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$H = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$H = {
    tag: 'p'
};
var CardText = function CardText(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$B);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'card-text'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
CardText.propTypes = propTypes$H;
CardText.defaultProps = defaultProps$H;
var CardText$1 = CardText;
var _excluded$A = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$G = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$G = {
    tag: 'div'
};
var CardTitle = function CardTitle(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$A);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'card-title'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
CardTitle.propTypes = propTypes$G;
CardTitle.defaultProps = defaultProps$G;
var CardTitle$1 = CardTitle;
var _excluded$z = [
    "cssModule",
    "children",
    "isOpen",
    "flip",
    "target",
    "offset",
    "fallbackPlacements",
    "placementPrefix",
    "arrowClassName",
    "hideArrow",
    "popperClassName",
    "tag",
    "container",
    "modifiers",
    "strategy",
    "boundariesElement",
    "onClosed",
    "fade",
    "transition",
    "placement"
];
function noop$2() {
}
var propTypes$F = {
    children: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.node,
        _propTypesDefault.default.func
    ]).isRequired,
    popperClassName: _propTypesDefault.default.string,
    placement: _propTypesDefault.default.string,
    placementPrefix: _propTypesDefault.default.string,
    arrowClassName: _propTypesDefault.default.string,
    hideArrow: _propTypesDefault.default.bool,
    tag: tagPropType,
    isOpen: _propTypesDefault.default.bool.isRequired,
    cssModule: _propTypesDefault.default.object,
    offset: _propTypesDefault.default.arrayOf(_propTypesDefault.default.number),
    fallbackPlacements: _propTypesDefault.default.array,
    flip: _propTypesDefault.default.bool,
    container: targetPropType,
    target: targetPropType.isRequired,
    modifiers: _propTypesDefault.default.array,
    strategy: _propTypesDefault.default.string,
    boundariesElement: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.string,
        DOMElement
    ]),
    onClosed: _propTypesDefault.default.func,
    fade: _propTypesDefault.default.bool,
    transition: _propTypesDefault.default.shape(Fade.propTypes)
};
var defaultProps$F = {
    boundariesElement: 'scrollParent',
    placement: 'auto',
    hideArrow: false,
    isOpen: false,
    offset: [
        0,
        0
    ],
    flip: true,
    container: 'body',
    modifiers: [],
    onClosed: noop$2,
    fade: true,
    transition: _objectSpread2({
    }, Fade.defaultProps)
};
var PopperContent = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(PopperContent1, _React$Component);
    function PopperContent1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this.setTargetNode = _this.setTargetNode.bind(_assertThisInitialized(_this));
        _this.getTargetNode = _this.getTargetNode.bind(_assertThisInitialized(_this));
        _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));
        _this.onClosed = _this.onClosed.bind(_assertThisInitialized(_this));
        _this.state = {
            isOpen: props.isOpen
        };
        return _this;
    }
    PopperContent1.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if (props.isOpen && !state.isOpen) return {
            isOpen: props.isOpen
        };
        else return null;
    };
    var _proto = PopperContent1.prototype;
    _proto.componentDidUpdate = function componentDidUpdate() {
        if (this._element && this._element.childNodes && this._element.childNodes[0] && this._element.childNodes[0].focus) this._element.childNodes[0].focus();
    };
    _proto.setTargetNode = function setTargetNode(node) {
        this.targetNode = typeof node === 'string' ? getTarget(node) : node;
    };
    _proto.getTargetNode = function getTargetNode() {
        return this.targetNode;
    };
    _proto.getContainerNode = function getContainerNode() {
        return getTarget(this.props.container);
    };
    _proto.getRef = function getRef(ref) {
        this._element = ref;
    };
    _proto.onClosed = function onClosed() {
        this.props.onClosed();
        this.setState({
            isOpen: false
        });
    };
    _proto.renderChildren = function renderChildren() {
        var _this$props = this.props, cssModule = _this$props.cssModule, children = _this$props.children, isOpen = _this$props.isOpen, flip = _this$props.flip, offset = _this$props.offset, fallbackPlacements = _this$props.fallbackPlacements, placementPrefix = _this$props.placementPrefix, _arrowClassName = _this$props.arrowClassName, hideArrow = _this$props.hideArrow, _popperClassName = _this$props.popperClassName, tag = _this$props.tag, modifiers = _this$props.modifiers, strategy = _this$props.strategy, boundariesElement = _this$props.boundariesElement, fade = _this$props.fade, transition = _this$props.transition, placement = _this$props.placement, attrs = _objectWithoutPropertiesLoose(_this$props, _excluded$z);
        var arrowClassName = mapToCssModules(_classnamesDefault.default('arrow', _arrowClassName), cssModule);
        var popperClassName = mapToCssModules(_classnamesDefault.default(_popperClassName, placementPrefix ? placementPrefix + "-auto" : ''), this.props.cssModule);
        var modifierNames = modifiers.map(function(m) {
            return m.name;
        });
        var baseModifiers = [
            {
                name: 'offset',
                options: {
                    offset: offset
                }
            },
            {
                name: 'flip',
                enabled: flip,
                options: {
                    fallbackPlacements: fallbackPlacements
                }
            },
            {
                name: 'preventOverflow',
                options: {
                    boundary: boundariesElement
                }
            }
        ].filter(function(m) {
            return !modifierNames.includes(m.name);
        });
        var extendedModifiers = [].concat(baseModifiers, modifiers);
        var popperTransition = _objectSpread2(_objectSpread2(_objectSpread2({
        }, Fade.defaultProps), transition), {
        }, {
            baseClass: fade ? transition.baseClass : '',
            timeout: fade ? transition.timeout : 0
        });
        return(/*#__PURE__*/ _reactDefault.default.createElement(Fade, _extends({
        }, popperTransition, attrs, {
            "in": isOpen,
            onExited: this.onClosed,
            tag: tag
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactPopper.Popper, {
            referenceElement: this.targetNode,
            modifiers: extendedModifiers,
            placement: placement,
            strategy: strategy
        }, function(_ref) {
            var ref = _ref.ref, style = _ref.style, popperPlacement = _ref.placement, isReferenceHidden = _ref.isReferenceHidden, arrowProps = _ref.arrowProps, update = _ref.update;
            return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                ref: ref,
                style: style,
                className: popperClassName,
                "data-popper-placement": popperPlacement,
                "data-popper-reference-hidden": isReferenceHidden ? 'true' : undefined
            }, typeof children === 'function' ? children({
                update: update
            }) : children, !hideArrow && /*#__PURE__*/ _reactDefault.default.createElement("span", {
                ref: arrowProps.ref,
                className: arrowClassName,
                style: arrowProps.style
            })));
        })));
    };
    _proto.render = function render() {
        this.setTargetNode(this.props.target);
        if (this.state.isOpen) return this.props.container === 'inline' ? this.renderChildren() : _reactDomDefault.default.createPortal(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            ref: this.getRef
        }, this.renderChildren()), this.getContainerNode());
        return null;
    };
    return PopperContent1;
}(_reactDefault.default.Component);
PopperContent.propTypes = propTypes$F;
PopperContent.defaultProps = defaultProps$F;
var PopperContent$1 = PopperContent;
var PopperTargetHelper = function PopperTargetHelper(props, context) {
    context.popperManager.setTargetNode(getTarget(props.target));
    return null;
};
PopperTargetHelper.contextTypes = {
    popperManager: _propTypesDefault.default.object.isRequired
};
PopperTargetHelper.propTypes = {
    target: targetPropType.isRequired
};
var PopperTargetHelper$1 = PopperTargetHelper;
var propTypes$E = {
    children: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.node,
        _propTypesDefault.default.func
    ]),
    placement: _propTypesDefault.default.oneOf(PopperPlacements),
    target: targetPropType.isRequired,
    container: targetPropType,
    isOpen: _propTypesDefault.default.bool,
    disabled: _propTypesDefault.default.bool,
    hideArrow: _propTypesDefault.default.bool,
    boundariesElement: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.string,
        DOMElement
    ]),
    className: _propTypesDefault.default.string,
    innerClassName: _propTypesDefault.default.string,
    arrowClassName: _propTypesDefault.default.string,
    popperClassName: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    toggle: _propTypesDefault.default.func,
    autohide: _propTypesDefault.default.bool,
    placementPrefix: _propTypesDefault.default.string,
    delay: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.shape({
            show: _propTypesDefault.default.number,
            hide: _propTypesDefault.default.number
        }),
        _propTypesDefault.default.number
    ]),
    modifiers: _propTypesDefault.default.array,
    strategy: _propTypesDefault.default.string,
    offset: _propTypesDefault.default.arrayOf(_propTypesDefault.default.number),
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.func,
        _propTypesDefault.default.string,
        _propTypesDefault.default.object
    ]),
    trigger: _propTypesDefault.default.string,
    fade: _propTypesDefault.default.bool,
    flip: _propTypesDefault.default.bool
};
var DEFAULT_DELAYS = {
    show: 0,
    hide: 50
};
var defaultProps$E = {
    isOpen: false,
    hideArrow: false,
    autohide: false,
    delay: DEFAULT_DELAYS,
    toggle: function toggle() {
    },
    trigger: 'click',
    fade: true
};
function isInDOMSubtree(element, subtreeRoot) {
    return subtreeRoot && (element === subtreeRoot || subtreeRoot.contains(element));
}
function isInDOMSubtrees(element, subtreeRoots) {
    if (subtreeRoots === void 0) subtreeRoots = [];
    return subtreeRoots && subtreeRoots.length && subtreeRoots.filter(function(subTreeRoot) {
        return isInDOMSubtree(element, subTreeRoot);
    })[0];
}
var TooltipPopoverWrapper = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(TooltipPopoverWrapper1, _React$Component);
    function TooltipPopoverWrapper1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this._targets = [];
        _this.currentTargetElement = null;
        _this.addTargetEvents = _this.addTargetEvents.bind(_assertThisInitialized(_this));
        _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));
        _this.removeTargetEvents = _this.removeTargetEvents.bind(_assertThisInitialized(_this));
        _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));
        _this.showWithDelay = _this.showWithDelay.bind(_assertThisInitialized(_this));
        _this.hideWithDelay = _this.hideWithDelay.bind(_assertThisInitialized(_this));
        _this.onMouseOverTooltipContent = _this.onMouseOverTooltipContent.bind(_assertThisInitialized(_this));
        _this.onMouseLeaveTooltipContent = _this.onMouseLeaveTooltipContent.bind(_assertThisInitialized(_this));
        _this.show = _this.show.bind(_assertThisInitialized(_this));
        _this.hide = _this.hide.bind(_assertThisInitialized(_this));
        _this.onEscKeyDown = _this.onEscKeyDown.bind(_assertThisInitialized(_this));
        _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));
        _this.state = {
            isOpen: props.isOpen
        };
        _this._isMounted = false;
        return _this;
    }
    var _proto = TooltipPopoverWrapper1.prototype;
    _proto.componentDidMount = function componentDidMount() {
        this._isMounted = true;
        this.updateTarget();
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this._isMounted = false;
        this.removeTargetEvents();
        this._targets = null;
        this.clearShowTimeout();
        this.clearHideTimeout();
    };
    TooltipPopoverWrapper1.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if (props.isOpen && !state.isOpen) return {
            isOpen: props.isOpen
        };
        else return null;
    };
    _proto.onMouseOverTooltipContent = function onMouseOverTooltipContent() {
        if (this.props.trigger.indexOf('hover') > -1 && !this.props.autohide) {
            if (this._hideTimeout) this.clearHideTimeout();
            if (this.state.isOpen && !this.props.isOpen) this.toggle();
        }
    };
    _proto.onMouseLeaveTooltipContent = function onMouseLeaveTooltipContent(e) {
        if (this.props.trigger.indexOf('hover') > -1 && !this.props.autohide) {
            if (this._showTimeout) this.clearShowTimeout();
            e.persist();
            this._hideTimeout = setTimeout(this.hide.bind(this, e), this.getDelay('hide'));
        }
    };
    _proto.onEscKeyDown = function onEscKeyDown(e) {
        if (e.key === 'Escape') this.hide(e);
    };
    _proto.getRef = function getRef(ref) {
        var innerRef = this.props.innerRef;
        if (innerRef) {
            if (typeof innerRef === 'function') innerRef(ref);
            else if (typeof innerRef === 'object') innerRef.current = ref;
        }
        this._popover = ref;
    };
    _proto.getDelay = function getDelay(key) {
        var delay = this.props.delay;
        if (typeof delay === 'object') return isNaN(delay[key]) ? DEFAULT_DELAYS[key] : delay[key];
        return delay;
    };
    _proto.getCurrentTarget = function getCurrentTarget(target) {
        if (!target) return null;
        var index = this._targets.indexOf(target);
        if (index >= 0) return this._targets[index];
        return this.getCurrentTarget(target.parentElement);
    };
    _proto.show = function show(e) {
        if (!this.props.isOpen) {
            this.clearShowTimeout();
            this.currentTargetElement = e ? e.currentTarget || this.getCurrentTarget(e.target) : null;
            if (e && e.composedPath && typeof e.composedPath === 'function') {
                var path = e.composedPath();
                this.currentTargetElement = path && path[0] || this.currentTargetElement;
            }
            this.toggle(e);
        }
    };
    _proto.showWithDelay = function showWithDelay(e) {
        if (this._hideTimeout) this.clearHideTimeout();
        this._showTimeout = setTimeout(this.show.bind(this, e), this.getDelay('show'));
    };
    _proto.hide = function hide(e) {
        if (this.props.isOpen) {
            this.clearHideTimeout();
            this.currentTargetElement = null;
            this.toggle(e);
        }
    };
    _proto.hideWithDelay = function hideWithDelay(e) {
        if (this._showTimeout) this.clearShowTimeout();
        this._hideTimeout = setTimeout(this.hide.bind(this, e), this.getDelay('hide'));
    };
    _proto.clearShowTimeout = function clearShowTimeout() {
        clearTimeout(this._showTimeout);
        this._showTimeout = undefined;
    };
    _proto.clearHideTimeout = function clearHideTimeout() {
        clearTimeout(this._hideTimeout);
        this._hideTimeout = undefined;
    };
    _proto.handleDocumentClick = function handleDocumentClick(e) {
        var triggers = this.props.trigger.split(' ');
        if (triggers.indexOf('legacy') > -1 && (this.props.isOpen || isInDOMSubtrees(e.target, this._targets))) {
            if (this._hideTimeout) this.clearHideTimeout();
            if (this.props.isOpen && !isInDOMSubtree(e.target, this._popover)) this.hideWithDelay(e);
            else if (!this.props.isOpen) this.showWithDelay(e);
        } else if (triggers.indexOf('click') > -1 && isInDOMSubtrees(e.target, this._targets)) {
            if (this._hideTimeout) this.clearHideTimeout();
            if (!this.props.isOpen) this.showWithDelay(e);
            else this.hideWithDelay(e);
        }
    };
    _proto.addEventOnTargets = function addEventOnTargets(type, handler, isBubble) {
        this._targets.forEach(function(target) {
            target.addEventListener(type, handler, isBubble);
        });
    };
    _proto.removeEventOnTargets = function removeEventOnTargets(type, handler, isBubble) {
        this._targets.forEach(function(target) {
            target.removeEventListener(type, handler, isBubble);
        });
    };
    _proto.addTargetEvents = function addTargetEvents() {
        if (this.props.trigger) {
            var triggers = this.props.trigger.split(' ');
            if (triggers.indexOf('manual') === -1) {
                if (triggers.indexOf('click') > -1 || triggers.indexOf('legacy') > -1) document.addEventListener('click', this.handleDocumentClick, true);
                if (this._targets && this._targets.length) {
                    if (triggers.indexOf('hover') > -1) {
                        this.addEventOnTargets('mouseover', this.showWithDelay, true);
                        this.addEventOnTargets('mouseout', this.hideWithDelay, true);
                    }
                    if (triggers.indexOf('focus') > -1) {
                        this.addEventOnTargets('focusin', this.show, true);
                        this.addEventOnTargets('focusout', this.hide, true);
                    }
                    this.addEventOnTargets('keydown', this.onEscKeyDown, true);
                }
            }
        }
    };
    _proto.removeTargetEvents = function removeTargetEvents() {
        if (this._targets) {
            this.removeEventOnTargets('mouseover', this.showWithDelay, true);
            this.removeEventOnTargets('mouseout', this.hideWithDelay, true);
            this.removeEventOnTargets('keydown', this.onEscKeyDown, true);
            this.removeEventOnTargets('focusin', this.show, true);
            this.removeEventOnTargets('focusout', this.hide, true);
        }
        document.removeEventListener('click', this.handleDocumentClick, true);
    };
    _proto.updateTarget = function updateTarget() {
        var newTarget = getTarget(this.props.target, true);
        if (newTarget !== this._targets) {
            this.removeTargetEvents();
            this._targets = newTarget ? Array.from(newTarget) : [];
            this.currentTargetElement = this.currentTargetElement || this._targets[0];
            this.addTargetEvents();
        }
    };
    _proto.toggle = function toggle(e) {
        if (this.props.disabled || !this._isMounted) return e && e.preventDefault();
        return this.props.toggle(e);
    };
    _proto.render = function render() {
        var _this2 = this;
        if (this.props.isOpen) this.updateTarget();
        var target = this.currentTargetElement || this._targets[0];
        if (!target) return null;
        var _this$props = this.props, className = _this$props.className, cssModule = _this$props.cssModule, innerClassName = _this$props.innerClassName, isOpen = _this$props.isOpen, hideArrow = _this$props.hideArrow, boundariesElement = _this$props.boundariesElement, placement = _this$props.placement, placementPrefix = _this$props.placementPrefix, arrowClassName = _this$props.arrowClassName, popperClassName = _this$props.popperClassName, container = _this$props.container, modifiers = _this$props.modifiers, strategy = _this$props.strategy, offset = _this$props.offset, fade = _this$props.fade, flip = _this$props.flip, children = _this$props.children;
        var attributes = omit(this.props, Object.keys(propTypes$E));
        var popperClasses = mapToCssModules(popperClassName, cssModule);
        var classes = mapToCssModules(innerClassName, cssModule);
        return(/*#__PURE__*/ _reactDefault.default.createElement(PopperContent$1, {
            className: className,
            target: target,
            isOpen: isOpen,
            hideArrow: hideArrow,
            boundariesElement: boundariesElement,
            placement: placement,
            placementPrefix: placementPrefix,
            arrowClassName: arrowClassName,
            popperClassName: popperClasses,
            container: container,
            modifiers: modifiers,
            strategy: strategy,
            offset: offset,
            cssModule: cssModule,
            fade: fade,
            flip: flip
        }, function(_ref) {
            var update = _ref.update;
            return(/*#__PURE__*/ _reactDefault.default.createElement("div", _extends({
            }, attributes, {
                ref: _this2.getRef,
                className: classes,
                role: "tooltip",
                onMouseOver: _this2.onMouseOverTooltipContent,
                onMouseLeave: _this2.onMouseLeaveTooltipContent,
                onKeyDown: _this2.onEscKeyDown
            }), typeof children === 'function' ? children({
                update: update
            }) : children));
        }));
    };
    return TooltipPopoverWrapper1;
}(_reactDefault.default.Component);
TooltipPopoverWrapper.propTypes = propTypes$E;
TooltipPopoverWrapper.defaultProps = defaultProps$E;
var TooltipPopoverWrapper$1 = TooltipPopoverWrapper;
var defaultProps$D = {
    placement: 'right',
    placementPrefix: 'bs-popover',
    trigger: 'click',
    offset: [
        0,
        8
    ]
};
var Popover = function Popover(props) {
    var popperClasses = _classnamesDefault.default('popover', 'show', props.popperClassName);
    var classes = _classnamesDefault.default('popover-inner', props.innerClassName);
    return(/*#__PURE__*/ _reactDefault.default.createElement(TooltipPopoverWrapper$1, _extends({
    }, props, {
        arrowClassName: "popover-arrow",
        popperClassName: popperClasses,
        innerClassName: classes
    })));
};
Popover.propTypes = propTypes$E;
Popover.defaultProps = defaultProps$D;
var Popover$1 = Popover;
var omitKeys$4 = [
    'defaultOpen'
];
var UncontrolledPopover = /*#__PURE__*/ function(_Component) {
    _inheritsLoose(UncontrolledPopover1, _Component);
    function UncontrolledPopover1(props) {
        var _this;
        _this = _Component.call(this, props) || this;
        _this.state = {
            isOpen: props.defaultOpen || false
        };
        _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = UncontrolledPopover1.prototype;
    _proto.toggle = function toggle() {
        this.setState({
            isOpen: !this.state.isOpen
        });
    };
    _proto.render = function render() {
        return(/*#__PURE__*/ _reactDefault.default.createElement(Popover$1, _extends({
            isOpen: this.state.isOpen,
            toggle: this.toggle
        }, omit(this.props, omitKeys$4))));
    };
    return UncontrolledPopover1;
}(_react.Component);
UncontrolledPopover.propTypes = _objectSpread2({
    defaultOpen: _propTypesDefault.default.bool
}, Popover$1.propTypes);
var _excluded$y = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$D = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$C = {
    tag: 'h3'
};
var PopoverHeader = function PopoverHeader(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$y);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'popover-header'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
PopoverHeader.propTypes = propTypes$D;
PopoverHeader.defaultProps = defaultProps$C;
var PopoverHeader$1 = PopoverHeader;
var _excluded$x = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$C = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$B = {
    tag: 'div'
};
var PopoverBody = function PopoverBody(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$x);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'popover-body'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
PopoverBody.propTypes = propTypes$C;
PopoverBody.defaultProps = defaultProps$B;
var PopoverBody$1 = PopoverBody;
var _excluded$w = [
    "children",
    "className",
    "barClassName",
    "cssModule",
    "value",
    "min",
    "max",
    "animated",
    "striped",
    "color",
    "bar",
    "multi",
    "tag",
    "style",
    "barStyle",
    "barAriaValueText",
    "barAriaLabelledBy"
];
var propTypes$B = {
    children: _propTypesDefault.default.node,
    bar: _propTypesDefault.default.bool,
    multi: _propTypesDefault.default.bool,
    tag: tagPropType,
    value: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.string,
        _propTypesDefault.default.number
    ]),
    min: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.string,
        _propTypesDefault.default.number
    ]),
    max: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.string,
        _propTypesDefault.default.number
    ]),
    animated: _propTypesDefault.default.bool,
    striped: _propTypesDefault.default.bool,
    color: _propTypesDefault.default.string,
    className: _propTypesDefault.default.string,
    barClassName: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    style: _propTypesDefault.default.object,
    barStyle: _propTypesDefault.default.object,
    barAriaValueText: _propTypesDefault.default.string,
    barAriaLabelledBy: _propTypesDefault.default.string
};
var defaultProps$A = {
    tag: 'div',
    value: 0,
    min: 0,
    max: 100,
    style: {
    },
    barStyle: {
    }
};
var Progress = function Progress(props) {
    var children = props.children, className = props.className, barClassName = props.barClassName, cssModule = props.cssModule, value = props.value, min = props.min, max = props.max, animated = props.animated, striped = props.striped, color = props.color, bar = props.bar, multi = props.multi, Tag = props.tag, style = props.style, barStyle = props.barStyle, barAriaValueText = props.barAriaValueText, barAriaLabelledBy = props.barAriaLabelledBy, attributes = _objectWithoutPropertiesLoose(props, _excluded$w);
    var percent = toNumber(value) / toNumber(max) * 100;
    var progressClasses = mapToCssModules(_classnamesDefault.default(className, 'progress'), cssModule);
    var progressBarClasses = mapToCssModules(_classnamesDefault.default('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? "bg-" + color : null, striped || animated ? 'progress-bar-striped' : null), cssModule);
    var progressBarProps = {
        className: progressBarClasses,
        style: _objectSpread2(_objectSpread2(_objectSpread2({
        }, bar ? style : {
        }), barStyle), {
        }, {
            width: percent + "%"
        }),
        role: 'progressbar',
        'aria-valuenow': value,
        'aria-valuemin': min,
        'aria-valuemax': max,
        'aria-valuetext': barAriaValueText,
        'aria-labelledby': barAriaLabelledBy,
        children: children
    };
    if (bar) return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, progressBarProps)));
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        style: style,
        className: progressClasses
    }), multi ? children : /*#__PURE__*/ _reactDefault.default.createElement("div", progressBarProps)));
};
Progress.propTypes = propTypes$B;
Progress.defaultProps = defaultProps$A;
var Progress$1 = Progress;
var propTypes$A = {
    children: _propTypesDefault.default.node.isRequired,
    node: _propTypesDefault.default.any
};
var Portal = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(Portal1, _React$Component);
    function Portal1() {
        return _React$Component.apply(this, arguments) || this;
    }
    var _proto = Portal1.prototype;
    _proto.componentWillUnmount = function componentWillUnmount() {
        if (this.defaultNode) document.body.removeChild(this.defaultNode);
        this.defaultNode = null;
    };
    _proto.render = function render() {
        if (!canUseDOM) return null;
        if (!this.props.node && !this.defaultNode) {
            this.defaultNode = document.createElement('div');
            document.body.appendChild(this.defaultNode);
        }
        return _reactDomDefault.default.createPortal(this.props.children, this.props.node || this.defaultNode);
    };
    return Portal1;
}(_reactDefault.default.Component);
Portal.propTypes = propTypes$A;
var Portal$1 = Portal;
function noop$1() {
}
var FadePropTypes$1 = _propTypesDefault.default.shape(Fade.propTypes);
var propTypes$z = {
    isOpen: _propTypesDefault.default.bool,
    autoFocus: _propTypesDefault.default.bool,
    centered: _propTypesDefault.default.bool,
    fullscreen: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.bool,
        _propTypesDefault.default.oneOf([
            'sm',
            'md',
            'lg',
            'xl'
        ])
    ]),
    scrollable: _propTypesDefault.default.bool,
    size: _propTypesDefault.default.string,
    toggle: _propTypesDefault.default.func,
    keyboard: _propTypesDefault.default.bool,
    role: _propTypesDefault.default.string,
    labelledBy: _propTypesDefault.default.string,
    backdrop: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.bool,
        _propTypesDefault.default.oneOf([
            'static'
        ])
    ]),
    onEnter: _propTypesDefault.default.func,
    onExit: _propTypesDefault.default.func,
    onOpened: _propTypesDefault.default.func,
    onClosed: _propTypesDefault.default.func,
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    wrapClassName: _propTypesDefault.default.string,
    modalClassName: _propTypesDefault.default.string,
    backdropClassName: _propTypesDefault.default.string,
    contentClassName: _propTypesDefault.default.string,
    external: _propTypesDefault.default.node,
    fade: _propTypesDefault.default.bool,
    cssModule: _propTypesDefault.default.object,
    zIndex: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    backdropTransition: FadePropTypes$1,
    modalTransition: FadePropTypes$1,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ]),
    unmountOnClose: _propTypesDefault.default.bool,
    returnFocusAfterClose: _propTypesDefault.default.bool,
    container: targetPropType,
    trapFocus: _propTypesDefault.default.bool
};
var propsToOmit$1 = Object.keys(propTypes$z);
var defaultProps$z = {
    isOpen: false,
    autoFocus: true,
    centered: false,
    scrollable: false,
    role: 'dialog',
    backdrop: true,
    keyboard: true,
    zIndex: 1050,
    fade: true,
    onOpened: noop$1,
    onClosed: noop$1,
    modalTransition: {
        timeout: TransitionTimeouts.Modal
    },
    backdropTransition: {
        mountOnEnter: true,
        timeout: TransitionTimeouts.Fade // uses standard fade transition
    },
    unmountOnClose: true,
    returnFocusAfterClose: true,
    container: 'body',
    trapFocus: false
};
var Modal = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(Modal1, _React$Component);
    function Modal1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this._element = null;
        _this._originalBodyPadding = null;
        _this.getFocusableChildren = _this.getFocusableChildren.bind(_assertThisInitialized(_this));
        _this.handleBackdropClick = _this.handleBackdropClick.bind(_assertThisInitialized(_this));
        _this.handleBackdropMouseDown = _this.handleBackdropMouseDown.bind(_assertThisInitialized(_this));
        _this.handleEscape = _this.handleEscape.bind(_assertThisInitialized(_this));
        _this.handleStaticBackdropAnimation = _this.handleStaticBackdropAnimation.bind(_assertThisInitialized(_this));
        _this.handleTab = _this.handleTab.bind(_assertThisInitialized(_this));
        _this.onOpened = _this.onOpened.bind(_assertThisInitialized(_this));
        _this.onClosed = _this.onClosed.bind(_assertThisInitialized(_this));
        _this.manageFocusAfterClose = _this.manageFocusAfterClose.bind(_assertThisInitialized(_this));
        _this.clearBackdropAnimationTimeout = _this.clearBackdropAnimationTimeout.bind(_assertThisInitialized(_this));
        _this.trapFocus = _this.trapFocus.bind(_assertThisInitialized(_this));
        _this.state = {
            isOpen: false,
            showStaticBackdropAnimation: false
        };
        return _this;
    }
    var _proto = Modal1.prototype;
    _proto.componentDidMount = function componentDidMount() {
        var _this$props = this.props, isOpen = _this$props.isOpen, autoFocus = _this$props.autoFocus, onEnter = _this$props.onEnter;
        if (isOpen) {
            this.init();
            this.setState({
                isOpen: true
            });
            if (autoFocus) this.setFocus();
        }
        if (onEnter) onEnter();
         // traps focus inside the Modal, even if the browser address bar is focused
        document.addEventListener('focus', this.trapFocus, true);
        this._isMounted = true;
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        if (this.props.isOpen && !prevProps.isOpen) {
            this.init();
            this.setState({
                isOpen: true
            }); // let render() renders Modal Dialog first
            return;
        } // now Modal Dialog is rendered and we can refer this._element and this._dialog
        if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) this.setFocus();
        if (this._element && prevProps.zIndex !== this.props.zIndex) this._element.style.zIndex = this.props.zIndex;
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.clearBackdropAnimationTimeout();
        if (this.props.onExit) this.props.onExit();
        if (this._element) {
            this.destroy();
            if (this.props.isOpen || this.state.isOpen) this.close();
        }
        document.removeEventListener('focus', this.trapFocus, true);
        this._isMounted = false;
    };
    _proto.trapFocus = function trapFocus(ev) {
        if (!this.props.trapFocus) return;
        if (!this._element) return;
        if (this._dialog && this._dialog.parentNode === ev.target) return;
        if (this.modalIndex < Modal1.openCount - 1) return;
        var children = this.getFocusableChildren();
        for(var i = 0; i < children.length; i++){
            // focus is already inside the Modal
            if (children[i] === ev.target) return;
        }
        if (children.length > 0) {
            // otherwise focus the first focusable element in the Modal
            ev.preventDefault();
            ev.stopPropagation();
            children[0].focus();
        }
    };
    _proto.onOpened = function onOpened(node, isAppearing) {
        this.props.onOpened();
        (this.props.modalTransition.onEntered || noop$1)(node, isAppearing);
    };
    _proto.onClosed = function onClosed(node) {
        var unmountOnClose = this.props.unmountOnClose; // so all methods get called before it is unmounted
        this.props.onClosed();
        (this.props.modalTransition.onExited || noop$1)(node);
        if (unmountOnClose) this.destroy();
        this.close();
        if (this._isMounted) this.setState({
            isOpen: false
        });
    };
    _proto.setFocus = function setFocus() {
        if (this._dialog && this._dialog.parentNode && typeof this._dialog.parentNode.focus === 'function') this._dialog.parentNode.focus();
    };
    _proto.getFocusableChildren = function getFocusableChildren() {
        return this._element.querySelectorAll(focusableElements.join(', '));
    };
    _proto.getFocusedChild = function getFocusedChild() {
        var currentFocus;
        var focusableChildren = this.getFocusableChildren();
        try {
            currentFocus = document.activeElement;
        } catch (err) {
            currentFocus = focusableChildren[0];
        }
        return currentFocus;
    } // not mouseUp because scrollbar fires it, shouldn't close when user scrolls
    ;
    _proto.handleBackdropClick = function handleBackdropClick(e) {
        if (e.target === this._mouseDownElement) {
            e.stopPropagation();
            var backdrop = this._dialog ? this._dialog.parentNode : null;
            if (backdrop && e.target === backdrop && this.props.backdrop === 'static') this.handleStaticBackdropAnimation();
            if (!this.props.isOpen || this.props.backdrop !== true) return;
            if (backdrop && e.target === backdrop && this.props.toggle) this.props.toggle(e);
        }
    };
    _proto.handleTab = function handleTab(e) {
        if (e.which !== 9) return;
        if (this.modalIndex < Modal1.openCount - 1) return; // last opened modal
        var focusableChildren = this.getFocusableChildren();
        var totalFocusable = focusableChildren.length;
        if (totalFocusable === 0) return;
        var currentFocus = this.getFocusedChild();
        var focusedIndex = 0;
        for(var i = 0; i < totalFocusable; i += 1)if (focusableChildren[i] === currentFocus) {
            focusedIndex = i;
            break;
        }
        if (e.shiftKey && focusedIndex === 0) {
            e.preventDefault();
            focusableChildren[totalFocusable - 1].focus();
        } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {
            e.preventDefault();
            focusableChildren[0].focus();
        }
    };
    _proto.handleBackdropMouseDown = function handleBackdropMouseDown(e) {
        this._mouseDownElement = e.target;
    };
    _proto.handleEscape = function handleEscape(e) {
        if (this.props.isOpen && e.keyCode === keyCodes.esc && this.props.toggle) {
            if (this.props.keyboard) {
                e.preventDefault();
                e.stopPropagation();
                this.props.toggle(e);
            } else if (this.props.backdrop === 'static') {
                e.preventDefault();
                e.stopPropagation();
                this.handleStaticBackdropAnimation();
            }
        }
    };
    _proto.handleStaticBackdropAnimation = function handleStaticBackdropAnimation() {
        var _this2 = this;
        this.clearBackdropAnimationTimeout();
        this.setState({
            showStaticBackdropAnimation: true
        });
        this._backdropAnimationTimeout = setTimeout(function() {
            _this2.setState({
                showStaticBackdropAnimation: false
            });
        }, 100);
    };
    _proto.init = function init() {
        try {
            this._triggeringElement = document.activeElement;
        } catch (err) {
            this._triggeringElement = null;
        }
        if (!this._element) {
            this._element = document.createElement('div');
            this._element.setAttribute('tabindex', '-1');
            this._element.style.position = 'relative';
            this._element.style.zIndex = this.props.zIndex;
            this._mountContainer = getTarget(this.props.container);
            this._mountContainer.appendChild(this._element);
        }
        this._originalBodyPadding = getOriginalBodyPadding();
        conditionallyUpdateScrollbar();
        if (Modal1.openCount === 0) document.body.className = _classnamesDefault.default(document.body.className, mapToCssModules('modal-open', this.props.cssModule));
        this.modalIndex = Modal1.openCount;
        Modal1.openCount += 1;
    };
    _proto.destroy = function destroy() {
        if (this._element) {
            this._mountContainer.removeChild(this._element);
            this._element = null;
        }
        this.manageFocusAfterClose();
    };
    _proto.manageFocusAfterClose = function manageFocusAfterClose() {
        if (this._triggeringElement) {
            var returnFocusAfterClose = this.props.returnFocusAfterClose;
            if (this._triggeringElement.focus && returnFocusAfterClose) this._triggeringElement.focus();
            this._triggeringElement = null;
        }
    };
    _proto.close = function close() {
        if (Modal1.openCount <= 1) {
            var modalOpenClassName = mapToCssModules('modal-open', this.props.cssModule); // Use regex to prevent matching `modal-open` as part of a different class, e.g. `my-modal-opened`
            var modalOpenClassNameRegex = new RegExp("(^| )" + modalOpenClassName + "( |$)");
            document.body.className = document.body.className.replace(modalOpenClassNameRegex, ' ').trim();
        }
        this.manageFocusAfterClose();
        Modal1.openCount = Math.max(0, Modal1.openCount - 1);
        setScrollbarWidth(this._originalBodyPadding);
    };
    _proto.renderModalDialog = function renderModalDialog() {
        var _classNames, _this3 = this;
        var attributes = omit(this.props, propsToOmit$1);
        var dialogBaseClass = 'modal-dialog';
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", _extends({
        }, attributes, {
            className: mapToCssModules(_classnamesDefault.default(dialogBaseClass, this.props.className, (_classNames = {
            }, _classNames["modal-" + this.props.size] = this.props.size, _classNames[dialogBaseClass + "-centered"] = this.props.centered, _classNames[dialogBaseClass + "-scrollable"] = this.props.scrollable, _classNames['modal-fullscreen'] = this.props.fullscreen === true, _classNames["modal-fullscreen-" + this.props.fullscreen + "-down"] = typeof this.props.fullscreen === 'string', _classNames)), this.props.cssModule),
            role: "document",
            ref: function ref(c) {
                _this3._dialog = c;
            }
        }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: mapToCssModules(_classnamesDefault.default('modal-content', this.props.contentClassName), this.props.cssModule)
        }, this.props.children)));
    };
    _proto.render = function render() {
        var unmountOnClose = this.props.unmountOnClose;
        if (!!this._element && (this.state.isOpen || !unmountOnClose)) {
            var isModalHidden = !!this._element && !this.state.isOpen && !unmountOnClose;
            this._element.style.display = isModalHidden ? 'none' : 'block';
            var _this$props2 = this.props, wrapClassName = _this$props2.wrapClassName, modalClassName = _this$props2.modalClassName, backdropClassName = _this$props2.backdropClassName, cssModule = _this$props2.cssModule, isOpen = _this$props2.isOpen, backdrop = _this$props2.backdrop, role = _this$props2.role, labelledBy = _this$props2.labelledBy, external = _this$props2.external, innerRef = _this$props2.innerRef;
            var modalAttributes = {
                onClick: this.handleBackdropClick,
                onMouseDown: this.handleBackdropMouseDown,
                onKeyUp: this.handleEscape,
                onKeyDown: this.handleTab,
                style: {
                    display: 'block'
                },
                'aria-labelledby': labelledBy,
                role: role,
                tabIndex: '-1'
            };
            var hasTransition = this.props.fade;
            var modalTransition = _objectSpread2(_objectSpread2(_objectSpread2({
            }, Fade.defaultProps), this.props.modalTransition), {
            }, {
                baseClass: hasTransition ? this.props.modalTransition.baseClass : '',
                timeout: hasTransition ? this.props.modalTransition.timeout : 0
            });
            var backdropTransition = _objectSpread2(_objectSpread2(_objectSpread2({
            }, Fade.defaultProps), this.props.backdropTransition), {
            }, {
                baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',
                timeout: hasTransition ? this.props.backdropTransition.timeout : 0
            });
            var Backdrop = backdrop && (hasTransition ? /*#__PURE__*/ _reactDefault.default.createElement(Fade, _extends({
            }, backdropTransition, {
                "in": isOpen && !!backdrop,
                cssModule: cssModule,
                className: mapToCssModules(_classnamesDefault.default('modal-backdrop', backdropClassName), cssModule)
            })) : /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: mapToCssModules(_classnamesDefault.default('modal-backdrop', 'show', backdropClassName), cssModule)
            }));
            return(/*#__PURE__*/ _reactDefault.default.createElement(Portal$1, {
                node: this._element
            }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: mapToCssModules(wrapClassName)
            }, /*#__PURE__*/ _reactDefault.default.createElement(Fade, _extends({
            }, modalAttributes, modalTransition, {
                "in": isOpen,
                onEntered: this.onOpened,
                onExited: this.onClosed,
                cssModule: cssModule,
                className: mapToCssModules(_classnamesDefault.default('modal', modalClassName, this.state.showStaticBackdropAnimation && 'modal-static'), cssModule),
                innerRef: innerRef
            }), external, this.renderModalDialog()), Backdrop)));
        }
        return null;
    };
    _proto.clearBackdropAnimationTimeout = function clearBackdropAnimationTimeout() {
        if (this._backdropAnimationTimeout) {
            clearTimeout(this._backdropAnimationTimeout);
            this._backdropAnimationTimeout = undefined;
        }
    };
    return Modal1;
}(_reactDefault.default.Component);
Modal.propTypes = propTypes$z;
Modal.defaultProps = defaultProps$z;
Modal.openCount = 0;
var Modal$1 = Modal;
var _excluded$v = [
    "className",
    "cssModule",
    "children",
    "toggle",
    "tag",
    "wrapTag",
    "closeAriaLabel",
    "close"
];
var propTypes$y = {
    tag: tagPropType,
    wrapTag: tagPropType,
    toggle: _propTypesDefault.default.func,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    children: _propTypesDefault.default.node,
    closeAriaLabel: _propTypesDefault.default.string,
    close: _propTypesDefault.default.object
};
var defaultProps$y = {
    tag: 'h5',
    wrapTag: 'div',
    closeAriaLabel: 'Close'
};
var ModalHeader = function ModalHeader(props) {
    var closeButton;
    var className = props.className, cssModule = props.cssModule, children = props.children, toggle = props.toggle, Tag = props.tag, WrapTag = props.wrapTag, closeAriaLabel = props.closeAriaLabel, close = props.close, attributes = _objectWithoutPropertiesLoose(props, _excluded$v);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'modal-header'), cssModule);
    if (!close && toggle) closeButton = /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        onClick: toggle,
        className: mapToCssModules('btn-close', cssModule),
        "aria-label": closeAriaLabel
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement(WrapTag, _extends({
    }, attributes, {
        className: classes
    }), /*#__PURE__*/ _reactDefault.default.createElement(Tag, {
        className: mapToCssModules('modal-title', cssModule)
    }, children), close || closeButton));
};
ModalHeader.propTypes = propTypes$y;
ModalHeader.defaultProps = defaultProps$y;
var ModalHeader$1 = ModalHeader;
var _excluded$u = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$x = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$x = {
    tag: 'div'
};
var ModalBody = function ModalBody(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$u);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'modal-body'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
ModalBody.propTypes = propTypes$x;
ModalBody.defaultProps = defaultProps$x;
var ModalBody$1 = ModalBody;
var _excluded$t = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$w = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$w = {
    tag: 'div'
};
var ModalFooter = function ModalFooter(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$t);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'modal-footer'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
ModalFooter.propTypes = propTypes$w;
ModalFooter.defaultProps = defaultProps$w;
var ModalFooter$1 = ModalFooter;
var defaultProps$v = {
    placement: 'top',
    autohide: true,
    placementPrefix: 'bs-tooltip',
    trigger: 'hover focus'
};
var Tooltip = function Tooltip(props) {
    var popperClasses = _classnamesDefault.default('tooltip', 'show', props.popperClassName);
    var classes = _classnamesDefault.default('tooltip-inner', props.innerClassName);
    return(/*#__PURE__*/ _reactDefault.default.createElement(TooltipPopoverWrapper$1, _extends({
    }, props, {
        arrowClassName: "tooltip-arrow",
        popperClassName: popperClasses,
        innerClassName: classes
    })));
};
Tooltip.propTypes = propTypes$E;
Tooltip.defaultProps = defaultProps$v;
var Tooltip$1 = Tooltip;
var _excluded$s = [
    "className",
    "cssModule",
    "size",
    "bordered",
    "borderless",
    "striped",
    "dark",
    "hover",
    "responsive",
    "tag",
    "responsiveTag",
    "innerRef"
];
var propTypes$v = {
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    size: _propTypesDefault.default.string,
    bordered: _propTypesDefault.default.bool,
    borderless: _propTypesDefault.default.bool,
    striped: _propTypesDefault.default.bool,
    dark: _propTypesDefault.default.bool,
    hover: _propTypesDefault.default.bool,
    responsive: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.bool,
        _propTypesDefault.default.string
    ]),
    tag: tagPropType,
    responsiveTag: tagPropType,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.func,
        _propTypesDefault.default.string,
        _propTypesDefault.default.object
    ])
};
var defaultProps$u = {
    tag: 'table',
    responsiveTag: 'div'
};
var Table = function Table(props) {
    var className = props.className, cssModule = props.cssModule, size = props.size, bordered = props.bordered, borderless = props.borderless, striped = props.striped, dark = props.dark, hover = props.hover, responsive = props.responsive, Tag = props.tag, ResponsiveTag = props.responsiveTag, innerRef = props.innerRef, attributes = _objectWithoutPropertiesLoose(props, _excluded$s);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);
    var table = /*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        ref: innerRef,
        className: classes
    }));
    if (responsive) {
        var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : "table-responsive-" + responsive, cssModule);
        return(/*#__PURE__*/ _reactDefault.default.createElement(ResponsiveTag, {
            className: responsiveClassName
        }, table));
    }
    return table;
};
Table.propTypes = propTypes$v;
Table.defaultProps = defaultProps$u;
var Table$1 = Table;
var _excluded$r = [
    "className",
    "cssModule",
    "tag",
    "flush",
    "horizontal",
    "numbered"
];
var propTypes$u = {
    tag: tagPropType,
    flush: _propTypesDefault.default.bool,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    horizontal: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.bool,
        _propTypesDefault.default.string
    ]),
    numbered: _propTypesDefault.default.bool
};
var defaultProps$t = {
    tag: 'ul',
    horizontal: false,
    numbered: false
};
var getHorizontalClass = function getHorizontalClass(horizontal) {
    if (horizontal === false) return false;
    else if (horizontal === true || horizontal === "xs") return "list-group-horizontal";
    return "list-group-horizontal-" + horizontal;
};
var ListGroup = function ListGroup(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, flush = props.flush, horizontal = props.horizontal, numbered = props.numbered, attributes = _objectWithoutPropertiesLoose(props, _excluded$r);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'list-group', // we only try to apply horizontal classes if flush is false
    flush ? 'list-group-flush' : getHorizontalClass(horizontal), {
        'list-group-numbered': numbered
    }), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
ListGroup.propTypes = propTypes$u;
ListGroup.defaultProps = defaultProps$t;
var ListGroup$1 = ListGroup;
var _excluded$q = [
    "className",
    "cssModule",
    "inline",
    "tag",
    "innerRef"
];
var propTypes$t = {
    children: _propTypesDefault.default.node,
    inline: _propTypesDefault.default.bool,
    tag: tagPropType,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.func,
        _propTypesDefault.default.string
    ]),
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$s = {
    tag: 'form'
};
var Form = /*#__PURE__*/ function(_Component) {
    _inheritsLoose(Form1, _Component);
    function Form1(props) {
        var _this;
        _this = _Component.call(this, props) || this;
        _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));
        _this.submit = _this.submit.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = Form1.prototype;
    _proto.getRef = function getRef(ref) {
        if (this.props.innerRef) this.props.innerRef(ref);
        this.ref = ref;
    };
    _proto.submit = function submit() {
        if (this.ref) this.ref.submit();
    };
    _proto.render = function render() {
        var _this$props = this.props, className = _this$props.className, cssModule = _this$props.cssModule, inline = _this$props.inline, Tag = _this$props.tag, innerRef = _this$props.innerRef, attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$q);
        var classes = mapToCssModules(_classnamesDefault.default(className, inline ? 'form-inline' : false), cssModule);
        return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
        }, attributes, {
            ref: innerRef,
            className: classes
        })));
    };
    return Form1;
}(_react.Component);
Form.propTypes = propTypes$t;
Form.defaultProps = defaultProps$s;
var Form$1 = Form;
var _excluded$p = [
    "className",
    "cssModule",
    "valid",
    "tooltip",
    "tag"
];
var propTypes$s = {
    children: _propTypesDefault.default.node,
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    valid: _propTypesDefault.default.bool,
    tooltip: _propTypesDefault.default.bool
};
var defaultProps$r = {
    tag: 'div',
    valid: undefined
};
var FormFeedback = function FormFeedback(props) {
    var className = props.className, cssModule = props.cssModule, valid = props.valid, tooltip = props.tooltip, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$p);
    var validMode = tooltip ? 'tooltip' : 'feedback';
    var classes = mapToCssModules(_classnamesDefault.default(className, valid ? "valid-" + validMode : "invalid-" + validMode), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
FormFeedback.propTypes = propTypes$s;
FormFeedback.defaultProps = defaultProps$r;
var FormFeedback$1 = FormFeedback;
var _excluded$o = [
    "className",
    "cssModule",
    "row",
    "disabled",
    "check",
    "inline",
    "floating",
    "tag"
];
var propTypes$r = {
    children: _propTypesDefault.default.node,
    row: _propTypesDefault.default.bool,
    check: _propTypesDefault.default.bool,
    "switch": _propTypesDefault.default.bool,
    inline: _propTypesDefault.default.bool,
    floating: _propTypesDefault.default.bool,
    disabled: _propTypesDefault.default.bool,
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$q = {
    tag: 'div'
};
var FormGroup = function FormGroup(props) {
    var className = props.className, cssModule = props.cssModule, row = props.row, disabled = props.disabled, check = props.check, inline = props.inline, floating = props.floating, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$o);
    var formCheck = check || props["switch"];
    var classes = mapToCssModules(_classnamesDefault.default(className, row ? 'row' : false, formCheck ? 'form-check' : 'mb-3', props["switch"] ? 'form-switch' : false, formCheck && inline ? 'form-check-inline' : false, formCheck && disabled ? 'disabled' : false, floating && 'form-floating'), cssModule);
    if (Tag === 'fieldset') attributes.disabled = disabled;
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
FormGroup.propTypes = propTypes$r;
FormGroup.defaultProps = defaultProps$q;
var FormGroup$1 = FormGroup;
var _excluded$n = [
    "className",
    "cssModule",
    "inline",
    "color",
    "tag"
];
var propTypes$q = {
    children: _propTypesDefault.default.node,
    inline: _propTypesDefault.default.bool,
    tag: tagPropType,
    color: _propTypesDefault.default.string,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$p = {
    tag: 'small',
    color: 'muted'
};
var FormText = function FormText(props) {
    var className = props.className, cssModule = props.cssModule, inline = props.inline, color = props.color, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$n);
    var classes = mapToCssModules(_classnamesDefault.default(className, !inline ? 'form-text' : false, color ? "text-" + color : false), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
FormText.propTypes = propTypes$q;
FormText.defaultProps = defaultProps$p;
var FormText$1 = FormText;
var _excluded$m = [
    "className",
    "cssModule",
    "type",
    "bsSize",
    "valid",
    "invalid",
    "tag",
    "addon",
    "plaintext",
    "innerRef"
];
var propTypes$p = {
    children: _propTypesDefault.default.node,
    type: _propTypesDefault.default.string,
    size: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    bsSize: _propTypesDefault.default.string,
    valid: _propTypesDefault.default.bool,
    invalid: _propTypesDefault.default.bool,
    tag: tagPropType,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.func,
        _propTypesDefault.default.string
    ]),
    plaintext: _propTypesDefault.default.bool,
    addon: _propTypesDefault.default.bool,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$o = {
    type: 'text'
};
var Input = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(Input1, _React$Component);
    function Input1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));
        _this.focus = _this.focus.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = Input1.prototype;
    _proto.getRef = function getRef(ref) {
        if (this.props.innerRef) this.props.innerRef(ref);
        this.ref = ref;
    };
    _proto.focus = function focus() {
        if (this.ref) this.ref.focus();
    };
    _proto.render = function render() {
        var _this$props = this.props, className = _this$props.className, cssModule = _this$props.cssModule, type = _this$props.type, bsSize = _this$props.bsSize, valid = _this$props.valid, invalid = _this$props.invalid, tag = _this$props.tag, addon = _this$props.addon, plaintext = _this$props.plaintext, innerRef = _this$props.innerRef, attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$m);
        var checkInput = [
            'switch',
            'radio',
            'checkbox'
        ].indexOf(type) > -1;
        var isNotaNumber = new RegExp('\\D', 'g');
        var textareaInput = type === 'textarea';
        var selectInput = type === 'select';
        var rangeInput = type === 'range';
        var Tag = tag || (selectInput || textareaInput ? type : 'input');
        var formControlClass = 'form-control';
        if (plaintext) {
            formControlClass = formControlClass + "-plaintext";
            Tag = tag || 'input';
        } else if (rangeInput) formControlClass = 'form-range';
        else if (selectInput) formControlClass = "form-select";
        else if (checkInput) {
            if (addon) formControlClass = null;
            else formControlClass = 'form-check-input';
        }
        if (attributes.size && isNotaNumber.test(attributes.size)) {
            warnOnce('Please use the prop "bsSize" instead of the "size" to bootstrap\'s input sizing.');
            bsSize = attributes.size;
            delete attributes.size;
        }
        var classes = mapToCssModules(_classnamesDefault.default(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? selectInput ? "form-select-" + bsSize : "form-control-" + bsSize : false, formControlClass), cssModule);
        if (Tag === 'input' || tag && typeof tag === 'function') attributes.type = type === 'switch' ? 'checkbox' : type;
        if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {
            warnOnce("Input with a type of \"" + type + "\" cannot have children. Please use \"value\"/\"defaultValue\" instead.");
            delete attributes.children;
        }
        return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
        }, attributes, {
            ref: innerRef,
            className: classes,
            "aria-invalid": invalid
        })));
    };
    return Input1;
}(_reactDefault.default.Component);
Input.propTypes = propTypes$p;
Input.defaultProps = defaultProps$o;
var Input$1 = Input;
var _excluded$l = [
    "className",
    "cssModule",
    "tag",
    "type",
    "size"
];
var propTypes$o = {
    tag: tagPropType,
    type: _propTypesDefault.default.bool,
    size: _propTypesDefault.default.string,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$n = {
    tag: 'div'
};
var InputGroup = function InputGroup(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, size = props.size, attributes = _objectWithoutPropertiesLoose(props, _excluded$l);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'input-group', size ? "input-group-" + size : null), cssModule);
    if (props.type === 'dropdown') return(/*#__PURE__*/ _reactDefault.default.createElement(Dropdown$1, _extends({
    }, attributes, {
        className: classes
    })));
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
InputGroup.propTypes = propTypes$o;
InputGroup.defaultProps = defaultProps$n;
var InputGroup$1 = InputGroup;
var _excluded$k = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$n = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$m = {
    tag: 'span'
};
var InputGroupText = function InputGroupText(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$k);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'input-group-text'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
InputGroupText.propTypes = propTypes$n;
InputGroupText.defaultProps = defaultProps$m;
var InputGroupText$1 = InputGroupText;
var _excluded$j = [
    "className",
    "cssModule",
    "hidden",
    "widths",
    "tag",
    "check",
    "size",
    "for"
];
var colWidths = [
    'xs',
    'sm',
    'md',
    'lg',
    'xl',
    'xxl'
];
var stringOrNumberProp = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.number,
    _propTypesDefault.default.string
]);
var columnProps = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.bool,
    _propTypesDefault.default.string,
    _propTypesDefault.default.number,
    _propTypesDefault.default.shape({
        size: stringOrNumberProp,
        order: stringOrNumberProp,
        offset: stringOrNumberProp
    })
]);
var propTypes$m = {
    children: _propTypesDefault.default.node,
    hidden: _propTypesDefault.default.bool,
    check: _propTypesDefault.default.bool,
    size: _propTypesDefault.default.string,
    "for": _propTypesDefault.default.string,
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    xs: columnProps,
    sm: columnProps,
    md: columnProps,
    lg: columnProps,
    xl: columnProps,
    xxl: columnProps,
    widths: _propTypesDefault.default.array
};
var defaultProps$l = {
    tag: 'label',
    widths: colWidths
};
var getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {
    if (colSize === true || colSize === '') return isXs ? 'col' : "col-" + colWidth;
    else if (colSize === 'auto') return isXs ? 'col-auto' : "col-" + colWidth + "-auto";
    return isXs ? "col-" + colSize : "col-" + colWidth + "-" + colSize;
};
var Label = function Label(props) {
    var className = props.className, cssModule = props.cssModule, hidden = props.hidden, widths = props.widths, Tag = props.tag, check = props.check, size = props.size, htmlFor = props["for"], attributes = _objectWithoutPropertiesLoose(props, _excluded$j);
    var colClasses = [];
    widths.forEach(function(colWidth, i) {
        var columnProp = props[colWidth];
        delete attributes[colWidth];
        if (!columnProp && columnProp !== '') return;
        var isXs = !i;
        var colClass;
        if (isObject(columnProp)) {
            var _classNames;
            var colSizeInterfix = isXs ? '-' : "-" + colWidth + "-";
            colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);
            colClasses.push(mapToCssModules(_classnamesDefault.default((_classNames = {
            }, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames["order" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames["offset" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);
        } else {
            colClass = getColumnSizeClass(isXs, colWidth, columnProp);
            colClasses.push(colClass);
        }
    });
    var classes = mapToCssModules(_classnamesDefault.default(className, hidden ? 'visually-hidden' : false, check ? 'form-check-label' : false, size ? "col-form-label-" + size : false, colClasses, colClasses.length ? 'col-form-label' : 'form-label'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
        htmlFor: htmlFor
    }, attributes, {
        className: classes
    })));
};
Label.propTypes = propTypes$m;
Label.defaultProps = defaultProps$l;
var Label$1 = Label;
var _excluded$i = [
    "body",
    "bottom",
    "className",
    "cssModule",
    "heading",
    "left",
    "list",
    "middle",
    "object",
    "right",
    "tag",
    "top"
];
var propTypes$l = {
    body: _propTypesDefault.default.bool,
    bottom: _propTypesDefault.default.bool,
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    heading: _propTypesDefault.default.bool,
    left: _propTypesDefault.default.bool,
    list: _propTypesDefault.default.bool,
    middle: _propTypesDefault.default.bool,
    object: _propTypesDefault.default.bool,
    right: _propTypesDefault.default.bool,
    tag: tagPropType,
    top: _propTypesDefault.default.bool
};
var Media = function Media(props) {
    var body = props.body, bottom = props.bottom, className = props.className, cssModule = props.cssModule, heading = props.heading, left = props.left, list = props.list, middle = props.middle, object = props.object, right = props.right, tag = props.tag, top = props.top, attributes = _objectWithoutPropertiesLoose(props, _excluded$i);
    var defaultTag;
    if (heading) defaultTag = 'h4';
    else if (attributes.href) defaultTag = 'a';
    else if (attributes.src || object) defaultTag = 'img';
    else if (list) defaultTag = 'ul';
    else defaultTag = 'div';
    var Tag = tag || defaultTag;
    var classes = mapToCssModules(_classnamesDefault.default(className, {
        'media-body': body,
        'media-heading': heading,
        'media-left': left,
        'media-right': right,
        'media-top': top,
        'media-bottom': bottom,
        'media-middle': middle,
        'media-object': object,
        'media-list': list,
        media: !body && !heading && !left && !right && !top && !bottom && !middle && !object && !list
    }), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
Media.propTypes = propTypes$l;
var Media$1 = Media;
function noop() {
}
var FadePropTypes = _propTypesDefault.default.shape(Fade.propTypes);
var propTypes$k = {
    autoFocus: _propTypesDefault.default.bool,
    backdrop: _propTypesDefault.default.bool,
    backdropClassName: _propTypesDefault.default.string,
    backdropTransition: FadePropTypes,
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    container: targetPropType,
    cssModule: _propTypesDefault.default.object,
    direction: _propTypesDefault.default.oneOf([
        'start',
        'end',
        'bottom',
        'top',
        'left',
        'right'
    ]),
    fade: _propTypesDefault.default.bool,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ]),
    isOpen: _propTypesDefault.default.bool,
    keyboard: _propTypesDefault.default.bool,
    labelledBy: _propTypesDefault.default.string,
    offcanvasTransition: FadePropTypes,
    onClosed: _propTypesDefault.default.func,
    onEnter: _propTypesDefault.default.func,
    onExit: _propTypesDefault.default.func,
    onOpened: _propTypesDefault.default.func,
    returnFocusAfterClose: _propTypesDefault.default.bool,
    role: _propTypesDefault.default.string,
    scrollable: _propTypesDefault.default.bool,
    toggle: _propTypesDefault.default.func,
    trapFocus: _propTypesDefault.default.bool,
    unmountOnClose: _propTypesDefault.default.bool,
    zIndex: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ])
};
var propsToOmit = Object.keys(propTypes$k);
var defaultProps$k = {
    isOpen: false,
    autoFocus: true,
    direction: 'start',
    scrollable: false,
    role: 'dialog',
    backdrop: true,
    keyboard: true,
    zIndex: 1050,
    fade: true,
    onOpened: noop,
    onClosed: noop,
    offcanvasTransition: {
        timeout: TransitionTimeouts.Offcanvas
    },
    backdropTransition: {
        mountOnEnter: true,
        timeout: TransitionTimeouts.Fade // uses standard fade transition
    },
    unmountOnClose: true,
    returnFocusAfterClose: true,
    container: 'body',
    trapFocus: false
};
var Offcanvas = /*#__PURE__*/ function(_React$Component) {
    _inheritsLoose(Offcanvas1, _React$Component);
    function Offcanvas1(props) {
        var _this;
        _this = _React$Component.call(this, props) || this;
        _this._element = null;
        _this._originalBodyPadding = null;
        _this.getFocusableChildren = _this.getFocusableChildren.bind(_assertThisInitialized(_this));
        _this.handleBackdropClick = _this.handleBackdropClick.bind(_assertThisInitialized(_this));
        _this.handleBackdropMouseDown = _this.handleBackdropMouseDown.bind(_assertThisInitialized(_this));
        _this.handleEscape = _this.handleEscape.bind(_assertThisInitialized(_this));
        _this.handleTab = _this.handleTab.bind(_assertThisInitialized(_this));
        _this.onOpened = _this.onOpened.bind(_assertThisInitialized(_this));
        _this.onClosed = _this.onClosed.bind(_assertThisInitialized(_this));
        _this.manageFocusAfterClose = _this.manageFocusAfterClose.bind(_assertThisInitialized(_this));
        _this.clearBackdropAnimationTimeout = _this.clearBackdropAnimationTimeout.bind(_assertThisInitialized(_this));
        _this.trapFocus = _this.trapFocus.bind(_assertThisInitialized(_this));
        _this.state = {
            isOpen: false
        };
        return _this;
    }
    var _proto = Offcanvas1.prototype;
    _proto.componentDidMount = function componentDidMount() {
        var _this$props = this.props, isOpen = _this$props.isOpen, autoFocus = _this$props.autoFocus, onEnter = _this$props.onEnter;
        if (isOpen) {
            this.init();
            this.setState({
                isOpen: true
            });
            if (autoFocus) this.setFocus();
        }
        if (onEnter) onEnter();
         // traps focus inside the Offcanvas, even if the browser address bar is focused
        document.addEventListener('focus', this.trapFocus, true);
        this._isMounted = true;
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        if (this.props.isOpen && !prevProps.isOpen) {
            this.init();
            this.setState({
                isOpen: true
            });
            return;
        } // now Offcanvas Dialog is rendered and we can refer this._element and this._dialog
        if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) this.setFocus();
        if (this._element && prevProps.zIndex !== this.props.zIndex) this._element.style.zIndex = this.props.zIndex;
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.clearBackdropAnimationTimeout();
        if (this.props.onExit) this.props.onExit();
        if (this._element) {
            this.destroy();
            if (this.props.isOpen || this.state.isOpen) this.close();
        }
        document.removeEventListener('focus', this.trapFocus, true);
        this._isMounted = false;
    };
    _proto.trapFocus = function trapFocus(ev) {
        if (!this.props.trapFocus) return;
        if (!this._element) return;
        if (this._dialog === ev.target) return;
        if (this.offcanvasIndex < Offcanvas1.openCount - 1) return;
        var children = this.getFocusableChildren();
        for(var i = 0; i < children.length; i++){
            // focus is already inside the Offcanvas
            if (children[i] === ev.target) return;
        }
        if (children.length > 0) {
            // otherwise focus the first focusable element in the Offcanvas
            ev.preventDefault();
            ev.stopPropagation();
            children[0].focus();
        }
    };
    _proto.onOpened = function onOpened(node, isAppearing) {
        this.props.onOpened();
        (this.props.offcanvasTransition.onEntered || noop)(node, isAppearing);
    };
    _proto.onClosed = function onClosed(node) {
        var unmountOnClose = this.props.unmountOnClose; // so all methods get called before it is unmounted
        this.props.onClosed();
        (this.props.offcanvasTransition.onExited || noop)(node);
        if (unmountOnClose) this.destroy();
        this.close();
        if (this._isMounted) this.setState({
            isOpen: false
        });
    };
    _proto.setFocus = function setFocus() {
        if (this._dialog && typeof this._dialog.focus === 'function') this._dialog.focus();
    };
    _proto.getFocusableChildren = function getFocusableChildren() {
        return this._element.querySelectorAll(focusableElements.join(', '));
    };
    _proto.getFocusedChild = function getFocusedChild() {
        var currentFocus;
        var focusableChildren = this.getFocusableChildren();
        try {
            currentFocus = document.activeElement;
        } catch (err) {
            currentFocus = focusableChildren[0];
        }
        return currentFocus;
    } // not mouseUp because scrollbar fires it, shouldn't close when user scrolls
    ;
    _proto.handleBackdropClick = function handleBackdropClick(e) {
        if (e.target === this._mouseDownElement) {
            e.stopPropagation();
            var backdrop = this._backdrop;
            if (!this.props.isOpen || this.props.backdrop !== true) return;
            if (backdrop && e.target === backdrop && this.props.toggle) this.props.toggle(e);
        }
    };
    _proto.handleTab = function handleTab(e) {
        if (e.which !== 9) return;
        if (this.offcanvasIndex < Offcanvas1.openCount - 1) return; // last opened offcanvas
        var focusableChildren = this.getFocusableChildren();
        var totalFocusable = focusableChildren.length;
        if (totalFocusable === 0) return;
        var currentFocus = this.getFocusedChild();
        var focusedIndex = 0;
        for(var i = 0; i < totalFocusable; i += 1)if (focusableChildren[i] === currentFocus) {
            focusedIndex = i;
            break;
        }
        if (e.shiftKey && focusedIndex === 0) {
            e.preventDefault();
            focusableChildren[totalFocusable - 1].focus();
        } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {
            e.preventDefault();
            focusableChildren[0].focus();
        }
    };
    _proto.handleBackdropMouseDown = function handleBackdropMouseDown(e) {
        this._mouseDownElement = e.target;
    };
    _proto.handleEscape = function handleEscape(e) {
        if (this.props.isOpen && e.keyCode === keyCodes.esc && this.props.toggle) {
            if (this.props.keyboard) {
                e.preventDefault();
                e.stopPropagation();
                this.props.toggle(e);
            }
        }
    };
    _proto.init = function init() {
        try {
            this._triggeringElement = document.activeElement;
        } catch (err) {
            this._triggeringElement = null;
        }
        if (!this._element) {
            this._element = document.createElement('div');
            this._element.setAttribute('tabindex', '-1');
            this._element.style.position = 'relative';
            this._element.style.zIndex = this.props.zIndex;
            this._mountContainer = getTarget(this.props.container);
            this._mountContainer.appendChild(this._element);
        }
        this._originalBodyPadding = getOriginalBodyPadding();
        conditionallyUpdateScrollbar();
        if (Offcanvas1.openCount === 0 && this.props.backdrop && !this.props.scrollable) document.body.style.overflow = 'hidden';
        this.offcanvasIndex = Offcanvas1.openCount;
        Offcanvas1.openCount += 1;
    };
    _proto.destroy = function destroy() {
        if (this._element) {
            this._mountContainer.removeChild(this._element);
            this._element = null;
        }
        this.manageFocusAfterClose();
    };
    _proto.manageFocusAfterClose = function manageFocusAfterClose() {
        if (this._triggeringElement) {
            var returnFocusAfterClose = this.props.returnFocusAfterClose;
            if (this._triggeringElement.focus && returnFocusAfterClose) this._triggeringElement.focus();
            this._triggeringElement = null;
        }
    };
    _proto.close = function close() {
        this.manageFocusAfterClose();
        Offcanvas1.openCount = Math.max(0, Offcanvas1.openCount - 1);
        document.body.style.overflow = null;
        setScrollbarWidth(this._originalBodyPadding);
    };
    _proto.render = function render() {
        var _this2 = this;
        var _this$props2 = this.props, direction = _this$props2.direction, unmountOnClose = _this$props2.unmountOnClose;
        if (!!this._element && (this.state.isOpen || !unmountOnClose)) {
            var isOffcanvasHidden = !!this._element && !this.state.isOpen && !unmountOnClose;
            this._element.style.display = isOffcanvasHidden ? 'none' : 'block';
            var _this$props3 = this.props, className = _this$props3.className, backdropClassName = _this$props3.backdropClassName, cssModule = _this$props3.cssModule, isOpen = _this$props3.isOpen, backdrop = _this$props3.backdrop, role = _this$props3.role, labelledBy = _this$props3.labelledBy, style = _this$props3.style;
            var offcanvasAttributes = {
                onKeyUp: this.handleEscape,
                onKeyDown: this.handleTab,
                'aria-labelledby': labelledBy,
                role: role,
                tabIndex: '-1'
            };
            var hasTransition = this.props.fade;
            var offcanvasTransition = _objectSpread2(_objectSpread2(_objectSpread2({
            }, Fade.defaultProps), this.props.offcanvasTransition), {
            }, {
                baseClass: hasTransition ? this.props.offcanvasTransition.baseClass : '',
                timeout: hasTransition ? this.props.offcanvasTransition.timeout : 0
            });
            var backdropTransition = _objectSpread2(_objectSpread2(_objectSpread2({
            }, Fade.defaultProps), this.props.backdropTransition), {
            }, {
                baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',
                timeout: hasTransition ? this.props.backdropTransition.timeout : 0
            });
            var Backdrop = backdrop && (hasTransition ? /*#__PURE__*/ _reactDefault.default.createElement(Fade, _extends({
            }, backdropTransition, {
                "in": isOpen && !!backdrop,
                innerRef: function innerRef(c) {
                    _this2._backdrop = c;
                },
                cssModule: cssModule,
                className: mapToCssModules(_classnamesDefault.default('offcanvas-backdrop', backdropClassName), cssModule),
                onClick: this.handleBackdropClick,
                onMouseDown: this.handleBackdropMouseDown
            })) : /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: mapToCssModules(_classnamesDefault.default('offcanvas-backdrop', 'show', backdropClassName), cssModule),
                onClick: this.handleBackdropClick,
                onMouseDown: this.handleBackdropMouseDown
            }));
            var attributes = omit(this.props, propsToOmit);
            return(/*#__PURE__*/ _reactDefault.default.createElement(Portal$1, {
                node: this._element
            }, /*#__PURE__*/ _reactDefault.default.createElement(Fade, _extends({
            }, attributes, offcanvasAttributes, offcanvasTransition, {
                "in": isOpen,
                onEntered: this.onOpened,
                onExited: this.onClosed,
                cssModule: cssModule,
                className: mapToCssModules(_classnamesDefault.default('offcanvas', className, "offcanvas-" + direction), cssModule),
                innerRef: function innerRef(c) {
                    _this2._dialog = c;
                },
                style: _objectSpread2(_objectSpread2({
                }, style), {
                }, {
                    visibility: isOpen ? 'visible' : 'hidden'
                })
            }), this.props.children), Backdrop));
        }
        return null;
    };
    _proto.clearBackdropAnimationTimeout = function clearBackdropAnimationTimeout() {
        if (this._backdropAnimationTimeout) {
            clearTimeout(this._backdropAnimationTimeout);
            this._backdropAnimationTimeout = undefined;
        }
    };
    return Offcanvas1;
}(_reactDefault.default.Component);
Offcanvas.propTypes = propTypes$k;
Offcanvas.defaultProps = defaultProps$k;
Offcanvas.openCount = 0;
var Offcanvas$1 = Offcanvas;
var _excluded$h = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$j = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$j = {
    tag: 'div'
};
var OffcanvasBody = function OffcanvasBody(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$h);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'offcanvas-body'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
OffcanvasBody.propTypes = propTypes$j;
OffcanvasBody.defaultProps = defaultProps$j;
var OffcanvasBody$1 = OffcanvasBody;
var _excluded$g = [
    "children",
    "className",
    "close",
    "closeAriaLabel",
    "cssModule",
    "tag",
    "toggle",
    "wrapTag"
];
var propTypes$i = {
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    close: _propTypesDefault.default.object,
    closeAriaLabel: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    tag: tagPropType,
    toggle: _propTypesDefault.default.func,
    wrapTag: tagPropType
};
var defaultProps$i = {
    closeAriaLabel: 'Close',
    tag: 'h5',
    wrapTag: 'div'
};
var OffcanvasHeader = function OffcanvasHeader(props) {
    var closeButton;
    var children = props.children, className = props.className, close = props.close, closeAriaLabel = props.closeAriaLabel, cssModule = props.cssModule, Tag = props.tag, toggle = props.toggle, WrapTag = props.wrapTag, attributes = _objectWithoutPropertiesLoose(props, _excluded$g);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'offcanvas-header'), cssModule);
    if (!close && toggle) closeButton = /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        onClick: toggle,
        className: mapToCssModules('btn-close', cssModule),
        "aria-label": closeAriaLabel
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement(WrapTag, _extends({
    }, attributes, {
        className: classes
    }), /*#__PURE__*/ _reactDefault.default.createElement(Tag, {
        className: mapToCssModules('offcanvas-title', cssModule)
    }, children), close || closeButton));
};
OffcanvasHeader.propTypes = propTypes$i;
OffcanvasHeader.defaultProps = defaultProps$i;
var OffcanvasHeader$1 = OffcanvasHeader;
var _excluded$f = [
    "className",
    "listClassName",
    "cssModule",
    "size",
    "tag",
    "listTag",
    "aria-label"
];
var propTypes$h = {
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    listClassName: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    size: _propTypesDefault.default.string,
    tag: tagPropType,
    listTag: tagPropType,
    'aria-label': _propTypesDefault.default.string
};
var defaultProps$h = {
    tag: 'nav',
    listTag: 'ul',
    'aria-label': 'pagination'
};
var Pagination = function Pagination(props) {
    var _classNames;
    var className = props.className, listClassName = props.listClassName, cssModule = props.cssModule, size = props.size, Tag = props.tag, ListTag = props.listTag, label = props['aria-label'], attributes = _objectWithoutPropertiesLoose(props, _excluded$f);
    var classes = mapToCssModules(_classnamesDefault.default(className), cssModule);
    var listClasses = mapToCssModules(_classnamesDefault.default(listClassName, 'pagination', (_classNames = {
    }, _classNames["pagination-" + size] = !!size, _classNames)), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, {
        className: classes,
        "aria-label": label
    }, /*#__PURE__*/ _reactDefault.default.createElement(ListTag, _extends({
    }, attributes, {
        className: listClasses
    }))));
};
Pagination.propTypes = propTypes$h;
Pagination.defaultProps = defaultProps$h;
var Pagination$1 = Pagination;
var _excluded$e = [
    "active",
    "className",
    "cssModule",
    "disabled",
    "tag"
];
var propTypes$g = {
    active: _propTypesDefault.default.bool,
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    disabled: _propTypesDefault.default.bool,
    tag: tagPropType
};
var defaultProps$g = {
    tag: 'li'
};
var PaginationItem = function PaginationItem(props) {
    var active = props.active, className = props.className, cssModule = props.cssModule, disabled = props.disabled, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$e);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'page-item', {
        active: active,
        disabled: disabled
    }), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
PaginationItem.propTypes = propTypes$g;
PaginationItem.defaultProps = defaultProps$g;
var PaginationItem$1 = PaginationItem;
var _excluded$d = [
    "className",
    "cssModule",
    "next",
    "previous",
    "first",
    "last",
    "tag"
];
var propTypes$f = {
    'aria-label': _propTypesDefault.default.string,
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    next: _propTypesDefault.default.bool,
    previous: _propTypesDefault.default.bool,
    first: _propTypesDefault.default.bool,
    last: _propTypesDefault.default.bool,
    tag: tagPropType
};
var defaultProps$f = {
    tag: 'a'
};
var PaginationLink = function PaginationLink(props) {
    var className = props.className, cssModule = props.cssModule, next = props.next, previous = props.previous, first = props.first, last = props.last, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$d);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'page-link'), cssModule);
    var defaultAriaLabel;
    if (previous) defaultAriaLabel = 'Previous';
    else if (next) defaultAriaLabel = 'Next';
    else if (first) defaultAriaLabel = 'First';
    else if (last) defaultAriaLabel = 'Last';
    var ariaLabel = props['aria-label'] || defaultAriaLabel;
    var defaultCaret;
    if (previous) defaultCaret = "\u2039";
    else if (next) defaultCaret = "\u203A";
    else if (first) defaultCaret = "\xAB";
    else if (last) defaultCaret = "\xBB";
    var children = props.children;
    if (children && Array.isArray(children) && children.length === 0) children = null;
    if (!attributes.href && Tag === 'a') Tag = 'button';
    if (previous || next || first || last) children = [
        /*#__PURE__*/ _reactDefault.default.createElement("span", {
            "aria-hidden": "true",
            key: "caret"
        }, children || defaultCaret),
        /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: "visually-hidden",
            key: "ariaLabel"
        }, ariaLabel)
    ];
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes,
        "aria-label": ariaLabel
    }), children));
};
PaginationLink.propTypes = propTypes$f;
PaginationLink.defaultProps = defaultProps$f;
var PaginationLink$1 = PaginationLink;
/**
 * TabContext
 * {
 *  activeTabId: PropTypes.any
 * }
 */ var TabContext = _reactDefault.default.createContext({
});
var propTypes$e = {
    tag: tagPropType,
    activeTab: _propTypesDefault.default.any,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$e = {
    tag: 'div'
};
var TabContent = /*#__PURE__*/ function(_Component) {
    _inheritsLoose(TabContent1, _Component);
    TabContent1.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        if (prevState.activeTab !== nextProps.activeTab) return {
            activeTab: nextProps.activeTab
        };
        return null;
    };
    function TabContent1(props) {
        var _this;
        _this = _Component.call(this, props) || this;
        _this.state = {
            activeTab: _this.props.activeTab
        };
        return _this;
    }
    var _proto = TabContent1.prototype;
    _proto.render = function render() {
        var _this$props = this.props, className = _this$props.className, cssModule = _this$props.cssModule, Tag = _this$props.tag;
        var attributes = omit(this.props, Object.keys(propTypes$e));
        var classes = mapToCssModules(_classnamesDefault.default('tab-content', className), cssModule);
        return(/*#__PURE__*/ _reactDefault.default.createElement(TabContext.Provider, {
            value: {
                activeTabId: this.state.activeTab
            }
        }, /*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
        }, attributes, {
            className: classes
        }))));
    };
    return TabContent1;
}(_react.Component);
var TabContent$1 = TabContent;
TabContent.propTypes = propTypes$e;
TabContent.defaultProps = defaultProps$e;
var _excluded$c = [
    "className",
    "cssModule",
    "tabId",
    "tag"
];
var propTypes$d = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    tabId: _propTypesDefault.default.any
};
var defaultProps$d = {
    tag: 'div'
};
function TabPane(props) {
    var className = props.className, cssModule = props.cssModule, tabId = props.tabId, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$c);
    var getClasses = function getClasses(activeTabId) {
        return mapToCssModules(_classnamesDefault.default('tab-pane', className, {
            active: tabId === activeTabId
        }), cssModule);
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement(TabContext.Consumer, null, function(_ref) {
        var activeTabId = _ref.activeTabId;
        return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
        }, attributes, {
            className: getClasses(activeTabId)
        })));
    }));
}
TabPane.propTypes = propTypes$d;
TabPane.defaultProps = defaultProps$d;
var _excluded$b = [
    "className",
    "closeClassName",
    "closeAriaLabel",
    "cssModule",
    "tag",
    "color",
    "isOpen",
    "toggle",
    "children",
    "transition",
    "fade",
    "innerRef"
];
var propTypes$c = {
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    closeClassName: _propTypesDefault.default.string,
    closeAriaLabel: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    color: _propTypesDefault.default.string,
    fade: _propTypesDefault.default.bool,
    isOpen: _propTypesDefault.default.bool,
    toggle: _propTypesDefault.default.func,
    tag: tagPropType,
    transition: _propTypesDefault.default.shape(Fade.propTypes),
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ])
};
var defaultProps$c = {
    color: 'success',
    isOpen: true,
    tag: 'div',
    closeAriaLabel: 'Close',
    fade: true,
    transition: _objectSpread2(_objectSpread2({
    }, Fade.defaultProps), {
    }, {
        unmountOnExit: true
    })
};
function Alert(props) {
    var className = props.className, closeClassName = props.closeClassName, closeAriaLabel = props.closeAriaLabel, cssModule = props.cssModule, Tag = props.tag, color = props.color, isOpen = props.isOpen, toggle = props.toggle, children = props.children, transition = props.transition, fade = props.fade, innerRef = props.innerRef, attributes = _objectWithoutPropertiesLoose(props, _excluded$b);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'alert', "alert-" + color, {
        'alert-dismissible': toggle
    }), cssModule);
    var closeClasses = mapToCssModules(_classnamesDefault.default('btn-close', closeClassName), cssModule);
    var alertTransition = _objectSpread2(_objectSpread2(_objectSpread2({
    }, Fade.defaultProps), transition), {
    }, {
        baseClass: fade ? transition.baseClass : '',
        timeout: fade ? transition.timeout : 0
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement(Fade, _extends({
    }, attributes, alertTransition, {
        tag: Tag,
        className: classes,
        "in": isOpen,
        role: "alert",
        innerRef: innerRef
    }), toggle ? /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        className: closeClasses,
        "aria-label": closeAriaLabel,
        onClick: toggle
    }) : null, children));
}
Alert.propTypes = propTypes$c;
Alert.defaultProps = defaultProps$c;
var _excluded$a = [
    "className",
    "cssModule",
    "tag",
    "isOpen",
    "children",
    "transition",
    "fade",
    "innerRef"
];
var propTypes$b = {
    children: _propTypesDefault.default.node,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    fade: _propTypesDefault.default.bool,
    isOpen: _propTypesDefault.default.bool,
    tag: tagPropType,
    transition: _propTypesDefault.default.shape(Fade.propTypes),
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ])
};
var defaultProps$b = {
    isOpen: true,
    tag: 'div',
    fade: true,
    transition: _objectSpread2(_objectSpread2({
    }, Fade.defaultProps), {
    }, {
        unmountOnExit: true
    })
};
function Toast(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, isOpen = props.isOpen, children = props.children, transition = props.transition, fade = props.fade, innerRef = props.innerRef, attributes = _objectWithoutPropertiesLoose(props, _excluded$a);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'toast'), cssModule);
    var toastTransition = _objectSpread2(_objectSpread2(_objectSpread2({
    }, Fade.defaultProps), transition), {
    }, {
        baseClass: fade ? transition.baseClass : '',
        timeout: fade ? transition.timeout : 0
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement(Fade, _extends({
    }, attributes, toastTransition, {
        tag: Tag,
        className: classes,
        "in": isOpen,
        role: "alert",
        innerRef: innerRef
    }), children));
}
Toast.propTypes = propTypes$b;
Toast.defaultProps = defaultProps$b;
var _excluded$9 = [
    "className",
    "cssModule",
    "innerRef",
    "tag"
];
var propTypes$a = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ])
};
var defaultProps$a = {
    tag: 'div'
};
var ToastBody = function ToastBody(props) {
    var className = props.className, cssModule = props.cssModule, innerRef = props.innerRef, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$9);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'toast-body'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes,
        ref: innerRef
    })));
};
ToastBody.propTypes = propTypes$a;
ToastBody.defaultProps = defaultProps$a;
var ToastBody$1 = ToastBody;
var _excluded$8 = [
    "className",
    "cssModule",
    "children",
    "toggle",
    "tag",
    "wrapTag",
    "closeAriaLabel",
    "close",
    "tagClassName",
    "icon"
];
var propTypes$9 = {
    tag: tagPropType,
    icon: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.string,
        _propTypesDefault.default.node
    ]),
    wrapTag: tagPropType,
    toggle: _propTypesDefault.default.func,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    children: _propTypesDefault.default.node,
    closeAriaLabel: _propTypesDefault.default.string,
    charCode: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.string,
        _propTypesDefault.default.number
    ]),
    close: _propTypesDefault.default.object
};
var defaultProps$9 = {
    tag: 'strong',
    wrapTag: 'div',
    tagClassName: 'me-auto',
    closeAriaLabel: 'Close'
};
var ToastHeader = function ToastHeader(props) {
    var closeButton;
    var icon;
    var className = props.className, cssModule = props.cssModule, children = props.children, toggle = props.toggle, Tag = props.tag, WrapTag = props.wrapTag, closeAriaLabel = props.closeAriaLabel, close = props.close, tagClassName = props.tagClassName, iconProp = props.icon, attributes = _objectWithoutPropertiesLoose(props, _excluded$8);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'toast-header'), cssModule);
    if (!close && toggle) closeButton = /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        onClick: toggle,
        className: mapToCssModules('btn-close', cssModule),
        "aria-label": closeAriaLabel
    });
    if (typeof iconProp === "string") icon = /*#__PURE__*/ _reactDefault.default.createElement("svg", {
        className: mapToCssModules("rounded text-" + iconProp),
        width: "20",
        height: "20",
        xmlns: "http://www.w3.org/2000/svg",
        preserveAspectRatio: "xMidYMid slice",
        focusable: "false",
        role: "img"
    }, /*#__PURE__*/ _reactDefault.default.createElement("rect", {
        fill: "currentColor",
        width: "100%",
        height: "100%"
    }));
    else if (iconProp) icon = iconProp;
    return(/*#__PURE__*/ _reactDefault.default.createElement(WrapTag, _extends({
    }, attributes, {
        className: classes
    }), icon, /*#__PURE__*/ _reactDefault.default.createElement(Tag, {
        className: mapToCssModules(_classnamesDefault.default(tagClassName, {
            "ms-2": icon != null
        }), cssModule)
    }, children), close || closeButton));
};
ToastHeader.propTypes = propTypes$9;
ToastHeader.defaultProps = defaultProps$9;
var ToastHeader$1 = ToastHeader;
var _excluded$7 = [
    "className",
    "cssModule",
    "tag",
    "active",
    "disabled",
    "action",
    "color"
];
var propTypes$8 = {
    tag: tagPropType,
    active: _propTypesDefault.default.bool,
    disabled: _propTypesDefault.default.bool,
    color: _propTypesDefault.default.string,
    action: _propTypesDefault.default.bool,
    className: _propTypesDefault.default.any,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$8 = {
    tag: 'li'
};
var handleDisabledOnClick = function handleDisabledOnClick(e) {
    e.preventDefault();
};
var ListGroupItem = function ListGroupItem(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, active = props.active, disabled = props.disabled, action = props.action, color = props.color, attributes = _objectWithoutPropertiesLoose(props, _excluded$7);
    var classes = mapToCssModules(_classnamesDefault.default(className, active ? 'active' : false, disabled ? 'disabled' : false, action ? 'list-group-item-action' : false, color ? "list-group-item-" + color : false, 'list-group-item'), cssModule); // Prevent click event when disabled.
    if (disabled) attributes.onClick = handleDisabledOnClick;
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
ListGroupItem.propTypes = propTypes$8;
ListGroupItem.defaultProps = defaultProps$8;
var ListGroupItem$1 = ListGroupItem;
var _excluded$6 = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$7 = {
    tag: tagPropType,
    className: _propTypesDefault.default.any,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$7 = {
    tag: 'h5'
};
var ListGroupItemHeading = function ListGroupItemHeading(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$6);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'list-group-item-heading'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
ListGroupItemHeading.propTypes = propTypes$7;
ListGroupItemHeading.defaultProps = defaultProps$7;
var ListGroupItemHeading$1 = ListGroupItemHeading;
var _excluded$5 = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$6 = {
    tag: tagPropType,
    className: _propTypesDefault.default.any,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$6 = {
    tag: 'p'
};
var ListGroupItemText = function ListGroupItemText(props) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$5);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'list-group-item-text'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes
    })));
};
ListGroupItemText.propTypes = propTypes$6;
ListGroupItemText.defaultProps = defaultProps$6;
var ListGroupItemText$1 = ListGroupItemText;
var _excluded$4 = [
    "className",
    "cssModule",
    "tag",
    "type"
];
var propTypes$5 = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    type: _propTypesDefault.default.string
};
var defaultProps$5 = {
    tag: 'ul'
};
var List = _react.forwardRef(function(props, ref) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, type = props.type, attributes = _objectWithoutPropertiesLoose(props, _excluded$4);
    var classes = mapToCssModules(_classnamesDefault.default(className, type ? "list-" + type : false), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes,
        ref: ref
    })));
});
List.name = 'List';
List.propTypes = propTypes$5;
List.defaultProps = defaultProps$5;
var List$1 = List;
var _excluded$3 = [
    "className",
    "cssModule",
    "tag"
];
var propTypes$4 = {
    tag: tagPropType,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object
};
var defaultProps$4 = {
    tag: 'li'
};
var ListInlineItem = _react.forwardRef(function(props, ref) {
    var className = props.className, cssModule = props.cssModule, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$3);
    var classes = mapToCssModules(_classnamesDefault.default(className, 'list-inline-item'), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, attributes, {
        className: classes,
        ref: ref
    })));
});
ListInlineItem.name = 'ListInlineItem';
ListInlineItem.propTypes = propTypes$4;
ListInlineItem.defaultProps = defaultProps$4;
var ListInlineItem$1 = ListInlineItem;
var UncontrolledAlert = /*#__PURE__*/ function(_Component) {
    _inheritsLoose(UncontrolledAlert1, _Component);
    function UncontrolledAlert1(props) {
        var _this;
        _this = _Component.call(this, props) || this;
        _this.state = {
            isOpen: true
        };
        _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = UncontrolledAlert1.prototype;
    _proto.toggle = function toggle() {
        this.setState({
            isOpen: !this.state.isOpen
        });
    };
    _proto.render = function render() {
        return(/*#__PURE__*/ _reactDefault.default.createElement(Alert, _extends({
            isOpen: this.state.isOpen,
            toggle: this.toggle
        }, this.props)));
    };
    return UncontrolledAlert1;
}(_react.Component);
var UncontrolledAlert$1 = UncontrolledAlert;
var omitKeys$3 = [
    'defaultOpen'
];
var UncontrolledButtonDropdown = /*#__PURE__*/ function(_Component) {
    _inheritsLoose(UncontrolledButtonDropdown1, _Component);
    function UncontrolledButtonDropdown1(props) {
        var _this;
        _this = _Component.call(this, props) || this;
        _this.state = {
            isOpen: props.defaultOpen || false
        };
        _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = UncontrolledButtonDropdown1.prototype;
    _proto.toggle = function toggle() {
        this.setState({
            isOpen: !this.state.isOpen
        });
    };
    _proto.render = function render() {
        return(/*#__PURE__*/ _reactDefault.default.createElement(ButtonDropdown$1, _extends({
            isOpen: this.state.isOpen,
            toggle: this.toggle
        }, omit(this.props, omitKeys$3))));
    };
    return UncontrolledButtonDropdown1;
}(_react.Component);
UncontrolledButtonDropdown.propTypes = _objectSpread2({
    defaultOpen: _propTypesDefault.default.bool
}, ButtonDropdown$1.propTypes);
var omitKeys$2 = [
    'toggleEvents',
    'defaultOpen'
];
var propTypes$3 = {
    defaultOpen: _propTypesDefault.default.bool,
    toggler: _propTypesDefault.default.string.isRequired,
    toggleEvents: _propTypesDefault.default.arrayOf(_propTypesDefault.default.string)
};
var defaultProps$3 = {
    toggleEvents: defaultToggleEvents
};
var UncontrolledCollapse = /*#__PURE__*/ function(_Component) {
    _inheritsLoose(UncontrolledCollapse1, _Component);
    function UncontrolledCollapse1(props) {
        var _this;
        _this = _Component.call(this, props) || this;
        _this.togglers = null;
        _this.removeEventListeners = null;
        _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));
        _this.state = {
            isOpen: props.defaultOpen || false
        };
        return _this;
    }
    var _proto = UncontrolledCollapse1.prototype;
    _proto.componentDidMount = function componentDidMount() {
        this.togglers = findDOMElements(this.props.toggler);
        if (this.togglers.length) this.removeEventListeners = addMultipleEventListeners(this.togglers, this.toggle, this.props.toggleEvents);
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        if (this.togglers.length && this.removeEventListeners) this.removeEventListeners();
    };
    _proto.toggle = function toggle(e) {
        this.setState(function(_ref) {
            var isOpen = _ref.isOpen;
            return {
                isOpen: !isOpen
            };
        });
        e.preventDefault();
    };
    _proto.render = function render() {
        return(/*#__PURE__*/ _reactDefault.default.createElement(Collapse$1, _extends({
            isOpen: this.state.isOpen
        }, omit(this.props, omitKeys$2))));
    };
    return UncontrolledCollapse1;
}(_react.Component);
UncontrolledCollapse.propTypes = propTypes$3;
UncontrolledCollapse.defaultProps = defaultProps$3;
var UncontrolledCollapse$1 = UncontrolledCollapse;
var omitKeys$1 = [
    'defaultOpen'
];
var UncontrolledDropdown = /*#__PURE__*/ function(_Component) {
    _inheritsLoose(UncontrolledDropdown1, _Component);
    function UncontrolledDropdown1(props) {
        var _this;
        _this = _Component.call(this, props) || this;
        _this.state = {
            isOpen: props.defaultOpen || false
        };
        _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = UncontrolledDropdown1.prototype;
    _proto.toggle = function toggle(e) {
        var _this2 = this;
        var isOpen = !this.state.isOpen;
        this.setState({
            isOpen: isOpen
        }, function() {
            if (_this2.props.onToggle) _this2.props.onToggle(e, isOpen);
        });
    };
    _proto.render = function render() {
        return(/*#__PURE__*/ _reactDefault.default.createElement(Dropdown$1, _extends({
            isOpen: this.state.isOpen,
            toggle: this.toggle
        }, omit(this.props, omitKeys$1))));
    };
    return UncontrolledDropdown1;
}(_react.Component);
UncontrolledDropdown.propTypes = _objectSpread2({
    defaultOpen: _propTypesDefault.default.bool,
    onToggle: _propTypesDefault.default.func
}, Dropdown$1.propTypes);
var omitKeys = [
    'defaultOpen'
];
var UncontrolledTooltip = /*#__PURE__*/ function(_Component) {
    _inheritsLoose(UncontrolledTooltip1, _Component);
    function UncontrolledTooltip1(props) {
        var _this;
        _this = _Component.call(this, props) || this;
        _this.state = {
            isOpen: props.defaultOpen || false
        };
        _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));
        return _this;
    }
    var _proto = UncontrolledTooltip1.prototype;
    _proto.toggle = function toggle() {
        this.setState({
            isOpen: !this.state.isOpen
        });
    };
    _proto.render = function render() {
        return(/*#__PURE__*/ _reactDefault.default.createElement(Tooltip$1, _extends({
            isOpen: this.state.isOpen,
            toggle: this.toggle
        }, omit(this.props, omitKeys))));
    };
    return UncontrolledTooltip1;
}(_react.Component);
UncontrolledTooltip.propTypes = _objectSpread2({
    defaultOpen: _propTypesDefault.default.bool
}, Tooltip$1.propTypes);
var _excluded$2 = [
    "className",
    "cssModule",
    "type",
    "size",
    "color",
    "children",
    "tag"
];
var propTypes$2 = {
    tag: tagPropType,
    type: _propTypesDefault.default.string,
    size: _propTypesDefault.default.string,
    color: _propTypesDefault.default.string,
    className: _propTypesDefault.default.string,
    cssModule: _propTypesDefault.default.object,
    children: _propTypesDefault.default.string
};
var defaultProps$2 = {
    tag: 'div',
    type: 'border',
    children: 'Loading...'
};
var Spinner = function Spinner(props) {
    var className = props.className, cssModule = props.cssModule, type = props.type, size = props.size, color = props.color, children = props.children, Tag = props.tag, attributes = _objectWithoutPropertiesLoose(props, _excluded$2);
    var classes = mapToCssModules(_classnamesDefault.default(className, size ? "spinner-" + type + "-" + size : false, "spinner-" + type, color ? "text-" + color : false), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
        role: "status"
    }, attributes, {
        className: classes
    }), children && /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: mapToCssModules('visually-hidden', cssModule)
    }, children)));
};
Spinner.propTypes = propTypes$2;
Spinner.defaultProps = defaultProps$2;
var Spinner$1 = Spinner;
var _excluded$1 = [
    "className",
    "cssModule",
    "color",
    "innerRef",
    "tag",
    "animation",
    "size",
    "widths"
];
var propTypes$1 = _objectSpread2(_objectSpread2({
}, Col$1.propTypes), {
}, {
    color: _propTypesDefault.default.string,
    tag: tagPropType,
    animation: _propTypesDefault.default.oneOf([
        'glow',
        'wave'
    ]),
    innerRef: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.object,
        _propTypesDefault.default.func,
        _propTypesDefault.default.string
    ]),
    size: _propTypesDefault.default.oneOf([
        'lg',
        'sm',
        'xs'
    ])
});
var defaultProps$1 = {
    tag: 'span'
};
var Placeholder = function Placeholder(props) {
    var className = props.className, cssModule = props.cssModule, color = props.color, innerRef = props.innerRef, Tag = props.tag, animation = props.animation, size = props.size, widths = props.widths, attributes = _objectWithoutPropertiesLoose(props, _excluded$1);
    var _getColumnClasses = getColumnClasses(attributes, cssModule, widths), modifiedAttributes = _getColumnClasses.attributes, colClasses = _getColumnClasses.colClasses;
    var classes = mapToCssModules(_classnamesDefault.default(className, colClasses, 'placeholder' + (animation ? '-' + animation : ''), size ? 'placeholder-' + size : false, color ? 'bg-' + color : false), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Tag, _extends({
    }, modifiedAttributes, {
        className: classes,
        ref: innerRef
    })));
};
Placeholder.propTypes = propTypes$1;
Placeholder.defaultProps = defaultProps$1;
var Placeholder$1 = Placeholder;
var _excluded = [
    "cssModule",
    "className",
    "tag"
];
var propTypes = {
    size: _propTypesDefault.default.string,
    color: _propTypesDefault.default.string,
    outline: _propTypesDefault.default.bool,
    className: _propTypesDefault.default.string,
    tag: tagPropType
};
var defaultProps = {
    color: 'primary',
    tag: Button$1
};
var PlaceholderButton = function PlaceholderButton(props) {
    var cssModule = props.cssModule, className = props.className, attributes = _objectWithoutPropertiesLoose(props, _excluded);
    var _getColumnClasses = getColumnClasses(attributes, cssModule), modifiedAttributes = _getColumnClasses.attributes, colClasses = _getColumnClasses.colClasses;
    var classes = mapToCssModules(_classnamesDefault.default("placeholder", className, colClasses), cssModule);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Button$1, _extends({
    }, modifiedAttributes, {
        className: classes,
        disabled: true
    })));
};
PlaceholderButton.propTypes = propTypes;
PlaceholderButton.defaultProps = defaultProps;
var PlaceholderButton$1 = PlaceholderButton;
(function() {
    if (typeof window !== 'object' || typeof window.CustomEvent === 'function') return;
    var CustomEvent = function CustomEvent(event, params) {
        params = params || {
            bubbles: false,
            cancelable: false,
            detail: null
        };
        var evt = document.createEvent('CustomEvent');
        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
        return evt;
    };
    window.CustomEvent = CustomEvent;
})();
(function() {
    if (typeof Object.values === 'function') return;
    var values = function values(O) {
        return Object.keys(O).map(function(key) {
            return O[key];
        });
    };
    Object.values = values;
})();
var polyfill = {
    __proto__: null
};

},{"react":"4mchR","prop-types":"2bysO","classnames":"2cVcN","react-popper":"fRIkd","react-dom":"afyCw","react-transition-group":"krQpC","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"2cVcN":[function(require,module,exports) {
(function() {
    var hasOwn = {
    }.hasOwnProperty;
    function classNames() {
        var classes = [];
        for(var i = 0; i < arguments.length; i++){
            var arg = arguments[i];
            if (!arg) continue;
            var argType = typeof arg;
            if (argType === 'string' || argType === 'number') classes.push(arg);
            else if (Array.isArray(arg)) {
                if (arg.length) {
                    var inner = classNames.apply(null, arg);
                    if (inner) classes.push(inner);
                }
            } else if (argType === 'object') {
                if (arg.toString === Object.prototype.toString) {
                    for(var key in arg)if (hasOwn.call(arg, key) && arg[key]) classes.push(key);
                } else classes.push(arg.toString());
            }
        }
        return classes.join(' ');
    }
    if (typeof module !== 'undefined' && module.exports) {
        classNames.default = classNames;
        module.exports = classNames;
    } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) // register as 'classnames', consistent with npm package name
    define('classnames', [], function() {
        return classNames;
    });
    else window.classNames = classNames;
})();

},{}],"fRIkd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Popper", ()=>_popper.Popper
) // Public types
;
parcelHelpers.export(exports, "Manager", ()=>_manager.Manager
);
parcelHelpers.export(exports, "Reference", ()=>_reference.Reference
);
parcelHelpers.export(exports, "usePopper", ()=>_usePopper.usePopper
);
// Public components
var _popper = require("./Popper");
var _manager = require("./Manager");
var _reference = require("./Reference");
var _usePopper = require("./usePopper");

},{"./Popper":"e0Q1q","./Manager":"eWj48","./Reference":"1A6aF","./usePopper":"1Ii2C","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"e0Q1q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Popper", ()=>Popper
);
var _react = require("react");
var _manager = require("./Manager");
var _utils = require("./utils");
var _usePopper = require("./usePopper");
var NOOP = function NOOP() {
    return void 0;
};
var NOOP_PROMISE = function NOOP_PROMISE() {
    return Promise.resolve(null);
};
var EMPTY_MODIFIERS = [];
function Popper(_ref) {
    var _ref$placement = _ref.placement, placement = _ref$placement === void 0 ? 'bottom' : _ref$placement, _ref$strategy = _ref.strategy, strategy = _ref$strategy === void 0 ? 'absolute' : _ref$strategy, _ref$modifiers = _ref.modifiers, modifiers = _ref$modifiers === void 0 ? EMPTY_MODIFIERS : _ref$modifiers, referenceElement = _ref.referenceElement, onFirstUpdate = _ref.onFirstUpdate, innerRef = _ref.innerRef, children = _ref.children;
    var referenceNode = _react.useContext(_manager.ManagerReferenceNodeContext);
    var _React$useState = _react.useState(null), popperElement = _React$useState[0], setPopperElement = _React$useState[1];
    var _React$useState2 = _react.useState(null), arrowElement = _React$useState2[0], setArrowElement = _React$useState2[1];
    _react.useEffect(function() {
        _utils.setRef(innerRef, popperElement);
    }, [
        innerRef,
        popperElement
    ]);
    var options = _react.useMemo(function() {
        return {
            placement: placement,
            strategy: strategy,
            onFirstUpdate: onFirstUpdate,
            modifiers: [].concat(modifiers, [
                {
                    name: 'arrow',
                    enabled: arrowElement != null,
                    options: {
                        element: arrowElement
                    }
                }
            ])
        };
    }, [
        placement,
        strategy,
        onFirstUpdate,
        modifiers,
        arrowElement
    ]);
    var _usePopper1 = _usePopper.usePopper(referenceElement || referenceNode, popperElement, options), state = _usePopper1.state, styles = _usePopper1.styles, forceUpdate = _usePopper1.forceUpdate, update = _usePopper1.update;
    var childrenProps = _react.useMemo(function() {
        return {
            ref: setPopperElement,
            style: styles.popper,
            placement: state ? state.placement : placement,
            hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,
            isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,
            arrowProps: {
                style: styles.arrow,
                ref: setArrowElement
            },
            forceUpdate: forceUpdate || NOOP,
            update: update || NOOP_PROMISE
        };
    }, [
        setPopperElement,
        setArrowElement,
        placement,
        state,
        styles,
        update,
        forceUpdate
    ]);
    return _utils.unwrapArray(children)(childrenProps);
}

},{"react":"4mchR","./Manager":"eWj48","./utils":"lSpfs","./usePopper":"1Ii2C","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"eWj48":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ManagerReferenceNodeContext", ()=>ManagerReferenceNodeContext
);
parcelHelpers.export(exports, "ManagerReferenceNodeSetterContext", ()=>ManagerReferenceNodeSetterContext
);
parcelHelpers.export(exports, "Manager", ()=>Manager
);
var _react = require("react");
var ManagerReferenceNodeContext = _react.createContext();
var ManagerReferenceNodeSetterContext = _react.createContext();
function Manager(_ref) {
    var children = _ref.children;
    var _React$useState = _react.useState(null), referenceNode = _React$useState[0], setReferenceNode = _React$useState[1];
    var hasUnmounted = _react.useRef(false);
    _react.useEffect(function() {
        return function() {
            hasUnmounted.current = true;
        };
    }, []);
    var handleSetReferenceNode = _react.useCallback(function(node) {
        if (!hasUnmounted.current) setReferenceNode(node);
    }, []);
    return(/*#__PURE__*/ _react.createElement(ManagerReferenceNodeContext.Provider, {
        value: referenceNode
    }, /*#__PURE__*/ _react.createElement(ManagerReferenceNodeSetterContext.Provider, {
        value: handleSetReferenceNode
    }, children)));
}

},{"react":"4mchR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"lSpfs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unwrapArray", ()=>unwrapArray
);
parcelHelpers.export(exports, "safeInvoke", ()=>safeInvoke
);
parcelHelpers.export(exports, "setRef", ()=>setRef
);
parcelHelpers.export(exports, "fromEntries", ()=>fromEntries
);
parcelHelpers.export(exports, "useIsomorphicLayoutEffect", ()=>useIsomorphicLayoutEffect
);
var _react = require("react");
var unwrapArray = function unwrapArray(arg) {
    return Array.isArray(arg) ? arg[0] : arg;
};
var safeInvoke = function safeInvoke(fn) {
    if (typeof fn === 'function') {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        return fn.apply(void 0, args);
    }
};
var setRef = function setRef(ref, node) {
    // if its a function call it
    if (typeof ref === 'function') return safeInvoke(ref, node);
    else if (ref != null) ref.current = node;
};
var fromEntries = function fromEntries(entries) {
    return entries.reduce(function(acc, _ref) {
        var key = _ref[0], value = _ref[1];
        acc[key] = value;
        return acc;
    }, {
    });
};
var useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? _react.useLayoutEffect : _react.useEffect;

},{"react":"4mchR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"1Ii2C":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "usePopper", ()=>usePopper
);
var _react = require("react");
var _core = require("@popperjs/core");
var _reactFastCompare = require("react-fast-compare");
var _reactFastCompareDefault = parcelHelpers.interopDefault(_reactFastCompare);
var _utils = require("./utils");
var EMPTY_MODIFIERS = [];
var usePopper = function usePopper(referenceElement, popperElement, options) {
    if (options === void 0) options = {
    };
    var prevOptions = _react.useRef(null);
    var optionsWithDefaults = {
        onFirstUpdate: options.onFirstUpdate,
        placement: options.placement || 'bottom',
        strategy: options.strategy || 'absolute',
        modifiers: options.modifiers || EMPTY_MODIFIERS
    };
    var _React$useState = _react.useState({
        styles: {
            popper: {
                position: optionsWithDefaults.strategy,
                left: '0',
                top: '0'
            },
            arrow: {
                position: 'absolute'
            }
        },
        attributes: {
        }
    }), state1 = _React$useState[0], setState = _React$useState[1];
    var updateStateModifier = _react.useMemo(function() {
        return {
            name: 'updateState',
            enabled: true,
            phase: 'write',
            fn: function fn(_ref) {
                var state = _ref.state;
                var elements = Object.keys(state.elements);
                setState({
                    styles: _utils.fromEntries(elements.map(function(element) {
                        return [
                            element,
                            state.styles[element] || {
                            }
                        ];
                    })),
                    attributes: _utils.fromEntries(elements.map(function(element) {
                        return [
                            element,
                            state.attributes[element]
                        ];
                    }))
                });
            },
            requires: [
                'computeStyles'
            ]
        };
    }, []);
    var popperOptions = _react.useMemo(function() {
        var newOptions = {
            onFirstUpdate: optionsWithDefaults.onFirstUpdate,
            placement: optionsWithDefaults.placement,
            strategy: optionsWithDefaults.strategy,
            modifiers: [].concat(optionsWithDefaults.modifiers, [
                updateStateModifier,
                {
                    name: 'applyStyles',
                    enabled: false
                }
            ])
        };
        if (_reactFastCompareDefault.default(prevOptions.current, newOptions)) return prevOptions.current || newOptions;
        else {
            prevOptions.current = newOptions;
            return newOptions;
        }
    }, [
        optionsWithDefaults.onFirstUpdate,
        optionsWithDefaults.placement,
        optionsWithDefaults.strategy,
        optionsWithDefaults.modifiers,
        updateStateModifier
    ]);
    var popperInstanceRef = _react.useRef();
    _utils.useIsomorphicLayoutEffect(function() {
        if (popperInstanceRef.current) popperInstanceRef.current.setOptions(popperOptions);
    }, [
        popperOptions
    ]);
    _utils.useIsomorphicLayoutEffect(function() {
        if (referenceElement == null || popperElement == null) return;
        var createPopper = options.createPopper || _core.createPopper;
        var popperInstance = createPopper(referenceElement, popperElement, popperOptions);
        popperInstanceRef.current = popperInstance;
        return function() {
            popperInstance.destroy();
            popperInstanceRef.current = null;
        };
    }, [
        referenceElement,
        popperElement,
        options.createPopper
    ]);
    return {
        state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
        styles: state1.styles,
        attributes: state1.attributes,
        update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
        forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
    };
};

},{"react":"4mchR","@popperjs/core":"9BiQQ","react-fast-compare":"xuHD7","./utils":"lSpfs","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"9BiQQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "popperGenerator", ()=>_createPopperJs.popperGenerator
) // eslint-disable-next-line import/no-unused-modules
;
parcelHelpers.export(exports, "detectOverflow", ()=>_createPopperJs.detectOverflow
);
parcelHelpers.export(exports, "createPopperBase", ()=>_createPopperJs.createPopper
);
parcelHelpers.export(exports, "createPopper", ()=>_popperJs.createPopper
) // eslint-disable-next-line import/no-unused-modules
;
parcelHelpers.export(exports, "createPopperLite", ()=>_popperLiteJs.createPopper
);
var _enumsJs = require("./enums.js");
parcelHelpers.exportAll(_enumsJs, exports);
var _indexJs = require("./modifiers/index.js"); // eslint-disable-next-line import/no-unused-modules
parcelHelpers.exportAll(_indexJs, exports);
var _createPopperJs = require("./createPopper.js");
var _popperJs = require("./popper.js");
var _popperLiteJs = require("./popper-lite.js");

},{"./enums.js":"jZp3w","./modifiers/index.js":"i6nAS","./createPopper.js":"6w8cU","./popper.js":"4kzpa","./popper-lite.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"jZp3w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "top", ()=>top
);
parcelHelpers.export(exports, "bottom", ()=>bottom
);
parcelHelpers.export(exports, "right", ()=>right
);
parcelHelpers.export(exports, "left", ()=>left
);
parcelHelpers.export(exports, "auto", ()=>auto
);
parcelHelpers.export(exports, "basePlacements", ()=>basePlacements
);
parcelHelpers.export(exports, "start", ()=>start
);
parcelHelpers.export(exports, "end", ()=>end
);
parcelHelpers.export(exports, "clippingParents", ()=>clippingParents
);
parcelHelpers.export(exports, "viewport", ()=>viewport
);
parcelHelpers.export(exports, "popper", ()=>popper
);
parcelHelpers.export(exports, "reference", ()=>reference
);
parcelHelpers.export(exports, "variationPlacements", ()=>variationPlacements
);
parcelHelpers.export(exports, "placements", ()=>placements
);
parcelHelpers.export(exports, "beforeRead", ()=>beforeRead
);
parcelHelpers.export(exports, "read", ()=>read
);
parcelHelpers.export(exports, "afterRead", ()=>afterRead
);
parcelHelpers.export(exports, "beforeMain", ()=>beforeMain
);
parcelHelpers.export(exports, "main", ()=>main
);
parcelHelpers.export(exports, "afterMain", ()=>afterMain
);
parcelHelpers.export(exports, "beforeWrite", ()=>beforeWrite
);
parcelHelpers.export(exports, "write", ()=>write
);
parcelHelpers.export(exports, "afterWrite", ()=>afterWrite
);
parcelHelpers.export(exports, "modifierPhases", ()=>modifierPhases
);
var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [
    top,
    bottom,
    right,
    left
];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/ basePlacements.reduce(function(acc, placement) {
    return acc.concat([
        placement + "-" + start,
        placement + "-" + end
    ]);
}, []);
var placements = /*#__PURE__*/ [].concat(basePlacements, [
    auto
]).reduce(function(acc, placement) {
    return acc.concat([
        placement,
        placement + "-" + start,
        placement + "-" + end
    ]);
}, []); // modifiers that need to read the DOM
var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers
var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)
var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [
    beforeRead,
    read,
    afterRead,
    beforeMain,
    main,
    afterMain,
    beforeWrite,
    write,
    afterWrite
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"i6nAS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "applyStyles", ()=>_applyStylesJsDefault.default
);
parcelHelpers.export(exports, "arrow", ()=>_arrowJsDefault.default
);
parcelHelpers.export(exports, "computeStyles", ()=>_computeStylesJsDefault.default
);
parcelHelpers.export(exports, "eventListeners", ()=>_eventListenersJsDefault.default
);
parcelHelpers.export(exports, "flip", ()=>_flipJsDefault.default
);
parcelHelpers.export(exports, "hide", ()=>_hideJsDefault.default
);
parcelHelpers.export(exports, "offset", ()=>_offsetJsDefault.default
);
parcelHelpers.export(exports, "popperOffsets", ()=>_popperOffsetsJsDefault.default
);
parcelHelpers.export(exports, "preventOverflow", ()=>_preventOverflowJsDefault.default
);
var _applyStylesJs = require("./applyStyles.js");
var _applyStylesJsDefault = parcelHelpers.interopDefault(_applyStylesJs);
var _arrowJs = require("./arrow.js");
var _arrowJsDefault = parcelHelpers.interopDefault(_arrowJs);
var _computeStylesJs = require("./computeStyles.js");
var _computeStylesJsDefault = parcelHelpers.interopDefault(_computeStylesJs);
var _eventListenersJs = require("./eventListeners.js");
var _eventListenersJsDefault = parcelHelpers.interopDefault(_eventListenersJs);
var _flipJs = require("./flip.js");
var _flipJsDefault = parcelHelpers.interopDefault(_flipJs);
var _hideJs = require("./hide.js");
var _hideJsDefault = parcelHelpers.interopDefault(_hideJs);
var _offsetJs = require("./offset.js");
var _offsetJsDefault = parcelHelpers.interopDefault(_offsetJs);
var _popperOffsetsJs = require("./popperOffsets.js");
var _popperOffsetsJsDefault = parcelHelpers.interopDefault(_popperOffsetsJs);
var _preventOverflowJs = require("./preventOverflow.js");
var _preventOverflowJsDefault = parcelHelpers.interopDefault(_preventOverflowJs);

},{"./applyStyles.js":"fz4DR","./arrow.js":"aFbbE","./computeStyles.js":"jb5QZ","./eventListeners.js":"6Xsje","./flip.js":"6hQNA","./hide.js":"1tv8l","./offset.js":"228UQ","./popperOffsets.js":"I1CrS","./preventOverflow.js":"iquIt","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"fz4DR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getNodeNameJs = require("../dom-utils/getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _instanceOfJs = require("../dom-utils/instanceOf.js"); // This modifier takes the styles prepared by the `computeStyles` modifier
// and applies them to the HTMLElements such as popper and arrow
function applyStyles(_ref) {
    var state = _ref.state;
    Object.keys(state.elements).forEach(function(name1) {
        var style = state.styles[name1] || {
        };
        var attributes = state.attributes[name1] || {
        };
        var element = state.elements[name1]; // arrow is optional + virtual elements
        if (!_instanceOfJs.isHTMLElement(element) || !_getNodeNameJsDefault.default(element)) return;
         // Flow doesn't support to extend this property, but it's the most
        // effective way to apply styles to an HTMLElement
        // $FlowFixMe[cannot-write]
        Object.assign(element.style, style);
        Object.keys(attributes).forEach(function(name) {
            var value = attributes[name];
            if (value === false) element.removeAttribute(name);
            else element.setAttribute(name, value === true ? '' : value);
        });
    });
}
function effect(_ref2) {
    var state = _ref2.state;
    var initialStyles = {
        popper: {
            position: state.options.strategy,
            left: '0',
            top: '0',
            margin: '0'
        },
        arrow: {
            position: 'absolute'
        },
        reference: {
        }
    };
    Object.assign(state.elements.popper.style, initialStyles.popper);
    state.styles = initialStyles;
    if (state.elements.arrow) Object.assign(state.elements.arrow.style, initialStyles.arrow);
    return function() {
        Object.keys(state.elements).forEach(function(name) {
            var element = state.elements[name];
            var attributes = state.attributes[name] || {
            };
            var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them
            var style1 = styleProperties.reduce(function(style, property) {
                style[property] = '';
                return style;
            }, {
            }); // arrow is optional + virtual elements
            if (!_instanceOfJs.isHTMLElement(element) || !_getNodeNameJsDefault.default(element)) return;
            Object.assign(element.style, style1);
            Object.keys(attributes).forEach(function(attribute) {
                element.removeAttribute(attribute);
            });
        });
    };
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'applyStyles',
    enabled: true,
    phase: 'write',
    fn: applyStyles,
    effect: effect,
    requires: [
        'computeStyles'
    ]
};

},{"../dom-utils/getNodeName.js":"6JAN3","../dom-utils/instanceOf.js":"fKIgP","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6JAN3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function getNodeName(element) {
    return element ? (element.nodeName || '').toLowerCase() : null;
}
exports.default = getNodeName;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"fKIgP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isElement", ()=>isElement
);
parcelHelpers.export(exports, "isHTMLElement", ()=>isHTMLElement
);
parcelHelpers.export(exports, "isShadowRoot", ()=>isShadowRoot
);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
function isElement(node) {
    var OwnElement = _getWindowJsDefault.default(node).Element;
    return node instanceof OwnElement || node instanceof Element;
}
function isHTMLElement(node) {
    var OwnElement = _getWindowJsDefault.default(node).HTMLElement;
    return node instanceof OwnElement || node instanceof HTMLElement;
}
function isShadowRoot(node) {
    // IE 11 has no ShadowRoot
    if (typeof ShadowRoot === 'undefined') return false;
    var OwnElement = _getWindowJsDefault.default(node).ShadowRoot;
    return node instanceof OwnElement || node instanceof ShadowRoot;
}

},{"./getWindow.js":"htzDW","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"htzDW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function getWindow(node) {
    if (node == null) return window;
    if (node.toString() !== '[object Window]') {
        var ownerDocument = node.ownerDocument;
        return ownerDocument ? ownerDocument.defaultView || window : window;
    }
    return node;
}
exports.default = getWindow;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"aFbbE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getLayoutRectJs = require("../dom-utils/getLayoutRect.js");
var _getLayoutRectJsDefault = parcelHelpers.interopDefault(_getLayoutRectJs);
var _containsJs = require("../dom-utils/contains.js");
var _containsJsDefault = parcelHelpers.interopDefault(_containsJs);
var _getOffsetParentJs = require("../dom-utils/getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _getMainAxisFromPlacementJs = require("../utils/getMainAxisFromPlacement.js");
var _getMainAxisFromPlacementJsDefault = parcelHelpers.interopDefault(_getMainAxisFromPlacementJs);
var _withinJs = require("../utils/within.js");
var _mergePaddingObjectJs = require("../utils/mergePaddingObject.js");
var _mergePaddingObjectJsDefault = parcelHelpers.interopDefault(_mergePaddingObjectJs);
var _expandToHashMapJs = require("../utils/expandToHashMap.js");
var _expandToHashMapJsDefault = parcelHelpers.interopDefault(_expandToHashMapJs);
var _enumsJs = require("../enums.js");
var _instanceOfJs = require("../dom-utils/instanceOf.js"); // eslint-disable-next-line import/no-unused-modules
var toPaddingObject = function toPaddingObject(padding, state) {
    padding = typeof padding === 'function' ? padding(Object.assign({
    }, state.rects, {
        placement: state.placement
    })) : padding;
    return _mergePaddingObjectJsDefault.default(typeof padding !== 'number' ? padding : _expandToHashMapJsDefault.default(padding, _enumsJs.basePlacements));
};
function arrow(_ref) {
    var _state$modifiersData$;
    var state = _ref.state, name = _ref.name, options = _ref.options;
    var arrowElement = state.elements.arrow;
    var popperOffsets = state.modifiersData.popperOffsets;
    var basePlacement = _getBasePlacementJsDefault.default(state.placement);
    var axis = _getMainAxisFromPlacementJsDefault.default(basePlacement);
    var isVertical = [
        _enumsJs.left,
        _enumsJs.right
    ].indexOf(basePlacement) >= 0;
    var len = isVertical ? 'height' : 'width';
    if (!arrowElement || !popperOffsets) return;
    var paddingObject = toPaddingObject(options.padding, state);
    var arrowRect = _getLayoutRectJsDefault.default(arrowElement);
    var minProp = axis === 'y' ? _enumsJs.top : _enumsJs.left;
    var maxProp = axis === 'y' ? _enumsJs.bottom : _enumsJs.right;
    var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
    var startDiff = popperOffsets[axis] - state.rects.reference[axis];
    var arrowOffsetParent = _getOffsetParentJsDefault.default(arrowElement);
    var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
    var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
    // outside of the popper bounds
    var min = paddingObject[minProp];
    var max = clientSize - arrowRect[len] - paddingObject[maxProp];
    var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
    var offset = _withinJs.within(min, center, max); // Prevents breaking syntax highlighting...
    var axisProp = axis;
    state.modifiersData[name] = (_state$modifiersData$ = {
    }, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}
function effect(_ref2) {
    var state = _ref2.state, options = _ref2.options;
    var _options$element = options.element, arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;
    if (arrowElement == null) return;
     // CSS selector
    if (typeof arrowElement === 'string') {
        arrowElement = state.elements.popper.querySelector(arrowElement);
        if (!arrowElement) return;
    }
    if (!_instanceOfJs.isHTMLElement(arrowElement)) console.error([
        'Popper: "arrow" element must be an HTMLElement (not an SVGElement).',
        'To use an SVG arrow, wrap it in an HTMLElement that will be used as',
        'the arrow.'
    ].join(' '));
    if (!_containsJsDefault.default(state.elements.popper, arrowElement)) {
        console.error([
            'Popper: "arrow" modifier\'s `element` must be a child of the popper',
            'element.'
        ].join(' '));
        return;
    }
    state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'arrow',
    enabled: true,
    phase: 'main',
    fn: arrow,
    effect: effect,
    requires: [
        'popperOffsets'
    ],
    requiresIfExists: [
        'preventOverflow'
    ]
};

},{"../utils/getBasePlacement.js":"c2UOX","../dom-utils/getLayoutRect.js":"3QcLC","../dom-utils/contains.js":"c5XYO","../dom-utils/getOffsetParent.js":"cEO6a","../utils/getMainAxisFromPlacement.js":"bDf0O","../utils/within.js":"91duw","../utils/mergePaddingObject.js":"h6lM0","../utils/expandToHashMap.js":"fPt6e","../enums.js":"jZp3w","../dom-utils/instanceOf.js":"fKIgP","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"c2UOX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _enumsJs = require("../enums.js");
function getBasePlacement(placement) {
    return placement.split('-')[0];
}
exports.default = getBasePlacement;

},{"../enums.js":"jZp3w","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"3QcLC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getBoundingClientRectJs = require("./getBoundingClientRect.js"); // Returns the layout rect of an element relative to its offsetParent. Layout
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
function getLayoutRect(element) {
    var clientRect = _getBoundingClientRectJsDefault.default(element); // Use the clientRect sizes if it's not been transformed.
    // Fixes https://github.com/popperjs/popper-core/issues/1223
    var width = element.offsetWidth;
    var height = element.offsetHeight;
    if (Math.abs(clientRect.width - width) <= 1) width = clientRect.width;
    if (Math.abs(clientRect.height - height) <= 1) height = clientRect.height;
    return {
        x: element.offsetLeft,
        y: element.offsetTop,
        width: width,
        height: height
    };
}
exports.default = getLayoutRect;

},{"./getBoundingClientRect.js":"ey7tS","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"ey7tS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _instanceOfJs = require("./instanceOf.js");
var _mathJs = require("../utils/math.js");
function getBoundingClientRect(element, includeScale) {
    if (includeScale === void 0) includeScale = false;
    var rect = element.getBoundingClientRect();
    var scaleX = 1;
    var scaleY = 1;
    if (_instanceOfJs.isHTMLElement(element) && includeScale) {
        var offsetHeight = element.offsetHeight;
        var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale
        // Fallback to 1 in case both values are `0`
        if (offsetWidth > 0) scaleX = _mathJs.round(rect.width) / offsetWidth || 1;
        if (offsetHeight > 0) scaleY = _mathJs.round(rect.height) / offsetHeight || 1;
    }
    return {
        width: rect.width / scaleX,
        height: rect.height / scaleY,
        top: rect.top / scaleY,
        right: rect.right / scaleX,
        bottom: rect.bottom / scaleY,
        left: rect.left / scaleX,
        x: rect.left / scaleX,
        y: rect.top / scaleY
    };
}
exports.default = getBoundingClientRect;

},{"./instanceOf.js":"fKIgP","../utils/math.js":"fL6pm","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"fL6pm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "max", ()=>max
);
parcelHelpers.export(exports, "min", ()=>min
);
parcelHelpers.export(exports, "round", ()=>round
);
var max = Math.max;
var min = Math.min;
var round = Math.round;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"c5XYO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _instanceOfJs = require("./instanceOf.js");
function contains(parent, child) {
    var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method
    if (parent.contains(child)) return true;
    else if (rootNode && _instanceOfJs.isShadowRoot(rootNode)) {
        var next = child;
        do {
            if (next && parent.isSameNode(next)) return true;
             // $FlowFixMe[prop-missing]: need a better way to handle this...
            next = next.parentNode || next.host;
        }while (next)
    } // Give up, the result is false
    return false;
}
exports.default = contains;

},{"./instanceOf.js":"fKIgP","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"cEO6a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _getComputedStyleJs = require("./getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _instanceOfJs = require("./instanceOf.js");
var _isTableElementJs = require("./isTableElement.js");
var _isTableElementJsDefault = parcelHelpers.interopDefault(_isTableElementJs);
var _getParentNodeJs = require("./getParentNode.js");
var _getParentNodeJsDefault = parcelHelpers.interopDefault(_getParentNodeJs);
function getTrueOffsetParent(element) {
    if (!_instanceOfJs.isHTMLElement(element) || _getComputedStyleJsDefault.default(element).position === 'fixed') return null;
    return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block
function getContainingBlock(element) {
    var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
    var isIE = navigator.userAgent.indexOf('Trident') !== -1;
    if (isIE && _instanceOfJs.isHTMLElement(element)) {
        // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
        var elementCss = _getComputedStyleJsDefault.default(element);
        if (elementCss.position === 'fixed') return null;
    }
    var currentNode = _getParentNodeJsDefault.default(element);
    while(_instanceOfJs.isHTMLElement(currentNode) && [
        'html',
        'body'
    ].indexOf(_getNodeNameJsDefault.default(currentNode)) < 0){
        var css = _getComputedStyleJsDefault.default(currentNode); // This is non-exhaustive but covers the most common CSS properties that
        // create a containing block.
        // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
        if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || [
            'transform',
            'perspective'
        ].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') return currentNode;
        else currentNode = currentNode.parentNode;
    }
    return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
function getOffsetParent(element) {
    var window = _getWindowJsDefault.default(element);
    var offsetParent = getTrueOffsetParent(element);
    while(offsetParent && _isTableElementJsDefault.default(offsetParent) && _getComputedStyleJsDefault.default(offsetParent).position === 'static')offsetParent = getTrueOffsetParent(offsetParent);
    if (offsetParent && (_getNodeNameJsDefault.default(offsetParent) === 'html' || _getNodeNameJsDefault.default(offsetParent) === 'body' && _getComputedStyleJsDefault.default(offsetParent).position === 'static')) return window;
    return offsetParent || getContainingBlock(element) || window;
}
exports.default = getOffsetParent;

},{"./getWindow.js":"htzDW","./getNodeName.js":"6JAN3","./getComputedStyle.js":"daHn5","./instanceOf.js":"fKIgP","./isTableElement.js":"lzjUw","./getParentNode.js":"alOJj","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"daHn5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
function getComputedStyle(element) {
    return _getWindowJsDefault.default(element).getComputedStyle(element);
}
exports.default = getComputedStyle;

},{"./getWindow.js":"htzDW","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"lzjUw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
function isTableElement(element) {
    return [
        'table',
        'td',
        'th'
    ].indexOf(_getNodeNameJsDefault.default(element)) >= 0;
}
exports.default = isTableElement;

},{"./getNodeName.js":"6JAN3","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"alOJj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _instanceOfJs = require("./instanceOf.js");
function getParentNode(element) {
    if (_getNodeNameJsDefault.default(element) === 'html') return element;
    return(// $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || element.parentNode || (_instanceOfJs.isShadowRoot(element) ? element.host : null) || // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    _getDocumentElementJsDefault.default(element) // fallback
    );
}
exports.default = getParentNode;

},{"./getNodeName.js":"6JAN3","./getDocumentElement.js":"eJuqT","./instanceOf.js":"fKIgP","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"eJuqT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _instanceOfJs = require("./instanceOf.js");
function getDocumentElement(element) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return ((_instanceOfJs.isElement(element) ? element.ownerDocument : element.document) || window.document).documentElement;
}
exports.default = getDocumentElement;

},{"./instanceOf.js":"fKIgP","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"bDf0O":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function getMainAxisFromPlacement(placement) {
    return [
        'top',
        'bottom'
    ].indexOf(placement) >= 0 ? 'x' : 'y';
}
exports.default = getMainAxisFromPlacement;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"91duw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "within", ()=>within
);
parcelHelpers.export(exports, "withinMaxClamp", ()=>withinMaxClamp
);
var _mathJs = require("./math.js");
function within(min, value, max) {
    return _mathJs.max(min, _mathJs.min(value, max));
}
function withinMaxClamp(min, value, max) {
    var v = within(min, value, max);
    return v > max ? max : v;
}

},{"./math.js":"fL6pm","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"h6lM0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getFreshSideObjectJs = require("./getFreshSideObject.js");
var _getFreshSideObjectJsDefault = parcelHelpers.interopDefault(_getFreshSideObjectJs);
function mergePaddingObject(paddingObject) {
    return Object.assign({
    }, _getFreshSideObjectJsDefault.default(), paddingObject);
}
exports.default = mergePaddingObject;

},{"./getFreshSideObject.js":"73NUq","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"73NUq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function getFreshSideObject() {
    return {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
    };
}
exports.default = getFreshSideObject;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"fPt6e":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function expandToHashMap(value, keys) {
    return keys.reduce(function(hashMap, key) {
        hashMap[key] = value;
        return hashMap;
    }, {
    });
}
exports.default = expandToHashMap;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"jb5QZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mapToStyles", ()=>mapToStyles
);
var _enumsJs = require("../enums.js");
var _getOffsetParentJs = require("../dom-utils/getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _getWindowJs = require("../dom-utils/getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _getDocumentElementJs = require("../dom-utils/getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getComputedStyleJs = require("../dom-utils/getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getVariationJs = require("../utils/getVariation.js");
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
var _mathJs = require("../utils/math.js"); // eslint-disable-next-line import/no-unused-modules
var unsetSides = {
    top: 'auto',
    right: 'auto',
    bottom: 'auto',
    left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.
function roundOffsetsByDPR(_ref) {
    var x = _ref.x, y = _ref.y;
    var win = window;
    var dpr = win.devicePixelRatio || 1;
    return {
        x: _mathJs.round(x * dpr) / dpr || 0,
        y: _mathJs.round(y * dpr) / dpr || 0
    };
}
function mapToStyles(_ref2) {
    var _Object$assign2;
    var popper = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
    var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
    var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
        x: x,
        y: y
    }) : {
        x: x,
        y: y
    };
    x = _ref3.x;
    y = _ref3.y;
    var hasX = offsets.hasOwnProperty('x');
    var hasY = offsets.hasOwnProperty('y');
    var sideX = _enumsJs.left;
    var sideY = _enumsJs.top;
    var win = window;
    if (adaptive) {
        var offsetParent = _getOffsetParentJsDefault.default(popper);
        var heightProp = 'clientHeight';
        var widthProp = 'clientWidth';
        if (offsetParent === _getWindowJsDefault.default(popper)) {
            offsetParent = _getDocumentElementJsDefault.default(popper);
            if (_getComputedStyleJsDefault.default(offsetParent).position !== 'static' && position === 'absolute') {
                heightProp = 'scrollHeight';
                widthProp = 'scrollWidth';
            }
        } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it
        if (placement === _enumsJs.top || (placement === _enumsJs.left || placement === _enumsJs.right) && variation === _enumsJs.end) {
            sideY = _enumsJs.bottom;
            var offsetY = isFixed && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];
            y -= offsetY - popperRect.height;
            y *= gpuAcceleration ? 1 : -1;
        }
        if (placement === _enumsJs.left || (placement === _enumsJs.top || placement === _enumsJs.bottom) && variation === _enumsJs.end) {
            sideX = _enumsJs.right;
            var offsetX = isFixed && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];
            x -= offsetX - popperRect.width;
            x *= gpuAcceleration ? 1 : -1;
        }
    }
    var commonStyles = Object.assign({
        position: position
    }, adaptive && unsetSides);
    var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
        x: x,
        y: y
    }) : {
        x: x,
        y: y
    };
    x = _ref4.x;
    y = _ref4.y;
    if (gpuAcceleration) {
        var _Object$assign;
        return Object.assign({
        }, commonStyles, (_Object$assign = {
        }, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
    }
    return Object.assign({
    }, commonStyles, (_Object$assign2 = {
    }, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}
function computeStyles(_ref5) {
    var state = _ref5.state, options = _ref5.options;
    var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
    var transitionProperty = _getComputedStyleJsDefault.default(state.elements.popper).transitionProperty || '';
    if (adaptive && [
        'transform',
        'top',
        'right',
        'bottom',
        'left'
    ].some(function(property) {
        return transitionProperty.indexOf(property) >= 0;
    })) console.warn([
        'Popper: Detected CSS transitions on at least one of the following',
        'CSS properties: "transform", "top", "right", "bottom", "left".',
        '\n\n',
        'Disable the "computeStyles" modifier\'s `adaptive` option to allow',
        'for smooth transitions, or remove these properties from the CSS',
        'transition declaration on the popper element if only transitioning',
        'opacity or background-color for example.',
        '\n\n',
        'We recommend using the popper element as a wrapper around an inner',
        'element that can have any CSS property transitioned for animations.'
    ].join(' '));
    var commonStyles = {
        placement: _getBasePlacementJsDefault.default(state.placement),
        variation: _getVariationJsDefault.default(state.placement),
        popper: state.elements.popper,
        popperRect: state.rects.popper,
        gpuAcceleration: gpuAcceleration,
        isFixed: state.options.strategy === 'fixed'
    };
    if (state.modifiersData.popperOffsets != null) state.styles.popper = Object.assign({
    }, state.styles.popper, mapToStyles(Object.assign({
    }, commonStyles, {
        offsets: state.modifiersData.popperOffsets,
        position: state.options.strategy,
        adaptive: adaptive,
        roundOffsets: roundOffsets
    })));
    if (state.modifiersData.arrow != null) state.styles.arrow = Object.assign({
    }, state.styles.arrow, mapToStyles(Object.assign({
    }, commonStyles, {
        offsets: state.modifiersData.arrow,
        position: 'absolute',
        adaptive: false,
        roundOffsets: roundOffsets
    })));
    state.attributes.popper = Object.assign({
    }, state.attributes.popper, {
        'data-popper-placement': state.placement
    });
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'computeStyles',
    enabled: true,
    phase: 'beforeWrite',
    fn: computeStyles,
    data: {
    }
};

},{"../enums.js":"jZp3w","../dom-utils/getOffsetParent.js":"cEO6a","../dom-utils/getWindow.js":"htzDW","../dom-utils/getDocumentElement.js":"eJuqT","../dom-utils/getComputedStyle.js":"daHn5","../utils/getBasePlacement.js":"c2UOX","../utils/getVariation.js":"f9eYT","../utils/math.js":"fL6pm","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"f9eYT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function getVariation(placement) {
    return placement.split('-')[1];
}
exports.default = getVariation;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6Xsje":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getWindowJs = require("../dom-utils/getWindow.js"); // eslint-disable-next-line import/no-unused-modules
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var passive = {
    passive: true
};
function effect(_ref) {
    var state = _ref.state, instance = _ref.instance, options = _ref.options;
    var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
    var window = _getWindowJsDefault.default(state.elements.popper);
    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
    if (scroll) scrollParents.forEach(function(scrollParent) {
        scrollParent.addEventListener('scroll', instance.update, passive);
    });
    if (resize) window.addEventListener('resize', instance.update, passive);
    return function() {
        if (scroll) scrollParents.forEach(function(scrollParent) {
            scrollParent.removeEventListener('scroll', instance.update, passive);
        });
        if (resize) window.removeEventListener('resize', instance.update, passive);
    };
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'eventListeners',
    enabled: true,
    phase: 'write',
    fn: function fn() {
    },
    effect: effect,
    data: {
    }
};

},{"../dom-utils/getWindow.js":"htzDW","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6hQNA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getOppositePlacementJs = require("../utils/getOppositePlacement.js");
var _getOppositePlacementJsDefault = parcelHelpers.interopDefault(_getOppositePlacementJs);
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getOppositeVariationPlacementJs = require("../utils/getOppositeVariationPlacement.js");
var _getOppositeVariationPlacementJsDefault = parcelHelpers.interopDefault(_getOppositeVariationPlacementJs);
var _detectOverflowJs = require("../utils/detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
var _computeAutoPlacementJs = require("../utils/computeAutoPlacement.js");
var _computeAutoPlacementJsDefault = parcelHelpers.interopDefault(_computeAutoPlacementJs);
var _enumsJs = require("../enums.js");
var _getVariationJs = require("../utils/getVariation.js"); // eslint-disable-next-line import/no-unused-modules
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
function getExpandedFallbackPlacements(placement) {
    if (_getBasePlacementJsDefault.default(placement) === _enumsJs.auto) return [];
    var oppositePlacement = _getOppositePlacementJsDefault.default(placement);
    return [
        _getOppositeVariationPlacementJsDefault.default(placement),
        oppositePlacement,
        _getOppositeVariationPlacementJsDefault.default(oppositePlacement)
    ];
}
function flip(_ref) {
    var state = _ref.state, options = _ref.options, name = _ref.name;
    if (state.modifiersData[name]._skip) return;
    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
    var preferredPlacement = state.options.placement;
    var basePlacement = _getBasePlacementJsDefault.default(preferredPlacement);
    var isBasePlacement = basePlacement === preferredPlacement;
    var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [
        _getOppositePlacementJsDefault.default(preferredPlacement)
    ] : getExpandedFallbackPlacements(preferredPlacement));
    var placements = [
        preferredPlacement
    ].concat(fallbackPlacements).reduce(function(acc, placement) {
        return acc.concat(_getBasePlacementJsDefault.default(placement) === _enumsJs.auto ? _computeAutoPlacementJsDefault.default(state, {
            placement: placement,
            boundary: boundary,
            rootBoundary: rootBoundary,
            padding: padding,
            flipVariations: flipVariations,
            allowedAutoPlacements: allowedAutoPlacements
        }) : placement);
    }, []);
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var checksMap = new Map();
    var makeFallbackChecks = true;
    var firstFittingPlacement = placements[0];
    for(var i = 0; i < placements.length; i++){
        var placement1 = placements[i];
        var _basePlacement = _getBasePlacementJsDefault.default(placement1);
        var isStartVariation = _getVariationJsDefault.default(placement1) === _enumsJs.start;
        var isVertical = [
            _enumsJs.top,
            _enumsJs.bottom
        ].indexOf(_basePlacement) >= 0;
        var len = isVertical ? 'width' : 'height';
        var overflow = _detectOverflowJsDefault.default(state, {
            placement: placement1,
            boundary: boundary,
            rootBoundary: rootBoundary,
            altBoundary: altBoundary,
            padding: padding
        });
        var mainVariationSide = isVertical ? isStartVariation ? _enumsJs.right : _enumsJs.left : isStartVariation ? _enumsJs.bottom : _enumsJs.top;
        if (referenceRect[len] > popperRect[len]) mainVariationSide = _getOppositePlacementJsDefault.default(mainVariationSide);
        var altVariationSide = _getOppositePlacementJsDefault.default(mainVariationSide);
        var checks = [];
        if (checkMainAxis) checks.push(overflow[_basePlacement] <= 0);
        if (checkAltAxis) checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
        if (checks.every(function(check) {
            return check;
        })) {
            firstFittingPlacement = placement1;
            makeFallbackChecks = false;
            break;
        }
        checksMap.set(placement1, checks);
    }
    if (makeFallbackChecks) {
        // `2` may be desired in some cases – research later
        var numberOfChecks = flipVariations ? 3 : 1;
        var _loop = function _loop(_i) {
            var fittingPlacement = placements.find(function(placement) {
                var checks = checksMap.get(placement);
                if (checks) return checks.slice(0, _i).every(function(check) {
                    return check;
                });
            });
            if (fittingPlacement) {
                firstFittingPlacement = fittingPlacement;
                return "break";
            }
        };
        for(var _i1 = numberOfChecks; _i1 > 0; _i1--){
            var _ret = _loop(_i1);
            if (_ret === "break") break;
        }
    }
    if (state.placement !== firstFittingPlacement) {
        state.modifiersData[name]._skip = true;
        state.placement = firstFittingPlacement;
        state.reset = true;
    }
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'flip',
    enabled: true,
    phase: 'main',
    fn: flip,
    requiresIfExists: [
        'offset'
    ],
    data: {
        _skip: false
    }
};

},{"../utils/getOppositePlacement.js":"8FB8g","../utils/getBasePlacement.js":"c2UOX","../utils/getOppositeVariationPlacement.js":"j1zX8","../utils/detectOverflow.js":"crSQf","../utils/computeAutoPlacement.js":"8qqHW","../enums.js":"jZp3w","../utils/getVariation.js":"f9eYT","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"8FB8g":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var hash = {
    left: 'right',
    right: 'left',
    bottom: 'top',
    top: 'bottom'
};
function getOppositePlacement(placement) {
    return placement.replace(/left|right|bottom|top/g, function(matched) {
        return hash[matched];
    });
}
exports.default = getOppositePlacement;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"j1zX8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var hash = {
    start: 'end',
    end: 'start'
};
function getOppositeVariationPlacement(placement) {
    return placement.replace(/start|end/g, function(matched) {
        return hash[matched];
    });
}
exports.default = getOppositeVariationPlacement;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"crSQf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getClippingRectJs = require("../dom-utils/getClippingRect.js");
var _getClippingRectJsDefault = parcelHelpers.interopDefault(_getClippingRectJs);
var _getDocumentElementJs = require("../dom-utils/getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getBoundingClientRectJs = require("../dom-utils/getBoundingClientRect.js");
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
var _computeOffsetsJs = require("./computeOffsets.js");
var _computeOffsetsJsDefault = parcelHelpers.interopDefault(_computeOffsetsJs);
var _rectToClientRectJs = require("./rectToClientRect.js");
var _rectToClientRectJsDefault = parcelHelpers.interopDefault(_rectToClientRectJs);
var _enumsJs = require("../enums.js");
var _instanceOfJs = require("../dom-utils/instanceOf.js");
var _mergePaddingObjectJs = require("./mergePaddingObject.js");
var _mergePaddingObjectJsDefault = parcelHelpers.interopDefault(_mergePaddingObjectJs);
var _expandToHashMapJs = require("./expandToHashMap.js"); // eslint-disable-next-line import/no-unused-modules
var _expandToHashMapJsDefault = parcelHelpers.interopDefault(_expandToHashMapJs);
function detectOverflow(state, options) {
    if (options === void 0) options = {
    };
    var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? _enumsJs.clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? _enumsJs.viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? _enumsJs.popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
    var paddingObject = _mergePaddingObjectJsDefault.default(typeof padding !== 'number' ? padding : _expandToHashMapJsDefault.default(padding, _enumsJs.basePlacements));
    var altContext = elementContext === _enumsJs.popper ? _enumsJs.reference : _enumsJs.popper;
    var popperRect = state.rects.popper;
    var element = state.elements[altBoundary ? altContext : elementContext];
    var clippingClientRect = _getClippingRectJsDefault.default(_instanceOfJs.isElement(element) ? element : element.contextElement || _getDocumentElementJsDefault.default(state.elements.popper), boundary, rootBoundary);
    var referenceClientRect = _getBoundingClientRectJsDefault.default(state.elements.reference);
    var popperOffsets = _computeOffsetsJsDefault.default({
        reference: referenceClientRect,
        element: popperRect,
        strategy: 'absolute',
        placement: placement
    });
    var popperClientRect = _rectToClientRectJsDefault.default(Object.assign({
    }, popperRect, popperOffsets));
    var elementClientRect = elementContext === _enumsJs.popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
    // 0 or negative = within the clipping rect
    var overflowOffsets = {
        top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
        bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
        left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
        right: elementClientRect.right - clippingClientRect.right + paddingObject.right
    };
    var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element
    if (elementContext === _enumsJs.popper && offsetData) {
        var offset = offsetData[placement];
        Object.keys(overflowOffsets).forEach(function(key) {
            var multiply = [
                _enumsJs.right,
                _enumsJs.bottom
            ].indexOf(key) >= 0 ? 1 : -1;
            var axis = [
                _enumsJs.top,
                _enumsJs.bottom
            ].indexOf(key) >= 0 ? 'y' : 'x';
            overflowOffsets[key] += offset[axis] * multiply;
        });
    }
    return overflowOffsets;
}
exports.default = detectOverflow;

},{"../dom-utils/getClippingRect.js":"5k2MU","../dom-utils/getDocumentElement.js":"eJuqT","../dom-utils/getBoundingClientRect.js":"ey7tS","./computeOffsets.js":"4rK4R","./rectToClientRect.js":"aZgXm","../enums.js":"jZp3w","../dom-utils/instanceOf.js":"fKIgP","./mergePaddingObject.js":"h6lM0","./expandToHashMap.js":"fPt6e","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"5k2MU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _enumsJs = require("../enums.js");
var _getViewportRectJs = require("./getViewportRect.js");
var _getViewportRectJsDefault = parcelHelpers.interopDefault(_getViewportRectJs);
var _getDocumentRectJs = require("./getDocumentRect.js");
var _getDocumentRectJsDefault = parcelHelpers.interopDefault(_getDocumentRectJs);
var _listScrollParentsJs = require("./listScrollParents.js");
var _listScrollParentsJsDefault = parcelHelpers.interopDefault(_listScrollParentsJs);
var _getOffsetParentJs = require("./getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getComputedStyleJs = require("./getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _instanceOfJs = require("./instanceOf.js");
var _getBoundingClientRectJs = require("./getBoundingClientRect.js");
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
var _getParentNodeJs = require("./getParentNode.js");
var _getParentNodeJsDefault = parcelHelpers.interopDefault(_getParentNodeJs);
var _containsJs = require("./contains.js");
var _containsJsDefault = parcelHelpers.interopDefault(_containsJs);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _rectToClientRectJs = require("../utils/rectToClientRect.js");
var _rectToClientRectJsDefault = parcelHelpers.interopDefault(_rectToClientRectJs);
var _mathJs = require("../utils/math.js");
function getInnerBoundingClientRect(element) {
    var rect = _getBoundingClientRectJsDefault.default(element);
    rect.top = rect.top + element.clientTop;
    rect.left = rect.left + element.clientLeft;
    rect.bottom = rect.top + element.clientHeight;
    rect.right = rect.left + element.clientWidth;
    rect.width = element.clientWidth;
    rect.height = element.clientHeight;
    rect.x = rect.left;
    rect.y = rect.top;
    return rect;
}
function getClientRectFromMixedType(element, clippingParent) {
    return clippingParent === _enumsJs.viewport ? _rectToClientRectJsDefault.default(_getViewportRectJsDefault.default(element)) : _instanceOfJs.isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : _rectToClientRectJsDefault.default(_getDocumentRectJsDefault.default(_getDocumentElementJsDefault.default(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`
function getClippingParents(element) {
    var clippingParents = _listScrollParentsJsDefault.default(_getParentNodeJsDefault.default(element));
    var canEscapeClipping = [
        'absolute',
        'fixed'
    ].indexOf(_getComputedStyleJsDefault.default(element).position) >= 0;
    var clipperElement = canEscapeClipping && _instanceOfJs.isHTMLElement(element) ? _getOffsetParentJsDefault.default(element) : element;
    if (!_instanceOfJs.isElement(clipperElement)) return [];
     // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414
    return clippingParents.filter(function(clippingParent) {
        return _instanceOfJs.isElement(clippingParent) && _containsJsDefault.default(clippingParent, clipperElement) && _getNodeNameJsDefault.default(clippingParent) !== 'body';
    });
} // Gets the maximum area that the element is visible in due to any number of
function getClippingRect(element, boundary, rootBoundary) {
    var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
    var clippingParents = [].concat(mainClippingParents, [
        rootBoundary
    ]);
    var firstClippingParent = clippingParents[0];
    var clippingRect = clippingParents.reduce(function(accRect, clippingParent) {
        var rect = getClientRectFromMixedType(element, clippingParent);
        accRect.top = _mathJs.max(rect.top, accRect.top);
        accRect.right = _mathJs.min(rect.right, accRect.right);
        accRect.bottom = _mathJs.min(rect.bottom, accRect.bottom);
        accRect.left = _mathJs.max(rect.left, accRect.left);
        return accRect;
    }, getClientRectFromMixedType(element, firstClippingParent));
    clippingRect.width = clippingRect.right - clippingRect.left;
    clippingRect.height = clippingRect.bottom - clippingRect.top;
    clippingRect.x = clippingRect.left;
    clippingRect.y = clippingRect.top;
    return clippingRect;
}
exports.default = getClippingRect;

},{"../enums.js":"jZp3w","./getViewportRect.js":"9whPD","./getDocumentRect.js":"e3m4U","./listScrollParents.js":"h9LnN","./getOffsetParent.js":"cEO6a","./getDocumentElement.js":"eJuqT","./getComputedStyle.js":"daHn5","./instanceOf.js":"fKIgP","./getBoundingClientRect.js":"ey7tS","./getParentNode.js":"alOJj","./contains.js":"c5XYO","./getNodeName.js":"6JAN3","../utils/rectToClientRect.js":"aZgXm","../utils/math.js":"fL6pm","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"9whPD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getWindowScrollBarXJs = require("./getWindowScrollBarX.js");
var _getWindowScrollBarXJsDefault = parcelHelpers.interopDefault(_getWindowScrollBarXJs);
function getViewportRect(element) {
    var win = _getWindowJsDefault.default(element);
    var html = _getDocumentElementJsDefault.default(element);
    var visualViewport = win.visualViewport;
    var width = html.clientWidth;
    var height = html.clientHeight;
    var x = 0;
    var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
    // can be obscured underneath it.
    // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
    // if it isn't open, so if this isn't available, the popper will be detected
    // to overflow the bottom of the screen too early.
    if (visualViewport) {
        width = visualViewport.width;
        height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
        // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
        // errors due to floating point numbers, so we need to check precision.
        // Safari returns a number <= 0, usually < -1 when pinch-zoomed
        // Feature detection fails in mobile emulation mode in Chrome.
        // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
        // 0.001
        // Fallback here: "Not Safari" userAgent
        if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
            x = visualViewport.offsetLeft;
            y = visualViewport.offsetTop;
        }
    }
    return {
        width: width,
        height: height,
        x: x + _getWindowScrollBarXJsDefault.default(element),
        y: y
    };
}
exports.default = getViewportRect;

},{"./getWindow.js":"htzDW","./getDocumentElement.js":"eJuqT","./getWindowScrollBarX.js":"3oin6","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"3oin6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getBoundingClientRectJs = require("./getBoundingClientRect.js");
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getWindowScrollJs = require("./getWindowScroll.js");
var _getWindowScrollJsDefault = parcelHelpers.interopDefault(_getWindowScrollJs);
function getWindowScrollBarX(element) {
    // If <html> has a CSS width greater than the viewport, then this will be
    // incorrect for RTL.
    // Popper 1 is broken in this case and never had a bug report so let's assume
    // it's not an issue. I don't think anyone ever specifies width on <html>
    // anyway.
    // Browsers where the left scrollbar doesn't cause an issue report `0` for
    // this (e.g. Edge 2019, IE11, Safari)
    return _getBoundingClientRectJsDefault.default(_getDocumentElementJsDefault.default(element)).left + _getWindowScrollJsDefault.default(element).scrollLeft;
}
exports.default = getWindowScrollBarX;

},{"./getBoundingClientRect.js":"ey7tS","./getDocumentElement.js":"eJuqT","./getWindowScroll.js":"gZQL2","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"gZQL2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
function getWindowScroll(node) {
    var win = _getWindowJsDefault.default(node);
    var scrollLeft = win.pageXOffset;
    var scrollTop = win.pageYOffset;
    return {
        scrollLeft: scrollLeft,
        scrollTop: scrollTop
    };
}
exports.default = getWindowScroll;

},{"./getWindow.js":"htzDW","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"e3m4U":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getComputedStyleJs = require("./getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _getWindowScrollBarXJs = require("./getWindowScrollBarX.js");
var _getWindowScrollBarXJsDefault = parcelHelpers.interopDefault(_getWindowScrollBarXJs);
var _getWindowScrollJs = require("./getWindowScroll.js");
var _getWindowScrollJsDefault = parcelHelpers.interopDefault(_getWindowScrollJs);
var _mathJs = require("../utils/math.js"); // Gets the entire size of the scrollable document area, even extending outside
function getDocumentRect(element) {
    var _element$ownerDocumen;
    var html = _getDocumentElementJsDefault.default(element);
    var winScroll = _getWindowScrollJsDefault.default(element);
    var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
    var width = _mathJs.max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
    var height = _mathJs.max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
    var x = -winScroll.scrollLeft + _getWindowScrollBarXJsDefault.default(element);
    var y = -winScroll.scrollTop;
    if (_getComputedStyleJsDefault.default(body || html).direction === 'rtl') x += _mathJs.max(html.clientWidth, body ? body.clientWidth : 0) - width;
    return {
        width: width,
        height: height,
        x: x,
        y: y
    };
}
exports.default = getDocumentRect;

},{"./getDocumentElement.js":"eJuqT","./getComputedStyle.js":"daHn5","./getWindowScrollBarX.js":"3oin6","./getWindowScroll.js":"gZQL2","../utils/math.js":"fL6pm","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"h9LnN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getScrollParentJs = require("./getScrollParent.js");
var _getScrollParentJsDefault = parcelHelpers.interopDefault(_getScrollParentJs);
var _getParentNodeJs = require("./getParentNode.js");
var _getParentNodeJsDefault = parcelHelpers.interopDefault(_getParentNodeJs);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _isScrollParentJs = require("./isScrollParent.js");
var _isScrollParentJsDefault = parcelHelpers.interopDefault(_isScrollParentJs);
function listScrollParents(element, list) {
    var _element$ownerDocumen;
    if (list === void 0) list = [];
    var scrollParent = _getScrollParentJsDefault.default(element);
    var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
    var win = _getWindowJsDefault.default(scrollParent);
    var target = isBody ? [
        win
    ].concat(win.visualViewport || [], _isScrollParentJsDefault.default(scrollParent) ? scrollParent : []) : scrollParent;
    var updatedList = list.concat(target);
    return isBody ? updatedList : updatedList.concat(listScrollParents(_getParentNodeJsDefault.default(target)));
}
exports.default = listScrollParents;

},{"./getScrollParent.js":"6KLmw","./getParentNode.js":"alOJj","./getWindow.js":"htzDW","./isScrollParent.js":"6o0f4","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6KLmw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getParentNodeJs = require("./getParentNode.js");
var _getParentNodeJsDefault = parcelHelpers.interopDefault(_getParentNodeJs);
var _isScrollParentJs = require("./isScrollParent.js");
var _isScrollParentJsDefault = parcelHelpers.interopDefault(_isScrollParentJs);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _instanceOfJs = require("./instanceOf.js");
function getScrollParent(node) {
    if ([
        'html',
        'body',
        '#document'
    ].indexOf(_getNodeNameJsDefault.default(node)) >= 0) // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
    if (_instanceOfJs.isHTMLElement(node) && _isScrollParentJsDefault.default(node)) return node;
    return getScrollParent(_getParentNodeJsDefault.default(node));
}
exports.default = getScrollParent;

},{"./getParentNode.js":"alOJj","./isScrollParent.js":"6o0f4","./getNodeName.js":"6JAN3","./instanceOf.js":"fKIgP","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6o0f4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getComputedStyleJs = require("./getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
function isScrollParent(element) {
    // Firefox wants us to check `-x` and `-y` variations as well
    var _getComputedStyle = _getComputedStyleJsDefault.default(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
exports.default = isScrollParent;

},{"./getComputedStyle.js":"daHn5","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"aZgXm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function rectToClientRect(rect) {
    return Object.assign({
    }, rect, {
        left: rect.x,
        top: rect.y,
        right: rect.x + rect.width,
        bottom: rect.y + rect.height
    });
}
exports.default = rectToClientRect;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"4rK4R":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getBasePlacementJs = require("./getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getVariationJs = require("./getVariation.js");
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
var _getMainAxisFromPlacementJs = require("./getMainAxisFromPlacement.js");
var _getMainAxisFromPlacementJsDefault = parcelHelpers.interopDefault(_getMainAxisFromPlacementJs);
var _enumsJs = require("../enums.js");
function computeOffsets(_ref) {
    var reference = _ref.reference, element = _ref.element, placement = _ref.placement;
    var basePlacement = placement ? _getBasePlacementJsDefault.default(placement) : null;
    var variation = placement ? _getVariationJsDefault.default(placement) : null;
    var commonX = reference.x + reference.width / 2 - element.width / 2;
    var commonY = reference.y + reference.height / 2 - element.height / 2;
    var offsets;
    switch(basePlacement){
        case _enumsJs.top:
            offsets = {
                x: commonX,
                y: reference.y - element.height
            };
            break;
        case _enumsJs.bottom:
            offsets = {
                x: commonX,
                y: reference.y + reference.height
            };
            break;
        case _enumsJs.right:
            offsets = {
                x: reference.x + reference.width,
                y: commonY
            };
            break;
        case _enumsJs.left:
            offsets = {
                x: reference.x - element.width,
                y: commonY
            };
            break;
        default:
            offsets = {
                x: reference.x,
                y: reference.y
            };
    }
    var mainAxis = basePlacement ? _getMainAxisFromPlacementJsDefault.default(basePlacement) : null;
    if (mainAxis != null) {
        var len = mainAxis === 'y' ? 'height' : 'width';
        switch(variation){
            case _enumsJs.start:
                offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
                break;
            case _enumsJs.end:
                offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
                break;
            default:
        }
    }
    return offsets;
}
exports.default = computeOffsets;

},{"./getBasePlacement.js":"c2UOX","./getVariation.js":"f9eYT","./getMainAxisFromPlacement.js":"bDf0O","../enums.js":"jZp3w","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"8qqHW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getVariationJs = require("./getVariation.js");
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
var _enumsJs = require("../enums.js");
var _detectOverflowJs = require("./detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
var _getBasePlacementJs = require("./getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
function computeAutoPlacement(state, options) {
    if (options === void 0) options = {
    };
    var _options = options, placement1 = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? _enumsJs.placements : _options$allowedAutoP;
    var variation = _getVariationJsDefault.default(placement1);
    var placements = variation ? flipVariations ? _enumsJs.variationPlacements : _enumsJs.variationPlacements.filter(function(placement) {
        return _getVariationJsDefault.default(placement) === variation;
    }) : _enumsJs.basePlacements;
    var allowedPlacements = placements.filter(function(placement) {
        return allowedAutoPlacements.indexOf(placement) >= 0;
    });
    if (allowedPlacements.length === 0) {
        allowedPlacements = placements;
        console.error([
            'Popper: The `allowedAutoPlacements` option did not allow any',
            'placements. Ensure the `placement` option matches the variation',
            'of the allowed placements.',
            'For example, "auto" cannot be used to allow "bottom-start".',
            'Use "auto-start" instead.'
        ].join(' '));
    } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...
    var overflows = allowedPlacements.reduce(function(acc, placement) {
        acc[placement] = _detectOverflowJsDefault.default(state, {
            placement: placement,
            boundary: boundary,
            rootBoundary: rootBoundary,
            padding: padding
        })[_getBasePlacementJsDefault.default(placement)];
        return acc;
    }, {
    });
    return Object.keys(overflows).sort(function(a, b) {
        return overflows[a] - overflows[b];
    });
}
exports.default = computeAutoPlacement;

},{"./getVariation.js":"f9eYT","../enums.js":"jZp3w","./detectOverflow.js":"crSQf","./getBasePlacement.js":"c2UOX","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"1tv8l":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _enumsJs = require("../enums.js");
var _detectOverflowJs = require("../utils/detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
function getSideOffsets(overflow, rect, preventedOffsets) {
    if (preventedOffsets === void 0) preventedOffsets = {
        x: 0,
        y: 0
    };
    return {
        top: overflow.top - rect.height - preventedOffsets.y,
        right: overflow.right - rect.width + preventedOffsets.x,
        bottom: overflow.bottom - rect.height + preventedOffsets.y,
        left: overflow.left - rect.width - preventedOffsets.x
    };
}
function isAnySideFullyClipped(overflow) {
    return [
        _enumsJs.top,
        _enumsJs.right,
        _enumsJs.bottom,
        _enumsJs.left
    ].some(function(side) {
        return overflow[side] >= 0;
    });
}
function hide(_ref) {
    var state = _ref.state, name = _ref.name;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var preventedOffsets = state.modifiersData.preventOverflow;
    var referenceOverflow = _detectOverflowJsDefault.default(state, {
        elementContext: 'reference'
    });
    var popperAltOverflow = _detectOverflowJsDefault.default(state, {
        altBoundary: true
    });
    var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
    var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
    var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
    var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
    state.modifiersData[name] = {
        referenceClippingOffsets: referenceClippingOffsets,
        popperEscapeOffsets: popperEscapeOffsets,
        isReferenceHidden: isReferenceHidden,
        hasPopperEscaped: hasPopperEscaped
    };
    state.attributes.popper = Object.assign({
    }, state.attributes.popper, {
        'data-popper-reference-hidden': isReferenceHidden,
        'data-popper-escaped': hasPopperEscaped
    });
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'hide',
    enabled: true,
    phase: 'main',
    requiresIfExists: [
        'preventOverflow'
    ],
    fn: hide
};

},{"../enums.js":"jZp3w","../utils/detectOverflow.js":"crSQf","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"228UQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "distanceAndSkiddingToXY", ()=>distanceAndSkiddingToXY
);
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _enumsJs = require("../enums.js"); // eslint-disable-next-line import/no-unused-modules
function distanceAndSkiddingToXY(placement, rects, offset1) {
    var basePlacement = _getBasePlacementJsDefault.default(placement);
    var invertDistance = [
        _enumsJs.left,
        _enumsJs.top
    ].indexOf(basePlacement) >= 0 ? -1 : 1;
    var _ref = typeof offset1 === 'function' ? offset1(Object.assign({
    }, rects, {
        placement: placement
    })) : offset1, skidding = _ref[0], distance = _ref[1];
    skidding = skidding || 0;
    distance = (distance || 0) * invertDistance;
    return [
        _enumsJs.left,
        _enumsJs.right
    ].indexOf(basePlacement) >= 0 ? {
        x: distance,
        y: skidding
    } : {
        x: skidding,
        y: distance
    };
}
function offset(_ref2) {
    var state = _ref2.state, options = _ref2.options, name = _ref2.name;
    var _options$offset = options.offset, offset2 = _options$offset === void 0 ? [
        0,
        0
    ] : _options$offset;
    var data = _enumsJs.placements.reduce(function(acc, placement) {
        acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
        return acc;
    }, {
    });
    var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
    if (state.modifiersData.popperOffsets != null) {
        state.modifiersData.popperOffsets.x += x;
        state.modifiersData.popperOffsets.y += y;
    }
    state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'offset',
    enabled: true,
    phase: 'main',
    requires: [
        'popperOffsets'
    ],
    fn: offset
};

},{"../utils/getBasePlacement.js":"c2UOX","../enums.js":"jZp3w","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"I1CrS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _computeOffsetsJs = require("../utils/computeOffsets.js");
var _computeOffsetsJsDefault = parcelHelpers.interopDefault(_computeOffsetsJs);
function popperOffsets(_ref) {
    var state = _ref.state, name = _ref.name;
    // Offsets are the actual position the popper needs to have to be
    // properly positioned near its reference element
    // This is the most basic placement, and will be adjusted by
    // the modifiers in the next step
    state.modifiersData[name] = _computeOffsetsJsDefault.default({
        reference: state.rects.reference,
        element: state.rects.popper,
        strategy: 'absolute',
        placement: state.placement
    });
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'popperOffsets',
    enabled: true,
    phase: 'read',
    fn: popperOffsets,
    data: {
    }
};

},{"../utils/computeOffsets.js":"4rK4R","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"iquIt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _enumsJs = require("../enums.js");
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getMainAxisFromPlacementJs = require("../utils/getMainAxisFromPlacement.js");
var _getMainAxisFromPlacementJsDefault = parcelHelpers.interopDefault(_getMainAxisFromPlacementJs);
var _getAltAxisJs = require("../utils/getAltAxis.js");
var _getAltAxisJsDefault = parcelHelpers.interopDefault(_getAltAxisJs);
var _withinJs = require("../utils/within.js");
var _getLayoutRectJs = require("../dom-utils/getLayoutRect.js");
var _getLayoutRectJsDefault = parcelHelpers.interopDefault(_getLayoutRectJs);
var _getOffsetParentJs = require("../dom-utils/getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _detectOverflowJs = require("../utils/detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
var _getVariationJs = require("../utils/getVariation.js");
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
var _getFreshSideObjectJs = require("../utils/getFreshSideObject.js");
var _getFreshSideObjectJsDefault = parcelHelpers.interopDefault(_getFreshSideObjectJs);
var _mathJs = require("../utils/math.js");
function preventOverflow(_ref) {
    var state = _ref.state, options = _ref.options, name = _ref.name;
    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
    var overflow = _detectOverflowJsDefault.default(state, {
        boundary: boundary,
        rootBoundary: rootBoundary,
        padding: padding,
        altBoundary: altBoundary
    });
    var basePlacement = _getBasePlacementJsDefault.default(state.placement);
    var variation = _getVariationJsDefault.default(state.placement);
    var isBasePlacement = !variation;
    var mainAxis = _getMainAxisFromPlacementJsDefault.default(basePlacement);
    var altAxis = _getAltAxisJsDefault.default(mainAxis);
    var popperOffsets = state.modifiersData.popperOffsets;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({
    }, state.rects, {
        placement: state.placement
    })) : tetherOffset;
    var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
        mainAxis: tetherOffsetValue,
        altAxis: tetherOffsetValue
    } : Object.assign({
        mainAxis: 0,
        altAxis: 0
    }, tetherOffsetValue);
    var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
    var data = {
        x: 0,
        y: 0
    };
    if (!popperOffsets) return;
    if (checkMainAxis) {
        var _offsetModifierState$;
        var mainSide = mainAxis === 'y' ? _enumsJs.top : _enumsJs.left;
        var altSide = mainAxis === 'y' ? _enumsJs.bottom : _enumsJs.right;
        var len = mainAxis === 'y' ? 'height' : 'width';
        var offset = popperOffsets[mainAxis];
        var min = offset + overflow[mainSide];
        var max = offset - overflow[altSide];
        var additive = tether ? -popperRect[len] / 2 : 0;
        var minLen = variation === _enumsJs.start ? referenceRect[len] : popperRect[len];
        var maxLen = variation === _enumsJs.start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
        // outside the reference bounds
        var arrowElement = state.elements.arrow;
        var arrowRect = tether && arrowElement ? _getLayoutRectJsDefault.default(arrowElement) : {
            width: 0,
            height: 0
        };
        var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : _getFreshSideObjectJsDefault.default();
        var arrowPaddingMin = arrowPaddingObject[mainSide];
        var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
        // to include its full size in the calculation. If the reference is small
        // and near the edge of a boundary, the popper can overflow even if the
        // reference is not overflowing as well (e.g. virtual elements with no
        // width or height)
        var arrowLen = _withinJs.within(0, referenceRect[len], arrowRect[len]);
        var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
        var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
        var arrowOffsetParent = state.elements.arrow && _getOffsetParentJsDefault.default(state.elements.arrow);
        var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
        var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
        var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
        var tetherMax = offset + maxOffset - offsetModifierValue;
        var preventedOffset = _withinJs.within(tether ? _mathJs.min(min, tetherMin) : min, offset, tether ? _mathJs.max(max, tetherMax) : max);
        popperOffsets[mainAxis] = preventedOffset;
        data[mainAxis] = preventedOffset - offset;
    }
    if (checkAltAxis) {
        var _offsetModifierState$2;
        var _mainSide = mainAxis === 'x' ? _enumsJs.top : _enumsJs.left;
        var _altSide = mainAxis === 'x' ? _enumsJs.bottom : _enumsJs.right;
        var _offset = popperOffsets[altAxis];
        var _len = altAxis === 'y' ? 'height' : 'width';
        var _min = _offset + overflow[_mainSide];
        var _max = _offset - overflow[_altSide];
        var isOriginSide = [
            _enumsJs.top,
            _enumsJs.left
        ].indexOf(basePlacement) !== -1;
        var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
        var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
        var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
        var _preventedOffset = tether && isOriginSide ? _withinJs.withinMaxClamp(_tetherMin, _offset, _tetherMax) : _withinJs.within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
        popperOffsets[altAxis] = _preventedOffset;
        data[altAxis] = _preventedOffset - _offset;
    }
    state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'preventOverflow',
    enabled: true,
    phase: 'main',
    fn: preventOverflow,
    requiresIfExists: [
        'offset'
    ]
};

},{"../enums.js":"jZp3w","../utils/getBasePlacement.js":"c2UOX","../utils/getMainAxisFromPlacement.js":"bDf0O","../utils/getAltAxis.js":"km1Cn","../utils/within.js":"91duw","../dom-utils/getLayoutRect.js":"3QcLC","../dom-utils/getOffsetParent.js":"cEO6a","../utils/detectOverflow.js":"crSQf","../utils/getVariation.js":"f9eYT","../utils/getFreshSideObject.js":"73NUq","../utils/math.js":"fL6pm","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"km1Cn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function getAltAxis(axis) {
    return axis === 'x' ? 'y' : 'x';
}
exports.default = getAltAxis;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6w8cU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "popperGenerator", ()=>popperGenerator
);
parcelHelpers.export(exports, "createPopper", ()=>createPopper
);
parcelHelpers.export(exports, "detectOverflow", ()=>_detectOverflowJsDefault.default
);
var _getCompositeRectJs = require("./dom-utils/getCompositeRect.js");
var _getCompositeRectJsDefault = parcelHelpers.interopDefault(_getCompositeRectJs);
var _getLayoutRectJs = require("./dom-utils/getLayoutRect.js");
var _getLayoutRectJsDefault = parcelHelpers.interopDefault(_getLayoutRectJs);
var _listScrollParentsJs = require("./dom-utils/listScrollParents.js");
var _listScrollParentsJsDefault = parcelHelpers.interopDefault(_listScrollParentsJs);
var _getOffsetParentJs = require("./dom-utils/getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _getComputedStyleJs = require("./dom-utils/getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _orderModifiersJs = require("./utils/orderModifiers.js");
var _orderModifiersJsDefault = parcelHelpers.interopDefault(_orderModifiersJs);
var _debounceJs = require("./utils/debounce.js");
var _debounceJsDefault = parcelHelpers.interopDefault(_debounceJs);
var _validateModifiersJs = require("./utils/validateModifiers.js");
var _validateModifiersJsDefault = parcelHelpers.interopDefault(_validateModifiersJs);
var _uniqueByJs = require("./utils/uniqueBy.js");
var _uniqueByJsDefault = parcelHelpers.interopDefault(_uniqueByJs);
var _getBasePlacementJs = require("./utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _mergeByNameJs = require("./utils/mergeByName.js");
var _mergeByNameJsDefault = parcelHelpers.interopDefault(_mergeByNameJs);
var _detectOverflowJs = require("./utils/detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
var _instanceOfJs = require("./dom-utils/instanceOf.js");
var _enumsJs = require("./enums.js");
var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
var DEFAULT_OPTIONS = {
    placement: 'bottom',
    modifiers: [],
    strategy: 'absolute'
};
function areValidElements() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
    return !args.some(function(element) {
        return !(element && typeof element.getBoundingClientRect === 'function');
    });
}
function popperGenerator(generatorOptions) {
    if (generatorOptions === void 0) generatorOptions = {
    };
    var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
    return function createPopper(reference1, popper1, options1) {
        if (options1 === void 0) options1 = defaultOptions;
        var state1 = {
            placement: 'bottom',
            orderedModifiers: [],
            options: Object.assign({
            }, DEFAULT_OPTIONS, defaultOptions),
            modifiersData: {
            },
            elements: {
                reference: reference1,
                popper: popper1
            },
            attributes: {
            },
            styles: {
            }
        };
        var effectCleanupFns = [];
        var isDestroyed = false;
        var instance = {
            state: state1,
            setOptions: function setOptions(setOptionsAction) {
                var options = typeof setOptionsAction === 'function' ? setOptionsAction(state1.options) : setOptionsAction;
                cleanupModifierEffects();
                state1.options = Object.assign({
                }, defaultOptions, state1.options, options);
                state1.scrollParents = {
                    reference: _instanceOfJs.isElement(reference1) ? _listScrollParentsJsDefault.default(reference1) : reference1.contextElement ? _listScrollParentsJsDefault.default(reference1.contextElement) : [],
                    popper: _listScrollParentsJsDefault.default(popper1)
                }; // Orders the modifiers based on their dependencies and `phase`
                // properties
                var orderedModifiers = _orderModifiersJsDefault.default(_mergeByNameJsDefault.default([].concat(defaultModifiers, state1.options.modifiers))); // Strip out disabled modifiers
                state1.orderedModifiers = orderedModifiers.filter(function(m) {
                    return m.enabled;
                }); // Validate the provided modifiers so that the consumer will get warned
                var modifiers = _uniqueByJsDefault.default([].concat(orderedModifiers, state1.options.modifiers), function(_ref) {
                    var name = _ref.name;
                    return name;
                });
                _validateModifiersJsDefault.default(modifiers);
                if (_getBasePlacementJsDefault.default(state1.options.placement) === _enumsJs.auto) {
                    var flipModifier = state1.orderedModifiers.find(function(_ref2) {
                        var name = _ref2.name;
                        return name === 'flip';
                    });
                    if (!flipModifier) console.error([
                        'Popper: "auto" placements require the "flip" modifier be',
                        'present and enabled to work.'
                    ].join(' '));
                }
                var _getComputedStyle = _getComputedStyleJsDefault.default(popper1), marginTop = _getComputedStyle.marginTop, marginRight = _getComputedStyle.marginRight, marginBottom = _getComputedStyle.marginBottom, marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can
                // cause bugs with positioning, so we'll warn the consumer
                if ([
                    marginTop,
                    marginRight,
                    marginBottom,
                    marginLeft
                ].some(function(margin) {
                    return parseFloat(margin);
                })) console.warn([
                    'Popper: CSS "margin" styles cannot be used to apply padding',
                    'between the popper and its reference element or boundary.',
                    'To replicate margin, use the `offset` modifier, as well as',
                    'the `padding` option in the `preventOverflow` and `flip`',
                    'modifiers.'
                ].join(' '));
                runModifierEffects();
                return instance.update();
            },
            // Sync update – it will always be executed, even if not necessary. This
            // is useful for low frequency updates where sync behavior simplifies the
            // logic.
            // For high frequency updates (e.g. `resize` and `scroll` events), always
            // prefer the async Popper#update method
            forceUpdate: function forceUpdate() {
                if (isDestroyed) return;
                var _state$elements = state1.elements, reference = _state$elements.reference, popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
                // anymore
                if (!areValidElements(reference, popper)) {
                    console.error(INVALID_ELEMENT_ERROR);
                    return;
                } // Store the reference and popper rects to be read by modifiers
                state1.rects = {
                    reference: _getCompositeRectJsDefault.default(reference, _getOffsetParentJsDefault.default(popper), state1.options.strategy === 'fixed'),
                    popper: _getLayoutRectJsDefault.default(popper)
                }; // Modifiers have the ability to reset the current update cycle. The
                // most common use case for this is the `flip` modifier changing the
                // placement, which then needs to re-run all the modifiers, because the
                // logic was previously ran for the previous placement and is therefore
                // stale/incorrect
                state1.reset = false;
                state1.placement = state1.options.placement; // On each update cycle, the `modifiersData` property for each modifier
                // is filled with the initial data specified by the modifier. This means
                // it doesn't persist and is fresh on each update.
                // To ensure persistent data, use `${name}#persistent`
                state1.orderedModifiers.forEach(function(modifier) {
                    return state1.modifiersData[modifier.name] = Object.assign({
                    }, modifier.data);
                });
                var __debug_loops__ = 0;
                for(var index = 0; index < state1.orderedModifiers.length; index++){
                    __debug_loops__ += 1;
                    if (__debug_loops__ > 100) {
                        console.error(INFINITE_LOOP_ERROR);
                        break;
                    }
                    if (state1.reset === true) {
                        state1.reset = false;
                        index = -1;
                        continue;
                    }
                    var _state$orderedModifie = state1.orderedModifiers[index], fn = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {
                    } : _state$orderedModifie2, name = _state$orderedModifie.name;
                    if (typeof fn === 'function') state1 = fn({
                        state: state1,
                        options: _options,
                        name: name,
                        instance: instance
                    }) || state1;
                }
            },
            // Async and optimistically optimized update – it will not be executed if
            // not necessary (debounced to run at most once-per-tick)
            update: _debounceJsDefault.default(function() {
                return new Promise(function(resolve) {
                    instance.forceUpdate();
                    resolve(state1);
                });
            }),
            destroy: function destroy() {
                cleanupModifierEffects();
                isDestroyed = true;
            }
        };
        if (!areValidElements(reference1, popper1)) {
            console.error(INVALID_ELEMENT_ERROR);
            return instance;
        }
        instance.setOptions(options1).then(function(state) {
            if (!isDestroyed && options1.onFirstUpdate) options1.onFirstUpdate(state);
        }); // Modifiers have the ability to execute arbitrary code before the first
        // update cycle runs. They will be executed in the same order as the update
        // cycle. This is useful when a modifier adds some persistent data that
        // other modifiers need to use, but the modifier is run after the dependent
        // one.
        function runModifierEffects() {
            state1.orderedModifiers.forEach(function(_ref3) {
                var name = _ref3.name, _ref3$options = _ref3.options, options = _ref3$options === void 0 ? {
                } : _ref3$options, effect = _ref3.effect;
                if (typeof effect === 'function') {
                    var cleanupFn = effect({
                        state: state1,
                        name: name,
                        instance: instance,
                        options: options
                    });
                    var noopFn = function noopFn() {
                    };
                    effectCleanupFns.push(cleanupFn || noopFn);
                }
            });
        }
        function cleanupModifierEffects() {
            effectCleanupFns.forEach(function(fn) {
                return fn();
            });
            effectCleanupFns = [];
        }
        return instance;
    };
}
var createPopper = /*#__PURE__*/ popperGenerator(); // eslint-disable-next-line import/no-unused-modules

},{"./dom-utils/getCompositeRect.js":"8RbQq","./dom-utils/getLayoutRect.js":"3QcLC","./dom-utils/listScrollParents.js":"h9LnN","./dom-utils/getOffsetParent.js":"cEO6a","./dom-utils/getComputedStyle.js":"daHn5","./utils/orderModifiers.js":"6glJ2","./utils/debounce.js":"2MXaX","./utils/validateModifiers.js":"4YNnu","./utils/uniqueBy.js":"lqIFN","./utils/getBasePlacement.js":"c2UOX","./utils/mergeByName.js":"15Bos","./utils/detectOverflow.js":"crSQf","./dom-utils/instanceOf.js":"fKIgP","./enums.js":"jZp3w","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"8RbQq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getBoundingClientRectJs = require("./getBoundingClientRect.js");
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
var _getNodeScrollJs = require("./getNodeScroll.js");
var _getNodeScrollJsDefault = parcelHelpers.interopDefault(_getNodeScrollJs);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _instanceOfJs = require("./instanceOf.js");
var _getWindowScrollBarXJs = require("./getWindowScrollBarX.js");
var _getWindowScrollBarXJsDefault = parcelHelpers.interopDefault(_getWindowScrollBarXJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _isScrollParentJs = require("./isScrollParent.js");
var _isScrollParentJsDefault = parcelHelpers.interopDefault(_isScrollParentJs);
var _mathJs = require("../utils/math.js");
function isElementScaled(element) {
    var rect = element.getBoundingClientRect();
    var scaleX = _mathJs.round(rect.width) / element.offsetWidth || 1;
    var scaleY = _mathJs.round(rect.height) / element.offsetHeight || 1;
    return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
    if (isFixed === void 0) isFixed = false;
    var isOffsetParentAnElement = _instanceOfJs.isHTMLElement(offsetParent);
    var offsetParentIsScaled = _instanceOfJs.isHTMLElement(offsetParent) && isElementScaled(offsetParent);
    var documentElement = _getDocumentElementJsDefault.default(offsetParent);
    var rect = _getBoundingClientRectJsDefault.default(elementOrVirtualElement, offsetParentIsScaled);
    var scroll = {
        scrollLeft: 0,
        scrollTop: 0
    };
    var offsets = {
        x: 0,
        y: 0
    };
    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
        if (_getNodeNameJsDefault.default(offsetParent) !== 'body' || _isScrollParentJsDefault.default(documentElement)) scroll = _getNodeScrollJsDefault.default(offsetParent);
        if (_instanceOfJs.isHTMLElement(offsetParent)) {
            offsets = _getBoundingClientRectJsDefault.default(offsetParent, true);
            offsets.x += offsetParent.clientLeft;
            offsets.y += offsetParent.clientTop;
        } else if (documentElement) offsets.x = _getWindowScrollBarXJsDefault.default(documentElement);
    }
    return {
        x: rect.left + scroll.scrollLeft - offsets.x,
        y: rect.top + scroll.scrollTop - offsets.y,
        width: rect.width,
        height: rect.height
    };
}
exports.default = getCompositeRect;

},{"./getBoundingClientRect.js":"ey7tS","./getNodeScroll.js":"bJ4uu","./getNodeName.js":"6JAN3","./instanceOf.js":"fKIgP","./getWindowScrollBarX.js":"3oin6","./getDocumentElement.js":"eJuqT","./isScrollParent.js":"6o0f4","../utils/math.js":"fL6pm","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"bJ4uu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getWindowScrollJs = require("./getWindowScroll.js");
var _getWindowScrollJsDefault = parcelHelpers.interopDefault(_getWindowScrollJs);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _instanceOfJs = require("./instanceOf.js");
var _getHTMLElementScrollJs = require("./getHTMLElementScroll.js");
var _getHTMLElementScrollJsDefault = parcelHelpers.interopDefault(_getHTMLElementScrollJs);
function getNodeScroll(node) {
    if (node === _getWindowJsDefault.default(node) || !_instanceOfJs.isHTMLElement(node)) return _getWindowScrollJsDefault.default(node);
    else return _getHTMLElementScrollJsDefault.default(node);
}
exports.default = getNodeScroll;

},{"./getWindowScroll.js":"gZQL2","./getWindow.js":"htzDW","./instanceOf.js":"fKIgP","./getHTMLElementScroll.js":"5uO18","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"5uO18":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function getHTMLElementScroll(element) {
    return {
        scrollLeft: element.scrollLeft,
        scrollTop: element.scrollTop
    };
}
exports.default = getHTMLElementScroll;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6glJ2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _enumsJs = require("../enums.js"); // source: https://stackoverflow.com/questions/49875255
function order(modifiers) {
    var map = new Map();
    var visited = new Set();
    var result = [];
    modifiers.forEach(function(modifier) {
        map.set(modifier.name, modifier);
    }); // On visiting object, check for its dependencies and visit them recursively
    function sort(modifier) {
        visited.add(modifier.name);
        var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
        requires.forEach(function(dep) {
            if (!visited.has(dep)) {
                var depModifier = map.get(dep);
                if (depModifier) sort(depModifier);
            }
        });
        result.push(modifier);
    }
    modifiers.forEach(function(modifier) {
        if (!visited.has(modifier.name)) // check for visited object
        sort(modifier);
    });
    return result;
}
function orderModifiers(modifiers) {
    // order based on dependencies
    var orderedModifiers = order(modifiers); // order based on phase
    return _enumsJs.modifierPhases.reduce(function(acc, phase) {
        return acc.concat(orderedModifiers.filter(function(modifier) {
            return modifier.phase === phase;
        }));
    }, []);
}
exports.default = orderModifiers;

},{"../enums.js":"jZp3w","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"2MXaX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function debounce(fn) {
    var pending;
    return function() {
        if (!pending) pending = new Promise(function(resolve) {
            Promise.resolve().then(function() {
                pending = undefined;
                resolve(fn());
            });
        });
        return pending;
    };
}
exports.default = debounce;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"4YNnu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _formatJs = require("./format.js");
var _formatJsDefault = parcelHelpers.interopDefault(_formatJs);
var _enumsJs = require("../enums.js");
var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
var VALID_PROPERTIES = [
    'name',
    'enabled',
    'phase',
    'fn',
    'effect',
    'requires',
    'options'
];
function validateModifiers(modifiers) {
    modifiers.forEach(function(modifier) {
        [].concat(Object.keys(modifier), VALID_PROPERTIES) // IE11-compatible replacement for `new Set(iterable)`
        .filter(function(value, index, self) {
            return self.indexOf(value) === index;
        }).forEach(function(key) {
            switch(key){
                case 'name':
                    if (typeof modifier.name !== 'string') console.error(_formatJsDefault.default(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', "\"" + String(modifier.name) + "\""));
                    break;
                case 'enabled':
                    if (typeof modifier.enabled !== 'boolean') console.error(_formatJsDefault.default(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', "\"" + String(modifier.enabled) + "\""));
                    break;
                case 'phase':
                    if (_enumsJs.modifierPhases.indexOf(modifier.phase) < 0) console.error(_formatJsDefault.default(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + _enumsJs.modifierPhases.join(', '), "\"" + String(modifier.phase) + "\""));
                    break;
                case 'fn':
                    if (typeof modifier.fn !== 'function') console.error(_formatJsDefault.default(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', "\"" + String(modifier.fn) + "\""));
                    break;
                case 'effect':
                    if (modifier.effect != null && typeof modifier.effect !== 'function') console.error(_formatJsDefault.default(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', "\"" + String(modifier.fn) + "\""));
                    break;
                case 'requires':
                    if (modifier.requires != null && !Array.isArray(modifier.requires)) console.error(_formatJsDefault.default(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', "\"" + String(modifier.requires) + "\""));
                    break;
                case 'requiresIfExists':
                    if (!Array.isArray(modifier.requiresIfExists)) console.error(_formatJsDefault.default(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', "\"" + String(modifier.requiresIfExists) + "\""));
                    break;
                case 'options':
                case 'data':
                    break;
                default:
                    console.error("PopperJS: an invalid property has been provided to the \"" + modifier.name + "\" modifier, valid properties are " + VALID_PROPERTIES.map(function(s) {
                        return "\"" + s + "\"";
                    }).join(', ') + "; but \"" + key + "\" was provided.");
            }
            modifier.requires && modifier.requires.forEach(function(requirement) {
                if (modifiers.find(function(mod) {
                    return mod.name === requirement;
                }) == null) console.error(_formatJsDefault.default(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
            });
        });
    });
}
exports.default = validateModifiers;

},{"./format.js":"8LgWn","../enums.js":"jZp3w","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"8LgWn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function format(str) {
    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
    return [].concat(args).reduce(function(p, c) {
        return p.replace(/%s/, c);
    }, str);
}
exports.default = format;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"lqIFN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function uniqueBy(arr, fn) {
    var identifiers = new Set();
    return arr.filter(function(item) {
        var identifier = fn(item);
        if (!identifiers.has(identifier)) {
            identifiers.add(identifier);
            return true;
        }
    });
}
exports.default = uniqueBy;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"15Bos":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function mergeByName(modifiers) {
    var merged1 = modifiers.reduce(function(merged, current) {
        var existing = merged[current.name];
        merged[current.name] = existing ? Object.assign({
        }, existing, current, {
            options: Object.assign({
            }, existing.options, current.options),
            data: Object.assign({
            }, existing.data, current.data)
        }) : current;
        return merged;
    }, {
    }); // IE11 does not support Object.values
    return Object.keys(merged1).map(function(key) {
        return merged1[key];
    });
}
exports.default = mergeByName;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"4kzpa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createPopper", ()=>createPopper
) // eslint-disable-next-line import/no-unused-modules
;
parcelHelpers.export(exports, "popperGenerator", ()=>_createPopperJs.popperGenerator
);
parcelHelpers.export(exports, "defaultModifiers", ()=>defaultModifiers
);
parcelHelpers.export(exports, "detectOverflow", ()=>_createPopperJs.detectOverflow
);
parcelHelpers.export(exports, "createPopperLite", ()=>_popperLiteJs.createPopper
) // eslint-disable-next-line import/no-unused-modules
;
var _createPopperJs = require("./createPopper.js");
var _eventListenersJs = require("./modifiers/eventListeners.js");
var _eventListenersJsDefault = parcelHelpers.interopDefault(_eventListenersJs);
var _popperOffsetsJs = require("./modifiers/popperOffsets.js");
var _popperOffsetsJsDefault = parcelHelpers.interopDefault(_popperOffsetsJs);
var _computeStylesJs = require("./modifiers/computeStyles.js");
var _computeStylesJsDefault = parcelHelpers.interopDefault(_computeStylesJs);
var _applyStylesJs = require("./modifiers/applyStyles.js");
var _applyStylesJsDefault = parcelHelpers.interopDefault(_applyStylesJs);
var _offsetJs = require("./modifiers/offset.js");
var _offsetJsDefault = parcelHelpers.interopDefault(_offsetJs);
var _flipJs = require("./modifiers/flip.js");
var _flipJsDefault = parcelHelpers.interopDefault(_flipJs);
var _preventOverflowJs = require("./modifiers/preventOverflow.js");
var _preventOverflowJsDefault = parcelHelpers.interopDefault(_preventOverflowJs);
var _arrowJs = require("./modifiers/arrow.js");
var _arrowJsDefault = parcelHelpers.interopDefault(_arrowJs);
var _hideJs = require("./modifiers/hide.js");
var _hideJsDefault = parcelHelpers.interopDefault(_hideJs);
var _popperLiteJs = require("./popper-lite.js");
var _indexJs = require("./modifiers/index.js");
parcelHelpers.exportAll(_indexJs, exports);
var defaultModifiers = [
    _eventListenersJsDefault.default,
    _popperOffsetsJsDefault.default,
    _computeStylesJsDefault.default,
    _applyStylesJsDefault.default,
    _offsetJsDefault.default,
    _flipJsDefault.default,
    _preventOverflowJsDefault.default,
    _arrowJsDefault.default,
    _hideJsDefault.default
];
var createPopper = /*#__PURE__*/ _createPopperJs.popperGenerator({
    defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

},{"./createPopper.js":"6w8cU","./modifiers/eventListeners.js":"6Xsje","./modifiers/popperOffsets.js":"I1CrS","./modifiers/computeStyles.js":"jb5QZ","./modifiers/applyStyles.js":"fz4DR","./modifiers/offset.js":"228UQ","./modifiers/flip.js":"6hQNA","./modifiers/preventOverflow.js":"iquIt","./modifiers/arrow.js":"aFbbE","./modifiers/hide.js":"1tv8l","./popper-lite.js":false,"./modifiers/index.js":"i6nAS","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"xuHD7":[function(require,module,exports) {
/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */ var hasElementType = typeof Element !== 'undefined';
var hasMap = typeof Map === 'function';
var hasSet = typeof Set === 'function';
var hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;
// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js
function equal(a, b) {
    // START: fast-deep-equal es6/index.js 3.1.1
    if (a === b) return true;
    if (a && b && typeof a == 'object' && typeof b == 'object') {
        if (a.constructor !== b.constructor) return false;
        var length, i, keys;
        if (Array.isArray(a)) {
            length = a.length;
            if (length != b.length) return false;
            for(i = length; (i--) !== 0;)if (!equal(a[i], b[i])) return false;
            return true;
        }
        // START: Modifications:
        // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code
        //    to co-exist with es5.
        // 2. Replace `for of` with es5 compliant iteration using `for`.
        //    Basically, take:
        //
        //    ```js
        //    for (i of a.entries())
        //      if (!b.has(i[0])) return false;
        //    ```
        //
        //    ... and convert to:
        //
        //    ```js
        //    it = a.entries();
        //    while (!(i = it.next()).done)
        //      if (!b.has(i.value[0])) return false;
        //    ```
        //
        //    **Note**: `i` access switches to `i.value`.
        var it;
        if (hasMap && a instanceof Map && b instanceof Map) {
            if (a.size !== b.size) return false;
            it = a.entries();
            while(!(i = it.next()).done)if (!b.has(i.value[0])) return false;
            it = a.entries();
            while(!(i = it.next()).done)if (!equal(i.value[1], b.get(i.value[0]))) return false;
            return true;
        }
        if (hasSet && a instanceof Set && b instanceof Set) {
            if (a.size !== b.size) return false;
            it = a.entries();
            while(!(i = it.next()).done)if (!b.has(i.value[0])) return false;
            return true;
        }
        // END: Modifications
        if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
            length = a.length;
            if (length != b.length) return false;
            for(i = length; (i--) !== 0;)if (a[i] !== b[i]) return false;
            return true;
        }
        if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();
        keys = Object.keys(a);
        length = keys.length;
        if (length !== Object.keys(b).length) return false;
        for(i = length; (i--) !== 0;)if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
        // END: fast-deep-equal
        // START: react-fast-compare
        // custom handling for DOM elements
        if (hasElementType && a instanceof Element) return false;
        // custom handling for React/Preact
        for(i = length; (i--) !== 0;){
            if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) continue;
            // all other properties should be traversed as usual
            if (!equal(a[keys[i]], b[keys[i]])) return false;
        }
        // END: react-fast-compare
        // START: fast-deep-equal
        return true;
    }
    return a !== a && b !== b;
}
// end fast-deep-equal
module.exports = function isEqual(a, b) {
    try {
        return equal(a, b);
    } catch (error) {
        if ((error.message || '').match(/stack|recursion/i)) {
            // warn on circular references, don't crash
            // browsers give this different errors name and messages:
            // chrome/safari: "RangeError", "Maximum call stack size exceeded"
            // firefox: "InternalError", too much recursion"
            // edge: "Error", "Out of stack space"
            console.warn('react-fast-compare cannot handle circular refs');
            return false;
        }
        // some other error. we should definitely know about these
        throw error;
    }
};

},{}],"1A6aF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Reference", ()=>Reference
);
var _react = require("react");
var _warning = require("warning");
var _warningDefault = parcelHelpers.interopDefault(_warning);
var _manager = require("./Manager");
var _utils = require("./utils");
function Reference(_ref) {
    var children = _ref.children, innerRef = _ref.innerRef;
    var setReferenceNode = _react.useContext(_manager.ManagerReferenceNodeSetterContext);
    var refHandler = _react.useCallback(function(node) {
        _utils.setRef(innerRef, node);
        _utils.safeInvoke(setReferenceNode, node);
    }, [
        innerRef,
        setReferenceNode
    ]); // ran on unmount
    _react.useEffect(function() {
        return function() {
            return _utils.setRef(innerRef, null);
        };
    });
    _react.useEffect(function() {
        _warningDefault.default(Boolean(setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');
    }, [
        setReferenceNode
    ]);
    return _utils.unwrapArray(children)({
        ref: refHandler
    });
}

},{"react":"4mchR","warning":"4vouU","./Manager":"eWj48","./utils":"lSpfs","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"4vouU":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */ var __DEV__ = true;
var warning = function() {
};
if (__DEV__) {
    var printWarning = function printWarning(format, args) {
        var len = arguments.length;
        args = new Array(len > 1 ? len - 1 : 0);
        for(var key = 1; key < len; key++)args[key - 1] = arguments[key];
        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function() {
            return args[argIndex++];
        });
        if (typeof console !== 'undefined') console.error(message);
        try {
            // --- Welcome to debugging React ---
            // This error was thrown as a convenience so that you can use this stack
            // to find the callsite that caused this warning to fire.
            throw new Error(message);
        } catch (x) {
        }
    };
    warning = function(condition, format, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for(var key = 2; key < len; key++)args[key - 2] = arguments[key];
        if (format === undefined) throw new Error("`warning(condition, format, ...args)` requires a warning message argument");
        if (!condition) printWarning.apply(null, [
            format
        ].concat(args));
    };
}
module.exports = warning;

},{}],"krQpC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CSSTransition", ()=>_csstransitionDefault.default
);
parcelHelpers.export(exports, "ReplaceTransition", ()=>_replaceTransitionDefault.default
);
parcelHelpers.export(exports, "SwitchTransition", ()=>_switchTransitionDefault.default
);
parcelHelpers.export(exports, "TransitionGroup", ()=>_transitionGroupDefault.default
);
parcelHelpers.export(exports, "Transition", ()=>_transitionDefault.default
);
parcelHelpers.export(exports, "config", ()=>_configDefault.default
);
var _csstransition = require("./CSSTransition");
var _csstransitionDefault = parcelHelpers.interopDefault(_csstransition);
var _replaceTransition = require("./ReplaceTransition");
var _replaceTransitionDefault = parcelHelpers.interopDefault(_replaceTransition);
var _switchTransition = require("./SwitchTransition");
var _switchTransitionDefault = parcelHelpers.interopDefault(_switchTransition);
var _transitionGroup = require("./TransitionGroup");
var _transitionGroupDefault = parcelHelpers.interopDefault(_transitionGroup);
var _transition = require("./Transition");
var _transitionDefault = parcelHelpers.interopDefault(_transition);
var _config = require("./config");
var _configDefault = parcelHelpers.interopDefault(_config);

},{"./CSSTransition":false,"./ReplaceTransition":false,"./SwitchTransition":false,"./TransitionGroup":false,"./Transition":"5xmpQ","./config":"33G8w","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"5xmpQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "UNMOUNTED", ()=>UNMOUNTED
);
parcelHelpers.export(exports, "EXITED", ()=>EXITED
);
parcelHelpers.export(exports, "ENTERING", ()=>ENTERING
);
parcelHelpers.export(exports, "ENTERED", ()=>ENTERED
);
parcelHelpers.export(exports, "EXITING", ()=>EXITING
);
var _objectWithoutPropertiesLoose = require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _inheritsLoose = require("@babel/runtime/helpers/esm/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactDom = require("react-dom");
var _reactDomDefault = parcelHelpers.interopDefault(_reactDom);
var _config = require("./config");
var _configDefault = parcelHelpers.interopDefault(_config);
var _propTypes1 = require("./utils/PropTypes");
var _transitionGroupContext = require("./TransitionGroupContext");
var _transitionGroupContextDefault = parcelHelpers.interopDefault(_transitionGroupContext);
var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */ var Transition = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(Transition1, _React$Component);
    function Transition1(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var parentGroup = context; // In the context of a TransitionGroup all enters are really appears
        var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
        var initialStatus;
        _this.appearStatus = null;
        if (props.in) {
            if (appear) {
                initialStatus = EXITED;
                _this.appearStatus = ENTERING;
            } else initialStatus = ENTERED;
        } else if (props.unmountOnExit || props.mountOnEnter) initialStatus = UNMOUNTED;
        else initialStatus = EXITED;
        _this.state = {
            status: initialStatus
        };
        _this.nextCallback = null;
        return _this;
    }
    Transition1.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
        var nextIn = _ref.in;
        if (nextIn && prevState.status === UNMOUNTED) return {
            status: EXITED
        };
        return null;
    } // getSnapshotBeforeUpdate(prevProps) {
    ;
    var _proto = Transition1.prototype;
    _proto.componentDidMount = function componentDidMount() {
        this.updateStatus(true, this.appearStatus);
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
        var nextStatus = null;
        if (prevProps !== this.props) {
            var status = this.state.status;
            if (this.props.in) {
                if (status !== ENTERING && status !== ENTERED) nextStatus = ENTERING;
            } else if (status === ENTERING || status === ENTERED) nextStatus = EXITING;
        }
        this.updateStatus(false, nextStatus);
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.cancelNextCallback();
    };
    _proto.getTimeouts = function getTimeouts() {
        var timeout = this.props.timeout;
        var exit, enter, appear;
        exit = enter = appear = timeout;
        if (timeout != null && typeof timeout !== 'number') {
            exit = timeout.exit;
            enter = timeout.enter; // TODO: remove fallback for next major
            appear = timeout.appear !== undefined ? timeout.appear : enter;
        }
        return {
            exit: exit,
            enter: enter,
            appear: appear
        };
    };
    _proto.updateStatus = function updateStatus(mounting, nextStatus) {
        if (mounting === void 0) mounting = false;
        if (nextStatus !== null) {
            // nextStatus will always be ENTERING or EXITING.
            this.cancelNextCallback();
            if (nextStatus === ENTERING) this.performEnter(mounting);
            else this.performExit();
        } else if (this.props.unmountOnExit && this.state.status === EXITED) this.setState({
            status: UNMOUNTED
        });
    };
    _proto.performEnter = function performEnter(mounting) {
        var _this2 = this;
        var enter = this.props.enter;
        var appearing = this.context ? this.context.isMounting : mounting;
        var _ref2 = this.props.nodeRef ? [
            appearing
        ] : [
            _reactDomDefault.default.findDOMNode(this),
            appearing
        ], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
        var timeouts = this.getTimeouts();
        var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
        // if we are mounting and running this it means appear _must_ be set
        if (!mounting && !enter || _configDefault.default.disabled) {
            this.safeSetState({
                status: ENTERED
            }, function() {
                _this2.props.onEntered(maybeNode);
            });
            return;
        }
        this.props.onEnter(maybeNode, maybeAppearing);
        this.safeSetState({
            status: ENTERING
        }, function() {
            _this2.props.onEntering(maybeNode, maybeAppearing);
            _this2.onTransitionEnd(enterTimeout, function() {
                _this2.safeSetState({
                    status: ENTERED
                }, function() {
                    _this2.props.onEntered(maybeNode, maybeAppearing);
                });
            });
        });
    };
    _proto.performExit = function performExit() {
        var _this3 = this;
        var exit = this.props.exit;
        var timeouts = this.getTimeouts();
        var maybeNode = this.props.nodeRef ? undefined : _reactDomDefault.default.findDOMNode(this); // no exit animation skip right to EXITED
        if (!exit || _configDefault.default.disabled) {
            this.safeSetState({
                status: EXITED
            }, function() {
                _this3.props.onExited(maybeNode);
            });
            return;
        }
        this.props.onExit(maybeNode);
        this.safeSetState({
            status: EXITING
        }, function() {
            _this3.props.onExiting(maybeNode);
            _this3.onTransitionEnd(timeouts.exit, function() {
                _this3.safeSetState({
                    status: EXITED
                }, function() {
                    _this3.props.onExited(maybeNode);
                });
            });
        });
    };
    _proto.cancelNextCallback = function cancelNextCallback() {
        if (this.nextCallback !== null) {
            this.nextCallback.cancel();
            this.nextCallback = null;
        }
    };
    _proto.safeSetState = function safeSetState(nextState, callback) {
        // This shouldn't be necessary, but there are weird race conditions with
        // setState callbacks and unmounting in testing, so always make sure that
        // we can cancel any pending setState callbacks after we unmount.
        callback = this.setNextCallback(callback);
        this.setState(nextState, callback);
    };
    _proto.setNextCallback = function setNextCallback(callback) {
        var _this4 = this;
        var active = true;
        this.nextCallback = function(event) {
            if (active) {
                active = false;
                _this4.nextCallback = null;
                callback(event);
            }
        };
        this.nextCallback.cancel = function() {
            active = false;
        };
        return this.nextCallback;
    };
    _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
        this.setNextCallback(handler);
        var node = this.props.nodeRef ? this.props.nodeRef.current : _reactDomDefault.default.findDOMNode(this);
        var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
        if (!node || doesNotHaveTimeoutOrListener) {
            setTimeout(this.nextCallback, 0);
            return;
        }
        if (this.props.addEndListener) {
            var _ref3 = this.props.nodeRef ? [
                this.nextCallback
            ] : [
                node,
                this.nextCallback
            ], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
            this.props.addEndListener(maybeNode, maybeNextCallback);
        }
        if (timeout != null) setTimeout(this.nextCallback, timeout);
    };
    _proto.render = function render() {
        var status = this.state.status;
        if (status === UNMOUNTED) return null;
        var _this$props = this.props, children = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLooseDefault.default(_this$props, [
            "children",
            "in",
            "mountOnEnter",
            "unmountOnExit",
            "appear",
            "enter",
            "exit",
            "timeout",
            "addEndListener",
            "onEnter",
            "onEntering",
            "onEntered",
            "onExit",
            "onExiting",
            "onExited",
            "nodeRef"
        ]);
        return(/*#__PURE__*/ // allows for nested Transitions
        _reactDefault.default.createElement(_transitionGroupContextDefault.default.Provider, {
            value: null
        }, typeof children === 'function' ? children(status, childProps) : _reactDefault.default.cloneElement(_reactDefault.default.Children.only(children), childProps)));
    };
    return Transition1;
}(_reactDefault.default.Component);
Transition.contextType = _transitionGroupContextDefault.default;
Transition.propTypes = {
    /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */ nodeRef: _propTypesDefault.default.shape({
        current: typeof Element === 'undefined' ? _propTypesDefault.default.any : function(propValue, key, componentName, location, propFullName, secret) {
            var value = propValue[key];
            return _propTypesDefault.default.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
        }
    }),
    /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */ children: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.func.isRequired,
        _propTypesDefault.default.element.isRequired
    ]).isRequired,
    /**
   * Show the component; triggers the enter or exit states
   */ in: _propTypesDefault.default.bool,
    /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */ mountOnEnter: _propTypesDefault.default.bool,
    /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */ unmountOnExit: _propTypesDefault.default.bool,
    /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */ appear: _propTypesDefault.default.bool,
    /**
   * Enable or disable enter transitions.
   */ enter: _propTypesDefault.default.bool,
    /**
   * Enable or disable exit transitions.
   */ exit: _propTypesDefault.default.bool,
    /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */ timeout: function timeout(props) {
        var pt = _propTypes1.timeoutsShape;
        if (!props.addEndListener) pt = pt.isRequired;
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        return pt.apply(void 0, [
            props
        ].concat(args));
    },
    /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */ addEndListener: _propTypesDefault.default.func,
    /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */ onEnter: _propTypesDefault.default.func,
    /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */ onEntering: _propTypesDefault.default.func,
    /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */ onEntered: _propTypesDefault.default.func,
    /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */ onExit: _propTypesDefault.default.func,
    /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */ onExiting: _propTypesDefault.default.func,
    /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */ onExited: _propTypesDefault.default.func
}; // Name the function so it is clearer in the documentation
function noop() {
}
Transition.defaultProps = {
    in: false,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    enter: true,
    exit: true,
    onEnter: noop,
    onEntering: noop,
    onEntered: noop,
    onExit: noop,
    onExiting: noop,
    onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
exports.default = Transition;

},{"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"9unNO","@babel/runtime/helpers/esm/inheritsLoose":"6cZja","prop-types":"2bysO","react":"4mchR","react-dom":"afyCw","./config":"33G8w","./utils/PropTypes":"kLICv","./TransitionGroupContext":"frJY2","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"9unNO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {
    };
    var target = {
    };
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
exports.default = _objectWithoutPropertiesLoose;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"6cZja":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _setPrototypeOfJs = require("./setPrototypeOf.js");
var _setPrototypeOfJsDefault = parcelHelpers.interopDefault(_setPrototypeOfJs);
function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    _setPrototypeOfJsDefault.default(subClass, superClass);
}
exports.default = _inheritsLoose;

},{"./setPrototypeOf.js":"fhfrK","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"fhfrK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _setPrototypeOf(o1, p1) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o1, p1);
}
exports.default = _setPrototypeOf;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"33G8w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = {
    disabled: false
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"kLICv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "timeoutsShape", ()=>timeoutsShape
);
parcelHelpers.export(exports, "classNamesShape", ()=>classNamesShape
);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var timeoutsShape = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.number,
    _propTypesDefault.default.shape({
        enter: _propTypesDefault.default.number,
        exit: _propTypesDefault.default.number,
        appear: _propTypesDefault.default.number
    }).isRequired
]);
var classNamesShape = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.string,
    _propTypesDefault.default.shape({
        enter: _propTypesDefault.default.string,
        exit: _propTypesDefault.default.string,
        active: _propTypesDefault.default.string
    }),
    _propTypesDefault.default.shape({
        enter: _propTypesDefault.default.string,
        enterDone: _propTypesDefault.default.string,
        enterActive: _propTypesDefault.default.string,
        exit: _propTypesDefault.default.string,
        exitDone: _propTypesDefault.default.string,
        exitActive: _propTypesDefault.default.string
    })
]);

},{"prop-types":"2bysO","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"frJY2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
exports.default = _reactDefault.default.createContext(null);

},{"react":"4mchR","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV"}],"jhIbL":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$60b2 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$60b2.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _tab = require("./Tab");
var _tabDefault = parcelHelpers.interopDefault(_tab);
var _appCss = require("./App.css");
class Tabs extends _react.Component {
    render() {
        const { onClickTabItem , props: { children ,  } , state: { activeTab ,  }  } = this;
        return(/*#__PURE__*/ _jsxDevRuntime.jsxDEV("div", {
            className: "tabs",
            children: [
                /*#__PURE__*/ _jsxDevRuntime.jsxDEV("ol", {
                    className: "tab-list",
                    children: children.map((child)=>{
                        const { label  } = child.props;
                        return(/*#__PURE__*/ _jsxDevRuntime.jsxDEV(_tabDefault.default, {
                            activeTab: activeTab,
                            label: label,
                            onClick: onClickTabItem
                        }, label, false, {
                            fileName: "src/Tabs.js",
                            lineNumber: 25,
                            columnNumber: 19
                        }, this));
                    })
                }, void 0, false, {
                    fileName: "src/Tabs.js",
                    lineNumber: 20,
                    columnNumber: 13
                }, this),
                /*#__PURE__*/ _jsxDevRuntime.jsxDEV("div", {
                    className: "tab-content",
                    children: children.map((child)=>{
                        if (child.props.label !== activeTab) return undefined;
                        return child.props.children;
                    })
                }, void 0, false, {
                    fileName: "src/Tabs.js",
                    lineNumber: 34,
                    columnNumber: 13
                }, this)
            ]
        }, void 0, true, {
            fileName: "src/Tabs.js",
            lineNumber: 19,
            columnNumber: 11
        }, this));
    }
    static propTypes = {
        children: _propTypesDefault.default.instanceOf(Array).isRequired
    };
    constructor(props){
        super(props);
        this.state = {
            activeTab: this.props.children[0].props.label
        };
    }
    onClickTabItem = (tab)=>{
        this.setState({
            activeTab: tab
        });
    };
}
exports.default = Tabs;

  $parcel$ReactRefreshHelpers$60b2.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"3jZUD","react":"4mchR","prop-types":"2bysO","./Tab":"t3mJo","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"9pz13","./App.css":"l08wk"}],"t3mJo":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$282e = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$282e.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
class Tab extends _react.Component {
    static propTypes = {
        activeTab: _propTypesDefault.default.string.isRequired,
        label: _propTypesDefault.default.string.isRequired,
        onClick: _propTypesDefault.default.func.isRequired
    };
    onClick = ()=>{
        const { label , onClick  } = this.props;
        onClick(label);
    };
    render() {
        const { onClick , props: { activeTab , label ,  } ,  } = this;
        let className = 'tab-list-item';
        if (activeTab === label) className += ' tab-list-active';
        return(/*#__PURE__*/ _jsxDevRuntime.jsxDEV("li", {
            className: className,
            onClick: onClick,
            children: label
        }, void 0, false, {
            fileName: "src/Tab.js",
            lineNumber: 32,
            columnNumber: 7
        }, this));
    }
}
exports.default = Tab;

  $parcel$ReactRefreshHelpers$282e.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"3jZUD","react":"4mchR","prop-types":"2bysO","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"9pz13"}],"l08wk":[function() {},{}],"7KYeb":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$7a76 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$7a76.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PicturePage", ()=>PicturePage
);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _reactRouterDom = require("react-router-dom");
var _logoSvg = require("./logo.svg");
var _logoSvgDefault = parcelHelpers.interopDefault(_logoSvg);
function PicturePage() {
    return(/*#__PURE__*/ _jsxDevRuntime.jsxDEV(_jsxDevRuntime.Fragment, {
        children: /*#__PURE__*/ _jsxDevRuntime.jsxDEV("main", {
            children: [
                /*#__PURE__*/ _jsxDevRuntime.jsxDEV("h2", {
                    children: "This page has a picture."
                }, void 0, false, {
                    fileName: "src/PicturePage.js",
                    lineNumber: 8,
                    columnNumber: 17
                }, this),
                /*#__PURE__*/ _jsxDevRuntime.jsxDEV("p", {
                    children: /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_reactRouterDom.Link, {
                        to: "/",
                        children: "Back to the Home page"
                    }, void 0, false, {
                        fileName: "src/PicturePage.js",
                        lineNumber: 10,
                        columnNumber: 17
                    }, this)
                }, void 0, false, {
                    fileName: "src/PicturePage.js",
                    lineNumber: 9,
                    columnNumber: 17
                }, this),
                "Here's the picture:",
                /*#__PURE__*/ _jsxDevRuntime.jsxDEV("img", {
                    src: _logoSvgDefault.default,
                    className: "App-logo",
                    alt: "logo"
                }, void 0, false, {
                    fileName: "src/PicturePage.js",
                    lineNumber: 13,
                    columnNumber: 17
                }, this)
            ]
        }, void 0, true, {
            fileName: "src/PicturePage.js",
            lineNumber: 7,
            columnNumber: 13
        }, this)
    }, void 0, false));
}
_c = PicturePage;
exports.default = PicturePage;
var _c;
$RefreshReg$(_c, "PicturePage");

  $parcel$ReactRefreshHelpers$7a76.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"3jZUD","react-router-dom":"16kZP","./logo.svg":"aYL10","@parcel/transformer-js/src/esmodule-helpers.js":"ciiiV","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"9pz13"}],"aYL10":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('hjDlF') + "logo.8d31b1c9.svg" + "?" + Date.now();

},{"./helpers/bundle-url":"chiK4"}],"chiK4":[function(require,module,exports) {
"use strict";
var bundleURL = {
};
function getBundleURLCached(id) {
    var value = bundleURL[id];
    if (!value) {
        value = getBundleURL();
        bundleURL[id] = value;
    }
    return value;
}
function getBundleURL() {
    try {
        throw new Error();
    } catch (err) {
        var matches = ('' + err.stack).match(/(https?|file|ftp):\/\/[^)\n]+/g);
        if (matches) // The first two stack frames will be this function and getBundleURLCached.
        // Use the 3rd one, which will be a runtime in the original bundle.
        return getBaseURL(matches[2]);
    }
    return '/';
}
function getBaseURL(url) {
    return ('' + url).replace(/^((?:https?|file|ftp):\/\/.+)\/[^/]+$/, '$1') + '/';
} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.
function getOrigin(url) {
    var matches = ('' + url).match(/(https?|file|ftp):\/\/[^/]+/);
    if (!matches) throw new Error('Origin not found');
    return matches[0];
}
exports.getBundleURL = getBundleURLCached;
exports.getBaseURL = getBaseURL;
exports.getOrigin = getOrigin;

},{}],"jVQ7g":[function(require,module,exports) {
!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.mongoose = e() : t.mongoose = e();
}("undefined" != typeof self ? self : this, function() {
    return (function(t1) {
        var e1 = {
        };
        function r(n) {
            if (e1[n]) return e1[n].exports;
            var i = e1[n] = {
                i: n,
                l: !1,
                exports: {
                }
            };
            return t1[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports;
        }
        return r.m = t1, r.c = e1, r.d = function(t, e, n) {
            r.o(t, e) || Object.defineProperty(t, e, {
                enumerable: !0,
                get: n
            });
        }, r.r = function(t) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(t, "__esModule", {
                value: !0
            });
        }, r.t = function(t, e) {
            if (1 & e && (t = r(t)), 8 & e) return t;
            if (4 & e && "object" == typeof t && t && t.__esModule) return t;
            var n = Object.create(null);
            if (r.r(n), Object.defineProperty(n, "default", {
                enumerable: !0,
                value: t
            }), 2 & e && "string" != typeof t) for(var i in t)r.d(n, i, (function(e) {
                return t[e];
            }).bind(null, i));
            return n;
        }, r.n = function(t) {
            var e = t && t.__esModule ? function() {
                return t.default;
            } : function() {
                return t;
            };
            return r.d(e, "a", e), e;
        }, r.o = function(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e);
        }, r.p = "", r(r.s = 175);
    })([
        function(t2, e2) {
            "function" == typeof Object.create ? t2.exports = function(t, e) {
                e && (t.super_ = e, t.prototype = Object.create(e.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }));
            } : t2.exports = function(t, e) {
                if (e) {
                    t.super_ = e;
                    var r = function() {
                    };
                    r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t;
                }
            };
        },
        function(t, e, r) {
            "use strict";
            e.arrayAtomicsBackupSymbol = Symbol("mongoose#Array#atomicsBackup"), e.arrayAtomicsSymbol = Symbol("mongoose#Array#_atomics"), e.arrayParentSymbol = Symbol("mongoose#Array#_parent"), e.arrayPathSymbol = Symbol("mongoose#Array#_path"), e.arraySchemaSymbol = Symbol("mongoose#Array#_schema"), e.documentArrayParent = Symbol("mongoose:documentArrayParent"), e.documentIsSelected = Symbol("mongoose#Document#isSelected"), e.documentIsModified = Symbol("mongoose#Document#isModified"), e.documentModifiedPaths = Symbol("mongoose#Document#modifiedPaths"), e.documentSchemaSymbol = Symbol("mongoose#Document#schema"), e.getSymbol = Symbol("mongoose#Document#get"), e.modelSymbol = Symbol("mongoose#Model"), e.objectIdSymbol = Symbol("mongoose#ObjectId"), e.populateModelSymbol = Symbol("mongoose.PopulateOptions#Model"), e.schemaTypeSymbol = Symbol("mongoose#schemaType"), e.sessionNewDocuments = Symbol("mongoose:ClientSession#newDocuments"), e.scopeSymbol = Symbol("mongoose#Document#scope"), e.validatorErrorSymbol = Symbol("mongoose:validatorError");
        },
        function(t3, e3, r1) {
            var n1 = r1(3), i = n1.Buffer;
            function o(t, e) {
                for(var r in t)e[r] = t[r];
            }
            function s(t, e, r) {
                return i(t, e, r);
            }
            i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t3.exports = n1 : (o(n1, e3), e3.Buffer = s), o(i, s), s.from = function(t, e, r) {
                if ("number" == typeof t) throw new TypeError("Argument must not be a number");
                return i(t, e, r);
            }, s.alloc = function(t, e, r) {
                if ("number" != typeof t) throw new TypeError("Argument must be a number");
                var n = i(t);
                return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n;
            }, s.allocUnsafe = function(t) {
                if ("number" != typeof t) throw new TypeError("Argument must be a number");
                return i(t);
            }, s.allocUnsafeSlow = function(t) {
                if ("number" != typeof t) throw new TypeError("Argument must be a number");
                return n1.SlowBuffer(t);
            };
        },
        function(t4, e4, r2) {
            "use strict";
            (function(t5) {
                /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */ var n2 = r2(177), i1 = r2(178), o1 = r2(93);
                function s1() {
                    return u1.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
                }
                function a1(t, e) {
                    if (s1() < e) throw new RangeError("Invalid typed array length");
                    return u1.TYPED_ARRAY_SUPPORT ? (t = new Uint8Array(e)).__proto__ = u1.prototype : (null === t && (t = new u1(e)), t.length = e), t;
                }
                function u1(t, e, r) {
                    if (!(u1.TYPED_ARRAY_SUPPORT || this instanceof u1)) return new u1(t, e, r);
                    if ("number" == typeof t) {
                        if ("string" == typeof e) throw new Error("If encoding is specified then the first argument must be a string");
                        return c1(this, t);
                    }
                    return h1(this, t, e, r);
                }
                function h1(t6, e5, r3, n3) {
                    if ("number" == typeof e5) throw new TypeError('"value" argument must not be a number');
                    return "undefined" != typeof ArrayBuffer && e5 instanceof ArrayBuffer ? (function(t, e, r, n) {
                        if (e.byteLength, r < 0 || e.byteLength < r) throw new RangeError("'offset' is out of bounds");
                        if (e.byteLength < r + (n || 0)) throw new RangeError("'length' is out of bounds");
                        e = void 0 === r && void 0 === n ? new Uint8Array(e) : void 0 === n ? new Uint8Array(e, r) : new Uint8Array(e, r, n);
                        u1.TYPED_ARRAY_SUPPORT ? (t = e).__proto__ = u1.prototype : t = l1(t, e);
                        return t;
                    })(t6, e5, r3, n3) : "string" == typeof e5 ? (function(t, e, r) {
                        "string" == typeof r && "" !== r || (r = "utf8");
                        if (!u1.isEncoding(r)) throw new TypeError('"encoding" must be a valid string encoding');
                        var n = 0 | p(e, r), i = (t = a1(t, n)).write(e, r);
                        i !== n && (t = t.slice(0, i));
                        return t;
                    })(t6, e5, r3) : (function(t, e) {
                        if (u1.isBuffer(e)) {
                            var r = 0 | d(e.length);
                            return 0 === (t = a1(t, r)).length || e.copy(t, 0, 0, r), t;
                        }
                        if (e) {
                            if ("undefined" != typeof ArrayBuffer && e.buffer instanceof ArrayBuffer || "length" in e) return "number" != typeof e.length || (n = e.length) != n ? a1(t, 0) : l1(t, e);
                            if ("Buffer" === e.type && o1(e.data)) return l1(t, e.data);
                        }
                        var n;
                        throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
                    })(t6, e5);
                }
                function f1(t) {
                    if ("number" != typeof t) throw new TypeError('"size" argument must be a number');
                    if (t < 0) throw new RangeError('"size" argument must not be negative');
                }
                function c1(t, e) {
                    if (f1(e), t = a1(t, e < 0 ? 0 : 0 | d(e)), !u1.TYPED_ARRAY_SUPPORT) for(var r = 0; r < e; ++r)t[r] = 0;
                    return t;
                }
                function l1(t, e) {
                    var r = e.length < 0 ? 0 : 0 | d(e.length);
                    t = a1(t, r);
                    for(var n = 0; n < r; n += 1)t[n] = 255 & e[n];
                    return t;
                }
                function d(t) {
                    if (t >= s1()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s1().toString(16) + " bytes");
                    return 0 | t;
                }
                function p(t, e) {
                    if (u1.isBuffer(t)) return t.length;
                    if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)) return t.byteLength;
                    "string" != typeof t && (t = "" + t);
                    var r = t.length;
                    if (0 === r) return 0;
                    for(var n = !1;;)switch(e){
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return r;
                        case "utf8":
                        case "utf-8":
                        case void 0:
                            return q(t).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return 2 * r;
                        case "hex":
                            return r >>> 1;
                        case "base64":
                            return U(t).length;
                        default:
                            if (n) return q(t).length;
                            e = ("" + e).toLowerCase(), n = !0;
                    }
                }
                function y(t, e, r) {
                    var n = !1;
                    if ((void 0 === e || e < 0) && (e = 0), e > this.length) return "";
                    if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return "";
                    if ((r >>>= 0) <= (e >>>= 0)) return "";
                    for(t || (t = "utf8");;)switch(t){
                        case "hex":
                            return j(this, e, r);
                        case "utf8":
                        case "utf-8":
                            return E(this, e, r);
                        case "ascii":
                            return x(this, e, r);
                        case "latin1":
                        case "binary":
                            return k(this, e, r);
                        case "base64":
                            return A(this, e, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return $(this, e, r);
                        default:
                            if (n) throw new TypeError("Unknown encoding: " + t);
                            t = (t + "").toLowerCase(), n = !0;
                    }
                }
                function m(t, e, r) {
                    var n = t[e];
                    t[e] = t[r], t[r] = n;
                }
                function b(t, e, r, n, i) {
                    if (0 === t.length) return -1;
                    if ("string" == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, isNaN(r) && (r = i ? 0 : t.length - 1), r < 0 && (r = t.length + r), r >= t.length) {
                        if (i) return -1;
                        r = t.length - 1;
                    } else if (r < 0) {
                        if (!i) return -1;
                        r = 0;
                    }
                    if ("string" == typeof e && (e = u1.from(e, n)), u1.isBuffer(e)) return 0 === e.length ? -1 : v(t, e, r, n, i);
                    if ("number" == typeof e) return e &= 255, u1.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(t, e, r) : Uint8Array.prototype.lastIndexOf.call(t, e, r) : v(t, [
                        e
                    ], r, n, i);
                    throw new TypeError("val must be string, number or Buffer");
                }
                function v(t7, e6, r, n, i) {
                    var o, s = 1, a = t7.length, u = e6.length;
                    if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                        if (t7.length < 2 || e6.length < 2) return -1;
                        s = 2, a /= 2, u /= 2, r /= 2;
                    }
                    function h(t, e) {
                        return 1 === s ? t[e] : t.readUInt16BE(e * s);
                    }
                    if (i) {
                        var f = -1;
                        for(o = r; o < a; o++)if (h(t7, o) === h(e6, -1 === f ? 0 : o - f)) {
                            if (-1 === f && (f = o), o - f + 1 === u) return f * s;
                        } else -1 !== f && (o -= o - f), f = -1;
                    } else for(r + u > a && (r = a - u), o = r; o >= 0; o--){
                        for(var c = !0, l = 0; l < u; l++)if (h(t7, o + l) !== h(e6, l)) {
                            c = !1;
                            break;
                        }
                        if (c) return o;
                    }
                    return -1;
                }
                function g(t, e, r, n) {
                    r = Number(r) || 0;
                    var i = t.length - r;
                    n ? (n = Number(n)) > i && (n = i) : n = i;
                    var o = e.length;
                    if (o % 2 != 0) throw new TypeError("Invalid hex string");
                    n > o / 2 && (n = o / 2);
                    for(var s = 0; s < n; ++s){
                        var a = parseInt(e.substr(2 * s, 2), 16);
                        if (isNaN(a)) return s;
                        t[r + s] = a;
                    }
                    return s;
                }
                function w(t, e, r, n) {
                    return F(q(e, t.length - r), t, r, n);
                }
                function _(t8, e7, r4, n) {
                    return F(function(t) {
                        for(var e = [], r = 0; r < t.length; ++r)e.push(255 & t.charCodeAt(r));
                        return e;
                    }(e7), t8, r4, n);
                }
                function M(t, e, r, n) {
                    return _(t, e, r, n);
                }
                function S(t, e, r, n) {
                    return F(U(e), t, r, n);
                }
                function O(t9, e8, r5, n4) {
                    return F(function(t, e) {
                        for(var r, n, i, o = [], s = 0; s < t.length && !((e -= 2) < 0); ++s)r = t.charCodeAt(s), n = r >> 8, i = r % 256, o.push(i), o.push(n);
                        return o;
                    }(e8, t9.length - r5), t9, r5, n4);
                }
                function A(t, e, r) {
                    return 0 === e && r === t.length ? n2.fromByteArray(t) : n2.fromByteArray(t.slice(e, r));
                }
                function E(t10, e9, r6) {
                    r6 = Math.min(t10.length, r6);
                    for(var n5 = [], i = e9; i < r6;){
                        var o, s, a, u, h = t10[i], f = null, c = h > 239 ? 4 : h > 223 ? 3 : h > 191 ? 2 : 1;
                        if (i + c <= r6) switch(c){
                            case 1:
                                h < 128 && (f = h);
                                break;
                            case 2:
                                128 == (192 & (o = t10[i + 1])) && (u = (31 & h) << 6 | 63 & o) > 127 && (f = u);
                                break;
                            case 3:
                                o = t10[i + 1], s = t10[i + 2], 128 == (192 & o) && 128 == (192 & s) && (u = (15 & h) << 12 | (63 & o) << 6 | 63 & s) > 2047 && (u < 55296 || u > 57343) && (f = u);
                                break;
                            case 4:
                                o = t10[i + 1], s = t10[i + 2], a = t10[i + 3], 128 == (192 & o) && 128 == (192 & s) && 128 == (192 & a) && (u = (15 & h) << 18 | (63 & o) << 12 | (63 & s) << 6 | 63 & a) > 65535 && u < 1114112 && (f = u);
                        }
                        null === f ? (f = 65533, c = 1) : f > 65535 && (f -= 65536, n5.push(f >>> 10 & 1023 | 55296), f = 56320 | 1023 & f), n5.push(f), i += c;
                    }
                    return (function(t) {
                        var e = t.length;
                        if (e <= 4096) return String.fromCharCode.apply(String, t);
                        var r = "", n = 0;
                        for(; n < e;)r += String.fromCharCode.apply(String, t.slice(n, n += 4096));
                        return r;
                    })(n5);
                }
                e4.Buffer = u1, e4.SlowBuffer = function(t) {
                    +t != t && (t = 0);
                    return u1.alloc(+t);
                }, e4.INSPECT_MAX_BYTES = 50, u1.TYPED_ARRAY_SUPPORT = void 0 !== t5.TYPED_ARRAY_SUPPORT ? t5.TYPED_ARRAY_SUPPORT : (function() {
                    try {
                        var t = new Uint8Array(1);
                        return t.__proto__ = {
                            __proto__: Uint8Array.prototype,
                            foo: function() {
                                return 42;
                            }
                        }, 42 === t.foo() && "function" == typeof t.subarray && 0 === t.subarray(1, 1).byteLength;
                    } catch (t) {
                        return !1;
                    }
                })(), e4.kMaxLength = s1(), u1.poolSize = 8192, u1._augment = function(t) {
                    return t.__proto__ = u1.prototype, t;
                }, u1.from = function(t, e, r) {
                    return h1(null, t, e, r);
                }, u1.TYPED_ARRAY_SUPPORT && (u1.prototype.__proto__ = Uint8Array.prototype, u1.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && u1[Symbol.species] === u1 && Object.defineProperty(u1, Symbol.species, {
                    value: null,
                    configurable: !0
                })), u1.alloc = function(t11, e10, r7) {
                    return (function(t, e, r, n) {
                        return f1(e), e <= 0 ? a1(t, e) : void 0 !== r ? "string" == typeof n ? a1(t, e).fill(r, n) : a1(t, e).fill(r) : a1(t, e);
                    })(null, t11, e10, r7);
                }, u1.allocUnsafe = function(t) {
                    return c1(null, t);
                }, u1.allocUnsafeSlow = function(t) {
                    return c1(null, t);
                }, u1.isBuffer = function(t) {
                    return !(null == t || !t._isBuffer);
                }, u1.compare = function(t, e) {
                    if (!u1.isBuffer(t) || !u1.isBuffer(e)) throw new TypeError("Arguments must be Buffers");
                    if (t === e) return 0;
                    for(var r = t.length, n = e.length, i = 0, o = Math.min(r, n); i < o; ++i)if (t[i] !== e[i]) {
                        r = t[i], n = e[i];
                        break;
                    }
                    return r < n ? -1 : n < r ? 1 : 0;
                }, u1.isEncoding = function(t) {
                    switch(String(t).toLowerCase()){
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "latin1":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return !0;
                        default:
                            return !1;
                    }
                }, u1.concat = function(t, e) {
                    if (!o1(t)) throw new TypeError('"list" argument must be an Array of Buffers');
                    if (0 === t.length) return u1.alloc(0);
                    var r;
                    if (void 0 === e) for(e = 0, r = 0; r < t.length; ++r)e += t[r].length;
                    var n = u1.allocUnsafe(e), i = 0;
                    for(r = 0; r < t.length; ++r){
                        var s = t[r];
                        if (!u1.isBuffer(s)) throw new TypeError('"list" argument must be an Array of Buffers');
                        s.copy(n, i), i += s.length;
                    }
                    return n;
                }, u1.byteLength = p, u1.prototype._isBuffer = !0, u1.prototype.swap16 = function() {
                    var t = this.length;
                    if (t % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                    for(var e = 0; e < t; e += 2)m(this, e, e + 1);
                    return this;
                }, u1.prototype.swap32 = function() {
                    var t = this.length;
                    if (t % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                    for(var e = 0; e < t; e += 4)m(this, e, e + 3), m(this, e + 1, e + 2);
                    return this;
                }, u1.prototype.swap64 = function() {
                    var t = this.length;
                    if (t % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                    for(var e = 0; e < t; e += 8)m(this, e, e + 7), m(this, e + 1, e + 6), m(this, e + 2, e + 5), m(this, e + 3, e + 4);
                    return this;
                }, u1.prototype.toString = function() {
                    var t = 0 | this.length;
                    return 0 === t ? "" : 0 === arguments.length ? E(this, 0, t) : y.apply(this, arguments);
                }, u1.prototype.equals = function(t) {
                    if (!u1.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
                    return this === t || 0 === u1.compare(this, t);
                }, u1.prototype.inspect = function() {
                    var t = "", r = e4.INSPECT_MAX_BYTES;
                    return this.length > 0 && (t = this.toString("hex", 0, r).match(/.{2}/g).join(" "), this.length > r && (t += " ... ")), "<Buffer " + t + ">";
                }, u1.prototype.compare = function(t, e, r, n, i) {
                    if (!u1.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
                    if (void 0 === e && (e = 0), void 0 === r && (r = t ? t.length : 0), void 0 === n && (n = 0), void 0 === i && (i = this.length), e < 0 || r > t.length || n < 0 || i > this.length) throw new RangeError("out of range index");
                    if (n >= i && e >= r) return 0;
                    if (n >= i) return -1;
                    if (e >= r) return 1;
                    if (this === t) return 0;
                    for(var o = (i >>>= 0) - (n >>>= 0), s = (r >>>= 0) - (e >>>= 0), a = Math.min(o, s), h = this.slice(n, i), f = t.slice(e, r), c = 0; c < a; ++c)if (h[c] !== f[c]) {
                        o = h[c], s = f[c];
                        break;
                    }
                    return o < s ? -1 : s < o ? 1 : 0;
                }, u1.prototype.includes = function(t, e, r) {
                    return -1 !== this.indexOf(t, e, r);
                }, u1.prototype.indexOf = function(t, e, r) {
                    return b(this, t, e, r, !0);
                }, u1.prototype.lastIndexOf = function(t, e, r) {
                    return b(this, t, e, r, !1);
                }, u1.prototype.write = function(t, e, r, n) {
                    if (void 0 === e) n = "utf8", r = this.length, e = 0;
                    else if (void 0 === r && "string" == typeof e) n = e, r = this.length, e = 0;
                    else {
                        if (!isFinite(e)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                        e |= 0, isFinite(r) ? (r |= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0);
                    }
                    var i = this.length - e;
                    if ((void 0 === r || r > i) && (r = i), t.length > 0 && (r < 0 || e < 0) || e > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                    n || (n = "utf8");
                    for(var o = !1;;)switch(n){
                        case "hex":
                            return g(this, t, e, r);
                        case "utf8":
                        case "utf-8":
                            return w(this, t, e, r);
                        case "ascii":
                            return _(this, t, e, r);
                        case "latin1":
                        case "binary":
                            return M(this, t, e, r);
                        case "base64":
                            return S(this, t, e, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return O(this, t, e, r);
                        default:
                            if (o) throw new TypeError("Unknown encoding: " + n);
                            n = ("" + n).toLowerCase(), o = !0;
                    }
                }, u1.prototype.toJSON = function() {
                    return {
                        type: "Buffer",
                        data: Array.prototype.slice.call(this._arr || this, 0)
                    };
                };
                function x(t, e, r) {
                    var n = "";
                    r = Math.min(t.length, r);
                    for(var i = e; i < r; ++i)n += String.fromCharCode(127 & t[i]);
                    return n;
                }
                function k(t, e, r) {
                    var n = "";
                    r = Math.min(t.length, r);
                    for(var i = e; i < r; ++i)n += String.fromCharCode(t[i]);
                    return n;
                }
                function j(t, e, r) {
                    var n = t.length;
                    (!e || e < 0) && (e = 0), (!r || r < 0 || r > n) && (r = n);
                    for(var i = "", o = e; o < r; ++o)i += L(t[o]);
                    return i;
                }
                function $(t, e, r) {
                    for(var n = t.slice(e, r), i = "", o = 0; o < n.length; o += 2)i += String.fromCharCode(n[o] + 256 * n[o + 1]);
                    return i;
                }
                function P(t, e, r) {
                    if (t % 1 != 0 || t < 0) throw new RangeError("offset is not uint");
                    if (t + e > r) throw new RangeError("Trying to access beyond buffer length");
                }
                function R(t, e, r, n, i, o) {
                    if (!u1.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance');
                    if (e > i || e < o) throw new RangeError('"value" argument is out of bounds');
                    if (r + n > t.length) throw new RangeError("Index out of range");
                }
                function B(t, e, r, n) {
                    e < 0 && (e = 65535 + e + 1);
                    for(var i = 0, o = Math.min(t.length - r, 2); i < o; ++i)t[r + i] = (e & 255 << 8 * (n ? i : 1 - i)) >>> 8 * (n ? i : 1 - i);
                }
                function T(t, e, r, n) {
                    e < 0 && (e = 4294967295 + e + 1);
                    for(var i = 0, o = Math.min(t.length - r, 4); i < o; ++i)t[r + i] = e >>> 8 * (n ? i : 3 - i) & 255;
                }
                function I(t, e, r, n, i, o) {
                    if (r + n > t.length) throw new RangeError("Index out of range");
                    if (r < 0) throw new RangeError("Index out of range");
                }
                function N(t, e, r, n, o) {
                    return o || I(t, 0, r, 4), i1.write(t, e, r, n, 23, 4), r + 4;
                }
                function D(t, e, r, n, o) {
                    return o || I(t, 0, r, 8), i1.write(t, e, r, n, 52, 8), r + 8;
                }
                u1.prototype.slice = function(t, e) {
                    var r, n = this.length;
                    if ((t = ~~t) < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n), (e = void 0 === e ? n : ~~e) < 0 ? (e += n) < 0 && (e = 0) : e > n && (e = n), e < t && (e = t), u1.TYPED_ARRAY_SUPPORT) (r = this.subarray(t, e)).__proto__ = u1.prototype;
                    else {
                        var i = e - t;
                        r = new u1(i, void 0);
                        for(var o = 0; o < i; ++o)r[o] = this[o + t];
                    }
                    return r;
                }, u1.prototype.readUIntLE = function(t, e, r) {
                    t |= 0, e |= 0, r || P(t, e, this.length);
                    for(var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);)n += this[t + o] * i;
                    return n;
                }, u1.prototype.readUIntBE = function(t, e, r) {
                    t |= 0, e |= 0, r || P(t, e, this.length);
                    for(var n = this[t + --e], i = 1; e > 0 && (i *= 256);)n += this[t + --e] * i;
                    return n;
                }, u1.prototype.readUInt8 = function(t, e) {
                    return e || P(t, 1, this.length), this[t];
                }, u1.prototype.readUInt16LE = function(t, e) {
                    return e || P(t, 2, this.length), this[t] | this[t + 1] << 8;
                }, u1.prototype.readUInt16BE = function(t, e) {
                    return e || P(t, 2, this.length), this[t] << 8 | this[t + 1];
                }, u1.prototype.readUInt32LE = function(t, e) {
                    return e || P(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3];
                }, u1.prototype.readUInt32BE = function(t, e) {
                    return e || P(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);
                }, u1.prototype.readIntLE = function(t, e, r) {
                    t |= 0, e |= 0, r || P(t, e, this.length);
                    for(var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);)n += this[t + o] * i;
                    return n >= (i *= 128) && (n -= Math.pow(2, 8 * e)), n;
                }, u1.prototype.readIntBE = function(t, e, r) {
                    t |= 0, e |= 0, r || P(t, e, this.length);
                    for(var n = e, i = 1, o = this[t + --n]; n > 0 && (i *= 256);)o += this[t + --n] * i;
                    return o >= (i *= 128) && (o -= Math.pow(2, 8 * e)), o;
                }, u1.prototype.readInt8 = function(t, e) {
                    return e || P(t, 1, this.length), 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t];
                }, u1.prototype.readInt16LE = function(t, e) {
                    e || P(t, 2, this.length);
                    var r = this[t] | this[t + 1] << 8;
                    return 32768 & r ? 4294901760 | r : r;
                }, u1.prototype.readInt16BE = function(t, e) {
                    e || P(t, 2, this.length);
                    var r = this[t + 1] | this[t] << 8;
                    return 32768 & r ? 4294901760 | r : r;
                }, u1.prototype.readInt32LE = function(t, e) {
                    return e || P(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;
                }, u1.prototype.readInt32BE = function(t, e) {
                    return e || P(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];
                }, u1.prototype.readFloatLE = function(t, e) {
                    return e || P(t, 4, this.length), i1.read(this, t, !0, 23, 4);
                }, u1.prototype.readFloatBE = function(t, e) {
                    return e || P(t, 4, this.length), i1.read(this, t, !1, 23, 4);
                }, u1.prototype.readDoubleLE = function(t, e) {
                    return e || P(t, 8, this.length), i1.read(this, t, !0, 52, 8);
                }, u1.prototype.readDoubleBE = function(t, e) {
                    return e || P(t, 8, this.length), i1.read(this, t, !1, 52, 8);
                }, u1.prototype.writeUIntLE = function(t, e, r, n) {
                    (t = +t, e |= 0, r |= 0, n) || R(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
                    var i = 1, o = 0;
                    for(this[e] = 255 & t; ++o < r && (i *= 256);)this[e + o] = t / i & 255;
                    return e + r;
                }, u1.prototype.writeUIntBE = function(t, e, r, n) {
                    (t = +t, e |= 0, r |= 0, n) || R(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
                    var i = r - 1, o = 1;
                    for(this[e + i] = 255 & t; --i >= 0 && (o *= 256);)this[e + i] = t / o & 255;
                    return e + r;
                }, u1.prototype.writeUInt8 = function(t, e, r) {
                    return t = +t, e |= 0, r || R(this, t, e, 1, 255, 0), u1.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), this[e] = 255 & t, e + 1;
                }, u1.prototype.writeUInt16LE = function(t, e, r) {
                    return t = +t, e |= 0, r || R(this, t, e, 2, 65535, 0), u1.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8) : B(this, t, e, !0), e + 2;
                }, u1.prototype.writeUInt16BE = function(t, e, r) {
                    return t = +t, e |= 0, r || R(this, t, e, 2, 65535, 0), u1.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8, this[e + 1] = 255 & t) : B(this, t, e, !1), e + 2;
                }, u1.prototype.writeUInt32LE = function(t, e, r) {
                    return t = +t, e |= 0, r || R(this, t, e, 4, 4294967295, 0), u1.TYPED_ARRAY_SUPPORT ? (this[e + 3] = t >>> 24, this[e + 2] = t >>> 16, this[e + 1] = t >>> 8, this[e] = 255 & t) : T(this, t, e, !0), e + 4;
                }, u1.prototype.writeUInt32BE = function(t, e, r) {
                    return t = +t, e |= 0, r || R(this, t, e, 4, 4294967295, 0), u1.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t) : T(this, t, e, !1), e + 4;
                }, u1.prototype.writeIntLE = function(t, e, r, n) {
                    if (t = +t, e |= 0, !n) {
                        var i = Math.pow(2, 8 * r - 1);
                        R(this, t, e, r, i - 1, -i);
                    }
                    var o = 0, s = 1, a = 0;
                    for(this[e] = 255 & t; ++o < r && (s *= 256);)t < 0 && 0 === a && 0 !== this[e + o - 1] && (a = 1), this[e + o] = (t / s >> 0) - a & 255;
                    return e + r;
                }, u1.prototype.writeIntBE = function(t, e, r, n) {
                    if (t = +t, e |= 0, !n) {
                        var i = Math.pow(2, 8 * r - 1);
                        R(this, t, e, r, i - 1, -i);
                    }
                    var o = r - 1, s = 1, a = 0;
                    for(this[e + o] = 255 & t; --o >= 0 && (s *= 256);)t < 0 && 0 === a && 0 !== this[e + o + 1] && (a = 1), this[e + o] = (t / s >> 0) - a & 255;
                    return e + r;
                }, u1.prototype.writeInt8 = function(t, e, r) {
                    return t = +t, e |= 0, r || R(this, t, e, 1, 127, -128), u1.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), t < 0 && (t = 255 + t + 1), this[e] = 255 & t, e + 1;
                }, u1.prototype.writeInt16LE = function(t, e, r) {
                    return t = +t, e |= 0, r || R(this, t, e, 2, 32767, -32768), u1.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8) : B(this, t, e, !0), e + 2;
                }, u1.prototype.writeInt16BE = function(t, e, r) {
                    return t = +t, e |= 0, r || R(this, t, e, 2, 32767, -32768), u1.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8, this[e + 1] = 255 & t) : B(this, t, e, !1), e + 2;
                }, u1.prototype.writeInt32LE = function(t, e, r) {
                    return t = +t, e |= 0, r || R(this, t, e, 4, 2147483647, -2147483648), u1.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8, this[e + 2] = t >>> 16, this[e + 3] = t >>> 24) : T(this, t, e, !0), e + 4;
                }, u1.prototype.writeInt32BE = function(t, e, r) {
                    return t = +t, e |= 0, r || R(this, t, e, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), u1.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t) : T(this, t, e, !1), e + 4;
                }, u1.prototype.writeFloatLE = function(t, e, r) {
                    return N(this, t, e, !0, r);
                }, u1.prototype.writeFloatBE = function(t, e, r) {
                    return N(this, t, e, !1, r);
                }, u1.prototype.writeDoubleLE = function(t, e, r) {
                    return D(this, t, e, !0, r);
                }, u1.prototype.writeDoubleBE = function(t, e, r) {
                    return D(this, t, e, !1, r);
                }, u1.prototype.copy = function(t, e, r, n) {
                    if (r || (r = 0), n || 0 === n || (n = this.length), e >= t.length && (e = t.length), e || (e = 0), n > 0 && n < r && (n = r), n === r) return 0;
                    if (0 === t.length || 0 === this.length) return 0;
                    if (e < 0) throw new RangeError("targetStart out of bounds");
                    if (r < 0 || r >= this.length) throw new RangeError("sourceStart out of bounds");
                    if (n < 0) throw new RangeError("sourceEnd out of bounds");
                    n > this.length && (n = this.length), t.length - e < n - r && (n = t.length - e + r);
                    var i, o = n - r;
                    if (this === t && r < e && e < n) for(i = o - 1; i >= 0; --i)t[i + e] = this[i + r];
                    else if (o < 1000 || !u1.TYPED_ARRAY_SUPPORT) for(i = 0; i < o; ++i)t[i + e] = this[i + r];
                    else Uint8Array.prototype.set.call(t, this.subarray(r, r + o), e);
                    return o;
                }, u1.prototype.fill = function(t, e, r, n) {
                    if ("string" == typeof t) {
                        if ("string" == typeof e ? (n = e, e = 0, r = this.length) : "string" == typeof r && (n = r, r = this.length), 1 === t.length) {
                            var i = t.charCodeAt(0);
                            i < 256 && (t = i);
                        }
                        if (void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
                        if ("string" == typeof n && !u1.isEncoding(n)) throw new TypeError("Unknown encoding: " + n);
                    } else "number" == typeof t && (t &= 255);
                    if (e < 0 || this.length < e || this.length < r) throw new RangeError("Out of range index");
                    if (r <= e) return this;
                    var o;
                    if (e >>>= 0, r = void 0 === r ? this.length : r >>> 0, t || (t = 0), "number" == typeof t) for(o = e; o < r; ++o)this[o] = t;
                    else {
                        var s = u1.isBuffer(t) ? t : q(new u1(t, n).toString()), a = s.length;
                        for(o = 0; o < r - e; ++o)this[o + e] = s[o % a];
                    }
                    return this;
                };
                var C = /[^+\/0-9A-Za-z-_]/g;
                function L(t) {
                    return t < 16 ? "0" + t.toString(16) : t.toString(16);
                }
                function q(t, e) {
                    var r;
                    e = e || 1 / 0;
                    for(var n = t.length, i = null, o = [], s = 0; s < n; ++s){
                        if ((r = t.charCodeAt(s)) > 55295 && r < 57344) {
                            if (!i) {
                                if (r > 56319) {
                                    (e -= 3) > -1 && o.push(239, 191, 189);
                                    continue;
                                }
                                if (s + 1 === n) {
                                    (e -= 3) > -1 && o.push(239, 191, 189);
                                    continue;
                                }
                                i = r;
                                continue;
                            }
                            if (r < 56320) {
                                (e -= 3) > -1 && o.push(239, 191, 189), i = r;
                                continue;
                            }
                            r = 65536 + (i - 55296 << 10 | r - 56320);
                        } else i && (e -= 3) > -1 && o.push(239, 191, 189);
                        if (i = null, r < 128) {
                            if ((e -= 1) < 0) break;
                            o.push(r);
                        } else if (r < 2048) {
                            if ((e -= 2) < 0) break;
                            o.push(r >> 6 | 192, 63 & r | 128);
                        } else if (r < 65536) {
                            if ((e -= 3) < 0) break;
                            o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);
                        } else {
                            if (!(r < 1114112)) throw new Error("Invalid code point");
                            if ((e -= 4) < 0) break;
                            o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);
                        }
                    }
                    return o;
                }
                function U(t12) {
                    return n2.toByteArray(function(t13) {
                        if ((t13 = (function(t) {
                            return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "");
                        })(t13).replace(C, "")).length < 2) return "";
                        for(; t13.length % 4 != 0;)t13 += "=";
                        return t13;
                    }(t12));
                }
                function F(t, e, r, n) {
                    for(var i = 0; i < n && !(i + r >= e.length || i >= t.length); ++i)e[i + r] = t[i];
                    return i;
                }
            }).call(this, r2(6));
        },
        function(t14, e11, r8) {
            "use strict";
            (function(t15, n6) {
                /*!
 * Module dependencies.
 */ function i2(t16, e12) {
                    var r9 = "undefined" != typeof Symbol && t16[Symbol.iterator] || t16["@@iterator"];
                    if (!r9) {
                        if (Array.isArray(t16) || (r9 = (function(t, e) {
                            if (!t) return;
                            if ("string" == typeof t) return o2(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === r && t.constructor && (r = t.constructor.name);
                            if ("Map" === r || "Set" === r) return Array.from(t);
                            if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return o2(t, e);
                        })(t16)) || e12 && t16 && "number" == typeof t16.length) {
                            r9 && (t16 = r9);
                            var n = 0, i = function() {
                            };
                            return {
                                s: i,
                                n: function() {
                                    return n >= t16.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t16[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: i
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var s, a = !0, u = !1;
                    return {
                        s: function() {
                            r9 = r9.call(t16);
                        },
                        n: function() {
                            var t = r9.next();
                            return a = t.done, t;
                        },
                        e: function(t) {
                            u = !0, s = t;
                        },
                        f: function() {
                            try {
                                a || null == r9.return || r9.return();
                            } finally{
                                if (u) throw s;
                            }
                        }
                    };
                }
                function o2(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function s2(t17) {
                    return (s2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t17);
                }
                var a2, u2 = r8(143), h2 = r8(81), f2 = r8(32), c2 = r8(18), l2 = r8(279), d1 = r8(41), p = r8(42), y = r8(33), m = r8(144), b = r8(280), v = r8(146), g = r8(145), w = r8(52), _ = r8(53), M = r8(150), S = r8(82), O = r8(147).trustedSymbol;
                function A(t18) {
                    if (Array.isArray(t18.populate)) {
                        var r = [];
                        t18.populate.forEach(function(t19) {
                            if (/[\s]/.test(t19.path)) {
                                var n = Object.assign({
                                }, t19);
                                n.path.split(" ").forEach(function(t) {
                                    n.path = t, r.push(e11.populate(n)[0]);
                                });
                            } else r.push(e11.populate(t19)[0]);
                        }), t18.populate = e11.populate(r);
                    } else null != t18.populate && "object" === s2(t18.populate) && (t18.populate = e11.populate(t18.populate));
                    var n7 = [], o = t18.path.split(" ");
                    null != t18.options && (t18.options = e11.clone(t18.options));
                    var a, u = i2(o);
                    try {
                        for(u.s(); !(a = u.n()).done;){
                            var h = a.value;
                            n7.push(new l2(Object.assign({
                            }, t18, {
                                path: h
                            })));
                        }
                    } catch (t) {
                        u.e(t);
                    } finally{
                        u.f();
                    }
                    return n7;
                }
                /*!
 * Return the value of `obj` at the given `path`.
 *
 * @param {String} path
 * @param {Object} obj
 */ e11.specialProperties = S, e11.isMongooseArray = m.isMongooseArray, e11.isMongooseDocumentArray = b.isMongooseDocumentArray, e11.registerMongooseArray = m.registerMongooseArray, e11.registerMongooseDocumentArray = b.registerMongooseDocumentArray, /*!
 * Produces a collection name from model `name`. By default, just returns
 * the model name
 *
 * @param {String} name a model name
 * @param {Function} pluralize function that pluralizes the collection name
 * @return {String} a collection name
 * @api private
 */ e11.toCollectionName = function(t, e) {
                    return "system.profile" === t || "system.indexes" === t ? t : "function" == typeof e ? e(t) : t;
                }, /*!
 * Determines if `a` and `b` are deep equal.
 *
 * Modified from node/lib/assert.js
 *
 * @param {any} a a value to compare to `b`
 * @param {any} b a value to compare to `a`
 * @return {Boolean}
 * @api private
 */ e11.deepEqual = function r(n, i) {
                    if (n === i) return !0;
                    if ("object" !== s2(n) || "object" !== s2(i)) return n === i;
                    if (n instanceof Date && i instanceof Date) return n.getTime() === i.getTime();
                    if (v(n, "ObjectID") && v(i, "ObjectID") || v(n, "Decimal128") && v(i, "Decimal128")) return n.toString() === i.toString();
                    if (n instanceof RegExp && i instanceof RegExp) return n.source === i.source && n.ignoreCase === i.ignoreCase && n.multiline === i.multiline && n.global === i.global && n.dotAll === i.dotAll && n.unicode === i.unicode && n.sticky === i.sticky && n.hasIndices === i.hasIndices;
                    if (null == n || null == i) return !1;
                    if (n.prototype !== i.prototype) return !1;
                    if (n instanceof Map || i instanceof Map) return n instanceof Map && i instanceof Map && r(Array.from(n.keys()), Array.from(i.keys())) && r(Array.from(n.values()), Array.from(i.values()));
                    if (n instanceof Number && i instanceof Number) return n.valueOf() === i.valueOf();
                    if (t15.isBuffer(n)) return e11.buffer.areEqual(n, i);
                    if (Array.isArray(n) || Array.isArray(i)) {
                        if (!Array.isArray(n) || !Array.isArray(i)) return !1;
                        var o = n.length;
                        if (o !== i.length) return !1;
                        for(var a = 0; a < o; ++a)if (!r(n[a], i[a])) return !1;
                        return !0;
                    }
                    null != n.$__ ? n = n._doc : w(n) && (n = n.toObject()), null != i.$__ ? i = i._doc : w(i) && (i = i.toObject());
                    var u = Object.keys(n), h = Object.keys(i), f = u.length;
                    if (f !== h.length) return !1;
                    for(var c = f - 1; c >= 0; c--)if (u[c] !== h[c]) return !1;
                    for(var l = 0, d = u; l < d.length; l++){
                        var p = d[l];
                        if (!r(n[p], i[p])) return !1;
                    }
                    return !0;
                }, /*!
 * Get the last element of an array
 */ e11.last = function(t) {
                    if (t.length > 0) return t[t.length - 1];
                }, e11.clone = d1, /*!
 * ignore
 */ e11.promiseOrCallback = _, /*!
 * ignore
 */ e11.cloneArrays = function(t20) {
                    return Array.isArray(t20) ? t20.map(function(t) {
                        return e11.cloneArrays(t);
                    }) : t20;
                }, /*!
 * ignore
 */ e11.omit = function(t, e) {
                    if (null == e) return Object.assign({
                    }, t);
                    Array.isArray(e) || (e = [
                        e
                    ]);
                    var r, n = Object.assign({
                    }, t), o = i2(e);
                    try {
                        for(o.s(); !(r = o.n()).done;)delete n[r.value];
                    } catch (t21) {
                        o.e(t21);
                    } finally{
                        o.f();
                    }
                    return n;
                }, /*!
 * Shallow copies defaults into options.
 *
 * @param {Object} defaults
 * @param {Object} options
 * @return {Object} the merged object
 * @api private
 */ e11.options = function(t, e) {
                    var r, n = Object.keys(t), i = n.length;
                    for(e = e || {
                    }; i--;)(r = n[i]) in e || (e[r] = t[r]);
                    return e;
                }, /*!
 * Merges `from` into `to` without overwriting existing properties.
 *
 * @param {Object} to
 * @param {Object} from
 * @api private
 */ e11.merge = function t(r, n, i, o) {
                    i = i || {
                    };
                    var s, a = Object.keys(n), u = 0, h = a.length;
                    n[O] && (r[O] = n[O]), o = o || "";
                    for(var f = i.omitNested || {
                    }; u < h;)if (s = a[u++], !(i.omit && i.omit[s] || f[o] || S.has(s))) {
                        if (null == r[s]) r[s] = n[s];
                        else if (e11.isObject(n[s])) {
                            if (e11.isObject(r[s]) || (r[s] = {
                            }), null != n[s]) {
                                if (i.isDiscriminatorSchemaMerge && n[s].$isSingleNested && r[s].$isMongooseDocumentArray || n[s].$isMongooseDocumentArray && r[s].$isSingleNested) continue;
                                if (n[s].instanceOfSchema) {
                                    r[s].instanceOfSchema ? M(r[s], n[s].clone(), i.isDiscriminatorSchemaMerge) : r[s] = n[s].clone();
                                    continue;
                                }
                                if (n[s] instanceof c2) {
                                    r[s] = new c2(n[s]);
                                    continue;
                                }
                            }
                            t(r[s], n[s], i, o ? o + "." + s : s);
                        } else i.overwrite && (r[s] = n[s]);
                    }
                }, /*!
 * Applies toObject recursively.
 *
 * @param {Document|Array|Object} obj
 * @return {Object}
 * @api private
 */ e11.toObject = function t(n) {
                    var o;
                    if (a2 || (a2 = r8(13)), null == n) return n;
                    if (n instanceof a2) return n.toObject();
                    if (Array.isArray(n)) {
                        o = [];
                        var s, u = i2(n);
                        try {
                            for(u.s(); !(s = u.n()).done;){
                                var h = s.value;
                                o.push(t(h));
                            }
                        } catch (t) {
                            u.e(t);
                        } finally{
                            u.f();
                        }
                        return o;
                    }
                    if (e11.isPOJO(n)) {
                        o = {
                        }, n[O] && (o[O] = n[O]);
                        for(var f = 0, c = Object.keys(n); f < c.length; f++){
                            var l = c[f];
                            S.has(l) || (o[l] = t(n[l]));
                        }
                        return o;
                    }
                    return n;
                }, e11.isObject = y, /*!
 * Determines if `arg` is a plain old JavaScript object (POJO). Specifically,
 * `arg` must be an object but not an instance of any special class, like String,
 * ObjectId, etc.
 *
 * `Object.getPrototypeOf()` is part of ES5: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf
 *
 * @param {Object|Array|String|Function|RegExp|any} arg
 * @api private
 * @return {Boolean}
 */ e11.isPOJO = function(t) {
                    if (null == t || "object" !== s2(t)) return !1;
                    var e = Object.getPrototypeOf(t);
                    return !e || "Object" === e.constructor.name;
                }, /*!
 * Determines if `arg` is an object that isn't an instance of a built-in value
 * class, like Array, Buffer, ObjectId, etc.
 */ e11.isNonBuiltinObject = function(t) {
                    return "object" === s2(t) && !e11.isNativeObject(t) && !e11.isMongooseType(t) && null != t;
                }, /*!
 * Determines if `obj` is a built-in object like an array, date, boolean,
 * etc.
 */ e11.isNativeObject = function(t) {
                    return Array.isArray(t) || t instanceof Date || t instanceof Boolean || t instanceof Number || t instanceof String;
                }, /*!
 * Determines if `val` is an object that has no own keys
 */ e11.isEmptyObject = function(t) {
                    return null != t && "object" === s2(t) && 0 === Object.keys(t).length;
                }, /*!
 * Search if `obj` or any POJOs nested underneath `obj` has a property named
 * `key`
 */ e11.hasKey = function(t, r) {
                    for(var n = 0, i = Object.keys(t); n < i.length; n++){
                        var o = i[n];
                        if (o === r) return !0;
                        if (e11.isPOJO(t[o]) && e11.hasKey(t[o], r)) return !0;
                    }
                    return !1;
                }, /*!
 * process.nextTick helper.
 *
 * Wraps `callback` in a try/catch + nextTick.
 *
 * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.
 *
 * @param {Function} callback
 * @api private
 */ e11.tick = function(t22) {
                    if ("function" == typeof t22) return function() {
                        try {
                            t22.apply(this, arguments);
                        } catch (t) {
                            p(function() {
                                throw t;
                            });
                        }
                    };
                }, /*!
 * Returns true if `v` is an object that can be serialized as a primitive in
 * MongoDB
 */ e11.isMongooseType = function(e) {
                    return e instanceof c2 || e instanceof f2 || e instanceof t15;
                }, e11.isMongooseObject = w, /*!
 * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.
 *
 * @param {Object} object
 * @api private
 */ e11.expires = function(t) {
                    t && "Object" === t.constructor.name && "expires" in t && (t.expireAfterSeconds = "string" != typeof t.expires ? t.expires : Math.round(u2(t.expires) / 1000), delete t.expires);
                }, /*!
 * populate helper
 */ e11.populate = function(t23, r10, n8, i, o, a, u, h) {
                    var f = null;
                    if (1 === arguments.length) {
                        if (t23 instanceof l2) return [
                            t23
                        ];
                        if (Array.isArray(t23)) {
                            var c = d(t23);
                            return c.map(function(t) {
                                return e11.populate(t)[0];
                            });
                        }
                        f = e11.isObject(t23) ? Object.assign({
                        }, t23) : {
                            path: t23
                        };
                    } else f = "object" === s2(n8) ? {
                        path: t23,
                        select: r10,
                        match: n8,
                        options: i
                    } : {
                        path: t23,
                        select: r10,
                        model: n8,
                        match: i,
                        options: o,
                        populate: a,
                        justOne: u,
                        count: h
                    };
                    if ("string" != typeof f.path) throw new TypeError("utils.populate: invalid path. Expected string. Got typeof `" + s2(t23) + "`");
                    function d(t24) {
                        var e = [];
                        return t24.forEach(function(t) {
                            /[\s]/.test(t.path) ? t.path.split(" ").forEach(function(r) {
                                var n = Object.assign({
                                }, t);
                                n.path = r, e.push(n);
                            }) : e.push(t);
                        }), e;
                    }
                    return A(f);
                }, e11.getValue = function(t, e, r) {
                    return h2.get(t, e, "_doc", r);
                }, /*!
 * Sets the value of `obj` at the given `path`.
 *
 * @param {String} path
 * @param {Anything} val
 * @param {Object} obj
 */ e11.setValue = function(t, e, r, n, i) {
                    h2.set(t, e, r, "_doc", n, i);
                }, /*!
 * Returns an array of values from object `o`.
 *
 * @param {Object} o
 * @return {Array}
 * @private
 */ e11.object = {
                }, e11.object.vals = function(t) {
                    for(var e = Object.keys(t), r = e.length, n = []; r--;)n.push(t[e[r]]);
                    return n;
                }, /*!
 * @see exports.options
 */ e11.object.shallowCopy = e11.options;
                /*!
 * Safer helper for hasOwnProperty checks
 *
 * @param {Object} obj
 * @param {String} prop
 */ var E = Object.prototype.hasOwnProperty;
                e11.object.hasOwnProperty = function(t, e) {
                    return E.call(t, e);
                }, /*!
 * Determine if `val` is null or undefined
 *
 * @return {Boolean}
 */ e11.isNullOrUndefined = function(t) {
                    return null == t;
                }, /*!
 * ignore
 */ e11.array = {
                }, /*!
 * Flattens an array.
 *
 * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]
 *
 * @param {Array} arr
 * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsy value, the item will not be included in the results.
 * @return {Array}
 * @private
 */ e11.array.flatten = function t(e13, r, n) {
                    return n || (n = []), e13.forEach(function(e) {
                        Array.isArray(e) ? t(e, r, n) : r && !r(e) || n.push(e);
                    }), n;
                };
                /*!
 * ignore
 */ var x = Object.prototype.hasOwnProperty;
                e11.hasUserDefinedProperty = function(t, r) {
                    if (null == t) return !1;
                    if (Array.isArray(r)) {
                        var n, o = i2(r);
                        try {
                            for(o.s(); !(n = o.n()).done;){
                                var a = n.value;
                                if (e11.hasUserDefinedProperty(t, a)) return !0;
                            }
                        } catch (t) {
                            o.e(t);
                        } finally{
                            o.f();
                        }
                        return !1;
                    }
                    if (x.call(t, r)) return !0;
                    if ("object" === s2(t) && r in t) {
                        var u = t[r];
                        return u !== Object.prototype[r] && u !== Array.prototype[r];
                    }
                    return !1;
                };
                /*!
 * ignore
 */ var k = Math.pow(2, 32) - 1;
                e11.isArrayIndex = function(t) {
                    return "number" == typeof t ? t >= 0 && t <= k : "string" == typeof t && !!/^\d+$/.test(t) && (t = +t) >= 0 && t <= k;
                }, /*!
 * Removes duplicate values from an array
 *
 * [1, 2, 3, 3, 5] => [1, 2, 3, 5]
 * [ ObjectId("550988ba0c19d57f697dc45e"), ObjectId("550988ba0c19d57f697dc45e") ]
 *    => [ObjectId("550988ba0c19d57f697dc45e")]
 *
 * @param {Array} arr
 * @return {Array}
 * @private
 */ e11.array.unique = function(t) {
                    var e, r = new Set, n = new Set, o = [], s = i2(t);
                    try {
                        for(s.s(); !(e = s.n()).done;){
                            var a = e.value;
                            if ("number" == typeof a || "string" == typeof a || null == a) {
                                if (r.has(a)) continue;
                                o.push(a), r.add(a);
                            } else if (a instanceof c2) {
                                if (n.has(a.toString())) continue;
                                o.push(a), n.add(a.toString());
                            } else o.push(a);
                        }
                    } catch (t25) {
                        s.e(t25);
                    } finally{
                        s.f();
                    }
                    return o;
                }, /*!
 * Determines if two buffers are equal.
 *
 * @param {Buffer} a
 * @param {Object} b
 */ e11.buffer = {
                }, e11.buffer.areEqual = function(e, r) {
                    if (!t15.isBuffer(e)) return !1;
                    if (!t15.isBuffer(r)) return !1;
                    if (e.length !== r.length) return !1;
                    for(var n = 0, i = e.length; n < i; ++n)if (e[n] !== r[n]) return !1;
                    return !0;
                }, e11.getFunctionName = g, /*!
 * Decorate buffers
 */ e11.decorate = function(t, e) {
                    for(var r in e)S.has(r) || (t[r] = e[r]);
                }, e11.mergeClone = function(r, n) {
                    w(n) && (n = n.toObject({
                        transform: !1,
                        virtuals: !1,
                        depopulate: !0,
                        getters: !1,
                        flattenDecimals: !1
                    }));
                    for(var i, o = Object.keys(n), s = o.length, a = 0; a < s;)if (i = o[a++], !S.has(i)) {
                        if (void 0 === r[i]) r[i] = e11.clone(n[i], {
                            transform: !1,
                            virtuals: !1,
                            depopulate: !0,
                            getters: !1,
                            flattenDecimals: !1
                        });
                        else {
                            var u = n[i];
                            if (null == u || !u.valueOf || u instanceof Date || (u = u.valueOf()), e11.isObject(u)) {
                                var h = u;
                                w(u) && !u.isMongooseBuffer && (h = h.toObject({
                                    transform: !1,
                                    virtuals: !1,
                                    depopulate: !0,
                                    getters: !1,
                                    flattenDecimals: !1
                                })), u.isMongooseBuffer && (h = t15.from(h)), e11.mergeClone(r[i], h);
                            } else r[i] = e11.clone(u, {
                                flattenDecimals: !1
                            });
                        }
                    }
                }, e11.each = function(t, e) {
                    var r, n = i2(t);
                    try {
                        for(n.s(); !(r = n.n()).done;)e(r.value);
                    } catch (t26) {
                        n.e(t26);
                    } finally{
                        n.f();
                    }
                }, /*!
 * ignore
 */ e11.getOption = function(t) {
                    var e, r = Array.prototype.slice.call(arguments, 1), n = i2(r);
                    try {
                        for(n.s(); !(e = n.n()).done;){
                            var o = e.value;
                            if (null != o[t]) return o[t];
                        }
                    } catch (t27) {
                        n.e(t27);
                    } finally{
                        n.f();
                    }
                    return null;
                }, /*!
 * ignore
 */ e11.noop = function() {
                }, e11.errorToPOJO = function(t) {
                    if (!(t instanceof Error)) throw new Error("`error` must be `instanceof Error`.");
                    var e, r = {
                    }, n = i2(Object.getOwnPropertyNames(t));
                    try {
                        for(n.s(); !(e = n.n()).done;){
                            var o = e.value;
                            r[o] = t[o];
                        }
                    } catch (t28) {
                        n.e(t28);
                    } finally{
                        n.f();
                    }
                    return r;
                }, /*!
 * ignore
 */ e11.warn = function(t) {
                    return n6.emitWarning(t, {
                        code: "MONGOOSE"
                    });
                };
            }).call(this, r8(3).Buffer, r8(5));
        },
        function(t29, e14) {
            var r11, n, i = t29.exports = {
            };
            function o() {
                throw new Error("setTimeout has not been defined");
            }
            function s() {
                throw new Error("clearTimeout has not been defined");
            }
            function a(t) {
                if (r11 === setTimeout) return setTimeout(t, 0);
                if ((r11 === o || !r11) && setTimeout) return r11 = setTimeout, setTimeout(t, 0);
                try {
                    return r11(t, 0);
                } catch (e) {
                    try {
                        return r11.call(null, t, 0);
                    } catch (e) {
                        return r11.call(this, t, 0);
                    }
                }
            }
            !function() {
                try {
                    r11 = "function" == typeof setTimeout ? setTimeout : o;
                } catch (t) {
                    r11 = o;
                }
                try {
                    n = "function" == typeof clearTimeout ? clearTimeout : s;
                } catch (t30) {
                    n = s;
                }
            }();
            var u, h = [], f = !1, c = -1;
            function l() {
                f && u && (f = !1, u.length ? h = u.concat(h) : c = -1, h.length && d());
            }
            function d() {
                if (!f) {
                    var t31 = a(l);
                    f = !0;
                    for(var e = h.length; e;){
                        for(u = h, h = []; ++c < e;)u && u[c].run();
                        c = -1, e = h.length;
                    }
                    u = null, f = !1, (function(t) {
                        if (n === clearTimeout) return clearTimeout(t);
                        if ((n === s || !n) && clearTimeout) return n = clearTimeout, clearTimeout(t);
                        try {
                            n(t);
                        } catch (e) {
                            try {
                                return n.call(null, t);
                            } catch (e) {
                                return n.call(this, t);
                            }
                        }
                    })(t31);
                }
            }
            function p(t, e) {
                this.fun = t, this.array = e;
            }
            function y() {
            }
            i.nextTick = function(t) {
                var e = new Array(arguments.length - 1);
                if (arguments.length > 1) for(var r = 1; r < arguments.length; r++)e[r - 1] = arguments[r];
                h.push(new p(t, e)), 1 !== h.length || f || a(d);
            }, p.prototype.run = function() {
                this.fun.apply(null, this.array);
            }, i.title = "browser", i.browser = !0, i.env = {
            }, i.argv = [], i.version = "", i.versions = {
            }, i.on = y, i.addListener = y, i.once = y, i.off = y, i.removeListener = y, i.removeAllListeners = y, i.emit = y, i.prependListener = y, i.prependOnceListener = y, i.listeners = function(t) {
                return [];
            }, i.binding = function(t) {
                throw new Error("process.binding is not supported");
            }, i.cwd = function() {
                return "/";
            }, i.chdir = function(t) {
                throw new Error("process.chdir is not supported");
            }, i.umask = function() {
                return 0;
            };
        },
        function(t33, e) {
            function r(t34) {
                return (r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t34);
            }
            var n;
            n = (function() {
                return this;
            })();
            try {
                n = n || new Function("return this")();
            } catch (t) {
                "object" === ("undefined" == typeof window ? "undefined" : r(window)) && (n = window);
            }
            t33.exports = n;
        },
        function(t, e, r) {
            "use strict";
            var n = r(19);
            /*!
 * Module exports.
 */ t.exports = n, n.messages = r(291), n.Messages = n.messages, n.DocumentNotFoundError = r(292), n.CastError = r(20), n.ValidationError = r(151), n.ValidatorError = r(152), n.VersionError = r(293), n.ParallelSaveError = r(294), n.OverwriteModelError = r(295), n.MissingSchemaError = r(296), n.MongooseServerSelectionError = r(297), n.DivergentArrayError = r(301), n.StrictModeError = r(44);
        },
        function(t35, e15, r12) {
            (function(t36) {
                function n9(t37) {
                    return (n9 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t37);
                }
                var i3 = Object.getOwnPropertyDescriptors || function(t) {
                    for(var e = Object.keys(t), r = {
                    }, n = 0; n < e.length; n++)r[e[n]] = Object.getOwnPropertyDescriptor(t, e[n]);
                    return r;
                }, o3 = /%[sdj%]/g;
                e15.format = function(t38) {
                    if (!v(t38)) {
                        for(var e = [], r = 0; r < arguments.length; r++)e.push(u3(arguments[r]));
                        return e.join(" ");
                    }
                    r = 1;
                    for(var n = arguments, i = n.length, s = String(t38).replace(o3, function(t) {
                        if ("%%" === t) return "%";
                        if (r >= i) return t;
                        switch(t){
                            case "%s":
                                return String(n[r++]);
                            case "%d":
                                return Number(n[r++]);
                            case "%j":
                                try {
                                    return JSON.stringify(n[r++]);
                                } catch (t39) {
                                    return "[Circular]";
                                }
                            default:
                                return t;
                        }
                    }), a = n[r]; r < i; a = n[++r])m(a) || !_1(a) ? s += " " + a : s += " " + u3(a);
                    return s;
                }, e15.deprecate = function(r, n) {
                    if (void 0 !== t36 && !0 === t36.noDeprecation) return r;
                    if (void 0 === t36) return function() {
                        return e15.deprecate(r, n).apply(this, arguments);
                    };
                    var i = !1;
                    return function() {
                        if (!i) {
                            if (t36.throwDeprecation) throw new Error(n);
                            t36.traceDeprecation ? console.trace(n) : console.error(n), i = !0;
                        }
                        return r.apply(this, arguments);
                    };
                };
                var s3, a3 = {
                };
                function u3(t, r) {
                    var n = {
                        seen: [],
                        stylize: f3
                    };
                    return arguments.length >= 3 && (n.depth = arguments[2]), arguments.length >= 4 && (n.colors = arguments[3]), y(r) ? n.showHidden = r : r && e15._extend(n, r), g(n.showHidden) && (n.showHidden = !1), g(n.depth) && (n.depth = 2), g(n.colors) && (n.colors = !1), g(n.customInspect) && (n.customInspect = !0), n.colors && (n.stylize = h3), c(n, t, n.depth);
                }
                function h3(t, e) {
                    var r = u3.styles[e];
                    return r ? "[" + u3.colors[r][0] + "m" + t + "[" + u3.colors[r][1] + "m" : t;
                }
                function f3(t, e) {
                    return t;
                }
                function c(t40, r13, n10) {
                    if (t40.customInspect && r13 && O(r13.inspect) && r13.inspect !== e15.inspect && (!r13.constructor || r13.constructor.prototype !== r13)) {
                        var i = r13.inspect(n10, t40);
                        return v(i) || (i = c(t40, i, n10)), i;
                    }
                    var o4 = function(t, e) {
                        if (g(e)) return t.stylize("undefined", "undefined");
                        if (v(e)) {
                            var r = "'" + JSON.stringify(e).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                            return t.stylize(r, "string");
                        }
                        if (b(e)) return t.stylize("" + e, "number");
                        if (y(e)) return t.stylize("" + e, "boolean");
                        if (m(e)) return t.stylize("null", "null");
                    }(t40, r13);
                    if (o4) return o4;
                    var s4 = Object.keys(r13), a4 = function(t) {
                        var e = {
                        };
                        return t.forEach(function(t, r) {
                            e[t] = !0;
                        }), e;
                    }(s4);
                    if (t40.showHidden && (s4 = Object.getOwnPropertyNames(r13)), S(r13) && (s4.indexOf("message") >= 0 || s4.indexOf("description") >= 0)) return l(r13);
                    if (0 === s4.length) {
                        if (O(r13)) {
                            var u = r13.name ? ": " + r13.name : "";
                            return t40.stylize("[Function" + u + "]", "special");
                        }
                        if (w(r13)) return t40.stylize(RegExp.prototype.toString.call(r13), "regexp");
                        if (M(r13)) return t40.stylize(Date.prototype.toString.call(r13), "date");
                        if (S(r13)) return l(r13);
                    }
                    var h, f = "", _ = !1, A = [
                        "{",
                        "}"
                    ];
                    (p(r13) && (_ = !0, A = [
                        "[",
                        "]"
                    ]), O(r13)) && (f = " [Function" + (r13.name ? ": " + r13.name : "") + "]");
                    return w(r13) && (f = " " + RegExp.prototype.toString.call(r13)), M(r13) && (f = " " + Date.prototype.toUTCString.call(r13)), S(r13) && (f = " " + l(r13)), 0 !== s4.length || _ && 0 != r13.length ? n10 < 0 ? w(r13) ? t40.stylize(RegExp.prototype.toString.call(r13), "regexp") : t40.stylize("[Object]", "special") : (t40.seen.push(r13), h = _ ? (function(t, e, r, n, i4) {
                        for(var o = [], s = 0, a = e.length; s < a; ++s)j(e, String(s)) ? o.push(d(t, e, r, n, String(s), !0)) : o.push("");
                        return i4.forEach(function(i) {
                            i.match(/^\d+$/) || o.push(d(t, e, r, n, i, !0));
                        }), o;
                    })(t40, r13, n10, a4, s4) : s4.map(function(e) {
                        return d(t40, r13, n10, a4, e, _);
                    }), t40.seen.pop(), (function(t41, e16, r) {
                        if (t41.reduce(function(t, e) {
                            return e.indexOf("\n"), t + e.replace(/\u001b\[\d\d?m/g, "").length + 1;
                        }, 0) > 60) return r[0] + ("" === e16 ? "" : e16 + "\n ") + " " + t41.join(",\n  ") + " " + r[1];
                        return r[0] + e16 + " " + t41.join(", ") + " " + r[1];
                    })(h, f, A)) : A[0] + f + A[1];
                }
                function l(t) {
                    return "[" + Error.prototype.toString.call(t) + "]";
                }
                function d(t42, e, r, n, i, o) {
                    var s, a, u;
                    if ((u = Object.getOwnPropertyDescriptor(e, i) || {
                        value: e[i]
                    }).get ? a = u.set ? t42.stylize("[Getter/Setter]", "special") : t42.stylize("[Getter]", "special") : u.set && (a = t42.stylize("[Setter]", "special")), j(n, i) || (s = "[" + i + "]"), a || (t42.seen.indexOf(u.value) < 0 ? (a = m(r) ? c(t42, u.value, null) : c(t42, u.value, r - 1)).indexOf("\n") > -1 && (a = o ? a.split("\n").map(function(t) {
                        return "  " + t;
                    }).join("\n").substr(2) : "\n" + a.split("\n").map(function(t) {
                        return "   " + t;
                    }).join("\n")) : a = t42.stylize("[Circular]", "special")), g(s)) {
                        if (o && i.match(/^\d+$/)) return a;
                        (s = JSON.stringify("" + i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (s = s.substr(1, s.length - 2), s = t42.stylize(s, "name")) : (s = s.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), s = t42.stylize(s, "string"));
                    }
                    return s + ": " + a;
                }
                function p(t) {
                    return Array.isArray(t);
                }
                function y(t) {
                    return "boolean" == typeof t;
                }
                function m(t) {
                    return null === t;
                }
                function b(t) {
                    return "number" == typeof t;
                }
                function v(t) {
                    return "string" == typeof t;
                }
                function g(t) {
                    return void 0 === t;
                }
                function w(t) {
                    return _1(t) && "[object RegExp]" === A1(t);
                }
                function _1(t) {
                    return "object" === n9(t) && null !== t;
                }
                function M(t) {
                    return _1(t) && "[object Date]" === A1(t);
                }
                function S(t) {
                    return _1(t) && ("[object Error]" === A1(t) || t instanceof Error);
                }
                function O(t) {
                    return "function" == typeof t;
                }
                function A1(t) {
                    return Object.prototype.toString.call(t);
                }
                function E(t) {
                    return t < 10 ? "0" + t.toString(10) : t.toString(10);
                }
                e15.debuglog = function(r) {
                    if (g(s3) && (s3 = t36.env.NODE_DEBUG || ""), r = r.toUpperCase(), !a3[r]) {
                        if (new RegExp("\\b" + r + "\\b", "i").test(s3)) {
                            var n = t36.pid;
                            a3[r] = function() {
                                var t = e15.format.apply(e15, arguments);
                                console.error("%s %d: %s", r, n, t);
                            };
                        } else a3[r] = function() {
                        };
                    }
                    return a3[r];
                }, e15.inspect = u3, u3.colors = {
                    bold: [
                        1,
                        22
                    ],
                    italic: [
                        3,
                        23
                    ],
                    underline: [
                        4,
                        24
                    ],
                    inverse: [
                        7,
                        27
                    ],
                    white: [
                        37,
                        39
                    ],
                    grey: [
                        90,
                        39
                    ],
                    black: [
                        30,
                        39
                    ],
                    blue: [
                        34,
                        39
                    ],
                    cyan: [
                        36,
                        39
                    ],
                    green: [
                        32,
                        39
                    ],
                    magenta: [
                        35,
                        39
                    ],
                    red: [
                        31,
                        39
                    ],
                    yellow: [
                        33,
                        39
                    ]
                }, u3.styles = {
                    special: "cyan",
                    number: "yellow",
                    boolean: "yellow",
                    undefined: "grey",
                    null: "bold",
                    string: "green",
                    date: "magenta",
                    regexp: "red"
                }, e15.isArray = p, e15.isBoolean = y, e15.isNull = m, e15.isNullOrUndefined = function(t) {
                    return null == t;
                }, e15.isNumber = b, e15.isString = v, e15.isSymbol = function(t) {
                    return "symbol" === n9(t);
                }, e15.isUndefined = g, e15.isRegExp = w, e15.isObject = _1, e15.isDate = M, e15.isError = S, e15.isFunction = O, e15.isPrimitive = function(t) {
                    return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" === n9(t) || void 0 === t;
                }, e15.isBuffer = r12(282);
                var x = [
                    "Jan",
                    "Feb",
                    "Mar",
                    "Apr",
                    "May",
                    "Jun",
                    "Jul",
                    "Aug",
                    "Sep",
                    "Oct",
                    "Nov",
                    "Dec"
                ];
                function k() {
                    var t = new Date, e = [
                        E(t.getHours()),
                        E(t.getMinutes()),
                        E(t.getSeconds())
                    ].join(":");
                    return [
                        t.getDate(),
                        x[t.getMonth()],
                        e
                    ].join(" ");
                }
                function j(t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e);
                }
                e15.log = function() {
                    console.log("%s - %s", k(), e15.format.apply(e15, arguments));
                }, e15.inherits = r12(283), e15._extend = function(t, e) {
                    if (!e || !_1(e)) return t;
                    for(var r = Object.keys(e), n = r.length; n--;)t[r[n]] = e[r[n]];
                    return t;
                };
                var $ = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;
                function P(t, e) {
                    if (!t) {
                        var r = new Error("Promise was rejected with a falsy value");
                        r.reason = t, t = r;
                    }
                    return e(t);
                }
                e15.promisify = function(t43) {
                    if ("function" != typeof t43) throw new TypeError('The "original" argument must be of type Function');
                    if ($ && t43[$]) {
                        var e17;
                        if ("function" != typeof (e17 = t43[$])) throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                        return Object.defineProperty(e17, $, {
                            value: e17,
                            enumerable: !1,
                            writable: !1,
                            configurable: !0
                        }), e17;
                    }
                    function e17() {
                        for(var e, r, n11 = new Promise(function(t, n) {
                            e = t, r = n;
                        }), i = [], o = 0; o < arguments.length; o++)i.push(arguments[o]);
                        i.push(function(t, n) {
                            t ? r(t) : e(n);
                        });
                        try {
                            t43.apply(this, i);
                        } catch (t) {
                            r(t);
                        }
                        return n11;
                    }
                    return Object.setPrototypeOf(e17, Object.getPrototypeOf(t43)), $ && Object.defineProperty(e17, $, {
                        value: e17,
                        enumerable: !1,
                        writable: !1,
                        configurable: !0
                    }), Object.defineProperties(e17, i3(t43));
                }, e15.promisify.custom = $, e15.callbackify = function(e18) {
                    if ("function" != typeof e18) throw new TypeError('The "original" argument must be of type Function');
                    function r14() {
                        for(var r = [], n = 0; n < arguments.length; n++)r.push(arguments[n]);
                        var i = r.pop();
                        if ("function" != typeof i) throw new TypeError("The last argument must be of type Function");
                        var o = this, s = function() {
                            return i.apply(o, arguments);
                        };
                        e18.apply(this, r).then(function(e) {
                            t36.nextTick(s, null, e);
                        }, function(e) {
                            t36.nextTick(P, e, s);
                        });
                    }
                    return Object.setPrototypeOf(r14, Object.getPrototypeOf(e18)), Object.defineProperties(r14, i3(e18)), r14;
                };
            }).call(this, r12(5));
        },
        function(t44, e19, r15) {
            "use strict";
            (function(n12) {
                /*!
 * Module dependencies.
 */ function i5(t45) {
                    return (i5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t45);
                }
                var o5 = r15(7), s5 = r15(15), a5 = r15(83), u4 = r15(153), h4 = r15(302), f4 = r15(303), c3 = r15(42), l3 = r15(1).schemaTypeSymbol, d = r15(4), p1 = r15(1).validatorErrorSymbol, y1 = r15(1).documentIsModified, m1 = r15(1).populateModelSymbol, b1 = o5.CastError, v1 = o5.ValidatorError;
                function g(t, e, r) {
                    this[l3] = !0, this.path = t, this.instance = r, this.validators = [], this.getters = this.constructor.hasOwnProperty("getters") ? this.constructor.getters.slice() : [], this.setters = [], this.splitPath(), e = e || {
                    };
                    for(var n = this.constructor.defaultOptions || {
                    }, o = 0, a = Object.keys(n); o < a.length; o++){
                        var u = a[o];
                        n.hasOwnProperty(u) && !e.hasOwnProperty(u) && (e[u] = n[u]);
                    }
                    null == e.select && delete e.select;
                    var f = this.OptionsConstructor || s5;
                    this.options = new f(e), this._index = null, d.hasUserDefinedProperty(this.options, "immutable") && (this.$immutable = this.options.immutable, h4(this));
                    for(var c = 0, p = Object.keys(this.options); c < p.length; c++){
                        var y = p[c];
                        if ("cast" !== y) {
                            if (d.hasUserDefinedProperty(this.options, y) && "function" == typeof this[y]) {
                                if ("index" === y && this._index) {
                                    if (!1 === e.index) {
                                        var m = this._index;
                                        if ("object" === i5(m) && null != m) {
                                            if (m.unique) throw new Error('Path "' + this.path + '" may not have `index` set to false and `unique` set to true');
                                            if (m.sparse) throw new Error('Path "' + this.path + '" may not have `index` set to false and `sparse` set to true');
                                        }
                                        this._index = !1;
                                    }
                                    continue;
                                }
                                var b = e[y];
                                if ("default" === y) {
                                    this.default(b);
                                    continue;
                                }
                                var v = Array.isArray(b) ? b : [
                                    b
                                ];
                                this[y].apply(this, v);
                            }
                        } else this.castFunction(this.options[y]);
                    }
                    Object.defineProperty(this, "$$context", {
                        enumerable: !1,
                        configurable: !1,
                        writable: !0,
                        value: null
                    });
                }
                /*!
 * The class that Mongoose uses internally to instantiate this SchemaType's `options` property.
 */ function w(t, e) {
                    if (void 0 !== t && !t) {
                        var r = new (e.ErrorConstructor || v1)(e);
                        return r[p1] = !0, r;
                    }
                }
                /*!
 * ignore
 */ function _(t) {
                    return this.castForQuery(t);
                }
                /*!
 * ignore
 */ /*!
 * Just like handleArray, except also allows `[]` because surprisingly
 * `$in: [1, []]` works fine
 */ function M(t46) {
                    var e = this;
                    return Array.isArray(t46) ? t46.map(function(t) {
                        return Array.isArray(t) && 0 === t.length ? t : e.castForQuery(t);
                    }) : [
                        this.castForQuery(t46)
                    ];
                }
                /*!
 * ignore
 */ g.prototype.OptionsConstructor = s5, g.prototype.path, g.prototype.validators, g.prototype.validators, /*!
 * ignore
 */ g.prototype.splitPath = function() {
                    return null != this._presplitPath ? this._presplitPath : null != this.path ? (this._presplitPath = -1 === this.path.indexOf(".") ? [
                        this.path
                    ] : this.path.split("."), this._presplitPath) : void 0;
                }, g.cast = function(t47) {
                    return 0 === arguments.length || (!1 === t47 && (t47 = function(t) {
                        return t;
                    }), this._cast = t47), this._cast;
                }, g.prototype.castFunction = function(t48) {
                    return 0 === arguments.length || (!1 === t48 && (t48 = this.constructor._defaultCaster || function(t) {
                        return t;
                    }), this._castFunction = t48), this._castFunction;
                }, g.prototype.cast = function() {
                    throw new Error("Base SchemaType class does not implement a `cast()` function");
                }, g.set = function(t, e) {
                    this.hasOwnProperty("defaultOptions") || (this.defaultOptions = Object.assign({
                    }, this.defaultOptions)), this.defaultOptions[t] = e;
                }, g.get = function(t) {
                    this.getters = this.hasOwnProperty("getters") ? this.getters : [], this.getters.push(t);
                }, g.prototype.default = function(t) {
                    if (1 === arguments.length) {
                        if (void 0 === t) return void (this.defaultValue = void 0);
                        if (null != t && t.instanceOfSchema) throw new o5("Cannot set default value of path `" + this.path + "` to a mongoose Schema instance.");
                        return this.defaultValue = t, this.defaultValue;
                    }
                    return arguments.length > 1 && (this.defaultValue = Array.prototype.slice.call(arguments)), this.defaultValue;
                }, g.prototype.index = function(t) {
                    return this._index = t, d.expires(this._index), this;
                }, g.prototype.unique = function(t) {
                    if (!1 === this._index) {
                        if (!t) return;
                        throw new Error('Path "' + this.path + '" may not have `index` set to false and `unique` set to true');
                    }
                    return this.options.hasOwnProperty("index") || !1 !== t ? (null == this._index || !0 === this._index ? this._index = {
                    } : "string" == typeof this._index && (this._index = {
                        type: this._index
                    }), this._index.unique = t, this) : this;
                }, g.prototype.text = function(t) {
                    if (!1 === this._index) {
                        if (!t) return;
                        throw new Error('Path "' + this.path + '" may not have `index` set to false and `text` set to true');
                    }
                    return this.options.hasOwnProperty("index") || !1 !== t ? (null === this._index || void 0 === this._index || "boolean" == typeof this._index ? this._index = {
                    } : "string" == typeof this._index && (this._index = {
                        type: this._index
                    }), this._index.text = t, this) : this;
                }, g.prototype.sparse = function(t) {
                    if (!1 === this._index) {
                        if (!t) return;
                        throw new Error('Path "' + this.path + '" may not have `index` set to false and `sparse` set to true');
                    }
                    return this.options.hasOwnProperty("index") || !1 !== t ? (null == this._index || "boolean" == typeof this._index ? this._index = {
                    } : "string" == typeof this._index && (this._index = {
                        type: this._index
                    }), this._index.sparse = t, this) : this;
                }, g.prototype.immutable = function(t) {
                    return this.$immutable = t, h4(this), this;
                }, g.prototype.transform = function(t) {
                    return this.options.transform = t, this;
                }, g.prototype.set = function(t) {
                    if ("function" != typeof t) throw new TypeError("A setter must be a function.");
                    return this.setters.push(t), this;
                }, g.prototype.get = function(t) {
                    if ("function" != typeof t) throw new TypeError("A getter must be a function.");
                    return this.getters.push(t), this;
                }, g.prototype.validate = function(t, e, r) {
                    var n, s, a, u;
                    if ("function" == typeof t || t && "RegExp" === d.getFunctionName(t.constructor)) return "function" == typeof e ? (n = {
                        validator: t,
                        message: e
                    }).type = r || "user defined" : e instanceof Object && !r ? ((n = d.clone(e)).message || (n.message = n.msg), n.validator = t, n.type = n.type || "user defined") : (null == e && (e = o5.messages.general.default), r || (r = "user defined"), n = {
                        message: e,
                        type: r,
                        validator: t
                    }), this.validators.push(n), this;
                    for(s = 0, a = arguments.length; s < a; s++){
                        if (u = arguments[s], !d.isPOJO(u)) {
                            var h = "Invalid validator. Received (" + i5(u) + ") " + u + ". See https://mongoosejs.com/docs/api.html#schematype_SchemaType-validate";
                            throw new Error(h);
                        }
                        this.validate(u.validator, u);
                    }
                    return this;
                }, g.prototype.required = function(t49, e20) {
                    var r16 = {
                    };
                    if (arguments.length > 0 && null == t49) return this.validators = this.validators.filter(function(t) {
                        return t.validator !== this.requiredValidator;
                    }, this), this.isRequired = !1, delete this.originalRequiredValue, this;
                    if ("object" === i5(t49) && (e20 = (r16 = t49).message || e20, t49 = t49.isRequired), !1 === t49) return this.validators = this.validators.filter(function(t) {
                        return t.validator !== this.requiredValidator;
                    }, this), this.isRequired = !1, delete this.originalRequiredValue, this;
                    var n = this;
                    this.isRequired = !0, this.requiredValidator = function(e) {
                        var r = this && this.$__ && this.$__.cachedRequired;
                        if (null != r && !this.$__isSelected(n.path) && !this[y1](n.path)) return !0;
                        if (null != r && n.path in r) {
                            var i = !r[n.path] || n.checkRequired(e, this);
                            return delete r[n.path], i;
                        }
                        return "function" == typeof t49 && !t49.apply(this) || n.checkRequired(e, this);
                    }, this.originalRequiredValue = t49, "string" == typeof t49 && (e20 = t49, t49 = void 0);
                    var s = e20 || o5.messages.general.required;
                    return this.validators.unshift(Object.assign({
                    }, r16, {
                        validator: this.requiredValidator,
                        message: s,
                        type: "required"
                    })), this;
                }, g.prototype.ref = function(t) {
                    return this.options.ref = t, this;
                }, g.prototype.getDefault = function(t, e) {
                    var r;
                    if (null != (r = "function" == typeof this.defaultValue ? this.defaultValue === Date.now || this.defaultValue === Array || "objectid" === this.defaultValue.name.toLowerCase() ? this.defaultValue.call(t) : this.defaultValue.call(t, t) : this.defaultValue)) {
                        "object" !== i5(r) || this.options && this.options.shared || (r = d.clone(r));
                        var n = this.applySetters(r, t, e);
                        return n && !Array.isArray(n) && n.$isSingleNested && (n.$__parent = t), n;
                    }
                    return r;
                }, /*!
 * Applies setters without casting
 *
 * @api private
 */ g.prototype._applySetters = function(t, e, r, n) {
                    var i = t;
                    if (r) return i;
                    for(var o = this.setters, s = o.length - 1; s >= 0; s--)i = o[s].call(e, i, n, this);
                    return i;
                }, /*!
 * ignore
 */ g.prototype._castNullish = function(t) {
                    return t;
                }, g.prototype.applySetters = function(t, e, r, n, i) {
                    var o = this._applySetters(t, e, r, n, i);
                    return null == o ? this._castNullish(o) : o = this.cast(o, e, r, n, i);
                }, g.prototype.applyGetters = function(t, e) {
                    var r = t, n = this.getters, i = n.length;
                    if (0 === i) return r;
                    for(var o = 0; o < i; ++o)r = n[o].call(e, r, this);
                    return r;
                }, g.prototype.select = function(t) {
                    return this.selected = !!t, this;
                }, g.prototype.doValidate = function(t50, e, r17, n13) {
                    var o = this, s = !1, a = this.path, u = this.validators.filter(function(t) {
                        return null != t && "object" === i5(t);
                    }), h5 = u.length;
                    if (!h5) return e(null);
                    for(var f5 = function(e, i) {
                        var h = u[e];
                        if (s) return "break";
                        var f = h.validator, c = void 0, l = d.clone(h);
                        if (l.path = n13 && n13.path ? n13.path : a, l.value = t50, f instanceof RegExp) return b(f.test(t50), l), "continue";
                        if ("function" != typeof f) return "continue";
                        if (void 0 === t50 && f !== o.requiredValidator) return b(!0, l), "continue";
                        try {
                            c = l.propsParameter ? f.call(r17, t50, l) : f.call(r17, t50);
                        } catch (t51) {
                            c = !1, l.reason = t51, t51.message && (l.message = t51.message);
                        }
                        null != c && "function" == typeof c.then ? c.then(function(t) {
                            b(t, l);
                        }, function(t) {
                            l.reason = t, l.message = t.message, b(c = !1, l);
                        }) : b(c, l);
                    }, l4 = 0, y = u.length; l4 < y; ++l4){
                        var m = f5(l4);
                        if ("break" === m) break;
                    }
                    function b(t, r) {
                        if (!s) {
                            if (void 0 === t || t) --h5 <= 0 && c3(function() {
                                e(null);
                            });
                            else {
                                var n = r.ErrorConstructor || v1;
                                (s = new n(r))[p1] = !0, c3(function() {
                                    e(s);
                                });
                            }
                        }
                    }
                }, g.prototype.doValidateSync = function(t, e, r) {
                    var n = this.path;
                    if (!this.validators.length) return null;
                    var o = this.validators;
                    if (void 0 === t) {
                        if (0 === this.validators.length || "required" !== this.validators[0].type) return null;
                        o = [
                            this.validators[0]
                        ];
                    }
                    var s = null, a = 0, u = o.length;
                    for(a = 0; a < u; ++a){
                        var h = o[a];
                        if (null != h && "object" === i5(h)) {
                            var c = h.validator, l = d.clone(h);
                            l.path = r && r.path ? r.path : n, l.value = t;
                            var p = !1;
                            if (!f4(c)) {
                                if (c instanceof RegExp) s = w(c.test(t), l);
                                else if ("function" == typeof c) {
                                    try {
                                        p = l.propsParameter ? c.call(e, t, l) : c.call(e, t);
                                    } catch (t) {
                                        p = !1, l.reason = t;
                                    }
                                    if ((null == p || "function" != typeof p.then) && (s = w(p, l))) break;
                                }
                            }
                        }
                    }
                    return s;
                }, g._isRef = function(t, e, r, i) {
                    var o = i && t.options && (t.options.ref || t.options.refPath);
                    if (!o && r && null != r.$__) {
                        var s = r.$__fullPath(t.path, !0), a = r.ownerDocument();
                        o = null != s && a.$populated(s) || r.$populated(t.path);
                    }
                    return !!o && (null == e || !(n12.isBuffer(e) || "Binary" === e._bsontype || !d.isObject(e)) || i);
                }, /*!
 * ignore
 */ g.prototype._castRef = function(t, e, r) {
                    if (null == t) return t;
                    if (null != t.$__) return t.$__.wasPopulated = t.$__.wasPopulated || !0, t;
                    if (n12.isBuffer(t) || !d.isObject(t)) {
                        if (r) return t;
                        throw new b1(this.instance, t, this.path, null, this);
                    }
                    var i = e.$__fullPath(this.path, !0), o = e.ownerDocument().$populated(i, !0), s = t;
                    return e.$__.populated && e.$__.populated[i] && e.$__.populated[i].options && e.$__.populated[i].options.options && e.$__.populated[i].options.options.lean || ((s = new o.options[m1](t)).$__.wasPopulated = !0), s;
                }, g.prototype.$conditionalHandlers = {
                    $all: function(t52) {
                        var e = this;
                        return Array.isArray(t52) ? t52.map(function(t) {
                            return e.castForQuery(t);
                        }) : [
                            this.castForQuery(t52)
                        ];
                    },
                    $eq: _,
                    $in: M,
                    $ne: _,
                    $nin: M,
                    $exists: a5,
                    $type: u4
                }, /*!
 * Wraps `castForQuery` to handle context
 */ g.prototype.castForQueryWrapper = function(t) {
                    if (this.$$context = t.context, "$conditional" in t) {
                        var e = this.castForQuery(t.$conditional, t.val);
                        return this.$$context = null, e;
                    }
                    if (t.$skipQueryCastForUpdate || t.$applySetters) {
                        var r = this._castForQuery(t.val);
                        return this.$$context = null, r;
                    }
                    var n = this.castForQuery(t.val);
                    return this.$$context = null, n;
                }, g.prototype.castForQuery = function(t, e) {
                    var r;
                    if (2 === arguments.length) {
                        if (!(r = this.$conditionalHandlers[t])) throw new Error("Can't use " + t);
                        return r.call(this, e);
                    }
                    return e = t, this._castForQuery(e);
                }, /*!
 * Internal switch for runSetters
 *
 * @api private
 */ g.prototype._castForQuery = function(t) {
                    return this.applySetters(t, this.$$context);
                }, g.checkRequired = function(t) {
                    return 0 !== arguments.length && (this._checkRequired = t), this._checkRequired;
                }, g.prototype.checkRequired = function(t) {
                    return null != t;
                }, /*!
 * ignore
 */ g.prototype.clone = function() {
                    var t = Object.assign({
                    }, this.options), e = new this.constructor(this.path, t, this.instance);
                    return e.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e.requiredValidator = this.requiredValidator), void 0 !== this.defaultValue && (e.defaultValue = this.defaultValue), void 0 !== this.$immutable && void 0 === this.options.immutable && (e.$immutable = this.$immutable, h4(e)), void 0 !== this._index && (e._index = this._index), void 0 !== this.selected && (e.selected = this.selected), void 0 !== this.isRequired && (e.isRequired = this.isRequired), void 0 !== this.originalRequiredValue && (e.originalRequiredValue = this.originalRequiredValue), e.getters = this.getters.slice(), e.setters = this.setters.slice(), e;
                }, /*!
 * Module exports.
 */ t44.exports = e19 = g, e19.CastError = b1, e19.ValidatorError = v1;
            }).call(this, r15(3).Buffer);
        },
        function(t53, e21) {
            function r18(t, e) {
                if (!t) throw new Error(e || "Assertion failed");
            }
            t53.exports = r18, r18.equal = function(t, e, r) {
                if (t != e) throw new Error(r || "Assertion failed: " + t + " != " + e);
            };
        },
        function(t54, e22, r19) {
            "use strict";
            var n14 = e22, i6 = r19(21), o6 = r19(10), s6 = r19(128);
            n14.assert = o6, n14.toArray = s6.toArray, n14.zero2 = s6.zero2, n14.toHex = s6.toHex, n14.encode = s6.encode, n14.getNAF = function(t, e, r) {
                var n = new Array(Math.max(t.bitLength(), r) + 1);
                n.fill(0);
                for(var i = 1 << e + 1, o = t.clone(), s = 0; s < n.length; s++){
                    var a, u = o.andln(i - 1);
                    o.isOdd() ? (a = u > (i >> 1) - 1 ? (i >> 1) - u : u, o.isubn(a)) : a = 0, n[s] = a, o.iushrn(1);
                }
                return n;
            }, n14.getJSF = function(t, e) {
                var r = [
                    [],
                    []
                ];
                t = t.clone(), e = e.clone();
                for(var n, i = 0, o = 0; t.cmpn(-i) > 0 || e.cmpn(-o) > 0;){
                    var s, a, u = t.andln(3) + i & 3, h = e.andln(3) + o & 3;
                    3 === u && (u = -1), 3 === h && (h = -1), s = 0 == (1 & u) ? 0 : 3 !== (n = t.andln(7) + i & 7) && 5 !== n || 2 !== h ? u : -u, r[0].push(s), a = 0 == (1 & h) ? 0 : 3 !== (n = e.andln(7) + o & 7) && 5 !== n || 2 !== u ? h : -h, r[1].push(a), 2 * i === s + 1 && (i = 1 - i), 2 * o === a + 1 && (o = 1 - o), t.iushrn(1), e.iushrn(1);
                }
                return r;
            }, n14.cachedProperty = function(t, e, r) {
                var n = "_" + e;
                t.prototype[e] = function() {
                    return void 0 !== this[n] ? this[n] : this[n] = r.call(this);
                };
            }, n14.parseBytes = function(t) {
                return "string" == typeof t ? n14.toArray(t, "hex") : t;
            }, n14.intFromLE = function(t) {
                return new i6(t, "hex", "le");
            };
        },
        function(t55, e23, r20) {
            "use strict";
            function n15(t56) {
                return (n15 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t56);
            }
            var i7, o7 = "object" === ("undefined" == typeof Reflect ? "undefined" : n15(Reflect)) ? Reflect : null, s7 = o7 && "function" == typeof o7.apply ? o7.apply : function(t, e, r) {
                return Function.prototype.apply.call(t, e, r);
            };
            i7 = o7 && "function" == typeof o7.ownKeys ? o7.ownKeys : Object.getOwnPropertySymbols ? function(t) {
                return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t));
            } : function(t) {
                return Object.getOwnPropertyNames(t);
            };
            var a6 = Number.isNaN || function(t) {
                return t != t;
            };
            function u5() {
                u5.init.call(this);
            }
            t55.exports = u5, t55.exports.once = function(t57, e24) {
                return new Promise(function(r21, n) {
                    function i(r) {
                        t57.removeListener(e24, o), n(r);
                    }
                    function o() {
                        "function" == typeof t57.removeListener && t57.removeListener("error", i), r21([].slice.call(arguments));
                    }
                    v(t57, e24, o, {
                        once: !0
                    }), "error" !== e24 && (function(t, e, r) {
                        "function" == typeof t.on && v(t, "error", e, r);
                    })(t57, i, {
                        once: !0
                    });
                });
            }, u5.EventEmitter = u5, u5.prototype._events = void 0, u5.prototype._eventsCount = 0, u5.prototype._maxListeners = void 0;
            var h6 = 10;
            function f6(t) {
                if ("function" != typeof t) throw new TypeError('The "listener" argument must be of type Function. Received type ' + n15(t));
            }
            function c(t) {
                return void 0 === t._maxListeners ? u5.defaultMaxListeners : t._maxListeners;
            }
            function l(t, e, r, n) {
                var i, o, s, a;
                if (f6(r), void 0 === (o = t._events) ? (o = t._events = Object.create(null), t._eventsCount = 0) : (void 0 !== o.newListener && (t.emit("newListener", e, r.listener ? r.listener : r), o = t._events), s = o[e]), void 0 === s) s = o[e] = r, ++t._eventsCount;
                else if ("function" == typeof s ? s = o[e] = n ? [
                    r,
                    s
                ] : [
                    s,
                    r
                ] : n ? s.unshift(r) : s.push(r), (i = c(t)) > 0 && s.length > i && !s.warned) {
                    s.warned = !0;
                    var u = new Error("Possible EventEmitter memory leak detected. " + s.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                    u.name = "MaxListenersExceededWarning", u.emitter = t, u.type = e, u.count = s.length, a = u, console && console.warn && console.warn(a);
                }
                return t;
            }
            function d() {
                if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
            }
            function p(t, e, r) {
                var n = {
                    fired: !1,
                    wrapFn: void 0,
                    target: t,
                    type: e,
                    listener: r
                }, i = d.bind(n);
                return i.listener = r, n.wrapFn = i, i;
            }
            function y(t58, e25, r22) {
                var n = t58._events;
                if (void 0 === n) return [];
                var i = n[e25];
                return void 0 === i ? [] : "function" == typeof i ? r22 ? [
                    i.listener || i
                ] : [
                    i
                ] : r22 ? (function(t) {
                    for(var e = new Array(t.length), r = 0; r < e.length; ++r)e[r] = t[r].listener || t[r];
                    return e;
                })(i) : b(i, i.length);
            }
            function m(t) {
                var e = this._events;
                if (void 0 !== e) {
                    var r = e[t];
                    if ("function" == typeof r) return 1;
                    if (void 0 !== r) return r.length;
                }
                return 0;
            }
            function b(t, e) {
                for(var r = new Array(e), n = 0; n < e; ++n)r[n] = t[n];
                return r;
            }
            function v(t, e, r, i) {
                if ("function" == typeof t.on) i.once ? t.once(e, r) : t.on(e, r);
                else {
                    if ("function" != typeof t.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + n15(t));
                    t.addEventListener(e, function n(o) {
                        i.once && t.removeEventListener(e, n), r(o);
                    });
                }
            }
            Object.defineProperty(u5, "defaultMaxListeners", {
                enumerable: !0,
                get: function() {
                    return h6;
                },
                set: function(t) {
                    if ("number" != typeof t || t < 0 || a6(t)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + ".");
                    h6 = t;
                }
            }), u5.init = function() {
                void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
            }, u5.prototype.setMaxListeners = function(t) {
                if ("number" != typeof t || t < 0 || a6(t)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t + ".");
                return this._maxListeners = t, this;
            }, u5.prototype.getMaxListeners = function() {
                return c(this);
            }, u5.prototype.emit = function(t) {
                for(var e = [], r = 1; r < arguments.length; r++)e.push(arguments[r]);
                var n = "error" === t, i = this._events;
                if (void 0 !== i) n = n && void 0 === i.error;
                else if (!n) return !1;
                if (n) {
                    var o;
                    if (e.length > 0 && (o = e[0]), o instanceof Error) throw o;
                    var a = new Error("Unhandled error." + (o ? " (" + o.message + ")" : ""));
                    throw a.context = o, a;
                }
                var u = i[t];
                if (void 0 === u) return !1;
                if ("function" == typeof u) s7(u, this, e);
                else {
                    var h = u.length, f = b(u, h);
                    for(r = 0; r < h; ++r)s7(f[r], this, e);
                }
                return !0;
            }, u5.prototype.addListener = function(t, e) {
                return l(this, t, e, !1);
            }, u5.prototype.on = u5.prototype.addListener, u5.prototype.prependListener = function(t, e) {
                return l(this, t, e, !0);
            }, u5.prototype.once = function(t, e) {
                return f6(e), this.on(t, p(this, t, e)), this;
            }, u5.prototype.prependOnceListener = function(t, e) {
                return f6(e), this.prependListener(t, p(this, t, e)), this;
            }, u5.prototype.removeListener = function(t59, e26) {
                var r, n, i, o, s;
                if (f6(e26), void 0 === (n = this._events)) return this;
                if (void 0 === (r = n[t59])) return this;
                if (r === e26 || r.listener === e26) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete n[t59], n.removeListener && this.emit("removeListener", t59, r.listener || e26));
                else if ("function" != typeof r) {
                    for(i = -1, o = r.length - 1; o >= 0; o--)if (r[o] === e26 || r[o].listener === e26) {
                        s = r[o].listener, i = o;
                        break;
                    }
                    if (i < 0) return this;
                    0 === i ? r.shift() : (function(t, e) {
                        for(; e + 1 < t.length; e++)t[e] = t[e + 1];
                        t.pop();
                    })(r, i), 1 === r.length && (n[t59] = r[0]), void 0 !== n.removeListener && this.emit("removeListener", t59, s || e26);
                }
                return this;
            }, u5.prototype.off = u5.prototype.removeListener, u5.prototype.removeAllListeners = function(t) {
                var e, r, n;
                if (void 0 === (r = this._events)) return this;
                if (void 0 === r.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== r[t] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete r[t]), this;
                if (0 === arguments.length) {
                    var i, o = Object.keys(r);
                    for(n = 0; n < o.length; ++n)"removeListener" !== (i = o[n]) && this.removeAllListeners(i);
                    return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
                }
                if ("function" == typeof (e = r[t])) this.removeListener(t, e);
                else if (void 0 !== e) for(n = e.length - 1; n >= 0; n--)this.removeListener(t, e[n]);
                return this;
            }, u5.prototype.listeners = function(t) {
                return y(this, t, !0);
            }, u5.prototype.rawListeners = function(t) {
                return y(this, t, !1);
            }, u5.listenerCount = function(t, e) {
                return "function" == typeof t.listenerCount ? t.listenerCount(e) : m.call(t, e);
            }, u5.prototype.listenerCount = m, u5.prototype.eventNames = function() {
                return this._eventsCount > 0 ? i7(this._events) : [];
            };
        },
        function(t60, e27, r23) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n16(t, e, r) {
                return e in t ? Object.defineProperty(t, e, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = r, t;
            }
            function i8(t61, e28) {
                var r24 = "undefined" != typeof Symbol && t61[Symbol.iterator] || t61["@@iterator"];
                if (!r24) {
                    if (Array.isArray(t61) || (r24 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return o8(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return o8(t, e);
                    })(t61)) || e28 && t61 && "number" == typeof t61.length) {
                        r24 && (t61 = r24);
                        var n = 0, i = function() {
                        };
                        return {
                            s: i,
                            n: function() {
                                return n >= t61.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t61[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: i
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r24 = r24.call(t61);
                    },
                    n: function() {
                        var t = r24.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r24.return || r24.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function o8(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            function s8(t62) {
                return (s8 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t62);
            }
            var a7, u6, h7, f7 = r23(12).EventEmitter, c4 = r23(275), l5 = r23(7), d2 = r23(45), p2 = r23(154), y2 = r23(304), m2 = r23(305), b2 = r23(85), v2 = r23(44), g1 = r23(151), w1 = r23(152), _2 = r23(86), M1 = r23(343), S1 = r23(53), O1 = r23(167), A2 = r23(91).compile, E1 = r23(91).defineKey, x1 = r23(344).flatten, k1 = r23(345), j1 = r23(14), $1 = r23(347), P1 = r23(348), R1 = r23(171), B1 = r23(42), T1 = r23(92), I1 = r23(349), N1 = r23(8).inspect, D = r23(34).internalToObjectOptions, C1 = r23(350), L = r23(81), q1 = r23(351), U = r23(4), F1 = r23(353), z1 = U.clone, V1 = U.deepEqual, K1 = U.isMongooseObject, H1 = r23(1).arrayAtomicsBackupSymbol, Z1 = r23(1).arrayAtomicsSymbol, W = r23(1).documentArrayParent, J1 = r23(1).documentIsModified, Y1 = r23(1).documentModifiedPaths, Q1 = r23(1).documentSchemaSymbol, G1 = r23(1).getSymbol, X = r23(1).populateModelSymbol, tt1 = r23(1).scopeSymbol, et1 = r23(55).schemaMixedSymbol, rt1 = r23(354), nt1 = U.specialProperties;
            function it(t64, e, r, n) {
                if ("object" === s8(r) && null != r && (r = (n = r).skipId), n = Object.assign({
                }, n), null == this.$__schema) {
                    var o = U.isObject(e) && !e.instanceOfSchema ? new b2(e) : e;
                    this.$__setSchema(o), e = r, r = n, n = arguments[4] || {
                    };
                }
                if (this.$__ = new c4, this.$isNew = !("isNew" in n) || n.isNew, "priorDoc" in n && (this.$__.priorDoc = n.priorDoc), r && (this.$__.skipId = r), null != t64 && "object" !== s8(t64)) throw new y2(t64, "obj", "Document");
                var a = !0;
                void 0 !== n.defaults && (this.$__.defaults = n.defaults, a = n.defaults);
                var u = this.$__schema;
                "boolean" == typeof e || "throw" === e ? (this.$__.strictMode = e, e = void 0) : (this.$__.strictMode = u.options.strict, void 0 !== e && (this.$__.selected = e));
                var h, f = u.requiredPaths(!0), l = i8(f);
                try {
                    for(l.s(); !(h = l.n()).done;){
                        var d = h.value;
                        this.$__.activePaths.require(d);
                    }
                } catch (t63) {
                    l.e(t63);
                } finally{
                    l.f();
                }
                var p = null;
                U.isPOJO(e) && (p = I1(e), this.$__.fields = e, this.$__.exclude = p);
                var m = !1 === p && e ? M1(e) : {
                };
                if (null == this._doc && (this.$__buildDoc(t64, e, r, p, m, !1), a && st1(this, e, p, m, !0, {
                    isNew: this.$isNew
                })), t64 && (this.$__original_set ? this.$__original_set(t64, void 0, !0) : this.$set(t64, void 0, !0), t64 instanceof it && (this.$isNew = t64.$isNew)), n.willInit && a ? n.skipDefaults && (this.$__.skipDefaults = n.skipDefaults) : a && st1(this, e, p, m, !1, n.skipDefaults, this.$isNew), this.$__._id = this._id, !this.$__.strictMode && t64) {
                    var v = this, g = Object.keys(this._doc);
                    g.forEach(function(t) {
                        t in u.tree || t in u.methods || t in u.virtuals || t.startsWith("$") || E1({
                            prop: t,
                            subprops: null,
                            prototype: v
                        });
                    });
                }
                lt1(this);
            }
            for(var ot1 in Object.defineProperty(it.prototype, "isNew", {
                get: function() {
                    return this.$isNew;
                },
                set: function(t) {
                    this.$isNew = t;
                }
            }), Object.defineProperty(it.prototype, "errors", {
                get: function() {
                    return this.$errors;
                },
                set: function(t) {
                    this.$errors = t;
                }
            }), /*!
 * Document exposes the NodeJS event emitter API, so you can use
 * `on`, `once`, etc.
 */ U.each([
                "on",
                "once",
                "emit",
                "listeners",
                "removeListener",
                "setMaxListeners",
                "removeAllListeners",
                "addListener"
            ], function(t) {
                it.prototype[t] = function() {
                    if (!this.$__.emitter) {
                        if ("emit" === t) return;
                        this.$__.emitter = new f7, this.$__.emitter.setMaxListeners(0);
                    }
                    return this.$__.emitter[t].apply(this.$__.emitter, arguments);
                }, it.prototype["$".concat(t)] = it.prototype[t];
            }), it.prototype.constructor = it, f7.prototype)it[ot1] = f7.prototype[ot1];
            /*!
 * ignore
 */ function st1(t, e, r, n, i, o) {
                for(var s = Object.keys(t.$__schema.paths), a = s.length, u = 0; u < a; ++u){
                    var h = void 0, f = "", c = s[u];
                    if ("_id" !== c || !t.$__.skipId) for(var l = t.$__schema.paths[c], d = l.splitPath(), p = d.length, y = !1, m = t._doc, b = 0; b < p && null != m; ++b){
                        var v = d[b];
                        if (f += (f.length ? "." : "") + v, !0 === r) {
                            if (f in e) break;
                        } else if (!1 === r && e && !y) {
                            var g = l.$isSingleNested || l.$isMongooseDocumentArray;
                            if (f in e || g && n[f]) y = !0;
                            else if (!n[f]) break;
                        }
                        if (b === p - 1) {
                            if (void 0 !== m[v]) break;
                            if ("function" == typeof l.defaultValue) {
                                if (!l.defaultValue.$runBeforeSetters && i) break;
                                if (l.defaultValue.$runBeforeSetters && !i) break;
                            } else if (!i) continue;
                            if (o && o[f]) break;
                            if (e && null !== r) {
                                if (!0 === r) {
                                    if (c in e) continue;
                                    try {
                                        h = l.getDefault(t, !1);
                                    } catch (e) {
                                        t.invalidate(c, e);
                                        break;
                                    }
                                    void 0 !== h && (m[v] = h, t.$__.activePaths.default(c));
                                } else if (y) {
                                    try {
                                        h = l.getDefault(t, !1);
                                    } catch (e) {
                                        t.invalidate(c, e);
                                        break;
                                    }
                                    void 0 !== h && (m[v] = h, t.$__.activePaths.default(c));
                                }
                            } else {
                                try {
                                    h = l.getDefault(t, !1);
                                } catch (e) {
                                    t.invalidate(c, e);
                                    break;
                                }
                                void 0 !== h && (m[v] = h, t.$__.activePaths.default(c));
                            }
                        } else m = m[v];
                    }
                }
            }
            /*!
 * ignore
 */ function at(t, e, r) {
                if (null != t) {
                    k1(t);
                    for(var n = Object.keys(r.$__schema.paths), i = n.length, o = -1 === e.indexOf(".") ? [
                        e
                    ] : e.split("."), s = 0; s < i; ++s){
                        var a = "", u = n[s];
                        if (u.startsWith(e + ".")) {
                            var h = r.$__schema.paths[u], f = h.splitPath().slice(o.length), c = f.length;
                            if (void 0 !== h.defaultValue) for(var l = t, d = 0; d < c && null != l; ++d){
                                var p = f[d];
                                if (d === c - 1) {
                                    if (void 0 !== l[p]) break;
                                    try {
                                        var y = h.getDefault(r, !1);
                                        void 0 !== y && (l[p] = y);
                                    } catch (t) {
                                        r.invalidate(e + "." + a, t);
                                        break;
                                    }
                                    break;
                                }
                                a += (a.length ? "." : "") + p, l[p] = l[p] || {
                                }, l = l[p];
                            }
                        }
                    }
                }
            }
            function ut1(t) {
                if (null == t) return !0;
                if ("object" !== s8(t) || Array.isArray(t)) return !1;
                for(var e = 0, r = Object.keys(t); e < r.length; e++){
                    if (!ut1(t[r[e]])) return !1;
                }
                return !0;
            }
            /*!
 * ignore
 */ function ht1(t65) {
                var e29 = {
                };
                !/*!
 * ignore
 */ function(t) {
                    var e = Object.keys(t.$__.activePaths.states.require), r = 0, n = e.length;
                    for(r = 0; r < n; ++r){
                        var i = e[r], o = t.$__schema.path(i);
                        if (null != o && "function" == typeof o.originalRequiredValue) {
                            t.$__.cachedRequired = t.$__.cachedRequired || {
                            };
                            try {
                                t.$__.cachedRequired[i] = o.originalRequiredValue.call(t, t);
                            } catch (e) {
                                t.invalidate(i, e);
                            }
                        }
                    }
                }(t65);
                var r25 = new Set(Object.keys(t65.$__.activePaths.states.require).filter(function(e) {
                    return !(!t65.$__isSelected(e) && !t65.$isModified(e)) && (null == t65.$__.cachedRequired || !(e in t65.$__.cachedRequired) || t65.$__.cachedRequired[e]);
                }));
                function n17(t) {
                    r25.add(t);
                }
                Object.keys(t65.$__.activePaths.states.init).forEach(n17), Object.keys(t65.$__.activePaths.states.modify).forEach(n17), Object.keys(t65.$__.activePaths.states.default).forEach(n17);
                var o9, s = t65.$getAllSubdocs(), a = t65.modifiedPaths(), u = i8(s);
                try {
                    for(u.s(); !(o9 = u.n()).done;){
                        var h = o9.value;
                        if (h.$basePath) {
                            var f, c = i8(r25);
                            try {
                                for(c.s(); !(f = c.n()).done;){
                                    var l = f.value;
                                    (null === l || l.startsWith(h.$basePath + ".")) && r25.delete(l);
                                }
                            } catch (t) {
                                c.e(t);
                            } finally{
                                c.f();
                            }
                            !t65.$isModified(h.$basePath, a) || t65.isDirectModified(h.$basePath) || t65.$isDefault(h.$basePath) || (r25.add(h.$basePath), e29[h.$basePath] = !0);
                        }
                    }
                } catch (t67) {
                    u.e(t67);
                } finally{
                    u.f();
                }
                var d, p = i8(r25);
                try {
                    for(p.s(); !(d = p.n()).done;){
                        var y = d.value, m = t65.$__schema.path(y);
                        if (m && m.$isMongooseArray && (Array.isArray(m) || !m.$isMongooseDocumentArray || m && m.schemaOptions && m.schemaOptions.required)) b(t65.$__getValue(y), r25, y);
                    }
                } catch (t66) {
                    p.e(t66);
                } finally{
                    p.f();
                }
                function b(t, e, r) {
                    if (null != t) for(var n = t.length, i = 0; i < n; ++i)Array.isArray(t[i]) ? b(t[i], e, r + "." + i) : e.add(r + "." + i);
                }
                var v, g = {
                    skipArrays: !0
                }, w = i8(r25);
                try {
                    for(w.s(); !(v = w.n()).done;){
                        var _ = v.value;
                        if (t65.$__schema.nested[_]) {
                            var M = t65.$__getValue(_);
                            K1(M) && (M = M.toObject({
                                transform: !1
                            }));
                            var S = x1(M, _, g, t65.$__schema);
                            Object.keys(S).forEach(n17);
                        }
                    }
                } catch (t) {
                    w.e(t);
                } finally{
                    w.f();
                }
                var O, A = i8(r25);
                try {
                    for(A.s(); !(O = A.n()).done;){
                        var E = O.value;
                        if (t65.$__schema.singleNestedPaths.hasOwnProperty(E)) r25.delete(E);
                        else {
                            var k = t65.$__schema.path(E);
                            if (k && k.$isSchemaMap) {
                                var j = t65.$__getValue(E);
                                if (null != j) {
                                    var $, P = i8(j.keys());
                                    try {
                                        for(P.s(); !($ = P.n()).done;){
                                            var R = $.value;
                                            r25.add(E + "." + R);
                                        }
                                    } catch (t) {
                                        P.e(t);
                                    } finally{
                                        P.f();
                                    }
                                }
                            }
                        }
                    }
                } catch (t68) {
                    A.e(t68);
                } finally{
                    A.f();
                }
                return [
                    r25 = Array.from(r25),
                    e29
                ];
            }
            /*!
 * ignore
 */ /*!
 * ignore
 */ function ft1(t, e) {
                var r, n = new Set(e), o = new Map([]), s = i8(e);
                try {
                    for(s.s(); !(r = s.n()).done;){
                        var a = r.value;
                        if (-1 !== a.indexOf(".")) for(var u = a.split("."), h = u[0], f = 1; f < u.length; ++f)o.set(h, a), h = h + "." + u[f];
                    }
                } catch (t69) {
                    s.e(t69);
                } finally{
                    s.f();
                }
                var c, l = [], d = i8(t);
                try {
                    for(d.s(); !(c = d.n()).done;){
                        var p = c.value;
                        n.has(p) ? l.push(p) : o.has(p) && l.push(o.get(p));
                    }
                } catch (t70) {
                    d.e(t70);
                } finally{
                    d.f();
                }
                return l;
            }
            /*!
 * ignore
 */ function ct1(t71, e) {
                return e = new Set(e), t71 = t71.filter(function(t) {
                    return !e.has(t);
                });
            }
            /*!
 * Runs queued functions
 */ function lt1(t) {
                var e = t.$__schema && t.$__schema.callQueue;
                if (e.length) {
                    var r, n = i8(e);
                    try {
                        for(n.s(); !(r = n.n()).done;){
                            var o = r.value;
                            "pre" !== o[0] && "post" !== o[0] && "on" !== o[0] && t[o[0]].apply(t, o[1]);
                        }
                    } catch (t) {
                        n.e(t);
                    } finally{
                        n.f();
                    }
                }
            }
            /*!
 * ignore
 */ /*!
 * Applies virtuals properties to `json`.
 */ function dt1(t, e, r, n) {
                var i, o, s, a = t.$__schema, u = Object.keys(a.virtuals), h = u.length, f = h, c = t._doc, l = "boolean" != typeof (n && n.aliases) || n.aliases, d = null;
                if (Array.isArray(r.virtuals)) d = new Set(r.virtuals);
                else if (r.virtuals && r.virtuals.pathsToSkip) {
                    d = new Set(u);
                    for(var p = 0; p < r.virtuals.pathsToSkip.length; p++)d.has(r.virtuals.pathsToSkip[p]) && d.delete(r.virtuals.pathsToSkip[p]);
                }
                if (!c) return e;
                for(r = r || {
                }, h = 0; h < f; ++h)if (i = u[h], (null == d || d.has(i)) && (l || !a.aliases.hasOwnProperty(i))) {
                    if (o = i, null != r.path) {
                        if (!i.startsWith(r.path + ".")) continue;
                        o = i.substring(r.path.length + 1);
                    }
                    var y = o.split(".");
                    if (void 0 !== (s = z1(t.get(i), r))) {
                        var m = y.length;
                        c = e;
                        for(var b = 0; b < m - 1; ++b)c[y[b]] = c[y[b]] || {
                        }, c = c[y[b]];
                        c[y[m - 1]] = s;
                    }
                }
                return e;
            }
            /*!
 * Applies virtuals properties to `json`.
 *
 * @param {Document} self
 * @param {Object} json
 * @return {Object} `json`
 */ function pt1(t, e) {
                if (F1(e)) throw new Error("`transform` function must be synchronous, but the transform on path `" + t + "` returned a promise.");
            }
            /*!
 * ignore
 */ it.prototype.$__schema, it.prototype.schema, Object.defineProperty(it.prototype, "$locals", {
                configurable: !1,
                enumerable: !1,
                get: function() {
                    return null == this.$__.locals && (this.$__.locals = {
                    }), this.$__.locals;
                },
                set: function(t) {
                    this.$__.locals = t;
                }
            }), it.prototype.$isNew, it.prototype.isNew, Object.defineProperty(it.prototype, "$where", {
                configurable: !1,
                enumerable: !1,
                writable: !0
            }), it.prototype.id, it.prototype.$errors, it.prototype.errors, Object.defineProperty(it.prototype, "$op", {
                get: function() {
                    return this.$__.op || null;
                },
                set: function(t) {
                    this.$__.op = t;
                }
            }), it.prototype.$__buildDoc = function(t72, e, r, n, i) {
                for(var o = {
                }, s = Object.keys(this.$__schema.paths).filter(function(t) {
                    return !t.includes("$*");
                }), a = s.length, u = 0; u < a; ++u){
                    var h = s[u];
                    if ("_id" === h) {
                        if (r) continue;
                        if (t72 && "_id" in t72) continue;
                    }
                    for(var f = this.$__schema.paths[h].splitPath(), c = f.length, l = c - 1, d = "", p = o, y = !1, m = 0; m < c; ++m){
                        var b = f[m];
                        if (d += (d.length ? "." : "") + b, !0 === n) {
                            if (d in e) break;
                        } else if (!1 === n && e && !y) {
                            if (d in e) y = !0;
                            else if (!i[d]) break;
                        }
                        m < l && (p = p[b] || (p[b] = {
                        }));
                    }
                }
                this._doc = o;
            }, /*!
 * Converts to POJO when you use the document for querying
 */ it.prototype.toBSON = function() {
                return this.toObject(D);
            }, it.prototype.init = function(t, e, r) {
                return "function" == typeof e && (r = e, e = null), this.$__init(t, e), r && r(null, this), this;
            }, it.prototype.$init = function() {
                return this.constructor.prototype.init.apply(this, arguments);
            }, it.prototype.$__init = function(t73, e30) {
                if (this.$isNew = !1, e30 = e30 || {
                }, null != t73._id && e30.populated && e30.populated.length) {
                    var r, n = String(t73._id), o = i8(e30.populated);
                    try {
                        for(o.s(); !(r = o.n()).done;){
                            var s = r.value;
                            if (s.isVirtual ? this.$populated(s.path, U.getValue(s.path, t73), s) : this.$populated(s.path, s._docs[n], s), null != s._childDocs) {
                                var a, u = i8(s._childDocs);
                                try {
                                    for(u.s(); !(a = u.n()).done;){
                                        var h = a.value;
                                        null != h && null != h.$__ && (h.$__.parent = this);
                                    }
                                } catch (t) {
                                    u.e(t);
                                } finally{
                                    u.f();
                                }
                                s._childDocs = [];
                            }
                        }
                    } catch (t) {
                        o.e(t);
                    } finally{
                        o.f();
                    }
                }
                !/*!
 * Init helper.
 *
 * @param {Object} self document instance
 * @param {Object} obj raw mongodb doc
 * @param {Object} doc object we are initializing
 * @api private
 */ function t74(e, r, n, i, o) {
                    o = o || "";
                    var s, a, u, h = Object.keys(r), f = h.length, c5 = 0, l = e.$__.strictMode, d = e.$__schema;
                    for(; c5 < f;)p(c5++);
                    function p(f) {
                        if (u = h[f], a = o + u, s = d.path(a), !d.$isRootDiscriminator || e.$__isSelected(a)) {
                            if (!s && U.isPOJO(r[u])) n[u] || (n[u] = {
                            }, l || u in d.tree || u in d.methods || u in d.virtuals || (e[u] = n[u])), t74(e, r[u], n[u], i, a + ".");
                            else if (s) {
                                if (n.hasOwnProperty(u) && void 0 !== r[u] && delete n[u], null === r[u]) n[u] = s._castNullish(null);
                                else if (void 0 !== r[u]) {
                                    var c = null == r[u].$__ ? null : r[u].$__.wasPopulated;
                                    if (s && !c) try {
                                        n[u] = s.cast(r[u], e, !0);
                                    } catch (t) {
                                        e.invalidate(t.path, new w1({
                                            path: t.path,
                                            message: t.message,
                                            type: "cast",
                                            value: t.value,
                                            reason: t
                                        }));
                                    }
                                    else n[u] = r[u];
                                }
                                e.$isModified(a) || e.$__.activePaths.init(a);
                            } else n[u] = r[u], l || (e[u] = r[u]);
                        }
                    }
                }(this, t73, this._doc, e30), C1(this, e30.populated), this.$emit("init", this), this.constructor.emit("init", this), this.$__._id = this._id;
                var f8 = !1 === this.$__.exclude && this.$__.fields ? M1(this.$__.fields) : {
                };
                return st1(this, this.$__.fields, this.$__.exclude, f8, !1, this.$__.skipDefaults), this;
            }, it.prototype.update = function() {
                var t = Array.prototype.slice.call(arguments);
                t.unshift({
                    _id: this._id
                });
                var e = this.constructor.update.apply(this.constructor, t);
                return null != this.$session() && ("session" in e.options || (e.options.session = this.$session())), e;
            }, it.prototype.updateOne = function(t75, e, r) {
                var n = this, i = this.constructor.updateOne({
                    _id: this._id
                }, t75, e);
                return i.pre(function(t) {
                    n.constructor._middleware.execPre("updateOne", n, [
                        n
                    ], t);
                }), i.post(function(t) {
                    n.constructor._middleware.execPost("updateOne", n, [
                        n
                    ], {
                    }, t);
                }), null != this.$session() && ("session" in i.options || (i.options.session = this.$session())), null != r ? i.exec(r) : i;
            }, it.prototype.replaceOne = function() {
                var t = Array.prototype.slice.call(arguments);
                return t.unshift({
                    _id: this._id
                }), this.constructor.replaceOne.apply(this.constructor, t);
            }, it.prototype.$session = function(t) {
                if (0 === arguments.length) return null != this.$__.session && this.$__.session.hasEnded ? (this.$__.session = null, null) : this.$__.session;
                if (null != t && t.hasEnded) throw new l5("Cannot set a document's session to a session that has ended. Make sure you haven't called `endSession()` on the session you are passing to `$session()`.");
                if (null != t || null != this.$__.session) {
                    if (this.$__.session = t, !this.$isSubdocument) {
                        var e, r = this.$getAllSubdocs(), n = i8(r);
                        try {
                            for(n.s(); !(e = n.n()).done;){
                                var o = e.value;
                                o.$session(t);
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                    }
                    return t;
                }
            }, it.prototype.overwrite = function(t) {
                for(var e = 0, r = Array.from(new Set(Object.keys(this._doc).concat(Object.keys(t)))); e < r.length; e++){
                    var n = r[e];
                    "_id" !== n && (this.$__schema.options.versionKey && n === this.$__schema.options.versionKey || this.$__schema.options.discriminatorKey && n === this.$__schema.options.discriminatorKey || this.$set(n, t[n]));
                }
                return this;
            }, it.prototype.$set = function(t78, e31, r26, o10) {
                var a8 = this;
                U.isPOJO(r26) && (o10 = r26, r26 = void 0);
                var u7, h, f, c, y = (o10 = o10 || {
                }).merge, m = r26 && !0 !== r26, b = !0 === r26, g = this.$__schema.options.typeKey, w = 0, _ = "strict" in o10 ? o10.strict : this.$__.strictMode;
                if (m && ((this.$__.adhocPaths || (this.$__.adhocPaths = {
                }))[t78] = this.$__schema.interpretAsType(t78, r26, this.$__schema.options)), null == t78) {
                    var M = [
                        e31,
                        t78
                    ];
                    t78 = M[0], e31 = M[1];
                } else if ("string" != typeof t78) {
                    if (t78 instanceof it && (t78 = t78.$__isNested ? t78.toObject() : t78._doc), null == t78) {
                        var S = [
                            e31,
                            t78
                        ];
                        t78 = S[0], e31 = S[1];
                    }
                    c = e31 ? e31 + "." : "";
                    var A = (u7 = P1(this.$__schema, t78)).length, E = o10._skipMinimizeTopLevel || !1;
                    if (0 === A && E) return delete o10._skipMinimizeTopLevel, e31 && this.$set(e31, {
                    }), this;
                    for(var x = 0; x < A; ++x){
                        var k = c + (f = u7[x]);
                        h = this.$__schema.pathType(k);
                        var j = t78[f];
                        if (!0 !== r26 || c || null == j || "nested" !== h || null == this._doc[f] ? o10 = Object.assign({
                        }, o10, {
                            _skipMinimizeTopLevel: !1
                        }) : (delete this._doc[f], o10 = Object.assign({
                        }, o10, {
                            _skipMinimizeTopLevel: !0
                        })), U.isNonBuiltinObject(j) && "nested" === h) at(t78[f], c + f, this), this.$set(c + f, t78[f], b, Object.assign({
                        }, o10, {
                            _skipMarkModified: !0
                        }));
                        else if (_) {
                            if (b && void 0 === t78[f] && void 0 !== this.$get(k)) continue;
                            if ("adhocOrUndefined" === h && (h = $1(this, k, {
                                typeOnly: !0
                            })), "real" === h || "virtual" === h) {
                                var B = t78[f];
                                this.$set(c + f, B, b, o10);
                            } else if ("nested" === h && t78[f] instanceof it) this.$set(c + f, t78[f].toObject({
                                transform: !1
                            }), b, o10);
                            else if ("throw" === _) throw "nested" === h ? new p2(f, t78[f]) : new v2(f);
                        } else void 0 !== t78[f] && this.$set(c + f, t78[f], b, o10);
                    }
                    for(var T = 0, I = Object.keys(this.$__schema.tree); T < I.length; T++){
                        var N = I[T];
                        if (this._doc.hasOwnProperty(N)) {
                            var C = this._doc[N];
                            delete this._doc[N], this._doc[N] = C;
                        }
                    }
                    return this;
                }
                var q = this.$__schema.pathType(t78);
                "adhocOrUndefined" === q && (q = $1(this, t78, {
                    typeOnly: !0
                })), e31 = R1(e31);
                var F, z = null != a8.$__.priorDoc ? a8.$__.priorDoc.$__getValue(t78) : b ? void 0 : a8.$__getValue(t78);
                if ("nested" === q && e31) {
                    if ("object" === s8(e31) && null != e31) {
                        if (null != e31.$__ && (e31 = e31.toObject(D)), null == e31) return this.invalidate(t78, new l5.CastError("Object", e31, t78)), this;
                        var V = null != this.$__.savedState && this.$__.savedState.hasOwnProperty(t78);
                        if (null != this.$__.savedState && !this.$isNew && !this.$__.savedState.hasOwnProperty(t78)) {
                            var K = this.$__getValue(t78);
                            this.$__.savedState[t78] = K;
                            for(var H = 0, Z = Object.keys(K || {
                            }); H < Z.length; H++){
                                var W = Z[H];
                                this.$__.savedState[t78 + "." + W] = K[W];
                            }
                        }
                        if (y) return this.$set(e31, t78, b);
                        this.$__setValue(t78, null), O1(this, t78);
                        var J = P1(this.$__schema, e31, t78);
                        this.$__setValue(t78, {
                        });
                        var Y, Q = i8(J);
                        try {
                            for(Q.s(); !(Y = Q.n()).done;){
                                var G = Y.value;
                                this.$set(t78 + "." + G, e31[G], b, o10);
                            }
                        } catch (t76) {
                            Q.e(t76);
                        } finally{
                            Q.f();
                        }
                        return null != z && U.deepEqual(V ? this.$__.savedState[t78] : z, e31) ? this.unmarkModified(t78) : this.markModified(t78), O1(this, t78, {
                            skipDocArrays: !0
                        }), this;
                    }
                    return this.invalidate(t78, new l5.CastError("Object", e31, t78)), this;
                }
                var tt = -1 === t78.indexOf(".") ? [
                    t78
                ] : t78.split(".");
                if ("string" == typeof this.$__schema.aliases[tt[0]] && (tt[0] = this.$__schema.aliases[tt[0]]), "adhocOrUndefined" === q && _) {
                    var et;
                    for(w = 0; w < tt.length; ++w){
                        var rt = tt.slice(0, w + 1).join(".");
                        if (w + 1 < tt.length && "virtual" === this.$__schema.pathType(rt)) return L.set(t78, e31, this), this;
                        if (null != (F = this.$__schema.path(rt)) && F instanceof d2) {
                            et = !0;
                            break;
                        }
                    }
                    if (null == F && (F = $1(this, t78)), !et && !F) {
                        if ("throw" === _) throw new v2(t78);
                        return this;
                    }
                } else {
                    if ("virtual" === q) return (F = this.$__schema.virtualpath(t78)).applySetters(e31, this), this;
                    F = this.$__path(t78);
                }
                var nt, ot = this._doc, st = "";
                for(w = 0; w < tt.length - 1; ++w)ot = ot[tt[w]], st += (0 !== st.length ? "." : "") + tt[w], ot || (this.$set(st, {
                }), this.$__isSelected(st) || this.unmarkModified(st), ot = this.$__getValue(st));
                if (tt.length <= 1) nt = t78;
                else {
                    var ut = tt.length;
                    for(w = 0; w < ut; ++w){
                        var ht = tt.slice(0, w + 1).join(".");
                        if (null === this.$get(ht, null, {
                            getters: !1
                        })) {
                            nt = ht;
                            break;
                        }
                    }
                    nt || (nt = t78);
                }
                if (!F) return this.$__set(nt, t78, o10, b, tt, F, e31, z), this;
                if ((F.$isSingleNested || F.$isMongooseArray) && /*!
 * ignore
 */ (function(t, e) {
                    if (!t.$__.validationError) return;
                    for(var r = Object.keys(t.$__.validationError.errors), n = 0, i = r; n < i.length; n++){
                        var o = i[n];
                        o.startsWith(e + ".") && delete t.$__.validationError.errors[o];
                    }
                    0 === Object.keys(t.$__.validationError.errors).length && (t.$__.validationError = null);
                })(this, t78), null != e31 && y && F.$isSingleNested) {
                    e31 instanceof it && (e31 = e31.toObject({
                        virtuals: !1,
                        transform: !1
                    }));
                    for(var ft = 0, ct = Object.keys(e31); ft < ct.length; ft++){
                        var lt = ct[ft];
                        this.$set(t78 + "." + lt, e31[lt], b, o10);
                    }
                    return this;
                }
                var dt = !0;
                try {
                    var pt, yt = function() {
                        if (null == F.options) return !1;
                        if (!(e31 instanceof it)) return !1;
                        var t = e31.constructor, r = F.options.ref;
                        if (null != r && (r === t.modelName || r === t.baseModelName)) return !0;
                        var n = F.options.refPath;
                        if (null == n) return !1;
                        var i = e31.get(n);
                        return i === t.modelName || i === t.baseModelName;
                    }(), mt = !1;
                    if (yt && e31 instanceof it) {
                        var bt = F && F.$isSingleNested ? F.cast(e31, this) : e31._id;
                        this.$populated(t78, bt, n16({
                        }, X, e31.constructor)), e31.$__.wasPopulated = {
                            value: bt
                        }, mt = !0;
                    }
                    if (F.options && Array.isArray(F.options[g]) && F.options[g].length && F.options[g][0].ref && /*!
 * ignore
 */ (function(t, e) {
                        if (!Array.isArray(t)) return !1;
                        if (0 === t.length) return !1;
                        var r, n = i8(t);
                        try {
                            for(n.s(); !(r = n.n()).done;){
                                var o = r.value;
                                if (!(o instanceof it)) return !1;
                                if (null == o.constructor.modelName) return !1;
                                if (o.constructor.modelName != e && o.constructor.baseModelName != e) return !1;
                            }
                        } catch (t79) {
                            n.e(t79);
                        } finally{
                            n.f();
                        }
                        return !0;
                    })(e31, F.options[g][0].ref)) {
                        pt = n16({
                        }, X, e31[0].constructor), this.$populated(t78, e31.map(function(t) {
                            return t._id;
                        }), pt);
                        var vt, gt = i8(e31);
                        try {
                            for(gt.s(); !(vt = gt.n()).done;){
                                var wt = vt.value;
                                wt.$__.wasPopulated = {
                                    value: wt._id
                                };
                            }
                        } catch (t) {
                            gt.e(t);
                        } finally{
                            gt.f();
                        }
                        mt = !0;
                    }
                    if (null != this.$__schema.singleNestedPaths[t78] || yt && F.$isSingleNested && e31.$__ || (e31 = F.applySetters(e31, this, !1, z)), Array.isArray(e31) && !Array.isArray(F) && F.$isMongooseDocumentArray && 0 !== e31.length && null != e31[0] && null != e31[0].$__ && null != e31[0].$__.populated) {
                        for(var _t = Object.keys(e31[0].$__.populated), Mt = function() {
                            var r = Ot[St];
                            a8.$populated(t78 + "." + r, e31.map(function(t) {
                                return t.$populated(r);
                            }), e31[0].$__.populated[r].options);
                        }, St = 0, Ot = _t; St < Ot.length; St++)Mt();
                        mt = !0;
                    }
                    if (!mt && this.$__.populated) {
                        if (Array.isArray(e31) && this.$__.populated[t78]) for(var At = 0; At < e31.length; ++At)e31[At] instanceof it && e31.set(At, e31[At]._id, !0);
                        delete this.$__.populated[t78];
                    }
                    null != e31 && F.$isSingleNested && (function(t, e, r) {
                        var n = e.schema;
                        if (null == n) return;
                        for(var i = 0, o = Object.keys(n.paths); i < o.length; i++){
                            var s = o[i], a = n.paths[s];
                            if (null != a.$immutableSetter) {
                                var u = null == r ? void 0 : r.$__getValue(s);
                                a.$immutableSetter.call(t, u);
                            }
                        }
                    })(e31, F, z), this.$markValid(t78);
                } catch (r) {
                    r instanceof l5.StrictModeError && r.isImmutableError ? this.invalidate(t78, r) : r instanceof l5.CastError ? (this.invalidate(r.path, r), r.$originalErrorPath && this.invalidate(t78, new l5.CastError(F.instance, e31, t78, r.$originalErrorPath))) : this.invalidate(t78, new l5.CastError(F.instance, e31, t78, r)), dt = !1;
                }
                if (dt) {
                    var Et = this.$isSubdocument ? this.ownerDocument() : this, xt = Et.$__.savedState, kt = this.$isSubdocument ? this.$__.fullPath + "." + t78 : t78;
                    if (null != xt) {
                        var jt = kt.indexOf("."), $t = -1 === jt ? kt : kt.slice(0, jt);
                        xt.hasOwnProperty($t) || (xt[$t] = U.clone(Et.$__getValue($t)));
                    }
                    this.$__set(nt, t78, o10, b, tt, F, e31, z), null != xt && xt.hasOwnProperty(kt) && U.deepEqual(e31, xt[kt]) && this.unmarkModified(t78);
                }
                return F.$isSingleNested && (this.isDirectModified(t78) || null == e31) && O1(this, t78), this;
            }, it.prototype.set = it.prototype.$set, it.prototype.$__shouldModify = function(t, e, r, n, i, o, s, a) {
                return !r._skipMarkModified && (!!this.$isNew || null == this.$__schema.singleNestedPaths[e] && (void 0 === s && !this.$__isSelected(e) || (void 0 !== s || !(e in this.$__.activePaths.states.default)) && !(this.$populated(e) && s instanceof it && V1(s._id, a)) && (!V1(s, a || U.getValue(e, this)) || !(n || null == s || !(e in this.$__.activePaths.states.default) || !V1(s, o.getDefault(this, n))))));
            }, it.prototype.$__set = function(t80, e, n, i, o, s, a, f) {
                h7 = h7 || r23(46);
                var c = this.$__shouldModify(t80, e, n, i, o, s, a, f), l = this;
                c ? (this.markModified(t80), u6 || (u6 = r23(166)), a && U.isMongooseArray(a) && (a._registerAtomic("$set", a), U.isMongooseDocumentArray(a) && a.forEach(function(t) {
                    t && t.__parentArray && (t.__parentArray = a);
                }), this.$__.activePaths.forEach(function(t) {
                    t.startsWith(e + ".") && l.$__.activePaths.ignore(t);
                }))) : Array.isArray(a) && Array.isArray(f) && U.isMongooseArray(a) && U.isMongooseArray(f) && (a[Z1] = f[Z1], a[H1] = f[H1], U.isMongooseDocumentArray(a) && a.forEach(function(t) {
                    t.isNew = !1;
                }));
                for(var d = this._doc, p = 0, y = o.length, m = ""; p < y; p++){
                    var b = p + 1 === y;
                    if (m += m ? "." + o[p] : o[p], nt1.has(o[p])) return;
                    b ? d instanceof Map ? d.set(o[p], a) : d[o[p]] = a : (U.isPOJO(d[o[p]]) || d[o[p]] && d[o[p]] instanceof h7 || d[o[p]] && !Array.isArray(d[o[p]]) && d[o[p]].$isSingleNested || d[o[p]] && Array.isArray(d[o[p]]) || (d[o[p]] = d[o[p]] || {
                    }), d = d[o[p]]);
                }
            }, it.prototype.$__getValue = function(t) {
                return U.getValue(t, this._doc);
            }, it.prototype.$__setValue = function(t, e) {
                return U.setValue(t, e, this._doc), this;
            }, it.prototype.get = function(t, e, r) {
                var n;
                r = r || {
                }, e && (n = this.$__schema.interpretAsType(t, e, this.$__schema.options));
                var i = this.$__path(t);
                if (null == i && (i = this.$__schema.virtualpath(t)), i instanceof d2) {
                    var o = this.$__schema.virtualpath(t);
                    null != o && (i = o);
                }
                var s = -1 === t.indexOf(".") ? [
                    t
                ] : t.split("."), a = this._doc;
                if (i instanceof _2) return i.applyGetters(void 0, this);
                "string" == typeof this.$__schema.aliases[s[0]] && (s[0] = this.$__schema.aliases[s[0]]);
                for(var u = 0, h = s.length; u < h; u++)a && a._doc && (a = a._doc), a = null == a ? void 0 : a instanceof Map ? a.get(s[u], {
                    getters: !1
                }) : u === h - 1 ? U.getValue(s[u], a) : a[s[u]];
                if (n && (a = n.cast(a)), null != i && !1 !== r.getters) a = i.applyGetters(a, this);
                else if (this.$__schema.nested[t] && r.virtuals) return dt1(this, U.clone(a) || {
                }, {
                    path: t
                });
                return a;
            }, /*!
 * ignore
 */ it.prototype[G1] = it.prototype.get, it.prototype.$get = it.prototype.get, it.prototype.$__path = function(t) {
                var e = this.$__.adhocPaths, r = e && e.hasOwnProperty(t) ? e[t] : null;
                return r || this.$__schema.path(t);
            }, it.prototype.markModified = function(t, e) {
                this.$__.activePaths.modify(t), null == e || this.$isSubdocument || (this.$__.pathsToScopes = this.$__pathsToScopes || {
                }, this.$__.pathsToScopes[t] = e);
            }, it.prototype.unmarkModified = function(t) {
                this.$__.activePaths.init(t), null != this.$__.pathsToScopes && delete this.$__.pathsToScopes[t];
            }, it.prototype.$ignore = function(t) {
                this.$__.activePaths.ignore(t);
            }, it.prototype.directModifiedPaths = function() {
                return Object.keys(this.$__.activePaths.states.modify);
            }, it.prototype.$isEmpty = function(t) {
                var e = {
                    minimize: !0,
                    virtuals: !1,
                    getters: !1,
                    transform: !1
                };
                if (0 !== arguments.length) {
                    var r = this.$get(t);
                    return null == r || "object" === s8(r) && (U.isPOJO(r) ? ut1(r) : 0 === Object.keys(r.toObject(e)).length);
                }
                return 0 === Object.keys(this.toObject(e)).length;
            }, it.prototype.modifiedPaths = function(t) {
                t = t || {
                };
                var e = Object.keys(this.$__.activePaths.states.modify), r = new Set, n = 0, i = 0, o = e.length;
                for(n = 0; n < o; ++n){
                    var a = e[n], u = rt1(a), h = u.length;
                    for(i = 0; i < h; ++i)r.add(u[i]);
                    if (t.includeChildren) {
                        var f = 0, c = this.$get(a);
                        if ("object" === s8(c) && null !== c) {
                            c._doc && (c = c._doc);
                            var l = c.length;
                            if (Array.isArray(c)) for(f = 0; f < l; ++f){
                                var d = a + "." + f;
                                if (!r.has(d) && (r.add(d), null != c[f] && c[f].$__)) {
                                    var p = c[f].modifiedPaths(), y = 0, m = p.length;
                                    for(y = 0; y < m; ++y)r.add(d + "." + p[y]);
                                }
                            }
                            else {
                                var b = Object.keys(c), v = 0, g = b.length;
                                for(v = 0; v < g; ++v)r.add(a + "." + b[v]);
                            }
                        }
                    }
                }
                return Array.from(r);
            }, it.prototype[Y1] = it.prototype.modifiedPaths, it.prototype.isModified = function(t81, e32) {
                if (t81) {
                    var r = Object.keys(this.$__.activePaths.states.modify);
                    if (0 === r.length) return !1;
                    Array.isArray(t81) || (t81 = -1 === t81.indexOf(" ") ? [
                        t81
                    ] : t81.split(" "));
                    var n = e32 || this[Y1]();
                    return t81.some(function(t) {
                        return !!~n.indexOf(t);
                    }) || t81.some(function(t) {
                        return r.some(function(e) {
                            return e === t || t.startsWith(e + ".");
                        });
                    });
                }
                return this.$__.activePaths.some("modify");
            }, it.prototype.$isModified = it.prototype.isModified, it.prototype[J1] = it.prototype.isModified, it.prototype.$isDefault = function(t82) {
                var e = this;
                if (null == t82) return this.$__.activePaths.some("default");
                if ("string" == typeof t82 && -1 === t82.indexOf(" ")) return this.$__.activePaths.states.default.hasOwnProperty(t82);
                var r = t82;
                return Array.isArray(r) || (r = r.split(" ")), r.some(function(t) {
                    return e.$__.activePaths.states.default.hasOwnProperty(t);
                });
            }, it.prototype.$isDeleted = function(t) {
                return 0 === arguments.length ? !!this.$__.isDeleted : (this.$__.isDeleted = !!t, this);
            }, it.prototype.isDirectModified = function(t83) {
                var e = this;
                if (null == t83) return this.$__.activePaths.some("modify");
                if ("string" == typeof t83 && -1 === t83.indexOf(" ")) return this.$__.activePaths.states.modify.hasOwnProperty(t83);
                var r = t83;
                return Array.isArray(r) || (r = r.split(" ")), r.some(function(t) {
                    return e.$__.activePaths.states.modify.hasOwnProperty(t);
                });
            }, it.prototype.isInit = function(t84) {
                var e = this;
                if (null == t84) return this.$__.activePaths.some("init");
                if ("string" == typeof t84 && -1 === t84.indexOf(" ")) return this.$__.activePaths.states.init.hasOwnProperty(t84);
                var r = t84;
                return Array.isArray(r) || (r = r.split(" ")), r.some(function(t) {
                    return e.$__.activePaths.states.init.hasOwnProperty(t);
                });
            }, it.prototype.isSelected = function(t85) {
                var e = this;
                if (null == this.$__.selected) return !0;
                if (!t85) return !1;
                if ("_id" === t85) return 0 !== this.$__.selected._id;
                if (-1 !== t85.indexOf(" ") && (t85 = t85.split(" ")), Array.isArray(t85)) return t85.some(function(t) {
                    return e.$__isSelected(t);
                });
                var r = Object.keys(this.$__.selected), n = null;
                if (1 === r.length && "_id" === r[0]) return 0 === this.$__.selected._id;
                for(var i = 0, o = r; i < o.length; i++){
                    var s = o[i];
                    if ("_id" !== s && T1(this.$__.selected[s])) {
                        n = !!this.$__.selected[s];
                        break;
                    }
                }
                if (null === n) return !0;
                if (t85 in this.$__.selected) return n;
                for(var a = t85 + ".", u = 0, h = r; u < h.length; u++){
                    var f = h[u];
                    if ("_id" !== f) {
                        if (f.startsWith(a)) return n || f !== a;
                        if (a.startsWith(f + ".")) return n;
                    }
                }
                return !n;
            }, it.prototype.$__isSelected = it.prototype.isSelected, it.prototype.isDirectSelected = function(t86) {
                var e = this;
                if (null == this.$__.selected) return !0;
                if ("_id" === t86) return 0 !== this.$__.selected._id;
                if (-1 !== t86.indexOf(" ") && (t86 = t86.split(" ")), Array.isArray(t86)) return t86.some(function(t) {
                    return e.isDirectSelected(t);
                });
                var r = Object.keys(this.$__.selected), n = null;
                if (1 === r.length && "_id" === r[0]) return 0 === this.$__.selected._id;
                for(var i = 0, o = r; i < o.length; i++){
                    var s = o[i];
                    if ("_id" !== s && T1(this.$__.selected[s])) {
                        n = !!this.$__.selected[s];
                        break;
                    }
                }
                return null === n || (this.$__.selected.hasOwnProperty(t86) ? n : !n);
            }, it.prototype.validate = function(t87, e, r27) {
                var n, i = this;
                if (this.$op = "validate", null != this.$isSubdocument || (this.$__.validating ? n = new m2(this, {
                    parentStack: e && e.parentStack,
                    conflictStack: this.$__.validating.stack
                }) : this.$__.validating = new m2(this, {
                    parentStack: e && e.parentStack
                })), 1 === arguments.length ? "object" !== s8(arguments[0]) || Array.isArray(arguments[0]) ? "function" == typeof arguments[0] && (r27 = arguments[0], e = null, t87 = null) : (e = arguments[0], r27 = null, t87 = null) : "function" == typeof t87 ? (r27 = t87, e = null, t87 = null) : "function" == typeof e && (r27 = e, e = t87, t87 = null), e && "string" == typeof e.pathsToSkip) {
                    var o = -1 === e.pathsToSkip.indexOf(" ");
                    e.pathsToSkip = o ? [
                        e.pathsToSkip
                    ] : e.pathsToSkip.split(" ");
                }
                return S1(r27, function(r) {
                    if (null != n) return r(n);
                    i.$__validate(t87, e, function(t) {
                        i.$op = null, r(t);
                    });
                }, this.constructor.events);
            }, it.prototype.$validate = it.prototype.validate, it.prototype.$__validate = function(t88, e33, r28) {
                var n18 = this;
                "function" == typeof t88 ? (r28 = t88, e33 = null, t88 = null) : "function" == typeof e33 && (r28 = e33, e33 = null);
                var o, a = e33 && "object" === s8(e33) && "validateModifiedOnly" in e33, u = e33 && e33.pathsToSkip || null;
                o = a ? !!e33.validateModifiedOnly : this.$__schema.options.validateModifiedOnly;
                var h = this, f = function() {
                    var t = n18.$__.validationError;
                    if (n18.$__.validationError = void 0, o && null != t) {
                        for(var e = 0, r = Object.keys(t.errors); e < r.length; e++){
                            var i = r[e];
                            n18.$isModified(i) || delete t.errors[i];
                        }
                        0 === Object.keys(t.errors).length && (t = void 0);
                    }
                    if (n18.$__.cachedRequired = {
                    }, n18.$emit("validate", h), n18.constructor.emit("validate", h), t) {
                        for(var s in t.errors)!n18[W] && t.errors[s] instanceof l5.CastError && n18.invalidate(s, t.errors[s]);
                        return t;
                    }
                }, c = ht1(this), d = o ? c[0].filter(function(t) {
                    return n18.$isModified(t);
                }) : c[0], p = c[1];
                if ("string" == typeof t88 && (t88 = t88.split(" ")), Array.isArray(t88) ? d = ft1(d, t88) : u && (d = ct1(d, u)), 0 === d.length) return B1(function() {
                    var t89 = f();
                    if (t89) return h.$__schema.s.hooks.execPost("validate:error", h, [
                        h
                    ], {
                        error: t89
                    }, function(t) {
                        r28(t);
                    });
                    r28(null, h);
                });
                var y, m = {
                }, b = 0, v = i8(d);
                try {
                    for(v.s(); !(y = v.n()).done;)w(y.value);
                } catch (t90) {
                    v.e(t90);
                } finally{
                    v.f();
                }
                function w(t) {
                    null == t || m[t] || (m[t] = !0, b++, B1(function() {
                        var e = h.$__schema.path(t);
                        if (!e) return --b || _();
                        if (h.$isValid(t)) {
                            if (null != e[et1] && t !== e.path) return --b || _();
                            var r29, n = h.$__getValue(t);
                            (r29 = h.$populated(t)) ? n = r29 : null != n && null != n.$__ && n.$__.wasPopulated && (n = n._id);
                            var i = null != h.$__.pathsToScopes && t in h.$__.pathsToScopes ? h.$__.pathsToScopes[t] : h, s = {
                                skipSchemaValidators: p[t],
                                path: t,
                                validateModifiedOnly: o
                            };
                            e.doValidate(n, function(r) {
                                if (r) {
                                    if ((e.$isSingleNested || e.$isArraySubdocument || e.$isMongooseDocumentArray) && r instanceof g1) return --b || _();
                                    h.invalidate(t, r, void 0, !0);
                                }
                                --b || _();
                            }, i, s);
                        } else --b || _();
                    }));
                }
                function _() {
                    var t91 = f();
                    if (t91) return h.$__schema.s.hooks.execPost("validate:error", h, [
                        h
                    ], {
                        error: t91
                    }, function(t) {
                        r28(t);
                    });
                    r28(null, h);
                }
            }, it.prototype.validateSync = function(t92, e) {
                var r = this, n = this;
                1 !== arguments.length || "object" !== s8(arguments[0]) || Array.isArray(arguments[0]) || (e = arguments[0], t92 = null);
                var i, o = e && "object" === s8(e) && "validateModifiedOnly" in e;
                i = o ? !!e.validateModifiedOnly : this.$__schema.options.validateModifiedOnly;
                var a = e && e.pathsToSkip;
                if ("string" == typeof t92) {
                    var u = -1 === t92.indexOf(" ");
                    t92 = u ? [
                        t92
                    ] : t92.split(" ");
                } else "string" == typeof a && -1 !== a.indexOf(" ") && (a = a.split(" "));
                var h = ht1(this), f = i ? h[0].filter(function(t) {
                    return r.$isModified(t);
                }) : h[0], c = h[1];
                Array.isArray(t92) ? f = ft1(f, t92) : Array.isArray(a) && (f = ct1(f, a));
                for(var d = {
                }, p = 0, y = f.length; p < y; ++p){
                    var m = f[p];
                    if (!d[m]) {
                        d[m] = !0;
                        var b = n.$__schema.path(m);
                        if (b && n.$isValid(m)) {
                            var v = n.$__getValue(m), w = b.doValidateSync(v, n, {
                                skipSchemaValidators: c[m],
                                path: m,
                                validateModifiedOnly: i
                            });
                            if (w) {
                                var _ = b.$isSingleNested || b.$isArraySubdocument || b.$isMongooseDocumentArray;
                                if (_ && w instanceof g1) continue;
                                n.invalidate(m, w, void 0, !0);
                            }
                        }
                    }
                }
                var M = n.$__.validationError;
                if (n.$__.validationError = void 0, n.$emit("validate", n), n.constructor.emit("validate", n), M) for(var S in M.errors)M.errors[S] instanceof l5.CastError && n.invalidate(S, M.errors[S]);
                return M;
            }, it.prototype.invalidate = function(t, e, r, n) {
                if (this.$__.validationError || (this.$__.validationError = new g1(this)), !this.$__.validationError.errors[t]) return e && "string" != typeof e || (e = new w1({
                    path: t,
                    message: e,
                    type: n || "user defined",
                    value: r
                })), this.$__.validationError === e || this.$__.validationError.addError(t, e), this.$__.validationError;
            }, it.prototype.$markValid = function(t) {
                this.$__.validationError && this.$__.validationError.errors[t] && (delete this.$__.validationError.errors[t], 0 === Object.keys(this.$__.validationError.errors).length && (this.$__.validationError = null));
            }, it.prototype.$isValid = function(t) {
                var e = this;
                return null == this.$__.validationError || 0 === Object.keys(this.$__.validationError.errors).length || null != t && (-1 !== t.indexOf(" ") && (t = t.split(" ")), Array.isArray(t) ? t.some(function(t) {
                    return null == e.$__.validationError.errors[t];
                }) : null == this.$__.validationError.errors[t]);
            }, it.prototype.$__reset = function() {
                var t93 = this;
                return a7 || (a7 = r23(27)), this.$__.activePaths.map("init", "modify", function(e) {
                    return t93.$__getValue(e);
                }).filter(function(t) {
                    return t && Array.isArray(t) && U.isMongooseDocumentArray(t) && t.length;
                }).forEach(function(e) {
                    for(var r = e.length; r--;){
                        var n = e[r];
                        n && n.$__reset();
                    }
                    t93.$__.activePaths.init(e.$path()), e[H1] = e[Z1], e[Z1] = {
                    };
                }), this.$__.activePaths.map("init", "modify", function(e) {
                    return t93.$__getValue(e);
                }).filter(function(t) {
                    return t && !Array.isArray(t) && t.$isSingleNested;
                }).forEach(function(e) {
                    e.$__reset(), e.$parent() === t93 ? t93.$__.activePaths.init(e.$basePath) : null != e.$parent() && e.$parent().$isSubdocument && e.$parent().$__reset();
                }), this.$__dirty().forEach(function(t) {
                    var e = t.value;
                    e && e[Z1] && (e[H1] = e[Z1], e[Z1] = {
                    });
                }), this.$__.backup = {
                }, this.$__.backup.activePaths = {
                    modify: Object.assign({
                    }, this.$__.activePaths.states.modify),
                    default: Object.assign({
                    }, this.$__.activePaths.states.default)
                }, this.$__.backup.validationError = this.$__.validationError, this.$__.backup.errors = this.$errors, this.$__.activePaths.clear("modify"), this.$__.activePaths.clear("default"), this.$__.validationError = void 0, this.$errors = void 0, t93 = this, this.$__schema.requiredPaths().forEach(function(e) {
                    t93.$__.activePaths.require(e);
                }), this;
            }, /*!
 * ignore
 */ it.prototype.$__undoReset = function() {
                if (null != this.$__.backup && null != this.$__.backup.activePaths) {
                    this.$__.activePaths.states.modify = this.$__.backup.activePaths.modify, this.$__.activePaths.states.default = this.$__.backup.activePaths.default, this.$__.validationError = this.$__.backup.validationError, this.$errors = this.$__.backup.errors;
                    var t, e = i8(this.$__dirty());
                    try {
                        for(e.s(); !(t = e.n()).done;){
                            var r = t.value.value;
                            r && r[Z1] && r[H1] && (r[Z1] = r[H1]);
                        }
                    } catch (t94) {
                        e.e(t94);
                    } finally{
                        e.f();
                    }
                    var n, o = i8(this.$getAllSubdocs());
                    try {
                        for(o.s(); !(n = o.n()).done;)n.value.$__undoReset();
                    } catch (t95) {
                        o.e(t95);
                    } finally{
                        o.f();
                    }
                }
            }, it.prototype.$__dirty = function() {
                var t96 = this, e34 = this.$__.activePaths.map("modify", function(e) {
                    return {
                        path: e,
                        value: t96.$__getValue(e),
                        schema: t96.$__path(e)
                    };
                });
                e34 = e34.concat(this.$__.activePaths.map("default", function(e) {
                    if ("_id" !== e && null != t96.$__getValue(e)) return {
                        path: e,
                        value: t96.$__getValue(e),
                        schema: t96.$__path(e)
                    };
                }));
                var r = new Map(e34.filter(function(t) {
                    return null != t;
                }).map(function(t) {
                    return [
                        t.path,
                        t.value
                    ];
                })), n = [];
                return e34.forEach(function(t) {
                    if (t) {
                        for(var e = null, i = rt1(t.path), o = 0; o < i.length - 1; o++)if (r.has(i[o])) {
                            e = r.get(i[o]);
                            break;
                        }
                        null == e ? n.push(t) : null != e && null != e[Z1] && e.hasAtomics() && (e[Z1] = {
                        }, e[Z1].$set = e);
                    }
                }), n;
            }, it.prototype.$__setSchema = function(t) {
                A2(t.tree, this, void 0, t.options);
                for(var e = 0, r = Object.keys(t.virtuals); e < r.length; e++){
                    var n = r[e];
                    t.virtuals[n]._applyDefaultGetters();
                }
                null == t.path("schema") && (this.schema = t), this.$__schema = t, this[Q1] = t;
            }, it.prototype.$__getArrayPathsToValidate = function() {
                return a7 || (a7 = r23(27)), this.$__.activePaths.map("init", "modify", (function(t) {
                    return this.$__getValue(t);
                }).bind(this)).filter(function(t) {
                    return t && Array.isArray(t) && U.isMongooseDocumentArray(t) && t.length;
                }).reduce(function(t, e) {
                    return t.concat(e);
                }, []).filter(function(t) {
                    return t;
                });
            }, it.prototype.$getAllSubdocs = function() {
                function t(e36, r31, n20) {
                    var i = e36, o = !1;
                    if (n20 && (e36 instanceof it && e36[Q1].paths[n20] ? i = e36._doc[n20] : e36 instanceof it && e36[Q1].nested[n20] ? (i = e36._doc[n20], o = !0) : i = e36[n20]), i instanceof h7) r31.push(i);
                    else if (i instanceof Map) r31 = Array.from(i.keys()).reduce(function(e, r) {
                        return t(i.get(r), e, null);
                    }, r31);
                    else if (i && !Array.isArray(i) && i.$isSingleNested) (r31 = Object.keys(i._doc).reduce(function(e, r) {
                        return t(i._doc, e, r);
                    }, r31)).push(i);
                    else if (i && U.isMongooseDocumentArray(i)) i.forEach(function(e) {
                        e && e._doc && (r31 = Object.keys(e._doc).reduce(function(r, n) {
                            return t(e._doc, r, n);
                        }, r31), e instanceof h7 && r31.push(e));
                    });
                    else if (o && null != i) for(var s = 0, a = Object.keys(i); s < a.length; s++){
                        var u = a[s];
                        t(i, r31, u);
                    }
                    return r31;
                }
                a7 || (a7 = r23(27)), h7 = h7 || r23(46);
                for(var e35 = [], n19 = 0, i9 = Object.keys(this._doc); n19 < i9.length; n19++)t(this, e35, i9[n19]);
                return e35;
            }, it.prototype.$__handleReject = function(t) {
                this.$listeners("error").length ? this.$emit("error", t) : this.constructor.listeners && this.constructor.listeners("error").length && this.constructor.emit("error", t);
            }, it.prototype.$toObject = function(t97, e37) {
                var r32, n21, i10 = {
                    transform: !0,
                    flattenDecimals: !0
                }, o11 = e37 ? "toJSON" : "toObject", s9 = this.constructor && this.constructor.base && this.constructor.base.options && j1(this.constructor.base.options, o11) || {
                }, a9 = this.$__schema && this.$__schema.options || {
                };
                i10 = U.options(i10, z1(s9)), i10 = U.options(i10, z1(a9[o11] || {
                })), (t97 = U.isPOJO(t97) ? z1(t97) : {
                })._calledWithOptions = t97._calledWithOptions || z1(t97), r32 = null != t97._calledWithOptions.minimize ? t97.minimize : null != i10.minimize ? i10.minimize : a9.minimize, n21 = null != t97._calledWithOptions.flattenMaps ? t97.flattenMaps : null != i10.flattenMaps ? i10.flattenMaps : a9.flattenMaps;
                var u8 = Object.assign(U.clone(t97), {
                    _isNested: !0,
                    json: e37,
                    minimize: r32,
                    flattenMaps: n21
                });
                if (U.hasUserDefinedProperty(t97, "getters") && (u8.getters = t97.getters), U.hasUserDefinedProperty(t97, "virtuals") && (u8.virtuals = t97.virtuals), (t97.depopulate || t97._parentOptions && t97._parentOptions.depopulate || !1) && t97._isNested && this.$__.wasPopulated) return z1(this.$__.wasPopulated.value || this._id, u8);
                (t97 = U.options(i10, t97))._isNested = !0, t97.json = e37, t97.minimize = r32, u8._parentOptions = t97, u8._skipSingleNestedGetters = !0;
                var h8 = Object.assign({
                }, u8);
                h8._skipSingleNestedGetters = !1;
                var f9 = t97.transform, c6 = z1(this._doc, u8) || {
                };
                t97.getters && (!function(t, e, r) {
                    var n, i, o = t.$__schema, s = Object.keys(o.paths), a = s.length, u = t._doc;
                    if (!u) return e;
                    for(; a--;){
                        var h = (n = s[a]).split("."), f = h.length, c = f - 1, l = e, d = void 0;
                        if (u = t._doc, t.$__isSelected(n)) for(var p = 0; p < f; ++p){
                            if (d = h[p], i = u[d], p === c) {
                                var y = t.$get(n);
                                l[d] = z1(y, r);
                            } else {
                                if (null == i) {
                                    d in u && (l[d] = i);
                                    break;
                                }
                                l = l[d] || (l[d] = {
                                });
                            }
                            u = i;
                        }
                    }
                }(this, c6, h8), t97.minimize && (c6 = /*!
 * Minimizes an object, removing undefined values and empty objects
 *
 * @param {Object} object to minimize
 * @return {Object}
 */ (function t(e) {
                    var r, n, i, o = Object.keys(e), s = o.length;
                    for(; s--;)n = o[s], i = e[n], U.isPOJO(i) && (e[n] = t(i)), void 0 !== e[n] ? r = !0 : delete e[n];
                    return r ? e : void 0;
                })(c6) || {
                })), (t97.virtuals || t97.getters && !1 !== t97.virtuals) && dt1(this, c6, h8, t97), !1 === t97.versionKey && this.$__schema.options.versionKey && delete c6[this.$__schema.options.versionKey];
                var l6 = t97.transform;
                if (l6 && (function(t, e) {
                    var r = t.$__schema, n = Object.keys(r.paths || {
                    });
                    if (!t._doc) return e;
                    for(var i = 0, o = n; i < o.length; i++){
                        var s = o[i], a = r.paths[s];
                        if ("function" == typeof a.options.transform) {
                            var u = t.$get(s), h = a.options.transform.call(t, u);
                            pt1(s, h), U.setValue(s, h, e);
                        } else if (null != a.$embeddedSchemaType && "function" == typeof a.$embeddedSchemaType.options.transform) {
                            for(var f = [].concat(t.$get(s)), c = a.$embeddedSchemaType.options.transform, l = 0; l < f.length; ++l){
                                var d = c.call(t, f[l]);
                                f[l] = d, pt1(s, d);
                            }
                            e[s] = f;
                        }
                    }
                })(this, c6), t97.useProjection && (function(t, e) {
                    var r = t.$__schema, n = Object.keys(r.paths || {
                    });
                    if (!t._doc) return e;
                    var i = t.$__.selected;
                    void 0 === i && (i = {
                    }, q1.applyPaths(i, r));
                    if (null == i || 0 === Object.keys(i).length) return e;
                    for(var o = 0, s = n; o < s.length; o++){
                        var a = s[o];
                        null == i[a] || i[a] || delete e[a];
                    }
                })(this, c6), !0 === l6 || a9.toObject && l6) {
                    var d3 = t97.json ? a9.toJSON : a9.toObject;
                    d3 && (l6 = "function" == typeof t97.transform ? t97.transform : d3.transform);
                } else t97.transform = f9;
                if ("function" == typeof l6) {
                    var p3 = l6(this, c6, t97);
                    void 0 !== p3 && (c6 = p3);
                }
                return c6;
            }, it.prototype.toObject = function(t) {
                return this.$toObject(t);
            }, it.prototype.toJSON = function(t) {
                return this.$toObject(t, !0);
            }, it.prototype.ownerDocument = function() {
                return this;
            }, it.prototype.parent = function() {
                return this.$isSubdocument || this.$__.wasPopulated ? this.$__.parent : this;
            }, it.prototype.$parent = it.prototype.parent, it.prototype.inspect = function(t) {
                var e;
                U.isPOJO(t) && ((e = t).minimize = !1);
                var r = this.toObject(e);
                return null == r ? "MongooseDocument { " + r + " }" : r;
            }, N1.custom && /*!
  * Avoid Node deprecation warning DEP0079
  */ (it.prototype[N1.custom] = it.prototype.inspect), it.prototype.toString = function() {
                var t = this.inspect();
                return "string" == typeof t ? t : N1(t);
            }, it.prototype.equals = function(t) {
                if (!t) return !1;
                var e = this.$__getValue("_id"), r = null != t.$__ ? t.$__getValue("_id") : t;
                return e || r ? e && e.equals ? e.equals(r) : e === r : V1(this, t);
            }, it.prototype.populate = function() {
                var t98, e = {
                }, r = Array.prototype.slice.call(arguments);
                if (0 !== r.length) {
                    "function" == typeof r[r.length - 1] && (t98 = r.pop());
                    var n, o = U.populate.apply(null, r), s = i8(o);
                    try {
                        for(s.s(); !(n = s.n()).done;){
                            var a = n.value;
                            e[a.path] = a;
                        }
                    } catch (t) {
                        s.e(t);
                    } finally{
                        s.f();
                    }
                }
                var u = U.object.vals(e), h = this.constructor;
                if (this.$__isNested) {
                    h = this.$__[tt1].constructor;
                    var f = this.$__.nestedPath;
                    u.forEach(function(t) {
                        t.path = f + "." + t.path;
                    });
                }
                if (null != this.$session()) {
                    var c = this.$session();
                    u.forEach(function(t) {
                        null != t.options ? "session" in t.options || (t.options.session = c) : t.options = {
                            session: c
                        };
                    });
                }
                return u.forEach(function(t) {
                    t._localModel = h;
                }), h.populate(this, u, t98);
            }, it.prototype.$getPopulatedDocs = function() {
                var t = [];
                null != this.$__.populated && (t = t.concat(Object.keys(this.$__.populated)));
                var e, r = [], n = i8(t);
                try {
                    for(n.s(); !(e = n.n()).done;){
                        var o = e.value, s = this.$get(o);
                        Array.isArray(s) ? r = r.concat(s) : s instanceof it && r.push(s);
                    }
                } catch (t99) {
                    n.e(t99);
                } finally{
                    n.f();
                }
                return r;
            }, it.prototype.populated = function(t, e, r) {
                if (null == e || !0 === e) {
                    if (!this.$__.populated) return;
                    if ("string" != typeof t) return;
                    var n = t.endsWith(".$*") ? t.replace(/\.\$\*$/, "") : t, i = this.$__.populated[n];
                    return i ? !0 === e ? i : i.value : void 0;
                }
                this.$__.populated || (this.$__.populated = {
                }), this.$__.populated[t] = {
                    value: e,
                    options: r
                };
                for(var o = t.split("."), s = 0; s < o.length - 1; ++s){
                    var a = o.slice(0, s + 1).join("."), u = this.$get(a);
                    if (null != u && null != u.$__ && this.$populated(a)) {
                        var h = o.slice(s + 1).join(".");
                        u.$populated(h, e, r);
                        break;
                    }
                }
                return e;
            }, it.prototype.$populated = it.prototype.populated, it.prototype.depopulate = function(t) {
                var e;
                "string" == typeof t && (t = -1 === t.indexOf(" ") ? [
                    t
                ] : t.split(" "));
                var r = this.$$populatedVirtuals ? Object.keys(this.$$populatedVirtuals) : [], n = this.$__ && this.$__.populated || {
                };
                if (0 === arguments.length) {
                    var o, s = i8(r);
                    try {
                        for(s.s(); !(o = s.n()).done;){
                            var a = o.value;
                            delete this.$$populatedVirtuals[a], delete this._doc[a], delete n[a];
                        }
                    } catch (t) {
                        s.e(t);
                    } finally{
                        s.f();
                    }
                    for(var u = Object.keys(n), h = 0, f = u; h < f.length; h++){
                        var c = f[h];
                        (e = this.$populated(c)) && (delete n[c], U.setValue(c, e, this._doc));
                    }
                    return this;
                }
                var l, d = i8(t);
                try {
                    for(d.s(); !(l = d.n()).done;){
                        var p = l.value;
                        e = this.$populated(p), delete n[p], -1 !== r.indexOf(p) ? (delete this.$$populatedVirtuals[p], delete this._doc[p]) : e && U.setValue(p, e, this._doc);
                    }
                } catch (t100) {
                    d.e(t100);
                } finally{
                    d.f();
                }
                return this;
            }, it.prototype.$__fullPath = function(t) {
                return t || "";
            }, it.prototype.getChanges = function() {
                var t = this.$__delta();
                return t ? t[1] : {
                };
            }, /*!
 * Module exports.
 */ it.ValidationError = g1, t60.exports = it;
        },
        function(t101, e38, r33) {
            "use strict";
            /*!
 * Simplified lodash.get to work around the annoying null quirk. See:
 * https://github.com/lodash/lodash/issues/3659
 */ function n22(t102, e39) {
                var r34 = "undefined" != typeof Symbol && t102[Symbol.iterator] || t102["@@iterator"];
                if (!r34) {
                    if (Array.isArray(t102) || (r34 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return i11(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i11(t, e);
                    })(t102)) || e39 && t102 && "number" == typeof t102.length) {
                        r34 && (t102 = r34);
                        var n = 0, o = function() {
                        };
                        return {
                            s: o,
                            n: function() {
                                return n >= t102.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t102[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: o
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r34 = r34.call(t102);
                    },
                    n: function() {
                        var t = r34.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r34.return || r34.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function i11(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            function o12(t, e) {
                return null == t ? t : t instanceof Map ? t.get(e) : t[e];
            }
            t101.exports = function(t, e, r) {
                var i, s = !1;
                if ("string" == typeof e) {
                    if (-1 === e.indexOf(".")) {
                        var a = o12(t, e);
                        return null == a ? r : a;
                    }
                    i = e.split(".");
                } else if (s = !0, 1 === (i = e).length) {
                    var u = o12(t, i[0]);
                    return null == u ? r : u;
                }
                var h, f = e, c = t, l = n22(i);
                try {
                    for(l.s(); !(h = l.n()).done;){
                        var d = h.value;
                        if (null == c) return r;
                        if (!s && null != c[f]) return c[f];
                        c = o12(c, d), s || (f = f.substr(d.length + 1));
                    }
                } catch (t103) {
                    l.e(t103);
                } finally{
                    l.f();
                }
                return null == c ? r : c;
            };
        },
        function(t104, e40, r35) {
            "use strict";
            function n23(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function i(t, e, r) {
                return e && n23(t.prototype, e), r && n23(t, r), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), t;
            }
            var o = r35(41), s = i(function t105(e41) {
                if ((function(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                })(this, t105), null == e41) return this;
                Object.assign(this, o(e41));
            }), a = r35(16);
            Object.defineProperty(s.prototype, "type", a), Object.defineProperty(s.prototype, "validate", a), Object.defineProperty(s.prototype, "cast", a), Object.defineProperty(s.prototype, "required", a), Object.defineProperty(s.prototype, "default", a), Object.defineProperty(s.prototype, "ref", a), Object.defineProperty(s.prototype, "select", a), Object.defineProperty(s.prototype, "index", a), Object.defineProperty(s.prototype, "unique", a), Object.defineProperty(s.prototype, "immutable", a), Object.defineProperty(s.prototype, "sparse", a), Object.defineProperty(s.prototype, "text", a), Object.defineProperty(s.prototype, "transform", a), t104.exports = s;
        },
        function(t, e, r) {
            "use strict";
            t.exports = Object.freeze({
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            });
        },
        function(t106, e42, r36) {
            "use strict";
            var n24 = r36(10), i12 = r36(0);
            function o13(t, e) {
                return 55296 == (64512 & t.charCodeAt(e)) && !(e < 0 || e + 1 >= t.length) && 56320 == (64512 & t.charCodeAt(e + 1));
            }
            function s10(t) {
                return (t >>> 24 | t >>> 8 & 65280 | t << 8 & 16711680 | (255 & t) << 24) >>> 0;
            }
            function a10(t) {
                return 1 === t.length ? "0" + t : t;
            }
            function u9(t) {
                return 7 === t.length ? "0" + t : 6 === t.length ? "00" + t : 5 === t.length ? "000" + t : 4 === t.length ? "0000" + t : 3 === t.length ? "00000" + t : 2 === t.length ? "000000" + t : 1 === t.length ? "0000000" + t : t;
            }
            e42.inherits = i12, e42.toArray = function(t, e) {
                if (Array.isArray(t)) return t.slice();
                if (!t) return [];
                var r = [];
                if ("string" == typeof t) {
                    if (e) {
                        if ("hex" === e) for((t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t = "0" + t), i = 0; i < t.length; i += 2)r.push(parseInt(t[i] + t[i + 1], 16));
                    } else for(var n = 0, i = 0; i < t.length; i++){
                        var s = t.charCodeAt(i);
                        s < 128 ? r[n++] = s : s < 2048 ? (r[n++] = s >> 6 | 192, r[n++] = 63 & s | 128) : o13(t, i) ? (s = 65536 + ((1023 & s) << 10) + (1023 & t.charCodeAt(++i)), r[n++] = s >> 18 | 240, r[n++] = s >> 12 & 63 | 128, r[n++] = s >> 6 & 63 | 128, r[n++] = 63 & s | 128) : (r[n++] = s >> 12 | 224, r[n++] = s >> 6 & 63 | 128, r[n++] = 63 & s | 128);
                    }
                } else for(i = 0; i < t.length; i++)r[i] = 0 | t[i];
                return r;
            }, e42.toHex = function(t) {
                for(var e = "", r = 0; r < t.length; r++)e += a10(t[r].toString(16));
                return e;
            }, e42.htonl = s10, e42.toHex32 = function(t, e) {
                for(var r = "", n = 0; n < t.length; n++){
                    var i = t[n];
                    "little" === e && (i = s10(i)), r += u9(i.toString(16));
                }
                return r;
            }, e42.zero2 = a10, e42.zero8 = u9, e42.join32 = function(t, e, r, i) {
                var o = r - e;
                n24(o % 4 == 0);
                for(var s = new Array(o / 4), a = 0, u = e; a < s.length; a++, u += 4){
                    var h;
                    h = "big" === i ? t[u] << 24 | t[u + 1] << 16 | t[u + 2] << 8 | t[u + 3] : t[u + 3] << 24 | t[u + 2] << 16 | t[u + 1] << 8 | t[u], s[a] = h >>> 0;
                }
                return s;
            }, e42.split32 = function(t, e) {
                for(var r = new Array(4 * t.length), n = 0, i = 0; n < t.length; n++, i += 4){
                    var o = t[n];
                    "big" === e ? (r[i] = o >>> 24, r[i + 1] = o >>> 16 & 255, r[i + 2] = o >>> 8 & 255, r[i + 3] = 255 & o) : (r[i + 3] = o >>> 24, r[i + 2] = o >>> 16 & 255, r[i + 1] = o >>> 8 & 255, r[i] = 255 & o);
                }
                return r;
            }, e42.rotr32 = function(t, e) {
                return t >>> e | t << 32 - e;
            }, e42.rotl32 = function(t, e) {
                return t << e | t >>> 32 - e;
            }, e42.sum32 = function(t, e) {
                return t + e >>> 0;
            }, e42.sum32_3 = function(t, e, r) {
                return t + e + r >>> 0;
            }, e42.sum32_4 = function(t, e, r, n) {
                return t + e + r + n >>> 0;
            }, e42.sum32_5 = function(t, e, r, n, i) {
                return t + e + r + n + i >>> 0;
            }, e42.sum64 = function(t, e, r, n) {
                var i = t[e], o = n + t[e + 1] >>> 0, s = (o < n ? 1 : 0) + r + i;
                t[e] = s >>> 0, t[e + 1] = o;
            }, e42.sum64_hi = function(t, e, r, n) {
                return (e + n >>> 0 < e ? 1 : 0) + t + r >>> 0;
            }, e42.sum64_lo = function(t, e, r, n) {
                return e + n >>> 0;
            }, e42.sum64_4_hi = function(t, e, r, n, i, o, s, a) {
                var u = 0, h = e;
                return u += (h = h + n >>> 0) < e ? 1 : 0, u += (h = h + o >>> 0) < o ? 1 : 0, t + r + i + s + (u += (h = h + a >>> 0) < a ? 1 : 0) >>> 0;
            }, e42.sum64_4_lo = function(t, e, r, n, i, o, s, a) {
                return e + n + o + a >>> 0;
            }, e42.sum64_5_hi = function(t, e, r, n, i, o, s, a, u, h) {
                var f = 0, c = e;
                return f += (c = c + n >>> 0) < e ? 1 : 0, f += (c = c + o >>> 0) < o ? 1 : 0, f += (c = c + a >>> 0) < a ? 1 : 0, t + r + i + s + u + (f += (c = c + h >>> 0) < h ? 1 : 0) >>> 0;
            }, e42.sum64_5_lo = function(t, e, r, n, i, o, s, a, u, h) {
                return e + n + o + a + h >>> 0;
            }, e42.rotr64_hi = function(t, e, r) {
                return (e << 32 - r | t >>> r) >>> 0;
            }, e42.rotr64_lo = function(t, e, r) {
                return (t << 32 - r | e >>> r) >>> 0;
            }, e42.shr64_hi = function(t, e, r) {
                return t >>> r;
            }, e42.shr64_lo = function(t, e, r) {
                return (t << 32 - r | e >>> r) >>> 0;
            };
        },
        function(t, e, r) {
            "use strict";
            var n = r(25).get().ObjectId, i = r(1).objectIdSymbol;
            /*!
 * Getter for convenience with populate, see gh-6115
 */ Object.defineProperty(n.prototype, "_id", {
                enumerable: !1,
                configurable: !0,
                get: function() {
                    return this;
                }
            }), /*!
 * Convenience `valueOf()` to allow comparing ObjectIds using double equals re: gh-7299
 */ n.prototype.hasOwnProperty("valueOf") || (n.prototype.valueOf = function() {
                return this.toString();
            }), n.prototype[i] = !0, t.exports = n;
        },
        function(t107, e43, r37) {
            "use strict";
            /*!
 * ignore
 */ function n25(t108) {
                return (n25 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t108);
            }
            function i13(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function s(t109, e) {
                if (e && ("object" === n25(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t109);
            }
            function a11(t110) {
                var e = "function" == typeof Map ? new Map : void 0;
                return (a11 = function(t) {
                    if (null === t || (r = t, -1 === Function.toString.call(r).indexOf("[native code]"))) return t;
                    var r;
                    if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
                    if (void 0 !== e) {
                        if (e.has(t)) return e.get(t);
                        e.set(t, n);
                    }
                    function n() {
                        return u10(t, arguments, c(this).constructor);
                    }
                    return n.prototype = Object.create(t.prototype, {
                        constructor: {
                            value: n,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), f(n, t);
                })(t110);
            }
            function u10(t111, e44, r38) {
                return (u10 = h() ? Reflect.construct : function(t, e, r) {
                    var n = [
                        null
                    ];
                    n.push.apply(n, e);
                    var i = new (Function.bind.apply(t, n));
                    return r && f(i, r.prototype), i;
                }).apply(null, arguments);
            }
            function h() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                    })), !0;
                } catch (t) {
                    return !1;
                }
            }
            function f(t112, e45) {
                return (f = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t112, e45);
            }
            function c(t113) {
                return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t113);
            }
            var l7 = function(t114) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && f(t, e);
                }(d, t114);
                var e46, r, n26, a, u, l = (e46 = d, r = h(), function() {
                    var t, n = c(e46);
                    if (r) {
                        var i = c(this).constructor;
                        t = Reflect.construct(n, arguments, i);
                    } else t = n.apply(this, arguments);
                    return s(this, t);
                });
                function d() {
                    return o(this, d), l.apply(this, arguments);
                }
                return n26 = d, a && i13(n26.prototype, a), u && i13(n26, u), Object.defineProperty(n26, "prototype", {
                    writable: !1
                }), n26;
            }(a11(Error));
            Object.defineProperty(l7.prototype, "name", {
                value: "MongooseError"
            }), t107.exports = l7;
        },
        function(t115, e47, r39) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n27(t116) {
                return (n27 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t116);
            }
            function i14(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function o14(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function s11(t117, e48) {
                return (s11 = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t117, e48);
            }
            function a12(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = h9(t);
                    if (e) {
                        var i = h9(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return u(this, r);
                };
            }
            function u(t118, e) {
                if (e && ("object" === n27(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t118);
            }
            function h9(t119) {
                return (h9 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t119);
            }
            var f10 = r39(19), c7 = r39(8), l8 = function(t120) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && s11(t, e);
                }(f, t120);
                var e49, r40, n28, h = a12(f);
                function f(t, e, r, n, o) {
                    var s;
                    if (i14(this, f), arguments.length > 0) {
                        var a = d(e), c = p(e), l = y(o), b = m(null, t, a, r, l, c);
                        (s = h.call(this, b)).init(t, e, r, n, o);
                    } else s = h.call(this, m());
                    return u(s);
                }
                return e49 = f, r40 = [
                    {
                        key: "toJSON",
                        value: function() {
                            return {
                                stringValue: this.stringValue,
                                valueType: this.valueType,
                                kind: this.kind,
                                value: this.value,
                                path: this.path,
                                reason: this.reason,
                                name: this.name,
                                message: this.message
                            };
                        }
                    },
                    {
                        key: "init",
                        value: function(t, e, r, n, i) {
                            this.stringValue = d(e), this.messageFormat = y(i), this.kind = t, this.value = e, this.path = r, this.reason = n, this.valueType = p(e);
                        }
                    },
                    {
                        key: "copy",
                        value: function(t) {
                            this.messageFormat = t.messageFormat, this.stringValue = t.stringValue, this.kind = t.kind, this.value = t.value, this.path = t.path, this.reason = t.reason, this.message = t.message, this.valueType = t.valueType;
                        }
                    },
                    {
                        key: "setModel",
                        value: function(t) {
                            this.model = t, this.message = m(t, this.kind, this.stringValue, this.path, this.messageFormat, this.valueType);
                        }
                    }
                ], o14(e49.prototype, r40), n28 && o14(e49, n28), Object.defineProperty(e49, "prototype", {
                    writable: !1
                }), f;
            }(f10);
            function d(t) {
                var e = c7.inspect(t);
                return (e = e.replace(/^'|'$/g, '"')).startsWith('"') || (e = '"' + e + '"'), e;
            }
            function p(t) {
                if (null == t) return "" + t;
                var e = n27(t);
                return "object" !== e || "function" != typeof t.constructor ? e : t.constructor.name;
            }
            function y(t) {
                var e = t && t.options && t.options.cast || null;
                if ("string" == typeof e) return e;
            }
            /*!
 * ignore
 */ function m(t, e, r, n, i, o) {
                if (null != i) {
                    var s = i.replace("{KIND}", e).replace("{VALUE}", r).replace("{PATH}", n);
                    return null != t && (s = s.replace("{MODEL}", t.modelName)), s;
                }
                var a = "Cast to " + e + " failed for value " + r + (o ? " (type " + o + ")" : "") + ' at path "' + n + '"';
                return null != t && (a += ' for model "' + t.modelName + '"'), a;
            }
            /*!
 * exports
 */ Object.defineProperty(l8.prototype, "name", {
                value: "CastError"
            }), t115.exports = l8;
        },
        function(t121, e50, r41) {
            (function(t122) {
                function e51(t123) {
                    return (e51 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t123);
                }
                !function(t124, n29) {
                    function i15(t, e) {
                        if (!t) throw new Error(e || "Assertion failed");
                    }
                    function o15(t, e) {
                        t.super_ = e;
                        var r = function() {
                        };
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t;
                    }
                    function s12(t, e, r) {
                        if (s12.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
                    }
                    var a13;
                    "object" === e51(t124) ? t124.exports = s12 : n29.BN = s12, s12.BN = s12, s12.wordSize = 26;
                    try {
                        a13 = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r41(234).Buffer;
                    } catch (t125) {
                    }
                    function u11(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
                    }
                    function h10(t, e, r) {
                        var n = u11(t, r);
                        return r - 1 >= e && (n |= u11(t, r - 1) << 4), n;
                    }
                    function f11(t, e, r, n) {
                        for(var i = 0, o = Math.min(t.length, r), s = e; s < o; s++){
                            var a = t.charCodeAt(s) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
                        }
                        return i;
                    }
                    s12.isBN = function(t) {
                        return t instanceof s12 || null !== t && "object" === e51(t) && t.constructor.wordSize === s12.wordSize && Array.isArray(t.words);
                    }, s12.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e;
                    }, s12.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e;
                    }, s12.prototype._init = function(t, r, n) {
                        if ("number" == typeof t) return this._initNumber(t, r, n);
                        if ("object" === e51(t)) return this._initArray(t, r, n);
                        "hex" === r && (r = 16), i15(r === (0 | r) && r >= 2 && r <= 36);
                        var o = 0;
                        "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
                    }, s12.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [
                            67108863 & t
                        ], this.length = 1) : t < 4503599627370496 ? (this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863
                        ], this.length = 2) : (i15(t < 9007199254740992), this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863,
                            1
                        ], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
                    }, s12.prototype._initArray = function(t, e, r) {
                        if (i15("number" == typeof t.length), t.length <= 0) return this.words = [
                            0
                        ], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var o, s, a = 0;
                        if ("be" === r) for(n = t.length - 1, o = 0; n >= 0; n -= 3)s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        else if ("le" === r) for(n = 0, o = 0; n < t.length; n += 3)s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        return this.strip();
                    }, s12.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var i, o = 0, s = 0;
                        if ("be" === r) for(n = t.length - 1; n >= e; n -= 2)i = h10(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        else for(n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2)i = h10(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        this.strip();
                    }, s12.prototype._parseBase = function(t, e, r) {
                        this.words = [
                            0
                        ], this.length = 1;
                        for(var n = 0, i = 1; i <= 67108863; i *= e)n++;
                        n--, i = i / e | 0;
                        for(var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n)u = f11(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var c = 1;
                            for(u = f11(t, h, t.length, e), h = 0; h < s; h++)c *= e;
                            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        }
                        this.strip();
                    }, s12.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for(var e = 0; e < this.length; e++)t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red;
                    }, s12.prototype.clone = function() {
                        var t = new s12(null);
                        return this.copy(t), t;
                    }, s12.prototype._expand = function(t) {
                        for(; this.length < t;)this.words[this.length++] = 0;
                        return this;
                    }, s12.prototype.strip = function() {
                        for(; this.length > 1 && 0 === this.words[this.length - 1];)this.length--;
                        return this._normSign();
                    }, s12.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }, s12.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    };
                    var c8 = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000"
                    ], l9 = [
                        0,
                        0,
                        25,
                        16,
                        12,
                        11,
                        10,
                        9,
                        8,
                        8,
                        7,
                        7,
                        7,
                        7,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5
                    ], d4 = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        10000000,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64000000,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        24300000,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176
                    ];
                    function p4(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0], o = 0 | e.words[0], s = i * o, a = 67108863 & s, u = s / 67108864 | 0;
                        r.words[0] = a;
                        for(var h = 1; h < n; h++){
                            for(var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++){
                                var p = h - d | 0;
                                f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
                            }
                            r.words[h] = 0 | c, u = 0 | f;
                        }
                        return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip();
                    }
                    s12.prototype.toString = function(t, e) {
                        var r;
                        if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                            r = "";
                            for(var n = 0, o = 0, s = 0; s < this.length; s++){
                                var a = this.words[s], u = (16777215 & (a << n | o)).toString(16);
                                r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? c8[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
                            }
                            for(0 !== o && (r = o.toString(16) + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var h = l9[t], f = d4[t];
                            r = "";
                            var p = this.clone();
                            for(p.negative = 0; !p.isZero();){
                                var y = p.modn(f).toString(t);
                                r = (p = p.idivn(f)).isZero() ? y + r : c8[h - y.length] + y + r;
                            }
                            for(this.isZero() && (r = "0" + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        i15(!1, "Base should be between 2 and 36");
                    }, s12.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i15(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
                    }, s12.prototype.toJSON = function() {
                        return this.toString(16);
                    }, s12.prototype.toBuffer = function(t, e) {
                        return i15(void 0 !== a13), this.toArrayLike(a13, t, e);
                    }, s12.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e);
                    }, s12.prototype.toArrayLike = function(t, e, r) {
                        var n = this.byteLength(), o = r || Math.max(1, n);
                        i15(n <= o, "byte array longer than desired length"), i15(o > 0, "Requested array length <= 0"), this.strip();
                        var s, a, u = "le" === e, h = new t(o), f = this.clone();
                        if (u) {
                            for(a = 0; !f.isZero(); a++)s = f.andln(255), f.iushrn(8), h[a] = s;
                            for(; a < o; a++)h[a] = 0;
                        } else {
                            for(a = 0; a < o - n; a++)h[a] = 0;
                            for(a = 0; !f.isZero(); a++)s = f.andln(255), f.iushrn(8), h[o - a - 1] = s;
                        }
                        return h;
                    }, Math.clz32 ? s12.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t);
                    } : s12.prototype._countBits = function(t) {
                        var e = t, r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
                    }, s12.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t, r = 0;
                        return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
                    }, s12.prototype.bitLength = function() {
                        var t = this.words[this.length - 1], e = this._countBits(t);
                        return 26 * (this.length - 1) + e;
                    }, s12.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for(var t = 0, e = 0; e < this.length; e++){
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break;
                        }
                        return t;
                    }, s12.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8);
                    }, s12.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
                    }, s12.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
                    }, s12.prototype.isNeg = function() {
                        return 0 !== this.negative;
                    }, s12.prototype.neg = function() {
                        return this.clone().ineg();
                    }, s12.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this;
                    }, s12.prototype.iuor = function(t) {
                        for(; this.length < t.length;)this.words[this.length++] = 0;
                        for(var e = 0; e < t.length; e++)this.words[e] = this.words[e] | t.words[e];
                        return this.strip();
                    }, s12.prototype.ior = function(t) {
                        return i15(0 == (this.negative | t.negative)), this.iuor(t);
                    }, s12.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
                    }, s12.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
                    }, s12.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for(var r = 0; r < e.length; r++)this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this.strip();
                    }, s12.prototype.iand = function(t) {
                        return i15(0 == (this.negative | t.negative)), this.iuand(t);
                    }, s12.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
                    }, s12.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
                    }, s12.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for(var n = 0; n < r.length; n++)this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e) for(; n < e.length; n++)this.words[n] = e.words[n];
                        return this.length = e.length, this.strip();
                    }, s12.prototype.ixor = function(t) {
                        return i15(0 == (this.negative | t.negative)), this.iuxor(t);
                    }, s12.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
                    }, s12.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
                    }, s12.prototype.inotn = function(t) {
                        i15("number" == typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26), r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for(var n = 0; n < e; n++)this.words[n] = 67108863 & ~this.words[n];
                        return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip();
                    }, s12.prototype.notn = function(t) {
                        return this.clone().inotn(t);
                    }, s12.prototype.setn = function(t, e) {
                        i15("number" == typeof t && t >= 0);
                        var r = t / 26 | 0, n = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip();
                    }, s12.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for(var i = 0, o = 0; o < n.length; o++)e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for(; 0 !== i && o < r.length; o++)e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this) for(; o < r.length; o++)this.words[o] = r.words[o];
                        return this;
                    }, s12.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
                    }, s12.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign();
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for(var o = 0, s = 0; s < n.length; s++)o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        for(; 0 !== o && s < r.length; s++)o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        if (0 === o && s < r.length && r !== this) for(; s < r.length; s++)this.words[s] = r.words[s];
                        return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip();
                    }, s12.prototype.sub = function(t) {
                        return this.clone().isub(t);
                    };
                    var y3 = function(t, e, r) {
                        var n, i, o, s = t.words, a = e.words, u = r.words, h = 0, f = 0 | s[0], c = 8191 & f, l = f >>> 13, d = 0 | s[1], p = 8191 & d, y = d >>> 13, m = 0 | s[2], b = 8191 & m, v = m >>> 13, g = 0 | s[3], w = 8191 & g, _ = g >>> 13, M = 0 | s[4], S = 8191 & M, O = M >>> 13, A = 0 | s[5], E = 8191 & A, x = A >>> 13, k = 0 | s[6], j = 8191 & k, $ = k >>> 13, P = 0 | s[7], R = 8191 & P, B = P >>> 13, T = 0 | s[8], I = 8191 & T, N = T >>> 13, D = 0 | s[9], C = 8191 & D, L = D >>> 13, q = 0 | a[0], U = 8191 & q, F = q >>> 13, z = 0 | a[1], V = 8191 & z, K = z >>> 13, H = 0 | a[2], Z = 8191 & H, W = H >>> 13, J = 0 | a[3], Y = 8191 & J, Q = J >>> 13, G = 0 | a[4], X = 8191 & G, tt = G >>> 13, et = 0 | a[5], rt = 8191 & et, nt = et >>> 13, it = 0 | a[6], ot = 8191 & it, st = it >>> 13, at = 0 | a[7], ut = 8191 & at, ht = at >>> 13, ft = 0 | a[8], ct = 8191 & ft, lt = ft >>> 13, dt = 0 | a[9], pt = 8191 & dt, yt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19;
                        var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
                        h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
                        var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
                        var vt = (h + (n = n + Math.imul(c, Z) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, W) | 0) + Math.imul(l, Z) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, W) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, Z) | 0, i = (i = i + Math.imul(p, W) | 0) + Math.imul(y, Z) | 0, o = o + Math.imul(y, W) | 0;
                        var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Q) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, Q) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, Z) | 0, i = (i = i + Math.imul(b, W) | 0) + Math.imul(v, Z) | 0, o = o + Math.imul(v, W) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, Q) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, Q) | 0;
                        var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, Z) | 0, i = (i = i + Math.imul(w, W) | 0) + Math.imul(_, Z) | 0, o = o + Math.imul(_, W) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, Q) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, Q) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;
                        var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, Z) | 0, i = (i = i + Math.imul(S, W) | 0) + Math.imul(O, Z) | 0, o = o + Math.imul(O, W) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, Q) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, Q) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                        var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, Z) | 0, i = (i = i + Math.imul(E, W) | 0) + Math.imul(x, Z) | 0, o = o + Math.imul(x, W) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, Q) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, Q) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                        var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, Z) | 0, i = (i = i + Math.imul(j, W) | 0) + Math.imul($, Z) | 0, o = o + Math.imul($, W) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, Q) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, Q) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
                        var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, Z) | 0, i = (i = i + Math.imul(R, W) | 0) + Math.imul(B, Z) | 0, o = o + Math.imul(B, W) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, Q) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, Q) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
                        var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, Z) | 0, i = (i = i + Math.imul(I, W) | 0) + Math.imul(N, Z) | 0, o = o + Math.imul(N, W) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, Q) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, Q) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
                        var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, Z), i = (i = Math.imul(C, W)) + Math.imul(L, Z) | 0, o = Math.imul(L, W), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, Q) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, Q) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
                        var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, Q)) + Math.imul(L, Y) | 0, o = Math.imul(L, Q), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
                        var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
                        var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
                        var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
                        var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
                        var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
                        var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
                        var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
                        return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
                    };
                    function m3(t, e, r) {
                        return (new b3).mulp(t, e, r);
                    }
                    function b3(t, e) {
                        this.x = t, this.y = e;
                    }
                    Math.imul || (y3 = p4), s12.prototype.mulTo = function(t126, e52) {
                        var r42 = this.length + t126.length;
                        return 10 === this.length && 10 === t126.length ? y3(this, t126, e52) : r42 < 63 ? p4(this, t126, e52) : r42 < 1024 ? (function(t, e, r) {
                            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                            for(var n = 0, i = 0, o = 0; o < r.length - 1; o++){
                                var s = i;
                                i = 0;
                                for(var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++){
                                    var f = o - h, c = (0 | t.words[f]) * (0 | e.words[h]), l = 67108863 & c;
                                    a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
                                }
                                r.words[o] = a, n = s, s = i;
                            }
                            return 0 !== n ? r.words[o] = n : r.length--, r.strip();
                        })(this, t126, e52) : m3(this, t126, e52);
                    }, b3.prototype.makeRBT = function(t) {
                        for(var e = new Array(t), r = s12.prototype._countBits(t) - 1, n = 0; n < t; n++)e[n] = this.revBin(n, r, t);
                        return e;
                    }, b3.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for(var n = 0, i = 0; i < e; i++)n |= (1 & t) << e - i - 1, t >>= 1;
                        return n;
                    }, b3.prototype.permute = function(t, e, r, n, i, o) {
                        for(var s = 0; s < o; s++)n[s] = e[t[s]], i[s] = r[t[s]];
                    }, b3.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for(var s = 1; s < i; s <<= 1)for(var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a)for(var c = u, l = h, d = 0; d < s; d++){
                            var p = r[f + d], y = n[f + d], m = r[f + d + s], b = n[f + d + s], v = c * m - l * b;
                            b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
                        }
                    }, b3.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t), n = 1 & r, i = 0;
                        for(r = r / 2 | 0; r; r >>>= 1)i++;
                        return 1 << i + 1 + n;
                    }, b3.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1)) for(var n = 0; n < r / 2; n++){
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
                        }
                    }, b3.prototype.normalize13b = function(t, e) {
                        for(var r = 0, n = 0; n < e / 2; n++){
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
                        }
                        return t;
                    }, b3.prototype.convert13b = function(t, e, r, n) {
                        for(var o = 0, s = 0; s < e; s++)o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                        for(s = 2 * e; s < n; ++s)r[s] = 0;
                        i15(0 === o), i15(0 == (-8192 & o));
                    }, b3.prototype.stub = function(t) {
                        for(var e = new Array(t), r = 0; r < t; r++)e[r] = 0;
                        return e;
                    }, b3.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length), i = this.makeRBT(n), o = this.stub(n), s = new Array(n), a = new Array(n), u = new Array(n), h = new Array(n), f = new Array(n), c = new Array(n), l = r.words;
                        l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);
                        for(var d = 0; d < n; d++){
                            var p = a[d] * f[d] - u[d] * c[d];
                            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip();
                    }, s12.prototype.mul = function(t) {
                        var e = new s12(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e);
                    }, s12.prototype.mulf = function(t) {
                        var e = new s12(null);
                        return e.words = new Array(this.length + t.length), m3(this, t, e);
                    }, s12.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this);
                    }, s12.prototype.imuln = function(t) {
                        i15("number" == typeof t), i15(t < 67108864);
                        for(var e = 0, r = 0; r < this.length; r++){
                            var n = (0 | this.words[r]) * t, o = (67108863 & n) + (67108863 & e);
                            e >>= 26, e += n / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o;
                        }
                        return 0 !== e && (this.words[r] = e, this.length++), this;
                    }, s12.prototype.muln = function(t) {
                        return this.clone().imuln(t);
                    }, s12.prototype.sqr = function() {
                        return this.mul(this);
                    }, s12.prototype.isqr = function() {
                        return this.imul(this.clone());
                    }, s12.prototype.pow = function(t127) {
                        var e53 = function(t) {
                            for(var e = new Array(t.bitLength()), r = 0; r < e.length; r++){
                                var n = r / 26 | 0, i = r % 26;
                                e[r] = (t.words[n] & 1 << i) >>> i;
                            }
                            return e;
                        }(t127);
                        if (0 === e53.length) return new s12(1);
                        for(var r43 = this, n = 0; n < e53.length && 0 === e53[n]; n++, r43 = r43.sqr());
                        if (++n < e53.length) for(var i16 = r43.sqr(); n < e53.length; n++, i16 = i16.sqr())0 !== e53[n] && (r43 = r43.mul(i16));
                        return r43;
                    }, s12.prototype.iushln = function(t) {
                        i15("number" == typeof t && t >= 0);
                        var e, r = t % 26, n = (t - r) / 26, o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var s = 0;
                            for(e = 0; e < this.length; e++){
                                var a = this.words[e] & o, u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | s, s = a >>> 26 - r;
                            }
                            s && (this.words[e] = s, this.length++);
                        }
                        if (0 !== n) {
                            for(e = this.length - 1; e >= 0; e--)this.words[e + n] = this.words[e];
                            for(e = 0; e < n; e++)this.words[e] = 0;
                            this.length += n;
                        }
                        return this.strip();
                    }, s12.prototype.ishln = function(t) {
                        return i15(0 === this.negative), this.iushln(t);
                    }, s12.prototype.iushrn = function(t, e, r) {
                        var n;
                        i15("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26, s = Math.min((t - o) / 26, this.length), a = 67108863 ^ 67108863 >>> o << o, u = r;
                        if (n -= s, n = Math.max(0, n), u) {
                            for(var h = 0; h < s; h++)u.words[h] = this.words[h];
                            u.length = s;
                        }
                        if (0 === s) ;
                        else if (this.length > s) for(this.length -= s, h = 0; h < this.length; h++)this.words[h] = this.words[h + s];
                        else this.words[0] = 0, this.length = 1;
                        var f = 0;
                        for(h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--){
                            var c = 0 | this.words[h];
                            this.words[h] = f << 26 - o | c >>> o, f = c & a;
                        }
                        return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
                    }, s12.prototype.ishrn = function(t, e, r) {
                        return i15(0 === this.negative), this.iushrn(t, e, r);
                    }, s12.prototype.shln = function(t) {
                        return this.clone().ishln(t);
                    }, s12.prototype.ushln = function(t) {
                        return this.clone().iushln(t);
                    }, s12.prototype.shrn = function(t) {
                        return this.clone().ishrn(t);
                    }, s12.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t);
                    }, s12.prototype.testn = function(t) {
                        i15("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        return !(this.length <= r) && !!(this.words[r] & n);
                    }, s12.prototype.imaskn = function(t) {
                        i15("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26;
                        if (i15(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var n = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= n;
                        }
                        return this.strip();
                    }, s12.prototype.maskn = function(t) {
                        return this.clone().imaskn(t);
                    }, s12.prototype.iaddn = function(t) {
                        return i15("number" == typeof t), i15(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
                    }, s12.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for(var e = 0; e < this.length && this.words[e] >= 67108864; e++)this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this;
                    }, s12.prototype.isubn = function(t) {
                        if (i15("number" == typeof t), i15(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else for(var e = 0; e < this.length && this.words[e] < 0; e++)this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this.strip();
                    }, s12.prototype.addn = function(t) {
                        return this.clone().iaddn(t);
                    }, s12.prototype.subn = function(t) {
                        return this.clone().isubn(t);
                    }, s12.prototype.iabs = function() {
                        return this.negative = 0, this;
                    }, s12.prototype.abs = function() {
                        return this.clone().iabs();
                    }, s12.prototype._ishlnsubmul = function(t, e, r) {
                        var n, o, s = t.length + r;
                        this._expand(s);
                        var a = 0;
                        for(n = 0; n < t.length; n++){
                            o = (0 | this.words[n + r]) + a;
                            var u = (0 | t.words[n]) * e;
                            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
                        }
                        for(; n < this.length - r; n++)a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
                        if (0 === a) return this.strip();
                        for(i15(-1 === a), a = 0, n = 0; n < this.length; n++)a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
                        return this.negative = 1, this.strip();
                    }, s12.prototype._wordDiv = function(t, e) {
                        var r = (this.length, t.length), n = this.clone(), i = t, o = 0 | i.words[i.length - 1];
                        0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                        var a, u = n.length - i.length;
                        if ("mod" !== e) {
                            (a = new s12(null)).length = u + 1, a.words = new Array(a.length);
                            for(var h = 0; h < a.length; h++)a.words[h] = 0;
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, u);
                        0 === f.negative && (n = f, a && (a.words[u] = 1));
                        for(var c = u - 1; c >= 0; c--){
                            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);
                            for(l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;)l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
                            a && (a.words[c] = l);
                        }
                        return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: a || null,
                            mod: n
                        };
                    }, s12.prototype.divmod = function(t, e, r) {
                        var n, o, a;
                        return i15(!t.isZero()), this.isZero() ? {
                            div: new s12(0),
                            mod: new s12(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
                            div: n,
                            mod: o
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
                            div: n,
                            mod: a.mod
                        }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
                            div: a.div,
                            mod: o
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new s12(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new s12(this.modn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new s12(this.modn(t.words[0]))
                        } : this._wordDiv(t, e);
                    }, s12.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div;
                    }, s12.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod;
                    }, s12.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod;
                    }, s12.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod, n = t.ushrn(1), i = t.andln(1), o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
                    }, s12.prototype.modn = function(t) {
                        i15(t <= 67108863);
                        for(var e = 67108864 % t, r = 0, n = this.length - 1; n >= 0; n--)r = (e * r + (0 | this.words[n])) % t;
                        return r;
                    }, s12.prototype.idivn = function(t) {
                        i15(t <= 67108863);
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = (0 | this.words[r]) + 67108864 * e;
                            this.words[r] = n / t | 0, e = n % t;
                        }
                        return this.strip();
                    }, s12.prototype.divn = function(t) {
                        return this.clone().idivn(t);
                    }, s12.prototype.egcd = function(t) {
                        i15(0 === t.negative), i15(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n = new s12(1), o = new s12(0), a = new s12(0), u = new s12(1), h = 0; e.isEven() && r.isEven();)e.iushrn(1), r.iushrn(1), ++h;
                        for(var f = r.clone(), c = e.clone(); !e.isZero();){
                            for(var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1);
                            if (l > 0) for(e.iushrn(l); l-- > 0;)(n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
                            for(var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1);
                            if (p > 0) for(r.iushrn(p); p-- > 0;)(a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(h)
                        };
                    }, s12.prototype._invmp = function(t) {
                        i15(0 === t.negative), i15(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n, o = new s12(1), a = new s12(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;){
                            for(var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1);
                            if (h > 0) for(e.iushrn(h); h-- > 0;)o.isOdd() && o.iadd(u), o.iushrn(1);
                            for(var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                            if (c > 0) for(r.iushrn(c); c-- > 0;)a.isOdd() && a.iadd(u), a.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
                        }
                        return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
                    }, s12.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(), r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for(var n = 0; e.isEven() && r.isEven(); n++)e.iushrn(1), r.iushrn(1);
                        for(;;){
                            for(; e.isEven();)e.iushrn(1);
                            for(; r.isEven();)r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o;
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r);
                        }
                        return r.iushln(n);
                    }, s12.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t);
                    }, s12.prototype.isEven = function() {
                        return 0 == (1 & this.words[0]);
                    }, s12.prototype.isOdd = function() {
                        return 1 == (1 & this.words[0]);
                    }, s12.prototype.andln = function(t) {
                        return this.words[0] & t;
                    }, s12.prototype.bincn = function(t) {
                        i15("number" == typeof t);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                        for(var o = n, s = r; 0 !== o && s < this.length; s++){
                            var a = 0 | this.words[s];
                            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
                        }
                        return 0 !== o && (this.words[s] = o, this.length++), this;
                    }, s12.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0];
                    }, s12.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), i15(t <= 67108863, "Number is too big");
                            var n = 0 | this.words[0];
                            e = n === t ? 0 : n < t ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s12.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s12.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = 0 | this.words[r], i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break;
                            }
                        }
                        return e;
                    }, s12.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t);
                    }, s12.prototype.gt = function(t) {
                        return 1 === this.cmp(t);
                    }, s12.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0;
                    }, s12.prototype.gte = function(t) {
                        return this.cmp(t) >= 0;
                    }, s12.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t);
                    }, s12.prototype.lt = function(t) {
                        return -1 === this.cmp(t);
                    }, s12.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0;
                    }, s12.prototype.lte = function(t) {
                        return this.cmp(t) <= 0;
                    }, s12.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t);
                    }, s12.prototype.eq = function(t) {
                        return 0 === this.cmp(t);
                    }, s12.red = function(t) {
                        return new O2(t);
                    }, s12.prototype.toRed = function(t) {
                        return i15(!this.red, "Already a number in reduction context"), i15(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
                    }, s12.prototype.fromRed = function() {
                        return i15(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }, s12.prototype._forceRed = function(t) {
                        return this.red = t, this;
                    }, s12.prototype.forceRed = function(t) {
                        return i15(!this.red, "Already a number in reduction context"), this._forceRed(t);
                    }, s12.prototype.redAdd = function(t) {
                        return i15(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
                    }, s12.prototype.redIAdd = function(t) {
                        return i15(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
                    }, s12.prototype.redSub = function(t) {
                        return i15(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
                    }, s12.prototype.redISub = function(t) {
                        return i15(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
                    }, s12.prototype.redShl = function(t) {
                        return i15(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
                    }, s12.prototype.redMul = function(t) {
                        return i15(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
                    }, s12.prototype.redIMul = function(t) {
                        return i15(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
                    }, s12.prototype.redSqr = function() {
                        return i15(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }, s12.prototype.redISqr = function() {
                        return i15(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }, s12.prototype.redSqrt = function() {
                        return i15(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }, s12.prototype.redInvm = function() {
                        return i15(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }, s12.prototype.redNeg = function() {
                        return i15(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }, s12.prototype.redPow = function(t) {
                        return i15(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
                    };
                    var v3 = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };
                    function g2(t, e) {
                        this.name = t, this.p = new s12(e, 16), this.n = this.p.bitLength(), this.k = new s12(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
                    }
                    function w2() {
                        g2.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                    }
                    function _3() {
                        g2.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                    }
                    function M2() {
                        g2.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                    }
                    function S2() {
                        g2.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                    }
                    function O2(t) {
                        if ("string" == typeof t) {
                            var e = s12._prime(t);
                            this.m = e.p, this.prime = e;
                        } else i15(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
                    }
                    function A3(t) {
                        O2.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s12(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
                    }
                    g2.prototype._tmp = function() {
                        var t = new s12(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t;
                    }, g2.prototype.ireduce = function(t) {
                        var e, r = t;
                        do this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                        while (e > this.n)
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }, g2.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e);
                    }, g2.prototype.imulK = function(t) {
                        return t.imul(this.k);
                    }, o15(w2, g2), w2.prototype.split = function(t, e) {
                        for(var r = Math.min(t.length, 9), n = 0; n < r; n++)e.words[n] = t.words[n];
                        if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
                        var i = t.words[9];
                        for(e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++){
                            var o = 0 | t.words[n];
                            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
                        }
                        i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
                    }, w2.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
                    }, o15(_3, g2), o15(M2, g2), o15(S2, g2), S2.prototype.imulK = function(t) {
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 19 * (0 | t.words[r]) + e, i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n;
                        }
                        return 0 !== e && (t.words[t.length++] = e), t;
                    }, s12._prime = function(t) {
                        if (v3[t]) return v3[t];
                        var e;
                        if ("k256" === t) e = new w2;
                        else if ("p224" === t) e = new _3;
                        else if ("p192" === t) e = new M2;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new S2;
                        }
                        return v3[t] = e, e;
                    }, O2.prototype._verify1 = function(t) {
                        i15(0 === t.negative, "red works only with positives"), i15(t.red, "red works only with red numbers");
                    }, O2.prototype._verify2 = function(t, e) {
                        i15(0 == (t.negative | e.negative), "red works only with positives"), i15(t.red && t.red === e.red, "red works only with red numbers");
                    }, O2.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
                    }, O2.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
                    }, O2.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
                    }, O2.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                    }, O2.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
                    }, O2.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r;
                    }, O2.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e));
                    }, O2.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e));
                    }, O2.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e));
                    }, O2.prototype.isqr = function(t) {
                        return this.imul(t, t.clone());
                    }, O2.prototype.sqr = function(t) {
                        return this.mul(t, t);
                    }, O2.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (i15(e % 2 == 1), 3 === e) {
                            var r = this.m.add(new s12(1)).iushrn(2);
                            return this.pow(t, r);
                        }
                        for(var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);)o++, n.iushrn(1);
                        i15(!n.isZero());
                        var a = new s12(1).toRed(this), u = a.redNeg(), h = this.m.subn(1).iushrn(1), f = this.m.bitLength();
                        for(f = new s12(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);)f.redIAdd(u);
                        for(var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);){
                            for(var y = d, m = 0; 0 !== y.cmp(a); m++)y = y.redSqr();
                            i15(m < p);
                            var b = this.pow(c, new s12(1).iushln(p - m - 1));
                            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
                        }
                        return l;
                    }, O2.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
                    }, O2.prototype.pow = function(t, e) {
                        if (e.isZero()) return new s12(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = new Array(16);
                        r[0] = new s12(1).toRed(this), r[1] = t;
                        for(var n = 2; n < r.length; n++)r[n] = this.mul(r[n - 1], t);
                        var i = r[0], o = 0, a = 0, u = e.bitLength() % 26;
                        for(0 === u && (u = 26), n = e.length - 1; n >= 0; n--){
                            for(var h = e.words[n], f = u - 1; f >= 0; f--){
                                var c = h >> f & 1;
                                i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
                            }
                            u = 26;
                        }
                        return i;
                    }, O2.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e;
                    }, O2.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e;
                    }, s12.mont = function(t) {
                        return new A3(t);
                    }, o15(A3, O2), A3.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift));
                    }, A3.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e;
                    }, A3.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A3.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new s12(0)._forceRed(this);
                        var r = t.mul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A3.prototype.invm = function(t) {
                        return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
                    };
                }(t122, this);
            }).call(this, r41(24)(t121));
        },
        function(t128, e, r) {
            "use strict";
            /*!
 * If `val` is an object, returns constructor name, if possible. Otherwise returns undefined.
 */ t128.exports = function(t) {
                if (null != t && "function" == typeof t.constructor) return t.constructor.name;
            };
        },
        function(t129, e54, r44) {
            var n30 = r44(2).Buffer, i17 = r44(195).Transform, o = r44(36).StringDecoder;
            function s(t) {
                i17.call(this), this.hashMode = "string" == typeof t, this.hashMode ? this[t] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
            }
            r44(0)(s, i17), s.prototype.update = function(t, e, r) {
                "string" == typeof t && (t = n30.from(t, e));
                var i = this._update(t);
                return this.hashMode ? this : (r && (i = this._toString(i, r)), i);
            }, s.prototype.setAutoPadding = function() {
            }, s.prototype.getAuthTag = function() {
                throw new Error("trying to get auth tag in unsupported state");
            }, s.prototype.setAuthTag = function() {
                throw new Error("trying to set auth tag in unsupported state");
            }, s.prototype.setAAD = function() {
                throw new Error("trying to set aad in unsupported state");
            }, s.prototype._transform = function(t, e, r) {
                var n;
                try {
                    this.hashMode ? this._update(t) : this.push(this._update(t));
                } catch (t130) {
                    n = t130;
                } finally{
                    r(n);
                }
            }, s.prototype._flush = function(t) {
                var e;
                try {
                    this.push(this.__final());
                } catch (t131) {
                    e = t131;
                }
                t(e);
            }, s.prototype._finalOrDigest = function(t) {
                var e = this.__final() || n30.alloc(0);
                return t && (e = this._toString(e, t, !0)), e;
            }, s.prototype._toString = function(t, e, r) {
                if (this._decoder || (this._decoder = new o(e), this._encoding = e), this._encoding !== e) throw new Error("can't switch encodings");
                var n = this._decoder.write(t);
                return r && (n += this._decoder.end()), n;
            }, t129.exports = s;
        },
        function(t132, e) {
            t132.exports = function(t) {
                return t.webpackPolyfill || (t.deprecate = function() {
                }, t.paths = [], t.children || (t.children = []), Object.defineProperty(t, "loaded", {
                    enumerable: !0,
                    get: function() {
                        return t.l;
                    }
                }), Object.defineProperty(t, "id", {
                    enumerable: !0,
                    get: function() {
                        return t.i;
                    }
                }), t.webpackPolyfill = 1), t;
            };
        },
        function(t133, e, r) {
            "use strict";
            /*!
 * ignore
 */ var n = null;
            t133.exports.get = function() {
                return n;
            }, t133.exports.set = function(t) {
                n = t;
            };
        },
        function(t134, e55, r45) {
            "use strict";
            var n = r45(47), i = Object.keys || function(t) {
                var e = [];
                for(var r in t)e.push(r);
                return e;
            };
            t134.exports = c;
            var o = Object.create(r45(37));
            o.inherits = r45(0);
            var s = r45(105), a = r45(65);
            o.inherits(c, s);
            for(var u = i(a.prototype), h = 0; h < u.length; h++){
                var f = u[h];
                c.prototype[f] || (c.prototype[f] = a.prototype[f]);
            }
            function c(t) {
                if (!(this instanceof c)) return new c(t);
                s.call(this, t), a.call(this, t), t && !1 === t.readable && (this.readable = !1), t && !1 === t.writable && (this.writable = !1), this.allowHalfOpen = !0, t && !1 === t.allowHalfOpen && (this.allowHalfOpen = !1), this.once("end", l);
            }
            function l() {
                this.allowHalfOpen || this._writableState.ended || n.nextTick(d, this);
            }
            function d(t) {
                t.end();
            }
            Object.defineProperty(c.prototype, "writableHighWaterMark", {
                enumerable: !1,
                get: function() {
                    return this._writableState.highWaterMark;
                }
            }), Object.defineProperty(c.prototype, "destroyed", {
                get: function() {
                    return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
                },
                set: function(t) {
                    void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t, this._writableState.destroyed = t);
                }
            }), c.prototype._destroy = function(t, e) {
                this.push(null), this.end(), n.nextTick(e, t);
            };
        },
        function(t135, e56, r46) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n(t, e, r) {
                return e in t ? Object.defineProperty(t, e, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = r, t;
            }
            var i = r46(89), o = r46(328), s = r46(13), a = r46(1).arrayAtomicsSymbol, u = r46(1).arrayAtomicsBackupSymbol, h = r46(1).arrayParentSymbol, f = r46(1).arrayPathSymbol, c = r46(1).arraySchemaSymbol, l = Array.prototype.push, d = /^\d+$/;
            /*!
 * Module exports.
 */ t135.exports = function(t136, e57, r47) {
                var p, y = [], m = (n(p = {
                }, a, {
                }), n(p, u, void 0), n(p, f, e57), n(p, c, void 0), n(p, h, void 0), p);
                if (Array.isArray(t136) && (t136[f] === e57 && t136[h] === r47 && (m[a] = Object.assign({
                }, t136[a])), t136.forEach(function(t) {
                    l.call(y, t);
                })), m[f] = e57, m.__array = y, r47 && r47 instanceof s) for(m[h] = r47, m[c] = r47.schema.path(e57); null != m[c] && m[c].$isMongooseArray && !m[c].$isMongooseDocumentArray;)m[c] = m[c].casterConstructor;
                var b = new Proxy(y, {
                    get: function(t, e) {
                        return "isMongooseArray" === e || "isMongooseArrayProxy" === e || "isMongooseDocumentArray" === e || "isMongooseDocumentArrayProxy" === e || (m.hasOwnProperty(e) ? m[e] : o.hasOwnProperty(e) ? o[e] : i.hasOwnProperty(e) ? i[e] : y[e]);
                    },
                    set: function(t, e, r) {
                        return "string" == typeof e && d.test(e) ? o.set.call(b, e, r, !1) : m.hasOwnProperty(e) ? m[e] = r : y[e] = r, !0;
                    }
                });
                return b;
            };
        },
        function(t137, e58, r48) {
            "use strict";
            (function(e59, n) {
                var i = r48(2).Buffer, o = e59.crypto || e59.msCrypto;
                o && o.getRandomValues ? t137.exports = function(t, e) {
                    if (t > 4294967295) throw new RangeError("requested too many random bytes");
                    var r = i.allocUnsafe(t);
                    if (t > 0) {
                        if (t > 65536) for(var s = 0; s < t; s += 65536)o.getRandomValues(r.slice(s, s + 65536));
                        else o.getRandomValues(r);
                    }
                    if ("function" == typeof e) return n.nextTick(function() {
                        e(null, r);
                    });
                    return r;
                } : t137.exports = function() {
                    throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
                };
            }).call(this, r48(6), r48(5));
        },
        function(t138, e60, r49) {
            "use strict";
            function n31(t139) {
                return (n31 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t139);
            }
            var i18 = {
            };
            function o16(t140, e, r50) {
                r50 || (r50 = Error);
                var n32 = function(t141) {
                    var r51, n33;
                    function i19(r52, n34, i) {
                        return t141.call(this, function(t, r, n) {
                            return "string" == typeof e ? e : e(t, r, n);
                        }(r52, n34, i)) || this;
                    }
                    return n33 = t141, (r51 = i19).prototype = Object.create(n33.prototype), r51.prototype.constructor = r51, r51.__proto__ = n33, i19;
                }(r50);
                n32.prototype.name = r50.name, n32.prototype.code = t140, i18[t140] = n32;
            }
            function s(t142, e) {
                if (Array.isArray(t142)) {
                    var r = t142.length;
                    return t142 = t142.map(function(t) {
                        return String(t);
                    }), r > 2 ? "one of ".concat(e, " ").concat(t142.slice(0, r - 1).join(", "), ", or ") + t142[r - 1] : 2 === r ? "one of ".concat(e, " ").concat(t142[0], " or ").concat(t142[1]) : "of ".concat(e, " ").concat(t142[0]);
                }
                return "of ".concat(e, " ").concat(String(t142));
            }
            o16("ERR_INVALID_OPT_VALUE", function(t, e) {
                return 'The value "' + e + '" is invalid for option "' + t + '"';
            }, TypeError), o16("ERR_INVALID_ARG_TYPE", function(t143, e61, r53) {
                var i, o, a, u;
                if ("string" == typeof e61 && (o = "not ", e61.substr(!a || a < 0 ? 0 : +a, o.length) === o) ? (i = "must not be", e61 = e61.replace(/^not /, "")) : i = "must be", (function(t, e, r) {
                    return (void 0 === r || r > t.length) && (r = t.length), t.substring(r - e.length, r) === e;
                })(t143, " argument")) u = "The ".concat(t143, " ").concat(i, " ").concat(s(e61, "type"));
                else {
                    var h = function(t, e, r) {
                        return "number" != typeof r && (r = 0), !(r + e.length > t.length) && -1 !== t.indexOf(e, r);
                    }(t143, ".") ? "property" : "argument";
                    u = 'The "'.concat(t143, '" ').concat(h, " ").concat(i, " ").concat(s(e61, "type"));
                }
                return u += ". Received type ".concat(n31(r53));
            }, TypeError), o16("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), o16("ERR_METHOD_NOT_IMPLEMENTED", function(t) {
                return "The " + t + " method is not implemented";
            }), o16("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), o16("ERR_STREAM_DESTROYED", function(t) {
                return "Cannot call " + t + " after a stream was destroyed";
            }), o16("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), o16("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), o16("ERR_STREAM_WRITE_AFTER_END", "write after end"), o16("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), o16("ERR_UNKNOWN_ENCODING", function(t) {
                return "Unknown encoding: " + t;
            }, TypeError), o16("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), t138.exports.codes = i18;
        },
        function(t144, e62, r54) {
            "use strict";
            (function(e63) {
                var n = Object.keys || function(t) {
                    var e = [];
                    for(var r in t)e.push(r);
                    return e;
                };
                t144.exports = h;
                var i = r54(96), o = r54(100);
                r54(0)(h, i);
                for(var s = n(o.prototype), a = 0; a < s.length; a++){
                    var u = s[a];
                    h.prototype[u] || (h.prototype[u] = o.prototype[u]);
                }
                function h(t) {
                    if (!(this instanceof h)) return new h(t);
                    i.call(this, t), o.call(this, t), this.allowHalfOpen = !0, t && (!1 === t.readable && (this.readable = !1), !1 === t.writable && (this.writable = !1), !1 === t.allowHalfOpen && (this.allowHalfOpen = !1, this.once("end", f)));
                }
                function f() {
                    this._writableState.ended || e63.nextTick(c, this);
                }
                function c(t) {
                    t.end();
                }
                Object.defineProperty(h.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.highWaterMark;
                    }
                }), Object.defineProperty(h.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState && this._writableState.getBuffer();
                    }
                }), Object.defineProperty(h.prototype, "writableLength", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.length;
                    }
                }), Object.defineProperty(h.prototype, "destroyed", {
                    enumerable: !1,
                    get: function() {
                        return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
                    },
                    set: function(t) {
                        void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t, this._writableState.destroyed = t);
                    }
                });
            }).call(this, r54(5));
        },
        function(t145, e64, r55) {
            var n35 = r55(2).Buffer;
            function i20(t, e) {
                this._block = n35.alloc(t), this._finalSize = e, this._blockSize = t, this._len = 0;
            }
            i20.prototype.update = function(t, e) {
                "string" == typeof t && (e = e || "utf8", t = n35.from(t, e));
                for(var r = this._block, i = this._blockSize, o = t.length, s = this._len, a = 0; a < o;){
                    for(var u = s % i, h = Math.min(o - a, i - u), f = 0; f < h; f++)r[u + f] = t[a + f];
                    a += h, (s += h) % i == 0 && this._update(r);
                }
                return this._len += o, this;
            }, i20.prototype.digest = function(t) {
                var e = this._len % this._blockSize;
                this._block[e] = 128, this._block.fill(0, e + 1), e >= this._finalSize && (this._update(this._block), this._block.fill(0));
                var r = 8 * this._len;
                if (r <= 4294967295) this._block.writeUInt32BE(r, this._blockSize - 4);
                else {
                    var n = (4294967295 & r) >>> 0, i = (r - n) / 4294967296;
                    this._block.writeUInt32BE(i, this._blockSize - 8), this._block.writeUInt32BE(n, this._blockSize - 4);
                }
                this._update(this._block);
                var o = this._hash();
                return t ? o.toString(t) : o;
            }, i20.prototype._update = function() {
                throw new Error("_update must be implemented by subclass");
            }, t145.exports = i20;
        },
        function(t, e, r) {
            "use strict";
            t.exports = r(25).get().Decimal128;
        },
        function(t146, e65, r) {
            "use strict";
            (function(e) {
                /*!
 * Determines if `arg` is an object.
 *
 * @param {Object|Array|String|Function|RegExp|any} arg
 * @api private
 * @return {Boolean}
 */ t146.exports = function(t) {
                    return e.isBuffer(t) || "[object Object]" === Object.prototype.toString.call(t);
                };
            }).call(this, r(3).Buffer);
        },
        function(t, e, r) {
            "use strict";
            /*!
 * ignore
 */ e.internalToObjectOptions = {
                transform: !1,
                virtuals: !1,
                getters: !1,
                _skipDepopulateTopLevel: !0,
                depopulate: !0,
                flattenDecimals: !1,
                useProjection: !1
            };
        },
        function(t147, e, r) {
            "use strict";
            var n = r(0), i = r(60), o = r(62), s = r(63), a = r(23);
            function u(t) {
                a.call(this, "digest"), this._hash = t;
            }
            n(u, a), u.prototype._update = function(t) {
                this._hash.update(t);
            }, u.prototype._final = function() {
                return this._hash.digest();
            }, t147.exports = function(t) {
                return "md5" === (t = t.toLowerCase()) ? new i : "rmd160" === t || "ripemd160" === t ? new o : new u(s(t));
            };
        },
        function(t148, e66, r56) {
            "use strict";
            var n36 = r56(186).Buffer, i21 = n36.isEncoding || function(t) {
                switch((t = "" + t) && t.toLowerCase()){
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "binary":
                    case "base64":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                    case "raw":
                        return !0;
                    default:
                        return !1;
                }
            };
            function o(t149) {
                var e67;
                switch(this.encoding = (function(t150) {
                    var e68 = function(t) {
                        if (!t) return "utf8";
                        for(var e;;)switch(t){
                            case "utf8":
                            case "utf-8":
                                return "utf8";
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return "utf16le";
                            case "latin1":
                            case "binary":
                                return "latin1";
                            case "base64":
                            case "ascii":
                            case "hex":
                                return t;
                            default:
                                if (e) return;
                                t = ("" + t).toLowerCase(), e = !0;
                        }
                    }(t150);
                    if ("string" != typeof e68 && (n36.isEncoding === i21 || !i21(t150))) throw new Error("Unknown encoding: " + t150);
                    return e68 || t150;
                })(t149), this.encoding){
                    case "utf16le":
                        this.text = u, this.end = h, e67 = 4;
                        break;
                    case "utf8":
                        this.fillLast = a, e67 = 4;
                        break;
                    case "base64":
                        this.text = f, this.end = c, e67 = 3;
                        break;
                    default:
                        return this.write = l, void (this.end = d);
                }
                this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n36.allocUnsafe(e67);
            }
            function s(t) {
                return t <= 127 ? 0 : t >> 5 == 6 ? 2 : t >> 4 == 14 ? 3 : t >> 3 == 30 ? 4 : t >> 6 == 2 ? -1 : -2;
            }
            function a(t151) {
                var e69 = this.lastTotal - this.lastNeed, r = function(t, e, r) {
                    if (128 != (192 & e[0])) return t.lastNeed = 0, "�";
                    if (t.lastNeed > 1 && e.length > 1) {
                        if (128 != (192 & e[1])) return t.lastNeed = 1, "�";
                        if (t.lastNeed > 2 && e.length > 2 && 128 != (192 & e[2])) return t.lastNeed = 2, "�";
                    }
                }(this, t151);
                return void 0 !== r ? r : this.lastNeed <= t151.length ? (t151.copy(this.lastChar, e69, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (t151.copy(this.lastChar, e69, 0, t151.length), void (this.lastNeed -= t151.length));
            }
            function u(t, e) {
                if ((t.length - e) % 2 == 0) {
                    var r = t.toString("utf16le", e);
                    if (r) {
                        var n = r.charCodeAt(r.length - 1);
                        if (n >= 55296 && n <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1], r.slice(0, -1);
                    }
                    return r;
                }
                return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t[t.length - 1], t.toString("utf16le", e, t.length - 1);
            }
            function h(t) {
                var e = t && t.length ? this.write(t) : "";
                if (this.lastNeed) {
                    var r = this.lastTotal - this.lastNeed;
                    return e + this.lastChar.toString("utf16le", 0, r);
                }
                return e;
            }
            function f(t, e) {
                var r = (t.length - e) % 3;
                return 0 === r ? t.toString("base64", e) : (this.lastNeed = 3 - r, this.lastTotal = 3, 1 === r ? this.lastChar[0] = t[t.length - 1] : (this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1]), t.toString("base64", e, t.length - r));
            }
            function c(t) {
                var e = t && t.length ? this.write(t) : "";
                return this.lastNeed ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e;
            }
            function l(t) {
                return t.toString(this.encoding);
            }
            function d(t) {
                return t && t.length ? this.write(t) : "";
            }
            e66.StringDecoder = o, o.prototype.write = function(t) {
                if (0 === t.length) return "";
                var e, r;
                if (this.lastNeed) {
                    if (void 0 === (e = this.fillLast(t))) return "";
                    r = this.lastNeed, this.lastNeed = 0;
                } else r = 0;
                return r < t.length ? e ? e + this.text(t, r) : this.text(t, r) : e || "";
            }, o.prototype.end = function(t) {
                var e = t && t.length ? this.write(t) : "";
                return this.lastNeed ? e + "�" : e;
            }, o.prototype.text = function(t152, e70) {
                var r57 = function(t, e, r) {
                    var n = e.length - 1;
                    if (n < r) return 0;
                    var i = s(e[n]);
                    if (i >= 0) return i > 0 && (t.lastNeed = i - 1), i;
                    if (--n < r || -2 === i) return 0;
                    if ((i = s(e[n])) >= 0) return i > 0 && (t.lastNeed = i - 2), i;
                    if (--n < r || -2 === i) return 0;
                    if ((i = s(e[n])) >= 0) return i > 0 && (2 === i ? i = 0 : t.lastNeed = i - 3), i;
                    return 0;
                }(this, t152, e70);
                if (!this.lastNeed) return t152.toString("utf8", e70);
                this.lastTotal = r57;
                var n37 = t152.length - (r57 - this.lastNeed);
                return t152.copy(this.lastChar, 0, n37), t152.toString("utf8", e70, n37);
            }, o.prototype.fillLast = function(t) {
                if (this.lastNeed <= t.length) return t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length), this.lastNeed -= t.length;
            };
        },
        function(t153, e, r) {
            function n(t154) {
                return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t154);
            }
            function i(t) {
                return Object.prototype.toString.call(t);
            }
            e.isArray = function(t) {
                return Array.isArray ? Array.isArray(t) : "[object Array]" === i(t);
            }, e.isBoolean = function(t) {
                return "boolean" == typeof t;
            }, e.isNull = function(t) {
                return null === t;
            }, e.isNullOrUndefined = function(t) {
                return null == t;
            }, e.isNumber = function(t) {
                return "number" == typeof t;
            }, e.isString = function(t) {
                return "string" == typeof t;
            }, e.isSymbol = function(t) {
                return "symbol" === n(t);
            }, e.isUndefined = function(t) {
                return void 0 === t;
            }, e.isRegExp = function(t) {
                return "[object RegExp]" === i(t);
            }, e.isObject = function(t) {
                return "object" === n(t) && null !== t;
            }, e.isDate = function(t) {
                return "[object Date]" === i(t);
            }, e.isError = function(t) {
                return "[object Error]" === i(t) || t instanceof Error;
            }, e.isFunction = function(t) {
                return "function" == typeof t;
            }, e.isPrimitive = function(t) {
                return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" === n(t) || void 0 === t;
            }, e.isBuffer = r(3).Buffer.isBuffer;
        },
        function(t155, e71, r58) {
            (function(e) {
                t155.exports = function(t, r) {
                    for(var n = Math.min(t.length, r.length), i = new e(n), o = 0; o < n; ++o)i[o] = t[o] ^ r[o];
                    return i;
                };
            }).call(this, r58(3).Buffer);
        },
        function(t156, e72, r59) {
            "use strict";
            var n38 = r59(17), i22 = r59(10);
            function o17() {
                this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
            }
            e72.BlockHash = o17, o17.prototype.update = function(t, e) {
                if (t = n38.toArray(t, e), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {
                    var r = (t = this.pending).length % this._delta8;
                    this.pending = t.slice(t.length - r, t.length), 0 === this.pending.length && (this.pending = null), t = n38.join32(t, 0, t.length - r, this.endian);
                    for(var i = 0; i < t.length; i += this._delta32)this._update(t, i, i + this._delta32);
                }
                return this;
            }, o17.prototype.digest = function(t) {
                return this.update(this._pad()), i22(null === this.pending), this._digest(t);
            }, o17.prototype._pad = function() {
                var t = this.pendingTotal, e = this._delta8, r = e - (t + this.padLength) % e, n = new Array(r + this.padLength);
                n[0] = 128;
                for(var i = 1; i < r; i++)n[i] = 0;
                if (t <<= 3, "big" === this.endian) {
                    for(var o = 8; o < this.padLength; o++)n[i++] = 0;
                    n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = t >>> 24 & 255, n[i++] = t >>> 16 & 255, n[i++] = t >>> 8 & 255, n[i++] = 255 & t;
                } else for(n[i++] = 255 & t, n[i++] = t >>> 8 & 255, n[i++] = t >>> 16 & 255, n[i++] = t >>> 24 & 255, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, o = 8; o < this.padLength; o++)n[i++] = 0;
                return n;
            };
        },
        function(t157, e73, r60) {
            "use strict";
            function n(t158) {
                return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t158);
            }
            var i = r60(0), o = r60(78).Reporter, s = r60(76).Buffer;
            function a(t, e) {
                o.call(this, e), s.isBuffer(t) ? (this.base = t, this.offset = 0, this.length = t.length) : this.error("Input not Buffer");
            }
            function u(t159, e) {
                if (Array.isArray(t159)) this.length = 0, this.value = t159.map(function(t) {
                    return u.isEncoderBuffer(t) || (t = new u(t, e)), this.length += t.length, t;
                }, this);
                else if ("number" == typeof t159) {
                    if (!(0 <= t159 && t159 <= 255)) return e.error("non-byte EncoderBuffer value");
                    this.value = t159, this.length = 1;
                } else if ("string" == typeof t159) this.value = t159, this.length = s.byteLength(t159);
                else {
                    if (!s.isBuffer(t159)) return e.error("Unsupported type: " + n(t159));
                    this.value = t159, this.length = t159.length;
                }
            }
            i(a, o), e73.DecoderBuffer = a, a.isDecoderBuffer = function(t) {
                return t instanceof a || "object" === n(t) && s.isBuffer(t.base) && "DecoderBuffer" === t.constructor.name && "number" == typeof t.offset && "number" == typeof t.length && "function" == typeof t.save && "function" == typeof t.restore && "function" == typeof t.isEmpty && "function" == typeof t.readUInt8 && "function" == typeof t.skip && "function" == typeof t.raw;
            }, a.prototype.save = function() {
                return {
                    offset: this.offset,
                    reporter: o.prototype.save.call(this)
                };
            }, a.prototype.restore = function(t) {
                var e = new a(this.base);
                return e.offset = t.offset, e.length = this.offset, this.offset = t.offset, o.prototype.restore.call(this, t.reporter), e;
            }, a.prototype.isEmpty = function() {
                return this.offset === this.length;
            }, a.prototype.readUInt8 = function(t) {
                return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, !0) : this.error(t || "DecoderBuffer overrun");
            }, a.prototype.skip = function(t, e) {
                if (!(this.offset + t <= this.length)) return this.error(e || "DecoderBuffer overrun");
                var r = new a(this.base);
                return r._reporterState = this._reporterState, r.offset = this.offset, r.length = this.offset + t, this.offset += t, r;
            }, a.prototype.raw = function(t) {
                return this.base.slice(t ? t.offset : this.offset, this.length);
            }, e73.EncoderBuffer = u, u.isEncoderBuffer = function(t) {
                return t instanceof u || "object" === n(t) && "EncoderBuffer" === t.constructor.name && "number" == typeof t.length && "function" == typeof t.join;
            }, u.prototype.join = function(t, e) {
                return t || (t = s.alloc(this.length)), e || (e = 0), 0 === this.length || (Array.isArray(this.value) ? this.value.forEach(function(r) {
                    r.join(t, e), e += r.length;
                }) : ("number" == typeof this.value ? t[e] = this.value : "string" == typeof this.value ? t.write(this.value, e) : s.isBuffer(this.value) && this.value.copy(t, e), e += this.length)), t;
            };
        },
        function(t160, e74, r61) {
            "use strict";
            function n39(t161) {
                return (n39 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t161);
            }
            var i23 = r61(32), o18 = r61(18), s13 = r61(82), a14 = r61(52), u12 = r61(145), h11 = r61(146), f12 = r61(33), c9 = r61(1), l10 = r61(147).trustedSymbol, d = r61(4);
            /*!
 * Object clone with Mongoose natives support.
 *
 * If options.minimize is true, creates a minimal data object. Empty objects and undefined values will not be cloned. This makes the data payload sent to MongoDB as small as possible.
 *
 * Functions are never cloned.
 *
 * @param {Object} obj the object to clone
 * @param {Object} options
 * @param {Boolean} isArrayChild true if cloning immediately underneath an array. Special case for minimize.
 * @return {Object} the cloned object
 * @api private
 */ function p(t162, e75, r62) {
                if (null == t162) return t162;
                if (Array.isArray(t162)) return (function(t, e) {
                    var r = 0, n = t.length, i = new Array(n);
                    for(r = 0; r < n; ++r)i[r] = p(t[r], e, !0);
                    return i;
                })(d.isMongooseArray(t162) ? t162.__array : t162, e75);
                if (a14(t162)) {
                    e75 && e75._skipSingleNestedGetters && t162.$isSingleNested && (e75 = Object.assign({
                    }, e75, {
                        getters: !1
                    }));
                    var s, l = t162.$isSingleNested;
                    if (d.isPOJO(t162) && null != t162.$__ && null != t162._doc) return t162._doc;
                    if (s = e75 && e75.json && "function" == typeof t162.toJSON ? t162.toJSON(e75) : t162.toObject(e75), e75 && e75.minimize && l && 0 === Object.keys(s).length) return;
                    return s;
                }
                var m = t162.constructor;
                if (m) switch(u12(m)){
                    case "Object":
                        return y(t162, e75, r62);
                    case "Date":
                        return new m(+t162);
                    case "RegExp":
                        return (function(t) {
                            var e = new RegExp(t.source, t.flags);
                            e.lastIndex !== t.lastIndex && (e.lastIndex = t.lastIndex);
                            return e;
                        })(t162);
                }
                return t162 instanceof o18 ? new o18(t162.id) : h11(t162, "Decimal128") ? e75 && e75.flattenDecimals ? t162.toJSON() : i23.fromString(t162.toString()) : !m && f12(t162) ? y(t162, e75, r62) : "object" === n39(t162) && t162[c9.schemaTypeSymbol] ? t162.clone() : e75 && e75.bson && "function" == typeof t162.toBSON ? t162 : "function" == typeof t162.valueOf ? t162.valueOf() : y(t162, e75, r62);
            }
            /*!
 * ignore
 */ function y(t, e, r) {
                var n, i = e && e.minimize, o = {
                };
                l10 in t && (o[l10] = t[l10]);
                var a = 0, u = "", h = Object.keys(t), f = h.length;
                for(a = 0; a < f; ++a)if (!s13.has(u = h[a])) {
                    var c = p(t[u], e, !1);
                    !1 === i && void 0 === c ? delete o[u] : !0 === i && void 0 === c || (n || (n = !0), o[u] = c);
                }
                return i && !r ? n && o : o;
            }
            t160.exports = p;
        },
        function(t163, e76, r63) {
            "use strict";
            (function(e) {
                /*!
 * Centralize this so we can more easily work around issues with people
 * stubbing out `process.nextTick()` in tests using sinon:
 * https://github.com/sinonjs/lolex#automatically-incrementing-mocked-time
 * See gh-6074
 */ var r = e.nextTick.bind(e);
                t163.exports = function(t) {
                    return r(t);
                };
            }).call(this, r63(5));
        },
        function(t164, e77, r64) {
            "use strict";
            (function(e78) {
                function n40(t165) {
                    return (n40 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t165);
                }
                var i24 = r64(281);
                /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */ function o19(t, e) {
                    if (t === e) return 0;
                    for(var r = t.length, n = e.length, i = 0, o = Math.min(r, n); i < o; ++i)if (t[i] !== e[i]) {
                        r = t[i], n = e[i];
                        break;
                    }
                    return r < n ? -1 : n < r ? 1 : 0;
                }
                function s14(t) {
                    return e78.Buffer && "function" == typeof e78.Buffer.isBuffer ? e78.Buffer.isBuffer(t) : !(null == t || !t._isBuffer);
                }
                var a = r64(8), u13 = Object.prototype.hasOwnProperty, h = Array.prototype.slice, f13 = "foo" === (function() {
                }).name;
                function c10(t) {
                    return Object.prototype.toString.call(t);
                }
                function l(t) {
                    return !s14(t) && "function" == typeof e78.ArrayBuffer && ("function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t) : !!t && (t instanceof DataView || !!(t.buffer && t.buffer instanceof ArrayBuffer)));
                }
                var d = t164.exports = g, p = /\s*function\s+([^\(\s]*)\s*/;
                function y(t) {
                    if (a.isFunction(t)) {
                        if (f13) return t.name;
                        var e = t.toString().match(p);
                        return e && e[1];
                    }
                }
                function m(t, e) {
                    return "string" == typeof t ? t.length < e ? t : t.slice(0, e) : t;
                }
                function b(t) {
                    if (f13 || !a.isFunction(t)) return a.inspect(t);
                    var e = y(t);
                    return "[Function" + (e ? ": " + e : "") + "]";
                }
                function v(t, e, r, n, i) {
                    throw new d.AssertionError({
                        message: r,
                        actual: t,
                        expected: e,
                        operator: n,
                        stackStartFunction: i
                    });
                }
                function g(t, e) {
                    t || v(t, !0, e, "==", d.ok);
                }
                function w(t166, e79, r65, i25) {
                    if (t166 === e79) return !0;
                    if (s14(t166) && s14(e79)) return 0 === o19(t166, e79);
                    if (a.isDate(t166) && a.isDate(e79)) return t166.getTime() === e79.getTime();
                    if (a.isRegExp(t166) && a.isRegExp(e79)) return t166.source === e79.source && t166.global === e79.global && t166.multiline === e79.multiline && t166.lastIndex === e79.lastIndex && t166.ignoreCase === e79.ignoreCase;
                    if (null !== t166 && "object" === n40(t166) || null !== e79 && "object" === n40(e79)) {
                        if (l(t166) && l(e79) && c10(t166) === c10(e79) && !(t166 instanceof Float32Array || t166 instanceof Float64Array)) return 0 === o19(new Uint8Array(t166.buffer), new Uint8Array(e79.buffer));
                        if (s14(t166) !== s14(e79)) return !1;
                        var u14 = (i25 = i25 || {
                            actual: [],
                            expected: []
                        }).actual.indexOf(t166);
                        return -1 !== u14 && u14 === i25.expected.indexOf(e79) || (i25.actual.push(t166), i25.expected.push(e79), (function(t, e, r, n) {
                            if (null == t || null == e) return !1;
                            if (a.isPrimitive(t) || a.isPrimitive(e)) return t === e;
                            if (r && Object.getPrototypeOf(t) !== Object.getPrototypeOf(e)) return !1;
                            var i = _(t), o = _(e);
                            if (i && !o || !i && o) return !1;
                            if (i) return t = h.call(t), e = h.call(e), w(t, e, r);
                            var s, u, f = O(t), c = O(e);
                            if (f.length !== c.length) return !1;
                            for(f.sort(), c.sort(), u = f.length - 1; u >= 0; u--)if (f[u] !== c[u]) return !1;
                            for(u = f.length - 1; u >= 0; u--)if (s = f[u], !w(t[s], e[s], r, n)) return !1;
                            return !0;
                        })(t166, e79, r65, i25));
                    }
                    return r65 ? t166 === e79 : t166 == e79;
                }
                function _(t) {
                    return "[object Arguments]" == Object.prototype.toString.call(t);
                }
                function M(t, e) {
                    if (!t || !e) return !1;
                    if ("[object RegExp]" == Object.prototype.toString.call(e)) return e.test(t);
                    try {
                        if (t instanceof e) return !0;
                    } catch (t167) {
                    }
                    return !Error.isPrototypeOf(e) && !0 === e.call({
                    }, t);
                }
                function S(t168, e80, r, n) {
                    var i;
                    if ("function" != typeof e80) throw new TypeError('"block" argument must be a function');
                    "string" == typeof r && (n = r, r = null), i = (function(t) {
                        var e;
                        try {
                            t();
                        } catch (t169) {
                            e = t169;
                        }
                        return e;
                    })(e80), n = (r && r.name ? " (" + r.name + ")." : ".") + (n ? " " + n : "."), t168 && !i && v(i, r, "Missing expected exception" + n);
                    var o = "string" == typeof n, s = !t168 && i && !r;
                    if ((!t168 && a.isError(i) && o && M(i, r) || s) && v(i, r, "Got unwanted exception" + n), t168 && i && r && !M(i, r) || !t168 && i) throw i;
                }
                d.AssertionError = function(t170) {
                    this.name = "AssertionError", this.actual = t170.actual, this.expected = t170.expected, this.operator = t170.operator, t170.message ? (this.message = t170.message, this.generatedMessage = !1) : (this.message = (function(t) {
                        return m(b(t.actual), 128) + " " + t.operator + " " + m(b(t.expected), 128);
                    })(this), this.generatedMessage = !0);
                    var e = t170.stackStartFunction || v;
                    if (Error.captureStackTrace) Error.captureStackTrace(this, e);
                    else {
                        var r = new Error;
                        if (r.stack) {
                            var n = r.stack, i = y(e), o = n.indexOf("\n" + i);
                            if (o >= 0) {
                                var s = n.indexOf("\n", o + 1);
                                n = n.substring(s + 1);
                            }
                            this.stack = n;
                        }
                    }
                }, a.inherits(d.AssertionError, Error), d.fail = v, d.ok = g, d.equal = function(t, e, r) {
                    t != e && v(t, e, r, "==", d.equal);
                }, d.notEqual = function(t, e, r) {
                    t == e && v(t, e, r, "!=", d.notEqual);
                }, d.deepEqual = function(t, e, r) {
                    w(t, e, !1) || v(t, e, r, "deepEqual", d.deepEqual);
                }, d.deepStrictEqual = function(t, e, r) {
                    w(t, e, !0) || v(t, e, r, "deepStrictEqual", d.deepStrictEqual);
                }, d.notDeepEqual = function(t, e, r) {
                    w(t, e, !1) && v(t, e, r, "notDeepEqual", d.notDeepEqual);
                }, d.notDeepStrictEqual = function t(e, r, n) {
                    w(e, r, !0) && v(e, r, n, "notDeepStrictEqual", t);
                }, d.strictEqual = function(t, e, r) {
                    t !== e && v(t, e, r, "===", d.strictEqual);
                }, d.notStrictEqual = function(t, e, r) {
                    t === e && v(t, e, r, "!==", d.notStrictEqual);
                }, d.throws = function(t, e, r) {
                    S(!0, t, e, r);
                }, d.doesNotThrow = function(t, e, r) {
                    S(!1, t, e, r);
                }, d.ifError = function(t) {
                    if (t) throw t;
                }, d.strict = i24(function t(e, r) {
                    e || v(e, !0, r, "==", t);
                }, d, {
                    equal: d.strictEqual,
                    deepEqual: d.deepStrictEqual,
                    notEqual: d.notStrictEqual,
                    notDeepEqual: d.notDeepStrictEqual
                }), d.strict.strict = d.strict;
                var O = Object.keys || function(t) {
                    var e = [];
                    for(var r in t)u13.call(t, r) && e.push(r);
                    return e;
                };
            }).call(this, r64(6));
        },
        function(t171, e81, r66) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n41(t172) {
                return (n41 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t172);
            }
            function i26(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t173, e82) {
                return (o = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t173, e82);
            }
            function s(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u16(t);
                    if (e) {
                        var i = u16(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a15(this, r);
                };
            }
            function a15(t174, e) {
                if (e && ("object" === n41(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t174);
            }
            function u16(t175) {
                return (u16 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t175);
            }
            var h = function(t176) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o(t, e);
                }(u, t176);
                var e83, r67, n42, a = s(u);
                function u(t177, e84, r) {
                    var n;
                    return (function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    })(this, u), e84 = e84 || "Field `" + t177 + "` is not in schema and strict mode is set to throw.", (n = a.call(this, e84)).isImmutableError = !!r, n.path = t177, n;
                }
                return e83 = u, r67 && i26(e83.prototype, r67), n42 && i26(e83, n42), Object.defineProperty(e83, "prototype", {
                    writable: !1
                }), e83;
            }(r66(7));
            Object.defineProperty(h.prototype, "name", {
                value: "StrictModeError"
            }), t171.exports = h;
        },
        function(t178, e85, r68) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n = r68(9), i = r68(55), o = r68(33), s = r68(4);
            function a(t, e) {
                if (e && e.default) {
                    var r = e.default;
                    Array.isArray(r) && 0 === r.length ? e.default = Array : !e.shared && o(r) && 0 === Object.keys(r).length && (e.default = function() {
                        return {
                        };
                    });
                }
                n.call(this, t, e, "Mixed"), this[i.schemaMixedSymbol] = !0;
            }
            a.schemaName = "Mixed", a.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ a.prototype = Object.create(n.prototype), a.prototype.constructor = a, a.get = n.get, a.set = n.set, a.prototype.cast = function(t) {
                return t instanceof Error ? s.errorToPOJO(t) : t;
            }, a.prototype.castForQuery = function(t, e) {
                return 2 === arguments.length ? e : t;
            }, /*!
 * Module exports.
 */ t178.exports = a;
        },
        function(t179, e86, r69) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n43 = r69(12).EventEmitter, i = r69(90), o = r69(4), s = r69(1).documentArrayParent;
            /*!
 * A constructor.
 *
 * @param {Object} obj js object returned from the db
 * @param {MongooseDocumentArray} parentArr the parent array of this document
 * @param {Boolean} skipId
 * @inherits Document
 * @api private
 */ function a16(t, e, r, n, a) {
                o.isMongooseDocumentArray(e) ? (this.__parentArray = e, this[s] = e.$parent()) : (this.__parentArray = void 0, this[s] = void 0), this.$setIndex(a), this.$__parent = this[s], i.call(this, t, n, this[s], void 0, {
                    isNew: !0
                });
            }
            /*!
 * Inherit from Subdocument
 */ for(var u in a16.prototype = Object.create(i.prototype), a16.prototype.constructor = a16, Object.defineProperty(a16.prototype, "$isSingleNested", {
                configurable: !1,
                writable: !1,
                value: !1
            }), Object.defineProperty(a16.prototype, "$isDocumentArrayElement", {
                configurable: !1,
                writable: !1,
                value: !0
            }), n43.prototype)a16[u] = n43.prototype[u];
            /*!
 * ignore
 */ a16.prototype.$setIndex = function(t) {
                if (this.__index = t, null != this.$__ && null != this.$__.validationError) for(var e = 0, r = Object.keys(this.$__.validationError.errors); e < r.length; e++){
                    var n = r[e];
                    this.invalidate(n, this.$__.validationError.errors[n]);
                }
            }, /*!
 * ignore
 */ a16.prototype.populate = function() {
                throw new Error('Mongoose does not support calling populate() on nested docs. Instead of `doc.arr[0].populate("path")`, use `doc.populate("arr.0.path")`');
            }, /*!
 * ignore
 */ a16.prototype.$__removeFromParent = function() {
                var t = this._doc._id;
                if (!t) throw new Error("For your own good, Mongoose does not know how to remove an ArraySubdocument that has no _id");
                this.__parentArray.pull({
                    _id: t
                });
            }, a16.prototype.$__fullPath = function(t, e) {
                return null == this.__index ? null : (this.$__.fullPath || this.ownerDocument(), e ? t ? this.$__.fullPath + "." + t : this.$__.fullPath : t ? this.$__.fullPath + "." + this.__index + "." + t : this.$__.fullPath + "." + this.__index);
            }, /*!
 * Given a path relative to this document, return the path relative
 * to the top-level document.
 */ a16.prototype.$__pathRelativeToParent = function(t, e) {
                return null == this.__index ? null : e ? null == t ? this.__parentArray.$path() : this.__parentArray.$path() + "." + t : null == t ? this.__parentArray.$path() + "." + this.__index : this.__parentArray.$path() + "." + this.__index + "." + t;
            }, /*!
 * Returns this sub-documents parent document.
 */ a16.prototype.$parent = function() {
                return this[s];
            }, a16.prototype.parentArray = function() {
                return this.__parentArray;
            }, /*!
 * Module exports.
 */ t179.exports = a16;
        },
        function(t180, e87, r70) {
            "use strict";
            (function(e) {
                void 0 === e || !e.version || 0 === e.version.indexOf("v0.") || 0 === e.version.indexOf("v1.") && 0 !== e.version.indexOf("v1.8.") ? t180.exports = {
                    nextTick: function(t, r, n, i) {
                        if ("function" != typeof t) throw new TypeError('"callback" argument must be a function');
                        var o, s, a = arguments.length;
                        switch(a){
                            case 0:
                            case 1:
                                return e.nextTick(t);
                            case 2:
                                return e.nextTick(function() {
                                    t.call(null, r);
                                });
                            case 3:
                                return e.nextTick(function() {
                                    t.call(null, r, n);
                                });
                            case 4:
                                return e.nextTick(function() {
                                    t.call(null, r, n, i);
                                });
                            default:
                                for(o = new Array(a - 1), s = 0; s < o.length;)o[s++] = arguments[s];
                                return e.nextTick(function() {
                                    t.apply(null, o);
                                });
                        }
                    }
                } : t180.exports = e;
            }).call(this, r70(5));
        },
        function(t181, e88, r71) {
            var n44 = r71(2).Buffer;
            function i27(t) {
                n44.isBuffer(t) || (t = n44.from(t));
                for(var e = t.length / 4 | 0, r = new Array(e), i = 0; i < e; i++)r[i] = t.readUInt32BE(4 * i);
                return r;
            }
            function o20(t) {
                for(; 0 < t.length; t++)t[0] = 0;
            }
            function s15(t, e, r, n, i) {
                for(var o, s, a, u, h = r[0], f = r[1], c = r[2], l = r[3], d = t[0] ^ e[0], p = t[1] ^ e[1], y = t[2] ^ e[2], m = t[3] ^ e[3], b = 4, v = 1; v < i; v++)o = h[d >>> 24] ^ f[p >>> 16 & 255] ^ c[y >>> 8 & 255] ^ l[255 & m] ^ e[b++], s = h[p >>> 24] ^ f[y >>> 16 & 255] ^ c[m >>> 8 & 255] ^ l[255 & d] ^ e[b++], a = h[y >>> 24] ^ f[m >>> 16 & 255] ^ c[d >>> 8 & 255] ^ l[255 & p] ^ e[b++], u = h[m >>> 24] ^ f[d >>> 16 & 255] ^ c[p >>> 8 & 255] ^ l[255 & y] ^ e[b++], d = o, p = s, y = a, m = u;
                return o = (n[d >>> 24] << 24 | n[p >>> 16 & 255] << 16 | n[y >>> 8 & 255] << 8 | n[255 & m]) ^ e[b++], s = (n[p >>> 24] << 24 | n[y >>> 16 & 255] << 16 | n[m >>> 8 & 255] << 8 | n[255 & d]) ^ e[b++], a = (n[y >>> 24] << 24 | n[m >>> 16 & 255] << 16 | n[d >>> 8 & 255] << 8 | n[255 & p]) ^ e[b++], u = (n[m >>> 24] << 24 | n[d >>> 16 & 255] << 16 | n[p >>> 8 & 255] << 8 | n[255 & y]) ^ e[b++], [
                    o >>>= 0,
                    s >>>= 0,
                    a >>>= 0,
                    u >>>= 0
                ];
            }
            var a17 = [
                0,
                1,
                2,
                4,
                8,
                16,
                32,
                64,
                128,
                27,
                54
            ], u17 = function() {
                for(var t = new Array(256), e = 0; e < 256; e++)t[e] = e < 128 ? e << 1 : e << 1 ^ 283;
                for(var r = [], n = [], i = [
                    [],
                    [],
                    [],
                    []
                ], o = [
                    [],
                    [],
                    [],
                    []
                ], s = 0, a = 0, u = 0; u < 256; ++u){
                    var h = a ^ a << 1 ^ a << 2 ^ a << 3 ^ a << 4;
                    h = h >>> 8 ^ 255 & h ^ 99, r[s] = h, n[h] = s;
                    var f = t[s], c = t[f], l = t[c], d = 257 * t[h] ^ 16843008 * h;
                    i[0][s] = d << 24 | d >>> 8, i[1][s] = d << 16 | d >>> 16, i[2][s] = d << 8 | d >>> 24, i[3][s] = d, d = 16843009 * l ^ 65537 * c ^ 257 * f ^ 16843008 * s, o[0][h] = d << 24 | d >>> 8, o[1][h] = d << 16 | d >>> 16, o[2][h] = d << 8 | d >>> 24, o[3][h] = d, 0 === s ? s = a = 1 : (s = f ^ t[t[t[l ^ f]]], a ^= t[t[a]]);
                }
                return {
                    SBOX: r,
                    INV_SBOX: n,
                    SUB_MIX: i,
                    INV_SUB_MIX: o
                };
            }();
            function h12(t) {
                this._key = i27(t), this._reset();
            }
            h12.blockSize = 16, h12.keySize = 32, h12.prototype.blockSize = h12.blockSize, h12.prototype.keySize = h12.keySize, h12.prototype._reset = function() {
                for(var t = this._key, e = t.length, r = e + 6, n = 4 * (r + 1), i = [], o = 0; o < e; o++)i[o] = t[o];
                for(o = e; o < n; o++){
                    var s = i[o - 1];
                    o % e == 0 ? (s = s << 8 | s >>> 24, s = u17.SBOX[s >>> 24] << 24 | u17.SBOX[s >>> 16 & 255] << 16 | u17.SBOX[s >>> 8 & 255] << 8 | u17.SBOX[255 & s], s ^= a17[o / e | 0] << 24) : e > 6 && o % e == 4 && (s = u17.SBOX[s >>> 24] << 24 | u17.SBOX[s >>> 16 & 255] << 16 | u17.SBOX[s >>> 8 & 255] << 8 | u17.SBOX[255 & s]), i[o] = i[o - e] ^ s;
                }
                for(var h = [], f = 0; f < n; f++){
                    var c = n - f, l = i[c - (f % 4 ? 0 : 4)];
                    h[f] = f < 4 || c <= 4 ? l : u17.INV_SUB_MIX[0][u17.SBOX[l >>> 24]] ^ u17.INV_SUB_MIX[1][u17.SBOX[l >>> 16 & 255]] ^ u17.INV_SUB_MIX[2][u17.SBOX[l >>> 8 & 255]] ^ u17.INV_SUB_MIX[3][u17.SBOX[255 & l]];
                }
                this._nRounds = r, this._keySchedule = i, this._invKeySchedule = h;
            }, h12.prototype.encryptBlockRaw = function(t) {
                return s15(t = i27(t), this._keySchedule, u17.SUB_MIX, u17.SBOX, this._nRounds);
            }, h12.prototype.encryptBlock = function(t) {
                var e = this.encryptBlockRaw(t), r = n44.allocUnsafe(16);
                return r.writeUInt32BE(e[0], 0), r.writeUInt32BE(e[1], 4), r.writeUInt32BE(e[2], 8), r.writeUInt32BE(e[3], 12), r;
            }, h12.prototype.decryptBlock = function(t) {
                var e = (t = i27(t))[1];
                t[1] = t[3], t[3] = e;
                var r = s15(t, this._invKeySchedule, u17.INV_SUB_MIX, u17.INV_SBOX, this._nRounds), o = n44.allocUnsafe(16);
                return o.writeUInt32BE(r[0], 0), o.writeUInt32BE(r[3], 4), o.writeUInt32BE(r[2], 8), o.writeUInt32BE(r[1], 12), o;
            }, h12.prototype.scrub = function() {
                o20(this._keySchedule), o20(this._invKeySchedule), o20(this._key);
            }, t181.exports.AES = h12;
        },
        function(t182, e89, r72) {
            var n = r72(2).Buffer, i = r72(60);
            t182.exports = function(t, e, r, o) {
                if (n.isBuffer(t) || (t = n.from(t, "binary")), e && (n.isBuffer(e) || (e = n.from(e, "binary")), 8 !== e.length)) throw new RangeError("salt should be Buffer with 8 byte length");
                for(var s = r / 8, a = n.alloc(s), u = n.alloc(o || 0), h = n.alloc(0); s > 0 || o > 0;){
                    var f = new i;
                    f.update(h), f.update(t), e && f.update(e), h = f.digest();
                    var c = 0;
                    if (s > 0) {
                        var l = a.length - s;
                        c = Math.min(s, h.length), h.copy(a, l, 0, c), s -= c;
                    }
                    if (c < h.length && o > 0) {
                        var d = u.length - o, p = Math.min(o, h.length - c);
                        h.copy(u, d, c, c + p), o -= p;
                    }
                }
                return h.fill(0), {
                    key: a,
                    iv: u
                };
            };
        },
        function(t183, e90, r73) {
            "use strict";
            var n45 = r73(21), i28 = r73(11), o21 = i28.getNAF, s16 = i28.getJSF, a18 = i28.assert;
            function u18(t, e) {
                this.type = t, this.p = new n45(e.p, 16), this.red = e.prime ? n45.red(e.prime) : n45.mont(this.p), this.zero = new n45(0).toRed(this.red), this.one = new n45(1).toRed(this.red), this.two = new n45(2).toRed(this.red), this.n = e.n && new n45(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                var r = this.n && this.p.div(this.n);
                !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));
            }
            function h13(t, e) {
                this.curve = t, this.type = e, this.precomputed = null;
            }
            t183.exports = u18, u18.prototype.point = function() {
                throw new Error("Not implemented");
            }, u18.prototype.validate = function() {
                throw new Error("Not implemented");
            }, u18.prototype._fixedNafMul = function(t, e) {
                a18(t.precomputed);
                var r = t._getDoubles(), n = o21(e, 1, this._bitLength), i = (1 << r.step + 1) - (r.step % 2 == 0 ? 2 : 1);
                i /= 3;
                var s, u, h = [];
                for(s = 0; s < n.length; s += r.step){
                    u = 0;
                    for(var f = s + r.step - 1; f >= s; f--)u = (u << 1) + n[f];
                    h.push(u);
                }
                for(var c = this.jpoint(null, null, null), l = this.jpoint(null, null, null), d = i; d > 0; d--){
                    for(s = 0; s < h.length; s++)(u = h[s]) === d ? l = l.mixedAdd(r.points[s]) : u === -d && (l = l.mixedAdd(r.points[s].neg()));
                    c = c.add(l);
                }
                return c.toP();
            }, u18.prototype._wnafMul = function(t, e) {
                var r = 4, n = t._getNAFPoints(r);
                r = n.wnd;
                for(var i = n.points, s = o21(e, r, this._bitLength), u = this.jpoint(null, null, null), h = s.length - 1; h >= 0; h--){
                    for(var f = 0; h >= 0 && 0 === s[h]; h--)f++;
                    if (h >= 0 && f++, u = u.dblp(f), h < 0) break;
                    var c = s[h];
                    a18(0 !== c), u = "affine" === t.type ? c > 0 ? u.mixedAdd(i[c - 1 >> 1]) : u.mixedAdd(i[-c - 1 >> 1].neg()) : c > 0 ? u.add(i[c - 1 >> 1]) : u.add(i[-c - 1 >> 1].neg());
                }
                return "affine" === t.type ? u.toP() : u;
            }, u18.prototype._wnafMulAdd = function(t, e, r, n, i) {
                var a, u, h, f = this._wnafT1, c = this._wnafT2, l = this._wnafT3, d = 0;
                for(a = 0; a < n; a++){
                    var p = (h = e[a])._getNAFPoints(t);
                    f[a] = p.wnd, c[a] = p.points;
                }
                for(a = n - 1; a >= 1; a -= 2){
                    var y = a - 1, m = a;
                    if (1 === f[y] && 1 === f[m]) {
                        var b = [
                            e[y],
                            null,
                            null,
                            e[m]
                        ];
                        0 === e[y].y.cmp(e[m].y) ? (b[1] = e[y].add(e[m]), b[2] = e[y].toJ().mixedAdd(e[m].neg())) : 0 === e[y].y.cmp(e[m].y.redNeg()) ? (b[1] = e[y].toJ().mixedAdd(e[m]), b[2] = e[y].add(e[m].neg())) : (b[1] = e[y].toJ().mixedAdd(e[m]), b[2] = e[y].toJ().mixedAdd(e[m].neg()));
                        var v = [
                            -3,
                            -1,
                            -5,
                            -7,
                            0,
                            7,
                            5,
                            1,
                            3
                        ], g = s16(r[y], r[m]);
                        for(d = Math.max(g[0].length, d), l[y] = new Array(d), l[m] = new Array(d), u = 0; u < d; u++){
                            var w = 0 | g[0][u], _ = 0 | g[1][u];
                            l[y][u] = v[3 * (w + 1) + (_ + 1)], l[m][u] = 0, c[y] = b;
                        }
                    } else l[y] = o21(r[y], f[y], this._bitLength), l[m] = o21(r[m], f[m], this._bitLength), d = Math.max(l[y].length, d), d = Math.max(l[m].length, d);
                }
                var M = this.jpoint(null, null, null), S = this._wnafT4;
                for(a = d; a >= 0; a--){
                    for(var O = 0; a >= 0;){
                        var A = !0;
                        for(u = 0; u < n; u++)S[u] = 0 | l[u][a], 0 !== S[u] && (A = !1);
                        if (!A) break;
                        O++, a--;
                    }
                    if (a >= 0 && O++, M = M.dblp(O), a < 0) break;
                    for(u = 0; u < n; u++){
                        var E = S[u];
                        0 !== E && (E > 0 ? h = c[u][E - 1 >> 1] : E < 0 && (h = c[u][-E - 1 >> 1].neg()), M = "affine" === h.type ? M.mixedAdd(h) : M.add(h));
                    }
                }
                for(a = 0; a < n; a++)c[a] = null;
                return i ? M : M.toP();
            }, u18.BasePoint = h13, h13.prototype.eq = function() {
                throw new Error("Not implemented");
            }, h13.prototype.validate = function() {
                return this.curve.validate(this);
            }, u18.prototype.decodePoint = function(t, e) {
                t = i28.toArray(t, e);
                var r = this.p.byteLength();
                if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 == 2 * r) return 6 === t[0] ? a18(t[t.length - 1] % 2 == 0) : 7 === t[0] && a18(t[t.length - 1] % 2 == 1), this.point(t.slice(1, 1 + r), t.slice(1 + r, 1 + 2 * r));
                if ((2 === t[0] || 3 === t[0]) && t.length - 1 === r) return this.pointFromX(t.slice(1, 1 + r), 3 === t[0]);
                throw new Error("Unknown point format");
            }, h13.prototype.encodeCompressed = function(t) {
                return this.encode(t, !0);
            }, h13.prototype._encode = function(t) {
                var e = this.curve.p.byteLength(), r = this.getX().toArray("be", e);
                return t ? [
                    this.getY().isEven() ? 2 : 3
                ].concat(r) : [
                    4
                ].concat(r, this.getY().toArray("be", e));
            }, h13.prototype.encode = function(t, e) {
                return i28.encode(this._encode(e), t);
            }, h13.prototype.precompute = function(t) {
                if (this.precomputed) return this;
                var e = {
                    doubles: null,
                    naf: null,
                    beta: null
                };
                return e.naf = this._getNAFPoints(8), e.doubles = this._getDoubles(4, t), e.beta = this._getBeta(), this.precomputed = e, this;
            }, h13.prototype._hasDoubles = function(t) {
                if (!this.precomputed) return !1;
                var e = this.precomputed.doubles;
                return !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step);
            }, h13.prototype._getDoubles = function(t, e) {
                if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                for(var r = [
                    this
                ], n = this, i = 0; i < e; i += t){
                    for(var o = 0; o < t; o++)n = n.dbl();
                    r.push(n);
                }
                return {
                    step: t,
                    points: r
                };
            }, h13.prototype._getNAFPoints = function(t) {
                if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                for(var e = [
                    this
                ], r = (1 << t) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++)e[i] = e[i - 1].add(n);
                return {
                    wnd: t,
                    points: e
                };
            }, h13.prototype._getBeta = function() {
                return null;
            }, h13.prototype.dblp = function(t) {
                for(var e = this, r = 0; r < t; r++)e = e.dbl();
                return e;
            };
        },
        function(t184, e91, r74) {
            function n46(t185) {
                return (n46 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t185);
            }
            var i29 = r74(252), o = r74(260), s17 = r74(261), a = r74(67), u = r74(113), h = r74(2).Buffer;
            function f14(t186) {
                var e92;
                "object" !== n46(t186) || h.isBuffer(t186) || (e92 = t186.passphrase, t186 = t186.key), "string" == typeof t186 && (t186 = h.from(t186));
                var r75, f15, c11 = s17(t186, e92), l11 = c11.tag, d5 = c11.data;
                switch(l11){
                    case "CERTIFICATE":
                        f15 = i29.certificate.decode(d5, "der").tbsCertificate.subjectPublicKeyInfo;
                    case "PUBLIC KEY":
                        switch(f15 || (f15 = i29.PublicKey.decode(d5, "der")), r75 = f15.algorithm.algorithm.join(".")){
                            case "1.2.840.113549.1.1.1":
                                return i29.RSAPublicKey.decode(f15.subjectPublicKey.data, "der");
                            case "1.2.840.10045.2.1":
                                return f15.subjectPrivateKey = f15.subjectPublicKey, {
                                    type: "ec",
                                    data: f15
                                };
                            case "1.2.840.10040.4.1":
                                return f15.algorithm.params.pub_key = i29.DSAparam.decode(f15.subjectPublicKey.data, "der"), {
                                    type: "dsa",
                                    data: f15.algorithm.params
                                };
                            default:
                                throw new Error("unknown key id " + r75);
                        }
                    case "ENCRYPTED PRIVATE KEY":
                        d5 = (function(t, e) {
                            var r = t.algorithm.decrypt.kde.kdeparams.salt, n = parseInt(t.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), i = o[t.algorithm.decrypt.cipher.algo.join(".")], s = t.algorithm.decrypt.cipher.iv, f = t.subjectPrivateKey, c = parseInt(i.split("-")[1], 10) / 8, l = u.pbkdf2Sync(e, r, n, c, "sha1"), d = a.createDecipheriv(i, l, s), p = [];
                            return p.push(d.update(f)), p.push(d.final()), h.concat(p);
                        })(d5 = i29.EncryptedPrivateKey.decode(d5, "der"), e92);
                    case "PRIVATE KEY":
                        switch(r75 = (f15 = i29.PrivateKey.decode(d5, "der")).algorithm.algorithm.join(".")){
                            case "1.2.840.113549.1.1.1":
                                return i29.RSAPrivateKey.decode(f15.subjectPrivateKey, "der");
                            case "1.2.840.10045.2.1":
                                return {
                                    curve: f15.algorithm.curve,
                                    privateKey: i29.ECPrivateKey.decode(f15.subjectPrivateKey, "der").privateKey
                                };
                            case "1.2.840.10040.4.1":
                                return f15.algorithm.params.priv_key = i29.DSAparam.decode(f15.subjectPrivateKey, "der"), {
                                    type: "dsa",
                                    params: f15.algorithm.params
                                };
                            default:
                                throw new Error("unknown key id " + r75);
                        }
                    case "RSA PUBLIC KEY":
                        return i29.RSAPublicKey.decode(d5, "der");
                    case "RSA PRIVATE KEY":
                        return i29.RSAPrivateKey.decode(d5, "der");
                    case "DSA PRIVATE KEY":
                        return {
                            type: "dsa",
                            params: i29.DSAPrivateKey.decode(d5, "der")
                        };
                    case "EC PRIVATE KEY":
                        return {
                            curve: (d5 = i29.ECPrivateKey.decode(d5, "der")).parameters.value,
                            privateKey: d5.privateKey
                        };
                    default:
                        throw new Error("unknown key type " + l11);
                }
            }
            t184.exports = f14, f14.signature = i29.signature;
        },
        function(t187, e, r) {
            "use strict";
            var n = r(144).isMongooseArray;
            /*!
 * Returns if `v` is a mongoose object that has a `toObject()` method we can use.
 *
 * This is for compatibility with libs like Date.js which do foolish things to Natives.
 *
 * @param {any} v
 * @api private
 */ t187.exports = function(t) {
                return null != t && (n(t) || null != t.$__ || t.isMongooseBuffer || t.$isMongooseMap);
            };
        },
        function(t188, e93, r76) {
            "use strict";
            var n47 = r76(148), i30 = r76(42), o = Symbol("mongoose:emitted");
            t188.exports = function(t189, e94, r, s) {
                return "function" == typeof t189 ? e94(function(e) {
                    if (null == e) t189.apply(this, arguments);
                    else {
                        null != r && null != r.listeners && r.listeners("error").length > 0 && !e[o] && (e[o] = !0, r.emit("error", e));
                        try {
                            t189(e);
                        } catch (e) {
                            return i30(function() {
                                throw e;
                            });
                        }
                    }
                }) : new (s = s || n47.get())(function(t, n) {
                    e94(function(e, i) {
                        return null != e ? (null != r && null != r.listeners && r.listeners("error").length > 0 && !e[o] && (e[o] = !0, r.emit("error", e)), n(e)) : arguments.length > 2 ? t(Array.prototype.slice.call(arguments, 1)) : void t(i);
                    });
                });
            };
        },
        function(t190, e, r) {
            "use strict";
            var n = [
                "find",
                "findOne",
                "update",
                "updateMany",
                "updateOne",
                "replaceOne",
                "remove",
                "count",
                "distinct",
                "findOneAndDelete",
                "findOneAndUpdate",
                "aggregate",
                "findCursor",
                "deleteOne",
                "deleteMany"
            ];
            function i() {
            }
            for(var o = 0, s = n.length; o < s; ++o){
                var a = n[o];
                i.prototype[a] = u(a);
            }
            function u(t) {
                return function() {
                    throw new Error("collection." + t + " not implemented");
                };
            }
            t190.exports = i, i.methods = n;
        },
        function(t, e, r) {
            "use strict";
            e.schemaMixedSymbol = Symbol.for("mongoose:schema_mixed"), e.builtInMiddleware = Symbol.for("mongoose:built-in-middleware");
        },
        function(t191, e95, r77) {
            "use strict";
            /*!
 * Module requirements.
 */ var n48 = r77(159);
            /*!
 * @ignore
 */ /*!
 * @ignore
 */ function i(t) {
                return n48.cast()(t);
            }
            e95.castToNumber = i, e95.castArraysOfNumbers = function t(e, r) {
                e.forEach(function(n, o) {
                    Array.isArray(n) ? t(n, r) : e[o] = i.call(r, n);
                });
            };
        },
        function(t192, e96, r78) {
            "use strict";
            var n = r78(163);
            /*!
* returns discriminator by discriminatorMapping.value
*
* @param {Model} model
* @param {string} value
*/ t192.exports = function(t, e) {
                if (null == t) return null;
                for(var r = 0, i = Object.keys(t); r < i.length; r++){
                    var o = t[i[r]];
                    if (o.schema && o.schema.discriminatorMapping && n(o.schema.discriminatorMapping.value, e)) return o;
                }
                return null;
            };
        },
        function(t, e, r) {
            "use strict";
            /*!
 * Module exports.
 */ e.Array = r(166), e.Buffer = r(168), e.Document = e.Embedded = r(46), e.DocumentArray = r(27), e.Decimal128 = r(32), e.ObjectId = r(18), e.Map = r(170), e.Subdocument = r(90);
        },
        function(t193, e97, r79) {
            "use strict";
            r79.r(e97), (function(t194) {
                function n49(t195) {
                    return (n49 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t195);
                }
                r79.d(e97, "BSONError", function() {
                    return S3;
                }), r79.d(e97, "BSONRegExp", function() {
                    return vt;
                }), r79.d(e97, "BSONSymbol", function() {
                    return gt;
                }), r79.d(e97, "BSONTypeError", function() {
                    return O3;
                }), r79.d(e97, "BSON_BINARY_SUBTYPE_BYTE_ARRAY", function() {
                    return oe;
                }), r79.d(e97, "BSON_BINARY_SUBTYPE_COLUMN", function() {
                    return fe;
                }), r79.d(e97, "BSON_BINARY_SUBTYPE_DEFAULT", function() {
                    return ne;
                }), r79.d(e97, "BSON_BINARY_SUBTYPE_ENCRYPTED", function() {
                    return he;
                }), r79.d(e97, "BSON_BINARY_SUBTYPE_FUNCTION", function() {
                    return ie;
                }), r79.d(e97, "BSON_BINARY_SUBTYPE_MD5", function() {
                    return ue;
                }), r79.d(e97, "BSON_BINARY_SUBTYPE_USER_DEFINED", function() {
                    return ce;
                }), r79.d(e97, "BSON_BINARY_SUBTYPE_UUID", function() {
                    return se;
                }), r79.d(e97, "BSON_BINARY_SUBTYPE_UUID_NEW", function() {
                    return ae;
                }), r79.d(e97, "BSON_DATA_ARRAY", function() {
                    return Lt;
                }), r79.d(e97, "BSON_DATA_BINARY", function() {
                    return qt;
                }), r79.d(e97, "BSON_DATA_BOOLEAN", function() {
                    return zt;
                }), r79.d(e97, "BSON_DATA_CODE", function() {
                    return Wt;
                }), r79.d(e97, "BSON_DATA_CODE_W_SCOPE", function() {
                    return Yt;
                }), r79.d(e97, "BSON_DATA_DATE", function() {
                    return Vt;
                }), r79.d(e97, "BSON_DATA_DBPOINTER", function() {
                    return Zt;
                }), r79.d(e97, "BSON_DATA_DECIMAL128", function() {
                    return te;
                }), r79.d(e97, "BSON_DATA_INT", function() {
                    return Qt;
                }), r79.d(e97, "BSON_DATA_LONG", function() {
                    return Xt;
                }), r79.d(e97, "BSON_DATA_MAX_KEY", function() {
                    return re;
                }), r79.d(e97, "BSON_DATA_MIN_KEY", function() {
                    return ee;
                }), r79.d(e97, "BSON_DATA_NULL", function() {
                    return Kt;
                }), r79.d(e97, "BSON_DATA_NUMBER", function() {
                    return Nt;
                }), r79.d(e97, "BSON_DATA_OBJECT", function() {
                    return Ct;
                }), r79.d(e97, "BSON_DATA_OID", function() {
                    return Ft;
                }), r79.d(e97, "BSON_DATA_REGEXP", function() {
                    return Ht;
                }), r79.d(e97, "BSON_DATA_STRING", function() {
                    return Dt;
                }), r79.d(e97, "BSON_DATA_SYMBOL", function() {
                    return Jt;
                }), r79.d(e97, "BSON_DATA_TIMESTAMP", function() {
                    return Gt;
                }), r79.d(e97, "BSON_DATA_UNDEFINED", function() {
                    return Ut;
                }), r79.d(e97, "BSON_INT32_MAX", function() {
                    return $t;
                }), r79.d(e97, "BSON_INT32_MIN", function() {
                    return Pt;
                }), r79.d(e97, "BSON_INT64_MAX", function() {
                    return Rt;
                }), r79.d(e97, "BSON_INT64_MIN", function() {
                    return Bt;
                }), r79.d(e97, "Binary", function() {
                    return K;
                }), r79.d(e97, "Code", function() {
                    return H;
                }), r79.d(e97, "DBRef", function() {
                    return W;
                }), r79.d(e97, "Decimal128", function() {
                    return ht;
                }), r79.d(e97, "Double", function() {
                    return ft;
                }), r79.d(e97, "EJSON", function() {
                    return Et;
                }), r79.d(e97, "Int32", function() {
                    return ct;
                }), r79.d(e97, "Long", function() {
                    return G;
                }), r79.d(e97, "LongWithoutOverridesClass", function() {
                    return wt1;
                }), r79.d(e97, "Map", function() {
                    return xt;
                }), r79.d(e97, "MaxKey", function() {
                    return lt;
                }), r79.d(e97, "MinKey", function() {
                    return dt;
                }), r79.d(e97, "ObjectID", function() {
                    return bt;
                }), r79.d(e97, "ObjectId", function() {
                    return bt;
                }), r79.d(e97, "Timestamp", function() {
                    return _t;
                }), r79.d(e97, "UUID", function() {
                    return V2;
                }), r79.d(e97, "calculateObjectSize", function() {
                    return Qe;
                }), r79.d(e97, "deserialize", function() {
                    return Ye;
                }), r79.d(e97, "deserializeStream", function() {
                    return Ge;
                }), r79.d(e97, "serialize", function() {
                    return We;
                }), r79.d(e97, "serializeWithBufferAndIndex", function() {
                    return Je;
                }), r79.d(e97, "setInternalBufferSize", function() {
                    return Ze;
                });
                for(var i31 = function(t) {
                    var e = d6(t), r = e[0], n = e[1];
                    return 3 * (r + n) / 4 - n;
                }, o22 = function(t) {
                    var e98, r80, n = d6(t), i = n[0], o = n[1], s = new h14(function(t, e, r) {
                        return 3 * (e + r) / 4 - r;
                    }(0, i, o)), a = 0, f = o > 0 ? i - 4 : i;
                    for(r80 = 0; r80 < f; r80 += 4)e98 = u19[t.charCodeAt(r80)] << 18 | u19[t.charCodeAt(r80 + 1)] << 12 | u19[t.charCodeAt(r80 + 2)] << 6 | u19[t.charCodeAt(r80 + 3)], s[a++] = e98 >> 16 & 255, s[a++] = e98 >> 8 & 255, s[a++] = 255 & e98;
                    2 === o && (e98 = u19[t.charCodeAt(r80)] << 2 | u19[t.charCodeAt(r80 + 1)] >> 4, s[a++] = 255 & e98);
                    1 === o && (e98 = u19[t.charCodeAt(r80)] << 10 | u19[t.charCodeAt(r80 + 1)] << 4 | u19[t.charCodeAt(r80 + 2)] >> 2, s[a++] = e98 >> 8 & 255, s[a++] = 255 & e98);
                    return s;
                }, s18 = function(t) {
                    for(var e, r = t.length, n = r % 3, i = [], o = 0, s = r - n; o < s; o += 16383)i.push(p5(t, o, o + 16383 > s ? s : o + 16383));
                    1 === n ? (e = t[r - 1], i.push(a19[e >> 2] + a19[e << 4 & 63] + "==")) : 2 === n && (e = (t[r - 2] << 8) + t[r - 1], i.push(a19[e >> 10] + a19[e >> 4 & 63] + a19[e << 2 & 63] + "="));
                    return i.join("");
                }, a19 = [], u19 = [], h14 = "undefined" != typeof Uint8Array ? Uint8Array : Array, f16 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", c12 = 0, l12 = f16.length; c12 < l12; ++c12)a19[c12] = f16[c12], u19[f16.charCodeAt(c12)] = c12;
                function d6(t) {
                    var e = t.length;
                    if (e % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                    var r = t.indexOf("=");
                    return -1 === r && (r = e), [
                        r,
                        r === e ? 0 : 4 - r % 4
                    ];
                }
                function p5(t, e, r) {
                    for(var n, i, o = [], s = e; s < r; s += 3)n = (t[s] << 16 & 16711680) + (t[s + 1] << 8 & 65280) + (255 & t[s + 2]), o.push(a19[(i = n) >> 18 & 63] + a19[i >> 12 & 63] + a19[i >> 6 & 63] + a19[63 & i]);
                    return o.join("");
                }
                u19["-".charCodeAt(0)] = 62, u19["_".charCodeAt(0)] = 63;
                var y4 = {
                    byteLength: i31,
                    toByteArray: o22,
                    fromByteArray: s18
                }, m4 = function(t, e, r, n, i) {
                    var o, s, a = 8 * i - n - 1, u = (1 << a) - 1, h = u >> 1, f = -7, c = r ? i - 1 : 0, l = r ? -1 : 1, d = t[e + c];
                    for(c += l, o = d & (1 << -f) - 1, d >>= -f, f += a; f > 0; o = 256 * o + t[e + c], c += l, f -= 8);
                    for(s = o & (1 << -f) - 1, o >>= -f, f += n; f > 0; s = 256 * s + t[e + c], c += l, f -= 8);
                    if (0 === o) o = 1 - h;
                    else {
                        if (o === u) return s ? NaN : 1 / 0 * (d ? -1 : 1);
                        s += Math.pow(2, n), o -= h;
                    }
                    return (d ? -1 : 1) * s * Math.pow(2, o - n);
                }, b4 = function(t, e, r, n, i, o) {
                    var s, a, u, h = 8 * o - i - 1, f = (1 << h) - 1, c = f >> 1, l = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = n ? 0 : o - 1, p = n ? 1 : -1, y = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;
                    for(e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (a = isNaN(e) ? 1 : 0, s = f) : (s = Math.floor(Math.log(e) / Math.LN2), e * (u = Math.pow(2, -s)) < 1 && (s--, u *= 2), (e += s + c >= 1 ? l / u : l * Math.pow(2, 1 - c)) * u >= 2 && (s++, u /= 2), s + c >= f ? (a = 0, s = f) : s + c >= 1 ? (a = (e * u - 1) * Math.pow(2, i), s += c) : (a = e * Math.pow(2, c - 1) * Math.pow(2, i), s = 0)); i >= 8; t[r + d] = 255 & a, d += p, a /= 256, i -= 8);
                    for(s = s << i | a, h += i; h > 0; t[r + d] = 255 & s, d += p, s /= 256, h -= 8);
                    t[r + d - p] |= 128 * y;
                }, v4 = function(t, e) {
                    return t(e = {
                        exports: {
                        }
                    }, e.exports), e.exports;
                }(function(t196, e99) {
                    var r81 = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
                    e99.Buffer = i32, e99.SlowBuffer = function(t) {
                        +t != t && (t = 0);
                        return i32.alloc(+t);
                    }, e99.INSPECT_MAX_BYTES = 50;
                    function n50(t) {
                        if (t > 2147483647) throw new RangeError('The value "' + t + '" is invalid for option "size"');
                        var e = new Uint8Array(t);
                        return Object.setPrototypeOf(e, i32.prototype), e;
                    }
                    function i32(t, e, r) {
                        if ("number" == typeof t) {
                            if ("string" == typeof e) throw new TypeError('The "string" argument must be of type string. Received type number');
                            return a20(t);
                        }
                        return o23(t, e, r);
                    }
                    function o23(t197, e100, r82) {
                        if ("string" == typeof t197) return (function(t, e) {
                            "string" == typeof e && "" !== e || (e = "utf8");
                            if (!i32.isEncoding(e)) throw new TypeError("Unknown encoding: " + e);
                            var r = 0 | c13(t, e), o = n50(r), s = o.write(t, e);
                            s !== r && (o = o.slice(0, s));
                            return o;
                        })(t197, e100);
                        if (ArrayBuffer.isView(t197)) return (function(t) {
                            if (L(t, Uint8Array)) {
                                var e = new Uint8Array(t);
                                return h15(e.buffer, e.byteOffset, e.byteLength);
                            }
                            return u20(t);
                        })(t197);
                        if (null == t197) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + babelHelpers.typeof(t197));
                        if (L(t197, ArrayBuffer) || t197 && L(t197.buffer, ArrayBuffer)) return h15(t197, e100, r82);
                        if ("undefined" != typeof SharedArrayBuffer && (L(t197, SharedArrayBuffer) || t197 && L(t197.buffer, SharedArrayBuffer))) return h15(t197, e100, r82);
                        if ("number" == typeof t197) throw new TypeError('The "value" argument must not be of type number. Received type number');
                        var o24 = t197.valueOf && t197.valueOf();
                        if (null != o24 && o24 !== t197) return i32.from(o24, e100, r82);
                        var s20 = function(t) {
                            if (i32.isBuffer(t)) {
                                var e = 0 | f17(t.length), r = n50(e);
                                return 0 === r.length || t.copy(r, 0, 0, e), r;
                            }
                            if (void 0 !== t.length) return "number" != typeof t.length || q(t.length) ? n50(0) : u20(t);
                            if ("Buffer" === t.type && Array.isArray(t.data)) return u20(t.data);
                        }(t197);
                        if (s20) return s20;
                        if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t197[Symbol.toPrimitive]) return i32.from(t197[Symbol.toPrimitive]("string"), e100, r82);
                        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + babelHelpers.typeof(t197));
                    }
                    function s19(t) {
                        if ("number" != typeof t) throw new TypeError('"size" argument must be of type number');
                        if (t < 0) throw new RangeError('The value "' + t + '" is invalid for option "size"');
                    }
                    function a20(t) {
                        return s19(t), n50(t < 0 ? 0 : 0 | f17(t));
                    }
                    function u20(t) {
                        for(var e = t.length < 0 ? 0 : 0 | f17(t.length), r = n50(e), i = 0; i < e; i += 1)r[i] = 255 & t[i];
                        return r;
                    }
                    function h15(t, e, r) {
                        if (e < 0 || t.byteLength < e) throw new RangeError('"offset" is outside of buffer bounds');
                        if (t.byteLength < e + (r || 0)) throw new RangeError('"length" is outside of buffer bounds');
                        var n;
                        return n = void 0 === e && void 0 === r ? new Uint8Array(t) : void 0 === r ? new Uint8Array(t, e) : new Uint8Array(t, e, r), Object.setPrototypeOf(n, i32.prototype), n;
                    }
                    function f17(t) {
                        if (t >= 2147483647) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + 2147483647..toString(16) + " bytes");
                        return 0 | t;
                    }
                    function c13(t, e) {
                        if (i32.isBuffer(t)) return t.length;
                        if (ArrayBuffer.isView(t) || L(t, ArrayBuffer)) return t.byteLength;
                        if ("string" != typeof t) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + babelHelpers.typeof(t));
                        var r = t.length, n = arguments.length > 2 && !0 === arguments[2];
                        if (!n && 0 === r) return 0;
                        for(var o = !1;;)switch(e){
                            case "ascii":
                            case "latin1":
                            case "binary":
                                return r;
                            case "utf8":
                            case "utf-8":
                                return N(t).length;
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return 2 * r;
                            case "hex":
                                return r >>> 1;
                            case "base64":
                                return D(t).length;
                            default:
                                if (o) return n ? -1 : N(t).length;
                                e = ("" + e).toLowerCase(), o = !0;
                        }
                    }
                    function l13(t, e, r) {
                        var n = !1;
                        if ((void 0 === e || e < 0) && (e = 0), e > this.length) return "";
                        if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return "";
                        if ((r >>>= 0) <= (e >>>= 0)) return "";
                        for(t || (t = "utf8");;)switch(t){
                            case "hex":
                                return k(this, e, r);
                            case "utf8":
                            case "utf-8":
                                return A(this, e, r);
                            case "ascii":
                                return E(this, e, r);
                            case "latin1":
                            case "binary":
                                return x(this, e, r);
                            case "base64":
                                return O(this, e, r);
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return j(this, e, r);
                            default:
                                if (n) throw new TypeError("Unknown encoding: " + t);
                                t = (t + "").toLowerCase(), n = !0;
                        }
                    }
                    function d(t, e, r) {
                        var n = t[e];
                        t[e] = t[r], t[r] = n;
                    }
                    function p(t, e, r, n, o) {
                        if (0 === t.length) return -1;
                        if ("string" == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), q(r = +r) && (r = o ? 0 : t.length - 1), r < 0 && (r = t.length + r), r >= t.length) {
                            if (o) return -1;
                            r = t.length - 1;
                        } else if (r < 0) {
                            if (!o) return -1;
                            r = 0;
                        }
                        if ("string" == typeof e && (e = i32.from(e, n)), i32.isBuffer(e)) return 0 === e.length ? -1 : v(t, e, r, n, o);
                        if ("number" == typeof e) return e &= 255, "function" == typeof Uint8Array.prototype.indexOf ? o ? Uint8Array.prototype.indexOf.call(t, e, r) : Uint8Array.prototype.lastIndexOf.call(t, e, r) : v(t, [
                            e
                        ], r, n, o);
                        throw new TypeError("val must be string, number or Buffer");
                    }
                    function v(t198, e101, r, n, i) {
                        var o, s = 1, a = t198.length, u = e101.length;
                        if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                            if (t198.length < 2 || e101.length < 2) return -1;
                            s = 2, a /= 2, u /= 2, r /= 2;
                        }
                        function h(t, e) {
                            return 1 === s ? t[e] : t.readUInt16BE(e * s);
                        }
                        if (i) {
                            var f = -1;
                            for(o = r; o < a; o++)if (h(t198, o) === h(e101, -1 === f ? 0 : o - f)) {
                                if (-1 === f && (f = o), o - f + 1 === u) return f * s;
                            } else -1 !== f && (o -= o - f), f = -1;
                        } else for(r + u > a && (r = a - u), o = r; o >= 0; o--){
                            for(var c = !0, l = 0; l < u; l++)if (h(t198, o + l) !== h(e101, l)) {
                                c = !1;
                                break;
                            }
                            if (c) return o;
                        }
                        return -1;
                    }
                    function g(t, e, r, n) {
                        r = Number(r) || 0;
                        var i = t.length - r;
                        n ? (n = Number(n)) > i && (n = i) : n = i;
                        var o = e.length;
                        n > o / 2 && (n = o / 2);
                        for(var s = 0; s < n; ++s){
                            var a = parseInt(e.substr(2 * s, 2), 16);
                            if (q(a)) return s;
                            t[r + s] = a;
                        }
                        return s;
                    }
                    function w(t, e, r, n) {
                        return C(N(e, t.length - r), t, r, n);
                    }
                    function _(t199, e102, r83, n) {
                        return C(function(t) {
                            for(var e = [], r = 0; r < t.length; ++r)e.push(255 & t.charCodeAt(r));
                            return e;
                        }(e102), t199, r83, n);
                    }
                    function M(t, e, r, n) {
                        return C(D(e), t, r, n);
                    }
                    function S(t200, e103, r84, n51) {
                        return C(function(t, e) {
                            for(var r, n, i, o = [], s = 0; s < t.length && !((e -= 2) < 0); ++s)r = t.charCodeAt(s), n = r >> 8, i = r % 256, o.push(i), o.push(n);
                            return o;
                        }(e103, t200.length - r84), t200, r84, n51);
                    }
                    function O(t, e, r) {
                        return 0 === e && r === t.length ? y4.fromByteArray(t) : y4.fromByteArray(t.slice(e, r));
                    }
                    function A(t201, e104, r85) {
                        r85 = Math.min(t201.length, r85);
                        for(var n52 = [], i = e104; i < r85;){
                            var o, s, a, u, h = t201[i], f = null, c = h > 239 ? 4 : h > 223 ? 3 : h > 191 ? 2 : 1;
                            if (i + c <= r85) switch(c){
                                case 1:
                                    h < 128 && (f = h);
                                    break;
                                case 2:
                                    128 == (192 & (o = t201[i + 1])) && (u = (31 & h) << 6 | 63 & o) > 127 && (f = u);
                                    break;
                                case 3:
                                    o = t201[i + 1], s = t201[i + 2], 128 == (192 & o) && 128 == (192 & s) && (u = (15 & h) << 12 | (63 & o) << 6 | 63 & s) > 2047 && (u < 55296 || u > 57343) && (f = u);
                                    break;
                                case 4:
                                    o = t201[i + 1], s = t201[i + 2], a = t201[i + 3], 128 == (192 & o) && 128 == (192 & s) && 128 == (192 & a) && (u = (15 & h) << 18 | (63 & o) << 12 | (63 & s) << 6 | 63 & a) > 65535 && u < 1114112 && (f = u);
                            }
                            null === f ? (f = 65533, c = 1) : f > 65535 && (f -= 65536, n52.push(f >>> 10 & 1023 | 55296), f = 56320 | 1023 & f), n52.push(f), i += c;
                        }
                        return (function(t) {
                            var e = t.length;
                            if (e <= 4096) return String.fromCharCode.apply(String, t);
                            var r = "", n = 0;
                            for(; n < e;)r += String.fromCharCode.apply(String, t.slice(n, n += 4096));
                            return r;
                        })(n52);
                    }
                    e99.kMaxLength = 2147483647, i32.TYPED_ARRAY_SUPPORT = (function() {
                        try {
                            var t = new Uint8Array(1), e = {
                                foo: function() {
                                    return 42;
                                }
                            };
                            return Object.setPrototypeOf(e, Uint8Array.prototype), Object.setPrototypeOf(t, e), 42 === t.foo();
                        } catch (t) {
                            return !1;
                        }
                    })(), i32.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(i32.prototype, "parent", {
                        enumerable: !0,
                        get: function() {
                            if (i32.isBuffer(this)) return this.buffer;
                        }
                    }), Object.defineProperty(i32.prototype, "offset", {
                        enumerable: !0,
                        get: function() {
                            if (i32.isBuffer(this)) return this.byteOffset;
                        }
                    }), i32.poolSize = 8192, i32.from = function(t, e, r) {
                        return o23(t, e, r);
                    }, Object.setPrototypeOf(i32.prototype, Uint8Array.prototype), Object.setPrototypeOf(i32, Uint8Array), i32.alloc = function(t202, e105, r86) {
                        return (function(t, e, r) {
                            return s19(t), t <= 0 ? n50(t) : void 0 !== e ? "string" == typeof r ? n50(t).fill(e, r) : n50(t).fill(e) : n50(t);
                        })(t202, e105, r86);
                    }, i32.allocUnsafe = function(t) {
                        return a20(t);
                    }, i32.allocUnsafeSlow = function(t) {
                        return a20(t);
                    }, i32.isBuffer = function(t) {
                        return null != t && !0 === t._isBuffer && t !== i32.prototype;
                    }, i32.compare = function(t, e) {
                        if (L(t, Uint8Array) && (t = i32.from(t, t.offset, t.byteLength)), L(e, Uint8Array) && (e = i32.from(e, e.offset, e.byteLength)), !i32.isBuffer(t) || !i32.isBuffer(e)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                        if (t === e) return 0;
                        for(var r = t.length, n = e.length, o = 0, s = Math.min(r, n); o < s; ++o)if (t[o] !== e[o]) {
                            r = t[o], n = e[o];
                            break;
                        }
                        return r < n ? -1 : n < r ? 1 : 0;
                    }, i32.isEncoding = function(t) {
                        switch(String(t).toLowerCase()){
                            case "hex":
                            case "utf8":
                            case "utf-8":
                            case "ascii":
                            case "latin1":
                            case "binary":
                            case "base64":
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return !0;
                            default:
                                return !1;
                        }
                    }, i32.concat = function(t, e) {
                        if (!Array.isArray(t)) throw new TypeError('"list" argument must be an Array of Buffers');
                        if (0 === t.length) return i32.alloc(0);
                        var r;
                        if (void 0 === e) for(e = 0, r = 0; r < t.length; ++r)e += t[r].length;
                        var n = i32.allocUnsafe(e), o = 0;
                        for(r = 0; r < t.length; ++r){
                            var s = t[r];
                            if (L(s, Uint8Array)) o + s.length > n.length ? i32.from(s).copy(n, o) : Uint8Array.prototype.set.call(n, s, o);
                            else {
                                if (!i32.isBuffer(s)) throw new TypeError('"list" argument must be an Array of Buffers');
                                s.copy(n, o);
                            }
                            o += s.length;
                        }
                        return n;
                    }, i32.byteLength = c13, i32.prototype._isBuffer = !0, i32.prototype.swap16 = function() {
                        var t = this.length;
                        if (t % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                        for(var e = 0; e < t; e += 2)d(this, e, e + 1);
                        return this;
                    }, i32.prototype.swap32 = function() {
                        var t = this.length;
                        if (t % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                        for(var e = 0; e < t; e += 4)d(this, e, e + 3), d(this, e + 1, e + 2);
                        return this;
                    }, i32.prototype.swap64 = function() {
                        var t = this.length;
                        if (t % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                        for(var e = 0; e < t; e += 8)d(this, e, e + 7), d(this, e + 1, e + 6), d(this, e + 2, e + 5), d(this, e + 3, e + 4);
                        return this;
                    }, i32.prototype.toString = function() {
                        var t = this.length;
                        return 0 === t ? "" : 0 === arguments.length ? A(this, 0, t) : l13.apply(this, arguments);
                    }, i32.prototype.toLocaleString = i32.prototype.toString, i32.prototype.equals = function(t) {
                        if (!i32.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
                        return this === t || 0 === i32.compare(this, t);
                    }, i32.prototype.inspect = function() {
                        var t = "", r = e99.INSPECT_MAX_BYTES;
                        return t = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (t += " ... "), "<Buffer " + t + ">";
                    }, r81 && (i32.prototype[r81] = i32.prototype.inspect), i32.prototype.compare = function(t, e, r, n, o) {
                        if (L(t, Uint8Array) && (t = i32.from(t, t.offset, t.byteLength)), !i32.isBuffer(t)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + babelHelpers.typeof(t));
                        if (void 0 === e && (e = 0), void 0 === r && (r = t ? t.length : 0), void 0 === n && (n = 0), void 0 === o && (o = this.length), e < 0 || r > t.length || n < 0 || o > this.length) throw new RangeError("out of range index");
                        if (n >= o && e >= r) return 0;
                        if (n >= o) return -1;
                        if (e >= r) return 1;
                        if (this === t) return 0;
                        for(var s = (o >>>= 0) - (n >>>= 0), a = (r >>>= 0) - (e >>>= 0), u = Math.min(s, a), h = this.slice(n, o), f = t.slice(e, r), c = 0; c < u; ++c)if (h[c] !== f[c]) {
                            s = h[c], a = f[c];
                            break;
                        }
                        return s < a ? -1 : a < s ? 1 : 0;
                    }, i32.prototype.includes = function(t, e, r) {
                        return -1 !== this.indexOf(t, e, r);
                    }, i32.prototype.indexOf = function(t, e, r) {
                        return p(this, t, e, r, !0);
                    }, i32.prototype.lastIndexOf = function(t, e, r) {
                        return p(this, t, e, r, !1);
                    }, i32.prototype.write = function(t, e, r, n) {
                        if (void 0 === e) n = "utf8", r = this.length, e = 0;
                        else if (void 0 === r && "string" == typeof e) n = e, r = this.length, e = 0;
                        else {
                            if (!isFinite(e)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                            e >>>= 0, isFinite(r) ? (r >>>= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0);
                        }
                        var i = this.length - e;
                        if ((void 0 === r || r > i) && (r = i), t.length > 0 && (r < 0 || e < 0) || e > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                        n || (n = "utf8");
                        for(var o = !1;;)switch(n){
                            case "hex":
                                return g(this, t, e, r);
                            case "utf8":
                            case "utf-8":
                                return w(this, t, e, r);
                            case "ascii":
                            case "latin1":
                            case "binary":
                                return _(this, t, e, r);
                            case "base64":
                                return M(this, t, e, r);
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return S(this, t, e, r);
                            default:
                                if (o) throw new TypeError("Unknown encoding: " + n);
                                n = ("" + n).toLowerCase(), o = !0;
                        }
                    }, i32.prototype.toJSON = function() {
                        return {
                            type: "Buffer",
                            data: Array.prototype.slice.call(this._arr || this, 0)
                        };
                    };
                    function E(t, e, r) {
                        var n = "";
                        r = Math.min(t.length, r);
                        for(var i = e; i < r; ++i)n += String.fromCharCode(127 & t[i]);
                        return n;
                    }
                    function x(t, e, r) {
                        var n = "";
                        r = Math.min(t.length, r);
                        for(var i = e; i < r; ++i)n += String.fromCharCode(t[i]);
                        return n;
                    }
                    function k(t, e, r) {
                        var n = t.length;
                        (!e || e < 0) && (e = 0), (!r || r < 0 || r > n) && (r = n);
                        for(var i = "", o = e; o < r; ++o)i += U[t[o]];
                        return i;
                    }
                    function j(t, e, r) {
                        for(var n = t.slice(e, r), i = "", o = 0; o < n.length - 1; o += 2)i += String.fromCharCode(n[o] + 256 * n[o + 1]);
                        return i;
                    }
                    function $(t, e, r) {
                        if (t % 1 != 0 || t < 0) throw new RangeError("offset is not uint");
                        if (t + e > r) throw new RangeError("Trying to access beyond buffer length");
                    }
                    function P(t, e, r, n, o, s) {
                        if (!i32.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance');
                        if (e > o || e < s) throw new RangeError('"value" argument is out of bounds');
                        if (r + n > t.length) throw new RangeError("Index out of range");
                    }
                    function R(t, e, r, n, i, o) {
                        if (r + n > t.length) throw new RangeError("Index out of range");
                        if (r < 0) throw new RangeError("Index out of range");
                    }
                    function B(t, e, r, n, i) {
                        return e = +e, r >>>= 0, i || R(t, 0, r, 4), b4(t, e, r, n, 23, 4), r + 4;
                    }
                    function T(t, e, r, n, i) {
                        return e = +e, r >>>= 0, i || R(t, 0, r, 8), b4(t, e, r, n, 52, 8), r + 8;
                    }
                    i32.prototype.slice = function(t, e) {
                        var r = this.length;
                        (t = ~~t) < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r), (e = void 0 === e ? r : ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r), e < t && (e = t);
                        var n = this.subarray(t, e);
                        return Object.setPrototypeOf(n, i32.prototype), n;
                    }, i32.prototype.readUintLE = i32.prototype.readUIntLE = function(t, e, r) {
                        t >>>= 0, e >>>= 0, r || $(t, e, this.length);
                        for(var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);)n += this[t + o] * i;
                        return n;
                    }, i32.prototype.readUintBE = i32.prototype.readUIntBE = function(t, e, r) {
                        t >>>= 0, e >>>= 0, r || $(t, e, this.length);
                        for(var n = this[t + --e], i = 1; e > 0 && (i *= 256);)n += this[t + --e] * i;
                        return n;
                    }, i32.prototype.readUint8 = i32.prototype.readUInt8 = function(t, e) {
                        return t >>>= 0, e || $(t, 1, this.length), this[t];
                    }, i32.prototype.readUint16LE = i32.prototype.readUInt16LE = function(t, e) {
                        return t >>>= 0, e || $(t, 2, this.length), this[t] | this[t + 1] << 8;
                    }, i32.prototype.readUint16BE = i32.prototype.readUInt16BE = function(t, e) {
                        return t >>>= 0, e || $(t, 2, this.length), this[t] << 8 | this[t + 1];
                    }, i32.prototype.readUint32LE = i32.prototype.readUInt32LE = function(t, e) {
                        return t >>>= 0, e || $(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3];
                    }, i32.prototype.readUint32BE = i32.prototype.readUInt32BE = function(t, e) {
                        return t >>>= 0, e || $(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);
                    }, i32.prototype.readIntLE = function(t, e, r) {
                        t >>>= 0, e >>>= 0, r || $(t, e, this.length);
                        for(var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);)n += this[t + o] * i;
                        return n >= (i *= 128) && (n -= Math.pow(2, 8 * e)), n;
                    }, i32.prototype.readIntBE = function(t, e, r) {
                        t >>>= 0, e >>>= 0, r || $(t, e, this.length);
                        for(var n = e, i = 1, o = this[t + --n]; n > 0 && (i *= 256);)o += this[t + --n] * i;
                        return o >= (i *= 128) && (o -= Math.pow(2, 8 * e)), o;
                    }, i32.prototype.readInt8 = function(t, e) {
                        return t >>>= 0, e || $(t, 1, this.length), 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t];
                    }, i32.prototype.readInt16LE = function(t, e) {
                        t >>>= 0, e || $(t, 2, this.length);
                        var r = this[t] | this[t + 1] << 8;
                        return 32768 & r ? 4294901760 | r : r;
                    }, i32.prototype.readInt16BE = function(t, e) {
                        t >>>= 0, e || $(t, 2, this.length);
                        var r = this[t + 1] | this[t] << 8;
                        return 32768 & r ? 4294901760 | r : r;
                    }, i32.prototype.readInt32LE = function(t, e) {
                        return t >>>= 0, e || $(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;
                    }, i32.prototype.readInt32BE = function(t, e) {
                        return t >>>= 0, e || $(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];
                    }, i32.prototype.readFloatLE = function(t, e) {
                        return t >>>= 0, e || $(t, 4, this.length), m4(this, t, !0, 23, 4);
                    }, i32.prototype.readFloatBE = function(t, e) {
                        return t >>>= 0, e || $(t, 4, this.length), m4(this, t, !1, 23, 4);
                    }, i32.prototype.readDoubleLE = function(t, e) {
                        return t >>>= 0, e || $(t, 8, this.length), m4(this, t, !0, 52, 8);
                    }, i32.prototype.readDoubleBE = function(t, e) {
                        return t >>>= 0, e || $(t, 8, this.length), m4(this, t, !1, 52, 8);
                    }, i32.prototype.writeUintLE = i32.prototype.writeUIntLE = function(t, e, r, n) {
                        (t = +t, e >>>= 0, r >>>= 0, n) || P(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
                        var i = 1, o = 0;
                        for(this[e] = 255 & t; ++o < r && (i *= 256);)this[e + o] = t / i & 255;
                        return e + r;
                    }, i32.prototype.writeUintBE = i32.prototype.writeUIntBE = function(t, e, r, n) {
                        (t = +t, e >>>= 0, r >>>= 0, n) || P(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
                        var i = r - 1, o = 1;
                        for(this[e + i] = 255 & t; --i >= 0 && (o *= 256);)this[e + i] = t / o & 255;
                        return e + r;
                    }, i32.prototype.writeUint8 = i32.prototype.writeUInt8 = function(t, e, r) {
                        return t = +t, e >>>= 0, r || P(this, t, e, 1, 255, 0), this[e] = 255 & t, e + 1;
                    }, i32.prototype.writeUint16LE = i32.prototype.writeUInt16LE = function(t, e, r) {
                        return t = +t, e >>>= 0, r || P(this, t, e, 2, 65535, 0), this[e] = 255 & t, this[e + 1] = t >>> 8, e + 2;
                    }, i32.prototype.writeUint16BE = i32.prototype.writeUInt16BE = function(t, e, r) {
                        return t = +t, e >>>= 0, r || P(this, t, e, 2, 65535, 0), this[e] = t >>> 8, this[e + 1] = 255 & t, e + 2;
                    }, i32.prototype.writeUint32LE = i32.prototype.writeUInt32LE = function(t, e, r) {
                        return t = +t, e >>>= 0, r || P(this, t, e, 4, 4294967295, 0), this[e + 3] = t >>> 24, this[e + 2] = t >>> 16, this[e + 1] = t >>> 8, this[e] = 255 & t, e + 4;
                    }, i32.prototype.writeUint32BE = i32.prototype.writeUInt32BE = function(t, e, r) {
                        return t = +t, e >>>= 0, r || P(this, t, e, 4, 4294967295, 0), this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t, e + 4;
                    }, i32.prototype.writeIntLE = function(t, e, r, n) {
                        if (t = +t, e >>>= 0, !n) {
                            var i = Math.pow(2, 8 * r - 1);
                            P(this, t, e, r, i - 1, -i);
                        }
                        var o = 0, s = 1, a = 0;
                        for(this[e] = 255 & t; ++o < r && (s *= 256);)t < 0 && 0 === a && 0 !== this[e + o - 1] && (a = 1), this[e + o] = (t / s >> 0) - a & 255;
                        return e + r;
                    }, i32.prototype.writeIntBE = function(t, e, r, n) {
                        if (t = +t, e >>>= 0, !n) {
                            var i = Math.pow(2, 8 * r - 1);
                            P(this, t, e, r, i - 1, -i);
                        }
                        var o = r - 1, s = 1, a = 0;
                        for(this[e + o] = 255 & t; --o >= 0 && (s *= 256);)t < 0 && 0 === a && 0 !== this[e + o + 1] && (a = 1), this[e + o] = (t / s >> 0) - a & 255;
                        return e + r;
                    }, i32.prototype.writeInt8 = function(t, e, r) {
                        return t = +t, e >>>= 0, r || P(this, t, e, 1, 127, -128), t < 0 && (t = 255 + t + 1), this[e] = 255 & t, e + 1;
                    }, i32.prototype.writeInt16LE = function(t, e, r) {
                        return t = +t, e >>>= 0, r || P(this, t, e, 2, 32767, -32768), this[e] = 255 & t, this[e + 1] = t >>> 8, e + 2;
                    }, i32.prototype.writeInt16BE = function(t, e, r) {
                        return t = +t, e >>>= 0, r || P(this, t, e, 2, 32767, -32768), this[e] = t >>> 8, this[e + 1] = 255 & t, e + 2;
                    }, i32.prototype.writeInt32LE = function(t, e, r) {
                        return t = +t, e >>>= 0, r || P(this, t, e, 4, 2147483647, -2147483648), this[e] = 255 & t, this[e + 1] = t >>> 8, this[e + 2] = t >>> 16, this[e + 3] = t >>> 24, e + 4;
                    }, i32.prototype.writeInt32BE = function(t, e, r) {
                        return t = +t, e >>>= 0, r || P(this, t, e, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t, e + 4;
                    }, i32.prototype.writeFloatLE = function(t, e, r) {
                        return B(this, t, e, !0, r);
                    }, i32.prototype.writeFloatBE = function(t, e, r) {
                        return B(this, t, e, !1, r);
                    }, i32.prototype.writeDoubleLE = function(t, e, r) {
                        return T(this, t, e, !0, r);
                    }, i32.prototype.writeDoubleBE = function(t, e, r) {
                        return T(this, t, e, !1, r);
                    }, i32.prototype.copy = function(t, e, r, n) {
                        if (!i32.isBuffer(t)) throw new TypeError("argument should be a Buffer");
                        if (r || (r = 0), n || 0 === n || (n = this.length), e >= t.length && (e = t.length), e || (e = 0), n > 0 && n < r && (n = r), n === r) return 0;
                        if (0 === t.length || 0 === this.length) return 0;
                        if (e < 0) throw new RangeError("targetStart out of bounds");
                        if (r < 0 || r >= this.length) throw new RangeError("Index out of range");
                        if (n < 0) throw new RangeError("sourceEnd out of bounds");
                        n > this.length && (n = this.length), t.length - e < n - r && (n = t.length - e + r);
                        var o = n - r;
                        return this === t && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(e, r, n) : Uint8Array.prototype.set.call(t, this.subarray(r, n), e), o;
                    }, i32.prototype.fill = function(t, e, r, n) {
                        if ("string" == typeof t) {
                            if ("string" == typeof e ? (n = e, e = 0, r = this.length) : "string" == typeof r && (n = r, r = this.length), void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
                            if ("string" == typeof n && !i32.isEncoding(n)) throw new TypeError("Unknown encoding: " + n);
                            if (1 === t.length) {
                                var o = t.charCodeAt(0);
                                ("utf8" === n && o < 128 || "latin1" === n) && (t = o);
                            }
                        } else "number" == typeof t ? t &= 255 : "boolean" == typeof t && (t = Number(t));
                        if (e < 0 || this.length < e || this.length < r) throw new RangeError("Out of range index");
                        if (r <= e) return this;
                        var s;
                        if (e >>>= 0, r = void 0 === r ? this.length : r >>> 0, t || (t = 0), "number" == typeof t) for(s = e; s < r; ++s)this[s] = t;
                        else {
                            var a = i32.isBuffer(t) ? t : i32.from(t, n), u = a.length;
                            if (0 === u) throw new TypeError('The value "' + t + '" is invalid for argument "value"');
                            for(s = 0; s < r - e; ++s)this[s + e] = a[s % u];
                        }
                        return this;
                    };
                    var I = /[^+/0-9A-Za-z-_]/g;
                    function N(t, e) {
                        var r;
                        e = e || 1 / 0;
                        for(var n = t.length, i = null, o = [], s = 0; s < n; ++s){
                            if ((r = t.charCodeAt(s)) > 55295 && r < 57344) {
                                if (!i) {
                                    if (r > 56319) {
                                        (e -= 3) > -1 && o.push(239, 191, 189);
                                        continue;
                                    }
                                    if (s + 1 === n) {
                                        (e -= 3) > -1 && o.push(239, 191, 189);
                                        continue;
                                    }
                                    i = r;
                                    continue;
                                }
                                if (r < 56320) {
                                    (e -= 3) > -1 && o.push(239, 191, 189), i = r;
                                    continue;
                                }
                                r = 65536 + (i - 55296 << 10 | r - 56320);
                            } else i && (e -= 3) > -1 && o.push(239, 191, 189);
                            if (i = null, r < 128) {
                                if ((e -= 1) < 0) break;
                                o.push(r);
                            } else if (r < 2048) {
                                if ((e -= 2) < 0) break;
                                o.push(r >> 6 | 192, 63 & r | 128);
                            } else if (r < 65536) {
                                if ((e -= 3) < 0) break;
                                o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);
                            } else {
                                if (!(r < 1114112)) throw new Error("Invalid code point");
                                if ((e -= 4) < 0) break;
                                o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);
                            }
                        }
                        return o;
                    }
                    function D(t203) {
                        return y4.toByteArray(function(t) {
                            if ((t = (t = t.split("=")[0]).trim().replace(I, "")).length < 2) return "";
                            for(; t.length % 4 != 0;)t += "=";
                            return t;
                        }(t203));
                    }
                    function C(t, e, r, n) {
                        for(var i = 0; i < n && !(i + r >= e.length || i >= t.length); ++i)e[i + r] = t[i];
                        return i;
                    }
                    function L(t, e) {
                        return t instanceof e || null != t && null != t.constructor && null != t.constructor.name && t.constructor.name === e.name;
                    }
                    function q(t) {
                        return t != t;
                    }
                    var U = function() {
                        for(var t = new Array(256), e = 0; e < 16; ++e)for(var r = 16 * e, n = 0; n < 16; ++n)t[r + n] = "0123456789abcdef"[e] + "0123456789abcdef"[n];
                        return t;
                    }();
                }), g3 = v4.Buffer;
                /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ v4.SlowBuffer, v4.INSPECT_MAX_BYTES, v4.kMaxLength;
                /*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ var w3 = function(t204, e106) {
                    return (w3 = Object.setPrototypeOf || ({
                        __proto__: []
                    }) instanceof Array && function(t, e) {
                        t.__proto__ = e;
                    } || function(t, e) {
                        for(var r in e)e.hasOwnProperty(r) && (t[r] = e[r]);
                    })(t204, e106);
                };
                function _4(t, e) {
                    function r() {
                        this.constructor = t;
                    }
                    w3(t, e), t.prototype = null === e ? Object.create(e) : (r.prototype = e.prototype, new r);
                }
                var M3 = function() {
                    return (M3 = Object.assign || function(t) {
                        for(var e, r = 1, n = arguments.length; r < n; r++)for(var i in e = arguments[r])Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                        return t;
                    }).apply(this, arguments);
                }, S3 = function(t) {
                    function e(r) {
                        var n = t.call(this, r) || this;
                        return Object.setPrototypeOf(n, e.prototype), n;
                    }
                    return _4(e, t), Object.defineProperty(e.prototype, "name", {
                        get: function() {
                            return "BSONError";
                        },
                        enumerable: !1,
                        configurable: !0
                    }), e;
                }(Error), O3 = function(t) {
                    function e(r) {
                        var n = t.call(this, r) || this;
                        return Object.setPrototypeOf(n, e.prototype), n;
                    }
                    return _4(e, t), Object.defineProperty(e.prototype, "name", {
                        get: function() {
                            return "BSONTypeError";
                        },
                        enumerable: !1,
                        configurable: !0
                    }), e;
                }(TypeError);
                function A4(t) {
                    return t && t.Math == Math && t;
                }
                function E2() {
                    return A4("object" === ("undefined" == typeof globalThis ? "undefined" : n49(globalThis)) && globalThis) || A4("object" === ("undefined" == typeof window ? "undefined" : n49(window)) && window) || A4("object" === ("undefined" == typeof self ? "undefined" : n49(self)) && self) || A4("object" === (void 0 === t194 ? "undefined" : n49(t194)) && t194) || Function("return this")();
                }
                function x2(t) {
                    return t.toString().replace("function(", "function (");
                }
                var k2 = function(t) {
                    var e, r = "object" === n49((e = E2()).navigator) && "ReactNative" === e.navigator.product ? "BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values." : "BSON: No cryptographic implementation for random bytes present, falling back to a less secure implementation.";
                    console.warn(r);
                    for(var i = g3.alloc(t), o = 0; o < t; ++o)i[o] = Math.floor(256 * Math.random());
                    return i;
                }, j2 = function() {
                    if ("undefined" != typeof window) {
                        var e = window.crypto || window.msCrypto;
                        if (e && e.getRandomValues) return function(t) {
                            return e.getRandomValues(g3.alloc(t));
                        };
                    }
                    if (void 0 !== t194 && t194.crypto && t194.crypto.getRandomValues) return function(e) {
                        return t194.crypto.getRandomValues(g3.alloc(e));
                    };
                    var n;
                    try {
                        n = r79(181).randomBytes;
                    } catch (t) {
                    }
                    return n || k2;
                }();
                function $2(t) {
                    return [
                        "[object ArrayBuffer]",
                        "[object SharedArrayBuffer]"
                    ].includes(Object.prototype.toString.call(t));
                }
                function P2(t) {
                    return "[object Uint8Array]" === Object.prototype.toString.call(t);
                }
                function R2(t) {
                    return "[object BigInt64Array]" === Object.prototype.toString.call(t);
                }
                function B2(t) {
                    return "[object BigUint64Array]" === Object.prototype.toString.call(t);
                }
                function T2(t) {
                    return "[object RegExp]" === Object.prototype.toString.call(t);
                }
                function I2(t) {
                    return N2(t) && "[object Date]" === Object.prototype.toString.call(t);
                }
                function N2(t) {
                    return "object" === n49(t) && null !== t;
                }
                function D1(t, e) {
                    var r = !1;
                    return function() {
                        for(var n = [], i = 0; i < arguments.length; i++)n[i] = arguments[i];
                        return r || (console.warn(e), r = !0), t.apply(this, n);
                    };
                }
                function C2(t) {
                    if (ArrayBuffer.isView(t)) return g3.from(t.buffer, t.byteOffset, t.byteLength);
                    if ($2(t)) return g3.from(t);
                    throw new O3("Must use either Buffer or TypedArray");
                }
                var L1 = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|[0-9a-f]{12}4[0-9a-f]{3}[89ab][0-9a-f]{15})$/i, q2 = function(t) {
                    return "string" == typeof t && L1.test(t);
                }, U1 = function(t) {
                    if (!q2(t)) throw new O3('UUID string representations must be a 32 or 36 character hex string (dashes excluded/included). Format: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" or "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx".');
                    var e = t.replace(/-/g, "");
                    return g3.from(e, "hex");
                }, F2 = function(t, e) {
                    return void 0 === e && (e = !0), e ? t.toString("hex", 0, 4) + "-" + t.toString("hex", 4, 6) + "-" + t.toString("hex", 6, 8) + "-" + t.toString("hex", 8, 10) + "-" + t.toString("hex", 10, 16) : t.toString("hex");
                }, z = Symbol("id"), V2 = function() {
                    function t205(e) {
                        if (void 0 === e) this.id = t205.generate();
                        else if (e instanceof t205) this[z] = g3.from(e.id), this.__id = e.__id;
                        else if (ArrayBuffer.isView(e) && 16 === e.byteLength) this.id = C2(e);
                        else {
                            if ("string" != typeof e) throw new O3("Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).");
                            this.id = U1(e);
                        }
                    }
                    return Object.defineProperty(t205.prototype, "id", {
                        get: function() {
                            return this[z];
                        },
                        set: function(e) {
                            this[z] = e, t205.cacheHexString && (this.__id = F2(e));
                        },
                        enumerable: !1,
                        configurable: !0
                    }), t205.prototype.toHexString = function(e) {
                        if (void 0 === e && (e = !0), t205.cacheHexString && this.__id) return this.__id;
                        var r = F2(this.id, e);
                        return t205.cacheHexString && (this.__id = r), r;
                    }, t205.prototype.toString = function(t) {
                        return t ? this.id.toString(t) : this.toHexString();
                    }, t205.prototype.toJSON = function() {
                        return this.toHexString();
                    }, t205.prototype.equals = function(e) {
                        if (!e) return !1;
                        if (e instanceof t205) return e.id.equals(this.id);
                        try {
                            return new t205(e).id.equals(this.id);
                        } catch (t) {
                            return !1;
                        }
                    }, t205.prototype.toBinary = function() {
                        return new K(this.id, K.SUBTYPE_UUID);
                    }, t205.generate = function() {
                        var t = j2(16);
                        return t[6] = 15 & t[6] | 64, t[8] = 63 & t[8] | 128, g3.from(t);
                    }, t205.isValid = function(e) {
                        if (!e) return !1;
                        if (e instanceof t205) return !0;
                        if ("string" == typeof e) return q2(e);
                        if (P2(e)) {
                            if (16 !== e.length) return !1;
                            try {
                                return parseInt(e[6].toString(16)[0], 10) === K.SUBTYPE_UUID;
                            } catch (t) {
                                return !1;
                            }
                        }
                        return !1;
                    }, t205.createFromHexString = function(e) {
                        return new t205(U1(e));
                    }, t205.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, t205.prototype.inspect = function() {
                        return 'new UUID("' + this.toHexString() + '")';
                    }, t205;
                }();
                Object.defineProperty(V2.prototype, "_bsontype", {
                    value: "UUID"
                });
                var K = function() {
                    function t206(e, r) {
                        if (!(this instanceof t206)) return new t206(e, r);
                        if (!(null == e || "string" == typeof e || ArrayBuffer.isView(e) || e instanceof ArrayBuffer || Array.isArray(e))) throw new O3("Binary can only be constructed from string, Buffer, TypedArray, or Array<number>");
                        this.sub_type = null != r ? r : t206.BSON_BINARY_SUBTYPE_DEFAULT, null == e ? (this.buffer = g3.alloc(t206.BUFFER_SIZE), this.position = 0) : ("string" == typeof e ? this.buffer = g3.from(e, "binary") : Array.isArray(e) ? this.buffer = g3.from(e) : this.buffer = C2(e), this.position = this.buffer.byteLength);
                    }
                    return t206.prototype.put = function(e) {
                        if ("string" == typeof e && 1 !== e.length) throw new O3("only accepts single character String");
                        if ("number" != typeof e && 1 !== e.length) throw new O3("only accepts single character Uint8Array or Array");
                        var r;
                        if ((r = "string" == typeof e ? e.charCodeAt(0) : "number" == typeof e ? e : e[0]) < 0 || r > 255) throw new O3("only accepts number in a valid unsigned byte range 0-255");
                        if (this.buffer.length > this.position) this.buffer[this.position++] = r;
                        else {
                            var n = g3.alloc(t206.BUFFER_SIZE + this.buffer.length);
                            this.buffer.copy(n, 0, 0, this.buffer.length), this.buffer = n, this.buffer[this.position++] = r;
                        }
                    }, t206.prototype.write = function(t, e) {
                        if (e = "number" == typeof e ? e : this.position, this.buffer.length < e + t.length) {
                            var r = g3.alloc(this.buffer.length + t.length);
                            this.buffer.copy(r, 0, 0, this.buffer.length), this.buffer = r;
                        }
                        ArrayBuffer.isView(t) ? (this.buffer.set(C2(t), e), this.position = e + t.byteLength > this.position ? e + t.length : this.position) : "string" == typeof t && (this.buffer.write(t, e, t.length, "binary"), this.position = e + t.length > this.position ? e + t.length : this.position);
                    }, t206.prototype.read = function(t, e) {
                        return e = e && e > 0 ? e : this.position, this.buffer.slice(t, t + e);
                    }, t206.prototype.value = function(t) {
                        return (t = !!t) && this.buffer.length === this.position ? this.buffer : t ? this.buffer.slice(0, this.position) : this.buffer.toString("binary", 0, this.position);
                    }, t206.prototype.length = function() {
                        return this.position;
                    }, t206.prototype.toJSON = function() {
                        return this.buffer.toString("base64");
                    }, t206.prototype.toString = function(t) {
                        return this.buffer.toString(t);
                    }, t206.prototype.toExtendedJSON = function(t) {
                        t = t || {
                        };
                        var e = this.buffer.toString("base64"), r = Number(this.sub_type).toString(16);
                        return t.legacy ? {
                            $binary: e,
                            $type: 1 === r.length ? "0" + r : r
                        } : {
                            $binary: {
                                base64: e,
                                subType: 1 === r.length ? "0" + r : r
                            }
                        };
                    }, t206.prototype.toUUID = function() {
                        if (this.sub_type === t206.SUBTYPE_UUID) return new V2(this.buffer.slice(0, this.position));
                        throw new S3('Binary sub_type "' + this.sub_type + '" is not supported for converting to UUID. Only "' + t206.SUBTYPE_UUID + '" is currently supported.');
                    }, t206.fromExtendedJSON = function(e, r) {
                        var n, i;
                        if (r = r || {
                        }, "$binary" in e ? r.legacy && "string" == typeof e.$binary && "$type" in e ? (i = e.$type ? parseInt(e.$type, 16) : 0, n = g3.from(e.$binary, "base64")) : "string" != typeof e.$binary && (i = e.$binary.subType ? parseInt(e.$binary.subType, 16) : 0, n = g3.from(e.$binary.base64, "base64")) : "$uuid" in e && (i = 4, n = U1(e.$uuid)), !n) throw new O3("Unexpected Binary Extended JSON format " + JSON.stringify(e));
                        return new t206(n, i);
                    }, t206.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, t206.prototype.inspect = function() {
                        return 'new Binary(Buffer.from("' + this.value(!0).toString("hex") + '", "hex"), ' + this.sub_type + ")";
                    }, t206.BSON_BINARY_SUBTYPE_DEFAULT = 0, t206.BUFFER_SIZE = 256, t206.SUBTYPE_DEFAULT = 0, t206.SUBTYPE_FUNCTION = 1, t206.SUBTYPE_BYTE_ARRAY = 2, t206.SUBTYPE_UUID_OLD = 3, t206.SUBTYPE_UUID = 4, t206.SUBTYPE_MD5 = 5, t206.SUBTYPE_ENCRYPTED = 6, t206.SUBTYPE_COLUMN = 7, t206.SUBTYPE_USER_DEFINED = 128, t206;
                }();
                Object.defineProperty(K.prototype, "_bsontype", {
                    value: "Binary"
                });
                var H = function() {
                    function t207(e, r) {
                        if (!(this instanceof t207)) return new t207(e, r);
                        this.code = e, this.scope = r;
                    }
                    return t207.prototype.toJSON = function() {
                        return {
                            code: this.code,
                            scope: this.scope
                        };
                    }, t207.prototype.toExtendedJSON = function() {
                        return this.scope ? {
                            $code: this.code,
                            $scope: this.scope
                        } : {
                            $code: this.code
                        };
                    }, t207.fromExtendedJSON = function(e) {
                        return new t207(e.$code, e.$scope);
                    }, t207.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, t207.prototype.inspect = function() {
                        var t = this.toJSON();
                        return 'new Code("' + t.code + '"' + (t.scope ? ", " + JSON.stringify(t.scope) : "") + ")";
                    }, t207;
                }();
                function Z(t) {
                    return N2(t) && null != t.$id && "string" == typeof t.$ref && (null == t.$db || "string" == typeof t.$db);
                }
                Object.defineProperty(H.prototype, "_bsontype", {
                    value: "Code"
                });
                var W = function() {
                    function t208(e, r, n, i) {
                        if (!(this instanceof t208)) return new t208(e, r, n, i);
                        var o = e.split(".");
                        2 === o.length && (n = o.shift(), e = o.shift()), this.collection = e, this.oid = r, this.db = n, this.fields = i || {
                        };
                    }
                    return Object.defineProperty(t208.prototype, "namespace", {
                        get: function() {
                            return this.collection;
                        },
                        set: function(t) {
                            this.collection = t;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), t208.prototype.toJSON = function() {
                        var t = Object.assign({
                            $ref: this.collection,
                            $id: this.oid
                        }, this.fields);
                        return null != this.db && (t.$db = this.db), t;
                    }, t208.prototype.toExtendedJSON = function(t) {
                        t = t || {
                        };
                        var e = {
                            $ref: this.collection,
                            $id: this.oid
                        };
                        return t.legacy ? e : (this.db && (e.$db = this.db), e = Object.assign(e, this.fields));
                    }, t208.fromExtendedJSON = function(e) {
                        var r = Object.assign({
                        }, e);
                        return delete r.$ref, delete r.$id, delete r.$db, new t208(e.$ref, e.$id, e.$db, r);
                    }, t208.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, t208.prototype.inspect = function() {
                        var t = void 0 === this.oid || void 0 === this.oid.toString ? this.oid : this.oid.toString();
                        return 'new DBRef("' + this.namespace + '", new ObjectId("' + t + '")' + (this.db ? ', "' + this.db + '"' : "") + ")";
                    }, t208;
                }();
                Object.defineProperty(W.prototype, "_bsontype", {
                    value: "DBRef"
                });
                var J2 = void 0;
                try {
                    J2 = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([
                        0,
                        97,
                        115,
                        109,
                        1,
                        0,
                        0,
                        0,
                        1,
                        13,
                        2,
                        96,
                        0,
                        1,
                        127,
                        96,
                        4,
                        127,
                        127,
                        127,
                        127,
                        1,
                        127,
                        3,
                        7,
                        6,
                        0,
                        1,
                        1,
                        1,
                        1,
                        1,
                        6,
                        6,
                        1,
                        127,
                        1,
                        65,
                        0,
                        11,
                        7,
                        50,
                        6,
                        3,
                        109,
                        117,
                        108,
                        0,
                        1,
                        5,
                        100,
                        105,
                        118,
                        95,
                        115,
                        0,
                        2,
                        5,
                        100,
                        105,
                        118,
                        95,
                        117,
                        0,
                        3,
                        5,
                        114,
                        101,
                        109,
                        95,
                        115,
                        0,
                        4,
                        5,
                        114,
                        101,
                        109,
                        95,
                        117,
                        0,
                        5,
                        8,
                        103,
                        101,
                        116,
                        95,
                        104,
                        105,
                        103,
                        104,
                        0,
                        0,
                        10,
                        191,
                        1,
                        6,
                        4,
                        0,
                        35,
                        0,
                        11,
                        36,
                        1,
                        1,
                        126,
                        32,
                        0,
                        173,
                        32,
                        1,
                        173,
                        66,
                        32,
                        134,
                        132,
                        32,
                        2,
                        173,
                        32,
                        3,
                        173,
                        66,
                        32,
                        134,
                        132,
                        126,
                        34,
                        4,
                        66,
                        32,
                        135,
                        167,
                        36,
                        0,
                        32,
                        4,
                        167,
                        11,
                        36,
                        1,
                        1,
                        126,
                        32,
                        0,
                        173,
                        32,
                        1,
                        173,
                        66,
                        32,
                        134,
                        132,
                        32,
                        2,
                        173,
                        32,
                        3,
                        173,
                        66,
                        32,
                        134,
                        132,
                        127,
                        34,
                        4,
                        66,
                        32,
                        135,
                        167,
                        36,
                        0,
                        32,
                        4,
                        167,
                        11,
                        36,
                        1,
                        1,
                        126,
                        32,
                        0,
                        173,
                        32,
                        1,
                        173,
                        66,
                        32,
                        134,
                        132,
                        32,
                        2,
                        173,
                        32,
                        3,
                        173,
                        66,
                        32,
                        134,
                        132,
                        128,
                        34,
                        4,
                        66,
                        32,
                        135,
                        167,
                        36,
                        0,
                        32,
                        4,
                        167,
                        11,
                        36,
                        1,
                        1,
                        126,
                        32,
                        0,
                        173,
                        32,
                        1,
                        173,
                        66,
                        32,
                        134,
                        132,
                        32,
                        2,
                        173,
                        32,
                        3,
                        173,
                        66,
                        32,
                        134,
                        132,
                        129,
                        34,
                        4,
                        66,
                        32,
                        135,
                        167,
                        36,
                        0,
                        32,
                        4,
                        167,
                        11,
                        36,
                        1,
                        1,
                        126,
                        32,
                        0,
                        173,
                        32,
                        1,
                        173,
                        66,
                        32,
                        134,
                        132,
                        32,
                        2,
                        173,
                        32,
                        3,
                        173,
                        66,
                        32,
                        134,
                        132,
                        130,
                        34,
                        4,
                        66,
                        32,
                        135,
                        167,
                        36,
                        0,
                        32,
                        4,
                        167,
                        11
                    ])), {
                    }).exports;
                } catch (t209) {
                }
                var Y2 = {
                }, Q2 = {
                }, G = function() {
                    function t210(e, r, n) {
                        if (void 0 === e && (e = 0), !(this instanceof t210)) return new t210(e, r, n);
                        "bigint" == typeof e ? Object.assign(this, t210.fromBigInt(e, !!r)) : "string" == typeof e ? Object.assign(this, t210.fromString(e, !!r)) : (this.low = 0 | e, this.high = 0 | r, this.unsigned = !!n), Object.defineProperty(this, "__isLong__", {
                            value: !0,
                            configurable: !1,
                            writable: !1,
                            enumerable: !1
                        });
                    }
                    return t210.fromBits = function(e, r, n) {
                        return new t210(e, r, n);
                    }, t210.fromInt = function(e, r) {
                        var n, i, o;
                        return r ? (o = 0 <= (e >>>= 0) && e < 256) && (i = Q2[e]) ? i : (n = t210.fromBits(e, (0 | e) < 0 ? -1 : 0, !0), o && (Q2[e] = n), n) : (o = -128 <= (e |= 0) && e < 128) && (i = Y2[e]) ? i : (n = t210.fromBits(e, e < 0 ? -1 : 0, !1), o && (Y2[e] = n), n);
                    }, t210.fromNumber = function(e, r) {
                        if (isNaN(e)) return r ? t210.UZERO : t210.ZERO;
                        if (r) {
                            if (e < 0) return t210.UZERO;
                            if (e >= 18446744073709552000) return t210.MAX_UNSIGNED_VALUE;
                        } else {
                            if (e <= -9223372036854776000) return t210.MIN_VALUE;
                            if (e + 1 >= 9223372036854776000) return t210.MAX_VALUE;
                        }
                        return e < 0 ? t210.fromNumber(-e, r).neg() : t210.fromBits(e % 4294967296 | 0, e / 4294967296 | 0, r);
                    }, t210.fromBigInt = function(e, r) {
                        return t210.fromString(e.toString(), r);
                    }, t210.fromString = function(e, r, n) {
                        if (0 === e.length) throw Error("empty string");
                        if ("NaN" === e || "Infinity" === e || "+Infinity" === e || "-Infinity" === e) return t210.ZERO;
                        if ("number" == typeof r ? (n = r, r = !1) : r = !!r, (n = n || 10) < 2 || 36 < n) throw RangeError("radix");
                        var i;
                        if ((i = e.indexOf("-")) > 0) throw Error("interior hyphen");
                        if (0 === i) return t210.fromString(e.substring(1), r, n).neg();
                        for(var o = t210.fromNumber(Math.pow(n, 8)), s = t210.ZERO, a = 0; a < e.length; a += 8){
                            var u = Math.min(8, e.length - a), h = parseInt(e.substring(a, a + u), n);
                            if (u < 8) {
                                var f = t210.fromNumber(Math.pow(n, u));
                                s = s.mul(f).add(t210.fromNumber(h));
                            } else s = (s = s.mul(o)).add(t210.fromNumber(h));
                        }
                        return s.unsigned = r, s;
                    }, t210.fromBytes = function(e, r, n) {
                        return n ? t210.fromBytesLE(e, r) : t210.fromBytesBE(e, r);
                    }, t210.fromBytesLE = function(e, r) {
                        return new t210(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24, e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24, r);
                    }, t210.fromBytesBE = function(e, r) {
                        return new t210(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7], e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], r);
                    }, t210.isLong = function(t) {
                        return N2(t) && !0 === t.__isLong__;
                    }, t210.fromValue = function(e, r) {
                        return "number" == typeof e ? t210.fromNumber(e, r) : "string" == typeof e ? t210.fromString(e, r) : t210.fromBits(e.low, e.high, "boolean" == typeof r ? r : e.unsigned);
                    }, t210.prototype.add = function(e) {
                        t210.isLong(e) || (e = t210.fromValue(e));
                        var r = this.high >>> 16, n = 65535 & this.high, i = this.low >>> 16, o = 65535 & this.low, s = e.high >>> 16, a = 65535 & e.high, u = e.low >>> 16, h = 0, f = 0, c = 0, l = 0;
                        return c += (l += o + (65535 & e.low)) >>> 16, l &= 65535, f += (c += i + u) >>> 16, c &= 65535, h += (f += n + a) >>> 16, f &= 65535, h += r + s, h &= 65535, t210.fromBits(c << 16 | l, h << 16 | f, this.unsigned);
                    }, t210.prototype.and = function(e) {
                        return t210.isLong(e) || (e = t210.fromValue(e)), t210.fromBits(this.low & e.low, this.high & e.high, this.unsigned);
                    }, t210.prototype.compare = function(e) {
                        if (t210.isLong(e) || (e = t210.fromValue(e)), this.eq(e)) return 0;
                        var r = this.isNegative(), n = e.isNegative();
                        return r && !n ? -1 : !r && n ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1;
                    }, t210.prototype.comp = function(t) {
                        return this.compare(t);
                    }, t210.prototype.divide = function(e) {
                        if (t210.isLong(e) || (e = t210.fromValue(e)), e.isZero()) throw Error("division by zero");
                        if (J2) {
                            if (!this.unsigned && -2147483648 === this.high && -1 === e.low && -1 === e.high) return this;
                            var r = (this.unsigned ? J2.div_u : J2.div_s)(this.low, this.high, e.low, e.high);
                            return t210.fromBits(r, J2.get_high(), this.unsigned);
                        }
                        if (this.isZero()) return this.unsigned ? t210.UZERO : t210.ZERO;
                        var n, i, o;
                        if (this.unsigned) {
                            if (e.unsigned || (e = e.toUnsigned()), e.gt(this)) return t210.UZERO;
                            if (e.gt(this.shru(1))) return t210.UONE;
                            o = t210.UZERO;
                        } else {
                            if (this.eq(t210.MIN_VALUE)) return e.eq(t210.ONE) || e.eq(t210.NEG_ONE) ? t210.MIN_VALUE : e.eq(t210.MIN_VALUE) ? t210.ONE : (n = this.shr(1).div(e).shl(1)).eq(t210.ZERO) ? e.isNegative() ? t210.ONE : t210.NEG_ONE : (i = this.sub(e.mul(n)), o = n.add(i.div(e)));
                            if (e.eq(t210.MIN_VALUE)) return this.unsigned ? t210.UZERO : t210.ZERO;
                            if (this.isNegative()) return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();
                            if (e.isNegative()) return this.div(e.neg()).neg();
                            o = t210.ZERO;
                        }
                        for(i = this; i.gte(e);){
                            n = Math.max(1, Math.floor(i.toNumber() / e.toNumber()));
                            for(var s = Math.ceil(Math.log(n) / Math.LN2), a = s <= 48 ? 1 : Math.pow(2, s - 48), u = t210.fromNumber(n), h = u.mul(e); h.isNegative() || h.gt(i);)n -= a, h = (u = t210.fromNumber(n, this.unsigned)).mul(e);
                            u.isZero() && (u = t210.ONE), o = o.add(u), i = i.sub(h);
                        }
                        return o;
                    }, t210.prototype.div = function(t) {
                        return this.divide(t);
                    }, t210.prototype.equals = function(e) {
                        return t210.isLong(e) || (e = t210.fromValue(e)), (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && this.high === e.high && this.low === e.low;
                    }, t210.prototype.eq = function(t) {
                        return this.equals(t);
                    }, t210.prototype.getHighBits = function() {
                        return this.high;
                    }, t210.prototype.getHighBitsUnsigned = function() {
                        return this.high >>> 0;
                    }, t210.prototype.getLowBits = function() {
                        return this.low;
                    }, t210.prototype.getLowBitsUnsigned = function() {
                        return this.low >>> 0;
                    }, t210.prototype.getNumBitsAbs = function() {
                        if (this.isNegative()) return this.eq(t210.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
                        var e, r = 0 !== this.high ? this.high : this.low;
                        for(e = 31; e > 0 && 0 == (r & 1 << e); e--);
                        return 0 !== this.high ? e + 33 : e + 1;
                    }, t210.prototype.greaterThan = function(t) {
                        return this.comp(t) > 0;
                    }, t210.prototype.gt = function(t) {
                        return this.greaterThan(t);
                    }, t210.prototype.greaterThanOrEqual = function(t) {
                        return this.comp(t) >= 0;
                    }, t210.prototype.gte = function(t) {
                        return this.greaterThanOrEqual(t);
                    }, t210.prototype.ge = function(t) {
                        return this.greaterThanOrEqual(t);
                    }, t210.prototype.isEven = function() {
                        return 0 == (1 & this.low);
                    }, t210.prototype.isNegative = function() {
                        return !this.unsigned && this.high < 0;
                    }, t210.prototype.isOdd = function() {
                        return 1 == (1 & this.low);
                    }, t210.prototype.isPositive = function() {
                        return this.unsigned || this.high >= 0;
                    }, t210.prototype.isZero = function() {
                        return 0 === this.high && 0 === this.low;
                    }, t210.prototype.lessThan = function(t) {
                        return this.comp(t) < 0;
                    }, t210.prototype.lt = function(t) {
                        return this.lessThan(t);
                    }, t210.prototype.lessThanOrEqual = function(t) {
                        return this.comp(t) <= 0;
                    }, t210.prototype.lte = function(t) {
                        return this.lessThanOrEqual(t);
                    }, t210.prototype.modulo = function(e) {
                        if (t210.isLong(e) || (e = t210.fromValue(e)), J2) {
                            var r = (this.unsigned ? J2.rem_u : J2.rem_s)(this.low, this.high, e.low, e.high);
                            return t210.fromBits(r, J2.get_high(), this.unsigned);
                        }
                        return this.sub(this.div(e).mul(e));
                    }, t210.prototype.mod = function(t) {
                        return this.modulo(t);
                    }, t210.prototype.rem = function(t) {
                        return this.modulo(t);
                    }, t210.prototype.multiply = function(e) {
                        if (this.isZero()) return t210.ZERO;
                        if (t210.isLong(e) || (e = t210.fromValue(e)), J2) {
                            var r = J2.mul(this.low, this.high, e.low, e.high);
                            return t210.fromBits(r, J2.get_high(), this.unsigned);
                        }
                        if (e.isZero()) return t210.ZERO;
                        if (this.eq(t210.MIN_VALUE)) return e.isOdd() ? t210.MIN_VALUE : t210.ZERO;
                        if (e.eq(t210.MIN_VALUE)) return this.isOdd() ? t210.MIN_VALUE : t210.ZERO;
                        if (this.isNegative()) return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();
                        if (e.isNegative()) return this.mul(e.neg()).neg();
                        if (this.lt(t210.TWO_PWR_24) && e.lt(t210.TWO_PWR_24)) return t210.fromNumber(this.toNumber() * e.toNumber(), this.unsigned);
                        var n = this.high >>> 16, i = 65535 & this.high, o = this.low >>> 16, s = 65535 & this.low, a = e.high >>> 16, u = 65535 & e.high, h = e.low >>> 16, f = 65535 & e.low, c = 0, l = 0, d = 0, p = 0;
                        return d += (p += s * f) >>> 16, p &= 65535, l += (d += o * f) >>> 16, d &= 65535, l += (d += s * h) >>> 16, d &= 65535, c += (l += i * f) >>> 16, l &= 65535, c += (l += o * h) >>> 16, l &= 65535, c += (l += s * u) >>> 16, l &= 65535, c += n * f + i * h + o * u + s * a, c &= 65535, t210.fromBits(d << 16 | p, c << 16 | l, this.unsigned);
                    }, t210.prototype.mul = function(t) {
                        return this.multiply(t);
                    }, t210.prototype.negate = function() {
                        return !this.unsigned && this.eq(t210.MIN_VALUE) ? t210.MIN_VALUE : this.not().add(t210.ONE);
                    }, t210.prototype.neg = function() {
                        return this.negate();
                    }, t210.prototype.not = function() {
                        return t210.fromBits(~this.low, ~this.high, this.unsigned);
                    }, t210.prototype.notEquals = function(t) {
                        return !this.equals(t);
                    }, t210.prototype.neq = function(t) {
                        return this.notEquals(t);
                    }, t210.prototype.ne = function(t) {
                        return this.notEquals(t);
                    }, t210.prototype.or = function(e) {
                        return t210.isLong(e) || (e = t210.fromValue(e)), t210.fromBits(this.low | e.low, this.high | e.high, this.unsigned);
                    }, t210.prototype.shiftLeft = function(e) {
                        return t210.isLong(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? t210.fromBits(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : t210.fromBits(0, this.low << e - 32, this.unsigned);
                    }, t210.prototype.shl = function(t) {
                        return this.shiftLeft(t);
                    }, t210.prototype.shiftRight = function(e) {
                        return t210.isLong(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? t210.fromBits(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : t210.fromBits(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned);
                    }, t210.prototype.shr = function(t) {
                        return this.shiftRight(t);
                    }, t210.prototype.shiftRightUnsigned = function(e) {
                        if (t210.isLong(e) && (e = e.toInt()), 0 === (e &= 63)) return this;
                        var r = this.high;
                        if (e < 32) {
                            var n = this.low;
                            return t210.fromBits(n >>> e | r << 32 - e, r >>> e, this.unsigned);
                        }
                        return 32 === e ? t210.fromBits(r, 0, this.unsigned) : t210.fromBits(r >>> e - 32, 0, this.unsigned);
                    }, t210.prototype.shr_u = function(t) {
                        return this.shiftRightUnsigned(t);
                    }, t210.prototype.shru = function(t) {
                        return this.shiftRightUnsigned(t);
                    }, t210.prototype.subtract = function(e) {
                        return t210.isLong(e) || (e = t210.fromValue(e)), this.add(e.neg());
                    }, t210.prototype.sub = function(t) {
                        return this.subtract(t);
                    }, t210.prototype.toInt = function() {
                        return this.unsigned ? this.low >>> 0 : this.low;
                    }, t210.prototype.toNumber = function() {
                        return this.unsigned ? 4294967296 * (this.high >>> 0) + (this.low >>> 0) : 4294967296 * this.high + (this.low >>> 0);
                    }, t210.prototype.toBigInt = function() {
                        return BigInt(this.toString());
                    }, t210.prototype.toBytes = function(t) {
                        return t ? this.toBytesLE() : this.toBytesBE();
                    }, t210.prototype.toBytesLE = function() {
                        var t = this.high, e = this.low;
                        return [
                            255 & e,
                            e >>> 8 & 255,
                            e >>> 16 & 255,
                            e >>> 24,
                            255 & t,
                            t >>> 8 & 255,
                            t >>> 16 & 255,
                            t >>> 24
                        ];
                    }, t210.prototype.toBytesBE = function() {
                        var t = this.high, e = this.low;
                        return [
                            t >>> 24,
                            t >>> 16 & 255,
                            t >>> 8 & 255,
                            255 & t,
                            e >>> 24,
                            e >>> 16 & 255,
                            e >>> 8 & 255,
                            255 & e
                        ];
                    }, t210.prototype.toSigned = function() {
                        return this.unsigned ? t210.fromBits(this.low, this.high, !1) : this;
                    }, t210.prototype.toString = function(e) {
                        if ((e = e || 10) < 2 || 36 < e) throw RangeError("radix");
                        if (this.isZero()) return "0";
                        if (this.isNegative()) {
                            if (this.eq(t210.MIN_VALUE)) {
                                var r = t210.fromNumber(e), n = this.div(r), i = n.mul(r).sub(this);
                                return n.toString(e) + i.toInt().toString(e);
                            }
                            return "-" + this.neg().toString(e);
                        }
                        for(var o = t210.fromNumber(Math.pow(e, 6), this.unsigned), s = this, a = "";;){
                            var u = s.div(o), h = (s.sub(u.mul(o)).toInt() >>> 0).toString(e);
                            if ((s = u).isZero()) return h + a;
                            for(; h.length < 6;)h = "0" + h;
                            a = "" + h + a;
                        }
                    }, t210.prototype.toUnsigned = function() {
                        return this.unsigned ? this : t210.fromBits(this.low, this.high, !0);
                    }, t210.prototype.xor = function(e) {
                        return t210.isLong(e) || (e = t210.fromValue(e)), t210.fromBits(this.low ^ e.low, this.high ^ e.high, this.unsigned);
                    }, t210.prototype.eqz = function() {
                        return this.isZero();
                    }, t210.prototype.le = function(t) {
                        return this.lessThanOrEqual(t);
                    }, t210.prototype.toExtendedJSON = function(t) {
                        return t && t.relaxed ? this.toNumber() : {
                            $numberLong: this.toString()
                        };
                    }, t210.fromExtendedJSON = function(e, r) {
                        var n = t210.fromString(e.$numberLong);
                        return r && r.relaxed ? n.toNumber() : n;
                    }, t210.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, t210.prototype.inspect = function() {
                        return 'new Long("' + this.toString() + '"' + (this.unsigned ? ", true" : "") + ")";
                    }, t210.TWO_PWR_24 = t210.fromInt(16777216), t210.MAX_UNSIGNED_VALUE = t210.fromBits(-1, -1, !0), t210.ZERO = t210.fromInt(0), t210.UZERO = t210.fromInt(0, !0), t210.ONE = t210.fromInt(1), t210.UONE = t210.fromInt(1, !0), t210.NEG_ONE = t210.fromInt(-1), t210.MAX_VALUE = t210.fromBits(-1, 2147483647, !1), t210.MIN_VALUE = t210.fromBits(0, -2147483648, !1), t210;
                }();
                Object.defineProperty(G.prototype, "__isLong__", {
                    value: !0
                }), Object.defineProperty(G.prototype, "_bsontype", {
                    value: "Long"
                });
                var X1 = /^(\+|-)?(\d+|(\d*\.\d*))?(E|e)?([-+])?(\d+)?$/, tt2 = /^(\+|-)?(Infinity|inf)$/i, et2 = /^(\+|-)?NaN$/i, rt2 = [
                    124,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ].reverse(), nt2 = [
                    248,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ].reverse(), it1 = [
                    120,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ].reverse(), ot2 = /^([-+])?(\d+)?$/;
                function st2(t) {
                    return !isNaN(parseInt(t, 10));
                }
                function at1(t) {
                    var e = G.fromNumber(1000000000), r = G.fromNumber(0);
                    if (!(t.parts[0] || t.parts[1] || t.parts[2] || t.parts[3])) return {
                        quotient: t,
                        rem: r
                    };
                    for(var n = 0; n <= 3; n++)r = (r = r.shiftLeft(32)).add(new G(t.parts[n], 0)), t.parts[n] = r.div(e).low, r = r.modulo(e);
                    return {
                        quotient: t,
                        rem: r
                    };
                }
                function ut2(t, e) {
                    throw new O3('"' + t + '" is not a valid Decimal128 string - ' + e);
                }
                var ht = function() {
                    function t211(e) {
                        if (!(this instanceof t211)) return new t211(e);
                        if ("string" == typeof e) this.bytes = t211.fromString(e).bytes;
                        else {
                            if (!P2(e)) throw new O3("Decimal128 must take a Buffer or string");
                            if (16 !== e.byteLength) throw new O3("Decimal128 must take a Buffer of 16 bytes");
                            this.bytes = e;
                        }
                    }
                    return t211.fromString = function(e107) {
                        var r87, n53 = !1, i33 = !1, o25 = !1, s21 = 0, a21 = 0, u21 = 0, h16 = 0, f = 0, c = [
                            0
                        ], l = 0, d = 0, p = 0, y = 0, m = 0, b = 0, v = new G(0, 0), w = new G(0, 0), _ = 0;
                        if (e107.length >= 7000) throw new O3(e107 + " not a valid Decimal128 string");
                        var M = e107.match(X1), S = e107.match(tt2), A = e107.match(et2);
                        if (!M && !S && !A || 0 === e107.length) throw new O3(e107 + " not a valid Decimal128 string");
                        if (M) {
                            var E = M[2], x = M[4], k = M[5], j = M[6];
                            x && void 0 === j && ut2(e107, "missing exponent power"), x && void 0 === E && ut2(e107, "missing exponent base"), void 0 === x && (k || j) && ut2(e107, "missing e before exponent");
                        }
                        if ("+" !== e107[_] && "-" !== e107[_] || (n53 = "-" === e107[_++]), !st2(e107[_]) && "." !== e107[_]) {
                            if ("i" === e107[_] || "I" === e107[_]) return new t211(g3.from(n53 ? nt2 : it1));
                            if ("N" === e107[_]) return new t211(g3.from(rt2));
                        }
                        for(; st2(e107[_]) || "." === e107[_];)"." !== e107[_] ? (l < 34 && ("0" !== e107[_] || o25) && (o25 || (f = a21), o25 = !0, c[d++] = parseInt(e107[_], 10), l += 1), o25 && (u21 += 1), i33 && (h16 += 1), a21 += 1, _ += 1) : (i33 && ut2(e107, "contains multiple periods"), i33 = !0, _ += 1);
                        if (i33 && !a21) throw new O3(e107 + " not a valid Decimal128 string");
                        if ("e" === e107[_] || "E" === e107[_]) {
                            var $ = e107.substr(++_).match(ot2);
                            if (!$ || !$[2]) return new t211(g3.from(rt2));
                            m = parseInt($[0], 10), _ += $[0].length;
                        }
                        if (e107[_]) return new t211(g3.from(rt2));
                        if (p = 0, l) {
                            if (y = l - 1, 1 !== (s21 = u21)) for(; 0 === c[f + s21 - 1];)s21 -= 1;
                        } else p = 0, y = 0, c[0] = 0, u21 = 1, l = 1, s21 = 0;
                        for(m <= h16 && h16 - m > 16384 ? m = -6176 : m -= h16; m > 6111;){
                            if ((y += 1) - p > 34) {
                                if (c.join("").match(/^0+$/)) {
                                    m = 6111;
                                    break;
                                }
                                ut2(e107, "overflow");
                            }
                            m -= 1;
                        }
                        for(; m < -6176 || l < u21;){
                            if (0 === y && s21 < l) {
                                m = -6176, s21 = 0;
                                break;
                            }
                            if (l < u21 ? u21 -= 1 : y -= 1, m < 6111) m += 1;
                            else {
                                if (c.join("").match(/^0+$/)) {
                                    m = 6111;
                                    break;
                                }
                                ut2(e107, "overflow");
                            }
                        }
                        if (y - p + 1 < s21) {
                            var P = a21;
                            i33 && (f += 1, P += 1), n53 && (f += 1, P += 1);
                            var R = parseInt(e107[f + y + 1], 10), B = 0;
                            if (R >= 5 && (B = 1, 5 === R)) {
                                for(B = c[y] % 2 == 1 ? 1 : 0, b = f + y + 2; b < P; b++)if (parseInt(e107[b], 10)) {
                                    B = 1;
                                    break;
                                }
                            }
                            if (B) {
                                for(var T = y; T >= 0; T--)if (++c[T] > 9 && (c[T] = 0, 0 === T)) {
                                    if (!(m < 6111)) return new t211(g3.from(n53 ? nt2 : it1));
                                    m += 1, c[T] = 1;
                                }
                            }
                        }
                        if (v = G.fromNumber(0), w = G.fromNumber(0), 0 === s21) v = G.fromNumber(0), w = G.fromNumber(0);
                        else if (y - p < 17) {
                            T = p;
                            for(w = G.fromNumber(c[T++]), v = new G(0, 0); T <= y; T++)w = (w = w.multiply(G.fromNumber(10))).add(G.fromNumber(c[T]));
                        } else {
                            T = p;
                            for(v = G.fromNumber(c[T++]); T <= y - 17; T++)v = (v = v.multiply(G.fromNumber(10))).add(G.fromNumber(c[T]));
                            for(w = G.fromNumber(c[T++]); T <= y; T++)w = (w = w.multiply(G.fromNumber(10))).add(G.fromNumber(c[T]));
                        }
                        var I, N, D, C, L = function(t, e) {
                            if (!t && !e) return {
                                high: G.fromNumber(0),
                                low: G.fromNumber(0)
                            };
                            var r = t.shiftRightUnsigned(32), n = new G(t.getLowBits(), 0), i = e.shiftRightUnsigned(32), o = new G(e.getLowBits(), 0), s = r.multiply(i), a = r.multiply(o), u = n.multiply(i), h = n.multiply(o);
                            return s = s.add(a.shiftRightUnsigned(32)), a = new G(a.getLowBits(), 0).add(u).add(h.shiftRightUnsigned(32)), {
                                high: s = s.add(a.shiftRightUnsigned(32)),
                                low: h = a.shiftLeft(32).add(new G(h.getLowBits(), 0))
                            };
                        }(v, G.fromString("100000000000000000"));
                        L.low = L.low.add(w), I = L.low, N = w, D = I.high >>> 0, C = N.high >>> 0, (D < C || D === C && I.low >>> 0 < N.low >>> 0) && (L.high = L.high.add(G.fromNumber(1))), r87 = m + 6176;
                        var q = {
                            low: G.fromNumber(0),
                            high: G.fromNumber(0)
                        };
                        L.high.shiftRightUnsigned(49).and(G.fromNumber(1)).equals(G.fromNumber(1)) ? (q.high = q.high.or(G.fromNumber(3).shiftLeft(61)), q.high = q.high.or(G.fromNumber(r87).and(G.fromNumber(16383).shiftLeft(47))), q.high = q.high.or(L.high.and(G.fromNumber(140737488355327)))) : (q.high = q.high.or(G.fromNumber(16383 & r87).shiftLeft(49)), q.high = q.high.or(L.high.and(G.fromNumber(562949953421311)))), q.low = L.low, n53 && (q.high = q.high.or(G.fromString("9223372036854775808")));
                        var U = g3.alloc(16);
                        return _ = 0, U[_++] = 255 & q.low.low, U[_++] = q.low.low >> 8 & 255, U[_++] = q.low.low >> 16 & 255, U[_++] = q.low.low >> 24 & 255, U[_++] = 255 & q.low.high, U[_++] = q.low.high >> 8 & 255, U[_++] = q.low.high >> 16 & 255, U[_++] = q.low.high >> 24 & 255, U[_++] = 255 & q.high.low, U[_++] = q.high.low >> 8 & 255, U[_++] = q.high.low >> 16 & 255, U[_++] = q.high.low >> 24 & 255, U[_++] = 255 & q.high.high, U[_++] = q.high.high >> 8 & 255, U[_++] = q.high.high >> 16 & 255, U[_++] = q.high.high >> 24 & 255, new t211(U);
                    }, t211.prototype.toString = function() {
                        for(var t, e = 0, r = new Array(36), n = 0; n < r.length; n++)r[n] = 0;
                        var i, o, s, a = 0, u = !1, h = {
                            parts: [
                                0,
                                0,
                                0,
                                0
                            ]
                        }, f = [];
                        a = 0;
                        var c = this.bytes, l = c[a++] | c[a++] << 8 | c[a++] << 16 | c[a++] << 24, d = c[a++] | c[a++] << 8 | c[a++] << 16 | c[a++] << 24, p = c[a++] | c[a++] << 8 | c[a++] << 16 | c[a++] << 24, y = c[a++] | c[a++] << 8 | c[a++] << 16 | c[a++] << 24;
                        a = 0, ({
                            low: new G(l, d),
                            high: new G(p, y)
                        }).high.lessThan(G.ZERO) && f.push("-");
                        var m = y >> 26 & 31;
                        if (m >> 3 == 3) {
                            if (30 === m) return f.join("") + "Infinity";
                            if (31 === m) return "NaN";
                            t = y >> 15 & 16383, i = 8 + (y >> 14 & 1);
                        } else i = y >> 14 & 7, t = y >> 17 & 16383;
                        var b = t - 6176;
                        if (h.parts[0] = (16383 & y) + ((15 & i) << 14), h.parts[1] = p, h.parts[2] = d, h.parts[3] = l, 0 === h.parts[0] && 0 === h.parts[1] && 0 === h.parts[2] && 0 === h.parts[3]) u = !0;
                        else for(s = 3; s >= 0; s--){
                            var v = 0, g = at1(h);
                            if (h = g.quotient, v = g.rem.low) for(o = 8; o >= 0; o--)r[9 * s + o] = v % 10, v = Math.floor(v / 10);
                        }
                        if (u) e = 1, r[a] = 0;
                        else for(e = 36; !r[a];)e -= 1, a += 1;
                        var w = e - 1 + b;
                        if (w >= 34 || w <= -7 || b > 0) {
                            if (e > 34) return f.push("0"), b > 0 ? f.push("E+" + b) : b < 0 && f.push("E" + b), f.join("");
                            f.push("" + r[a++]), (e -= 1) && f.push(".");
                            for(n = 0; n < e; n++)f.push("" + r[a++]);
                            f.push("E"), w > 0 ? f.push("+" + w) : f.push("" + w);
                        } else if (b >= 0) for(n = 0; n < e; n++)f.push("" + r[a++]);
                        else {
                            var _ = e + b;
                            if (_ > 0) for(n = 0; n < _; n++)f.push("" + r[a++]);
                            else f.push("0");
                            for(f.push("."); _++ < 0;)f.push("0");
                            for(n = 0; n < e - Math.max(_ - 1, 0); n++)f.push("" + r[a++]);
                        }
                        return f.join("");
                    }, t211.prototype.toJSON = function() {
                        return {
                            $numberDecimal: this.toString()
                        };
                    }, t211.prototype.toExtendedJSON = function() {
                        return {
                            $numberDecimal: this.toString()
                        };
                    }, t211.fromExtendedJSON = function(e) {
                        return t211.fromString(e.$numberDecimal);
                    }, t211.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, t211.prototype.inspect = function() {
                        return 'new Decimal128("' + this.toString() + '")';
                    }, t211;
                }();
                Object.defineProperty(ht.prototype, "_bsontype", {
                    value: "Decimal128"
                });
                var ft = function() {
                    function t212(e) {
                        if (!(this instanceof t212)) return new t212(e);
                        e instanceof Number && (e = e.valueOf()), this.value = +e;
                    }
                    return t212.prototype.valueOf = function() {
                        return this.value;
                    }, t212.prototype.toJSON = function() {
                        return this.value;
                    }, t212.prototype.toString = function(t) {
                        return this.value.toString(t);
                    }, t212.prototype.toExtendedJSON = function(t) {
                        var e;
                        return t && (t.legacy || t.relaxed && isFinite(this.value)) ? this.value : Object.is(Math.sign(this.value), -0) ? {
                            $numberDouble: "-" + this.value.toFixed(1)
                        } : (Number.isInteger(this.value) ? (e = this.value.toFixed(1)).length >= 13 && (e = this.value.toExponential(13).toUpperCase()) : e = this.value.toString(), {
                            $numberDouble: e
                        });
                    }, t212.fromExtendedJSON = function(e, r) {
                        var n = parseFloat(e.$numberDouble);
                        return r && r.relaxed ? n : new t212(n);
                    }, t212.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, t212.prototype.inspect = function() {
                        return "new Double(" + this.toExtendedJSON().$numberDouble + ")";
                    }, t212;
                }();
                Object.defineProperty(ft.prototype, "_bsontype", {
                    value: "Double"
                });
                var ct = function() {
                    function t213(e) {
                        if (!(this instanceof t213)) return new t213(e);
                        e instanceof Number && (e = e.valueOf()), this.value = 0 | +e;
                    }
                    return t213.prototype.valueOf = function() {
                        return this.value;
                    }, t213.prototype.toString = function(t) {
                        return this.value.toString(t);
                    }, t213.prototype.toJSON = function() {
                        return this.value;
                    }, t213.prototype.toExtendedJSON = function(t) {
                        return t && (t.relaxed || t.legacy) ? this.value : {
                            $numberInt: this.value.toString()
                        };
                    }, t213.fromExtendedJSON = function(e, r) {
                        return r && r.relaxed ? parseInt(e.$numberInt, 10) : new t213(e.$numberInt);
                    }, t213.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, t213.prototype.inspect = function() {
                        return "new Int32(" + this.valueOf() + ")";
                    }, t213;
                }();
                Object.defineProperty(ct.prototype, "_bsontype", {
                    value: "Int32"
                });
                var lt = function() {
                    function t() {
                        if (!(this instanceof t)) return new t;
                    }
                    return t.prototype.toExtendedJSON = function() {
                        return {
                            $maxKey: 1
                        };
                    }, t.fromExtendedJSON = function() {
                        return new t;
                    }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, t.prototype.inspect = function() {
                        return "new MaxKey()";
                    }, t;
                }();
                Object.defineProperty(lt.prototype, "_bsontype", {
                    value: "MaxKey"
                });
                var dt = function() {
                    function t() {
                        if (!(this instanceof t)) return new t;
                    }
                    return t.prototype.toExtendedJSON = function() {
                        return {
                            $minKey: 1
                        };
                    }, t.fromExtendedJSON = function() {
                        return new t;
                    }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, t.prototype.inspect = function() {
                        return "new MinKey()";
                    }, t;
                }();
                Object.defineProperty(dt.prototype, "_bsontype", {
                    value: "MinKey"
                });
                var pt2 = new RegExp("^[0-9a-fA-F]{24}$"), yt1 = null, mt1 = Symbol("id"), bt = function() {
                    function t214(e) {
                        if (!(this instanceof t214)) return new t214(e);
                        var r;
                        if ("object" === n49(e) && e && "id" in e) {
                            if ("string" != typeof e.id && !ArrayBuffer.isView(e.id)) throw new O3("Argument passed in must have an id that is of type string or Buffer");
                            r = "toHexString" in e && "function" == typeof e.toHexString ? g3.from(e.toHexString(), "hex") : e.id;
                        } else r = e;
                        if (null == r || "number" == typeof r) this[mt1] = t214.generate("number" == typeof r ? r : void 0);
                        else if (ArrayBuffer.isView(r) && 12 === r.byteLength) this[mt1] = C2(r);
                        else {
                            if ("string" != typeof r) throw new O3("Argument passed in does not match the accepted types");
                            if (12 === r.length) {
                                var i = g3.from(r);
                                if (12 !== i.byteLength) throw new O3("Argument passed in must be a string of 12 bytes");
                                this[mt1] = i;
                            } else {
                                if (24 !== r.length || !pt2.test(r)) throw new O3("Argument passed in must be a string of 12 bytes or a string of 24 hex characters");
                                this[mt1] = g3.from(r, "hex");
                            }
                        }
                        t214.cacheHexString && (this.__id = this.id.toString("hex"));
                    }
                    return Object.defineProperty(t214.prototype, "id", {
                        get: function() {
                            return this[mt1];
                        },
                        set: function(e) {
                            this[mt1] = e, t214.cacheHexString && (this.__id = e.toString("hex"));
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(t214.prototype, "generationTime", {
                        get: function() {
                            return this.id.readInt32BE(0);
                        },
                        set: function(t) {
                            this.id.writeUInt32BE(t, 0);
                        },
                        enumerable: !1,
                        configurable: !0
                    }), t214.prototype.toHexString = function() {
                        if (t214.cacheHexString && this.__id) return this.__id;
                        var e = this.id.toString("hex");
                        return t214.cacheHexString && !this.__id && (this.__id = e), e;
                    }, t214.getInc = function() {
                        return t214.index = (t214.index + 1) % 16777215;
                    }, t214.generate = function(e) {
                        "number" != typeof e && (e = Math.floor(Date.now() / 1000));
                        var r = t214.getInc(), n = g3.alloc(12);
                        return n.writeUInt32BE(e, 0), null === yt1 && (yt1 = j2(5)), n[4] = yt1[0], n[5] = yt1[1], n[6] = yt1[2], n[7] = yt1[3], n[8] = yt1[4], n[11] = 255 & r, n[10] = r >> 8 & 255, n[9] = r >> 16 & 255, n;
                    }, t214.prototype.toString = function(t) {
                        return t ? this.id.toString(t) : this.toHexString();
                    }, t214.prototype.toJSON = function() {
                        return this.toHexString();
                    }, t214.prototype.equals = function(e) {
                        return null != e && (e instanceof t214 ? this.toString() === e.toString() : "string" == typeof e && t214.isValid(e) && 12 === e.length && P2(this.id) ? e === g3.prototype.toString.call(this.id, "latin1") : "string" == typeof e && t214.isValid(e) && 24 === e.length ? e.toLowerCase() === this.toHexString() : "string" == typeof e && t214.isValid(e) && 12 === e.length ? g3.from(e).equals(this.id) : "object" === n49(e) && "toHexString" in e && "function" == typeof e.toHexString && e.toHexString() === this.toHexString());
                    }, t214.prototype.getTimestamp = function() {
                        var t = new Date, e = this.id.readUInt32BE(0);
                        return t.setTime(1000 * Math.floor(e)), t;
                    }, t214.createPk = function() {
                        return new t214;
                    }, t214.createFromTime = function(e) {
                        var r = g3.from([
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ]);
                        return r.writeUInt32BE(e, 0), new t214(r);
                    }, t214.createFromHexString = function(e) {
                        if (void 0 === e || null != e && 24 !== e.length) throw new O3("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
                        return new t214(g3.from(e, "hex"));
                    }, t214.isValid = function(e) {
                        if (null == e) return !1;
                        try {
                            return new t214(e), !0;
                        } catch (t) {
                            return !1;
                        }
                    }, t214.prototype.toExtendedJSON = function() {
                        return this.toHexString ? {
                            $oid: this.toHexString()
                        } : {
                            $oid: this.toString("hex")
                        };
                    }, t214.fromExtendedJSON = function(e) {
                        return new t214(e.$oid);
                    }, t214.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, t214.prototype.inspect = function() {
                        return 'new ObjectId("' + this.toHexString() + '")';
                    }, t214.index = Math.floor(16777215 * Math.random()), t214;
                }();
                Object.defineProperty(bt.prototype, "generate", {
                    value: D1(function(t) {
                        return bt.generate(t);
                    }, "Please use the static `ObjectId.generate(time)` instead")
                }), Object.defineProperty(bt.prototype, "getInc", {
                    value: D1(function() {
                        return bt.getInc();
                    }, "Please use the static `ObjectId.getInc()` instead")
                }), Object.defineProperty(bt.prototype, "get_inc", {
                    value: D1(function() {
                        return bt.getInc();
                    }, "Please use the static `ObjectId.getInc()` instead")
                }), Object.defineProperty(bt, "get_inc", {
                    value: D1(function() {
                        return bt.getInc();
                    }, "Please use the static `ObjectId.getInc()` instead")
                }), Object.defineProperty(bt.prototype, "_bsontype", {
                    value: "ObjectID"
                });
                var vt = function() {
                    function t215(e, r) {
                        if (!(this instanceof t215)) return new t215(e, r);
                        if (this.pattern = e, this.options = (null != r ? r : "").split("").sort().join(""), -1 !== this.pattern.indexOf("\0")) throw new S3("BSON Regex patterns cannot contain null bytes, found: " + JSON.stringify(this.pattern));
                        if (-1 !== this.options.indexOf("\0")) throw new S3("BSON Regex options cannot contain null bytes, found: " + JSON.stringify(this.options));
                        for(var n = 0; n < this.options.length; n++)if ("i" !== this.options[n] && "m" !== this.options[n] && "x" !== this.options[n] && "l" !== this.options[n] && "s" !== this.options[n] && "u" !== this.options[n]) throw new S3("The regular expression option [" + this.options[n] + "] is not supported");
                    }
                    return t215.parseOptions = function(t) {
                        return t ? t.split("").sort().join("") : "";
                    }, t215.prototype.toExtendedJSON = function(t) {
                        return (t = t || {
                        }).legacy ? {
                            $regex: this.pattern,
                            $options: this.options
                        } : {
                            $regularExpression: {
                                pattern: this.pattern,
                                options: this.options
                            }
                        };
                    }, t215.fromExtendedJSON = function(e) {
                        if ("$regex" in e) {
                            if ("string" == typeof e.$regex) return new t215(e.$regex, t215.parseOptions(e.$options));
                            if ("BSONRegExp" === e.$regex._bsontype) return e;
                        }
                        if ("$regularExpression" in e) return new t215(e.$regularExpression.pattern, t215.parseOptions(e.$regularExpression.options));
                        throw new O3("Unexpected BSONRegExp EJSON object form: " + JSON.stringify(e));
                    }, t215;
                }();
                Object.defineProperty(vt.prototype, "_bsontype", {
                    value: "BSONRegExp"
                });
                var gt = function() {
                    function t(e) {
                        if (!(this instanceof t)) return new t(e);
                        this.value = e;
                    }
                    return t.prototype.valueOf = function() {
                        return this.value;
                    }, t.prototype.toString = function() {
                        return this.value;
                    }, t.prototype.inspect = function() {
                        return 'new BSONSymbol("' + this.value + '")';
                    }, t.prototype.toJSON = function() {
                        return this.value;
                    }, t.prototype.toExtendedJSON = function() {
                        return {
                            $symbol: this.value
                        };
                    }, t.fromExtendedJSON = function(e) {
                        return new t(e.$symbol);
                    }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, t;
                }();
                Object.defineProperty(gt.prototype, "_bsontype", {
                    value: "Symbol"
                });
                var wt1 = G, _t = function(t216) {
                    function e(r, n) {
                        var i = this;
                        return i instanceof e ? (i = G.isLong(r) ? t216.call(this, r.low, r.high, !0) || this : N2(r) && void 0 !== r.t && void 0 !== r.i ? t216.call(this, r.i, r.t, !0) || this : t216.call(this, r, n, !0) || this, Object.defineProperty(i, "_bsontype", {
                            value: "Timestamp",
                            writable: !1,
                            configurable: !1,
                            enumerable: !1
                        }), i) : new e(r, n);
                    }
                    return _4(e, t216), e.prototype.toJSON = function() {
                        return {
                            $timestamp: this.toString()
                        };
                    }, e.fromInt = function(t) {
                        return new e(G.fromInt(t, !0));
                    }, e.fromNumber = function(t) {
                        return new e(G.fromNumber(t, !0));
                    }, e.fromBits = function(t, r) {
                        return new e(t, r);
                    }, e.fromString = function(t, r) {
                        return new e(G.fromString(t, !0, r));
                    }, e.prototype.toExtendedJSON = function() {
                        return {
                            $timestamp: {
                                t: this.high >>> 0,
                                i: this.low >>> 0
                            }
                        };
                    }, e.fromExtendedJSON = function(t) {
                        return new e(t.$timestamp);
                    }, e.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
                        return this.inspect();
                    }, e.prototype.inspect = function() {
                        return "new Timestamp({ t: " + this.getHighBits() + ", i: " + this.getLowBits() + " })";
                    }, e.MAX_VALUE = G.MAX_UNSIGNED_VALUE, e;
                }(wt1);
                function Mt(t) {
                    return N2(t) && Reflect.has(t, "_bsontype") && "string" == typeof t._bsontype;
                }
                var St = {
                    $oid: bt,
                    $binary: K,
                    $uuid: K,
                    $symbol: gt,
                    $numberInt: ct,
                    $numberDecimal: ht,
                    $numberDouble: ft,
                    $numberLong: G,
                    $minKey: dt,
                    $maxKey: lt,
                    $regex: vt,
                    $regularExpression: vt,
                    $timestamp: _t
                };
                function Ot(t) {
                    var e = t.toISOString();
                    return 0 !== t.getUTCMilliseconds() ? e : e.slice(0, -5) + "Z";
                }
                function At(t217, e108) {
                    if (("object" === n49(t217) || "function" == typeof t217) && null !== t217) {
                        var r = e108.seenObjects.findIndex(function(e) {
                            return e.obj === t217;
                        });
                        if (-1 !== r) {
                            var i = e108.seenObjects.map(function(t) {
                                return t.propertyName;
                            }), o = i.slice(0, r).map(function(t) {
                                return t + " -> ";
                            }).join(""), s = i[r], a = " -> " + i.slice(r + 1, i.length - 1).map(function(t) {
                                return t + " -> ";
                            }).join(""), u = i[i.length - 1], h = " ".repeat(o.length + s.length / 2), f = "-".repeat(a.length + (s.length + u.length) / 2 - 1);
                            throw new O3("Converting circular structure to EJSON:\n    " + o + s + a + u + "\n    " + h + "\\" + f + "/");
                        }
                        e108.seenObjects[e108.seenObjects.length - 1].obj = t217;
                    }
                    if (Array.isArray(t217)) return (function(t218, e) {
                        return t218.map(function(t, r) {
                            e.seenObjects.push({
                                propertyName: "index " + r,
                                obj: null
                            });
                            try {
                                return At(t, e);
                            } finally{
                                e.seenObjects.pop();
                            }
                        });
                    })(t217, e108);
                    if (void 0 === t217) return null;
                    if (t217 instanceof Date || I2(t217)) {
                        var c = t217.getTime(), l = c > -1 && c < 253402318800000;
                        return e108.legacy ? e108.relaxed && l ? {
                            $date: t217.getTime()
                        } : {
                            $date: Ot(t217)
                        } : e108.relaxed && l ? {
                            $date: Ot(t217)
                        } : {
                            $date: {
                                $numberLong: t217.getTime().toString()
                            }
                        };
                    }
                    if (!("number" != typeof t217 || e108.relaxed && isFinite(t217))) {
                        if (Math.floor(t217) === t217) {
                            var d = t217 >= -9223372036854776000 && t217 <= 9223372036854776000;
                            if (t217 >= -2147483648 && t217 <= 2147483647) return {
                                $numberInt: t217.toString()
                            };
                            if (d) return {
                                $numberLong: t217.toString()
                            };
                        }
                        return {
                            $numberDouble: t217.toString()
                        };
                    }
                    if (t217 instanceof RegExp || T2(t217)) {
                        var p = t217.flags;
                        if (void 0 === p) {
                            var y = t217.toString().match(/[gimuy]*$/);
                            y && (p = y[0]);
                        }
                        return new vt(t217.source, p).toExtendedJSON(e108);
                    }
                    return null != t217 && "object" === n49(t217) ? (function(t, e) {
                        if (null == t || "object" !== n49(t)) throw new S3("not an object instance");
                        var r = t._bsontype;
                        if (void 0 === r) {
                            var i = {
                            };
                            for(var o in t){
                                e.seenObjects.push({
                                    propertyName: o,
                                    obj: null
                                });
                                try {
                                    i[o] = At(t[o], e);
                                } finally{
                                    e.seenObjects.pop();
                                }
                            }
                            return i;
                        }
                        if (Mt(t)) {
                            var s = t;
                            if ("function" != typeof s.toExtendedJSON) {
                                var a = kt[t._bsontype];
                                if (!a) throw new O3("Unrecognized or invalid _bsontype: " + t._bsontype);
                                s = a(s);
                            }
                            return "Code" === r && s.scope ? s = new H(s.code, At(s.scope, e)) : "DBRef" === r && s.oid && (s = new W(At(s.collection, e), At(s.oid, e), At(s.db, e), At(s.fields, e))), s.toExtendedJSON(e);
                        }
                        throw new S3("_bsontype must be a string, but was: " + n49(r));
                    })(t217, e108) : t217;
                }
                var Et, xt, kt = {
                    Binary: function(t) {
                        return new K(t.value(), t.sub_type);
                    },
                    Code: function(t) {
                        return new H(t.code, t.scope);
                    },
                    DBRef: function(t) {
                        return new W(t.collection || t.namespace, t.oid, t.db, t.fields);
                    },
                    Decimal128: function(t) {
                        return new ht(t.bytes);
                    },
                    Double: function(t) {
                        return new ft(t.value);
                    },
                    Int32: function(t) {
                        return new ct(t.value);
                    },
                    Long: function(t) {
                        return G.fromBits(null != t.low ? t.low : t.low_, null != t.low ? t.high : t.high_, null != t.low ? t.unsigned : t.unsigned_);
                    },
                    MaxKey: function() {
                        return new lt;
                    },
                    MinKey: function() {
                        return new dt;
                    },
                    ObjectID: function(t) {
                        return new bt(t);
                    },
                    ObjectId: function(t) {
                        return new bt(t);
                    },
                    BSONRegExp: function(t) {
                        return new vt(t.pattern, t.options);
                    },
                    Symbol: function(t) {
                        return new gt(t.value);
                    },
                    Timestamp: function(t) {
                        return _t.fromBits(t.low, t.high);
                    }
                };
                !function(t219) {
                    function e109(t220, e110) {
                        var r89 = Object.assign({
                        }, {
                            relaxed: !0,
                            legacy: !1
                        }, e110);
                        return "boolean" == typeof r89.relaxed && (r89.strict = !r89.relaxed), "boolean" == typeof r89.strict && (r89.relaxed = !r89.strict), JSON.parse(t220, function(t221, e111) {
                            if (-1 !== t221.indexOf("\0")) throw new S3("BSON Document field names cannot contain null bytes, found: " + JSON.stringify(t221));
                            return (function t222(e, r) {
                                if (void 0 === r && (r = {
                                }), "number" == typeof e) {
                                    if (r.relaxed || r.legacy) return e;
                                    if (Math.floor(e) === e) {
                                        if (e >= -2147483648 && e <= 2147483647) return new ct(e);
                                        if (e >= -9223372036854776000 && e <= 9223372036854776000) return G.fromNumber(e);
                                    }
                                    return new ft(e);
                                }
                                if (null == e || "object" !== n49(e)) return e;
                                if (e.$undefined) return null;
                                for(var i = Object.keys(e).filter(function(t) {
                                    return t.startsWith("$") && null != e[t];
                                }), o = 0; o < i.length; o++){
                                    var s = St[i[o]];
                                    if (s) return s.fromExtendedJSON(e, r);
                                }
                                if (null != e.$date) {
                                    var a = e.$date, u = new Date;
                                    return r.legacy ? "number" == typeof a ? u.setTime(a) : "string" == typeof a && u.setTime(Date.parse(a)) : "string" == typeof a ? u.setTime(Date.parse(a)) : G.isLong(a) ? u.setTime(a.toNumber()) : "number" == typeof a && r.relaxed && u.setTime(a), u;
                                }
                                if (null != e.$code) {
                                    var h = Object.assign({
                                    }, e);
                                    return e.$scope && (h.$scope = t222(e.$scope)), H.fromExtendedJSON(e);
                                }
                                if (Z(e) || e.$dbPointer) {
                                    var f = e.$ref ? e : e.$dbPointer;
                                    if (f instanceof W) return f;
                                    var c = Object.keys(f).filter(function(t) {
                                        return t.startsWith("$");
                                    }), l = !0;
                                    if (c.forEach(function(t) {
                                        -1 === [
                                            "$ref",
                                            "$id",
                                            "$db"
                                        ].indexOf(t) && (l = !1);
                                    }), l) return W.fromExtendedJSON(f);
                                }
                                return e;
                            })(e111, r89);
                        });
                    }
                    function r88(t, e, r, i) {
                        null != r && "object" === n49(r) && (i = r, r = 0), null == e || "object" !== n49(e) || Array.isArray(e) || (i = e, e = void 0, r = 0);
                        var o = At(t, Object.assign({
                            relaxed: !0,
                            legacy: !1
                        }, i, {
                            seenObjects: [
                                {
                                    propertyName: "(root)",
                                    obj: null
                                }
                            ]
                        }));
                        return JSON.stringify(o, e, r);
                    }
                    t219.parse = e109, t219.stringify = r88, t219.serialize = function(t, e) {
                        return e = e || {
                        }, JSON.parse(r88(t, e));
                    }, t219.deserialize = function(t, r) {
                        return r = r || {
                        }, e109(JSON.stringify(t), r);
                    };
                }(Et || (Et = {
                }));
                var jt = E2();
                xt = jt.Map ? jt.Map : (function() {
                    function t223(t) {
                        void 0 === t && (t = []), this._keys = [], this._values = {
                        };
                        for(var e = 0; e < t.length; e++)if (null != t[e]) {
                            var r = t[e], n = r[0], i = r[1];
                            this._keys.push(n), this._values[n] = {
                                v: i,
                                i: this._keys.length - 1
                            };
                        }
                    }
                    return t223.prototype.clear = function() {
                        this._keys = [], this._values = {
                        };
                    }, t223.prototype.delete = function(t) {
                        var e = this._values[t];
                        return null != e && (delete this._values[t], this._keys.splice(e.i, 1), !0);
                    }, t223.prototype.entries = function() {
                        var t = this, e = 0;
                        return {
                            next: function() {
                                var r = t._keys[e++];
                                return {
                                    value: void 0 !== r ? [
                                        r,
                                        t._values[r].v
                                    ] : void 0,
                                    done: void 0 === r
                                };
                            }
                        };
                    }, t223.prototype.forEach = function(t, e) {
                        e = e || this;
                        for(var r = 0; r < this._keys.length; r++){
                            var n = this._keys[r];
                            t.call(e, this._values[n].v, n, e);
                        }
                    }, t223.prototype.get = function(t) {
                        return this._values[t] ? this._values[t].v : void 0;
                    }, t223.prototype.has = function(t) {
                        return null != this._values[t];
                    }, t223.prototype.keys = function() {
                        var t = this, e = 0;
                        return {
                            next: function() {
                                var r = t._keys[e++];
                                return {
                                    value: void 0 !== r ? r : void 0,
                                    done: void 0 === r
                                };
                            }
                        };
                    }, t223.prototype.set = function(t, e) {
                        return this._values[t] ? (this._values[t].v = e, this) : (this._keys.push(t), this._values[t] = {
                            v: e,
                            i: this._keys.length - 1
                        }, this);
                    }, t223.prototype.values = function() {
                        var t = this, e = 0;
                        return {
                            next: function() {
                                var r = t._keys[e++];
                                return {
                                    value: void 0 !== r ? t._values[r].v : void 0,
                                    done: void 0 === r
                                };
                            }
                        };
                    }, Object.defineProperty(t223.prototype, "size", {
                        get: function() {
                            return this._keys.length;
                        },
                        enumerable: !1,
                        configurable: !0
                    }), t223;
                })();
                var $t = 2147483647, Pt = -2147483648, Rt = Math.pow(2, 63) - 1, Bt = -Math.pow(2, 63), Tt = Math.pow(2, 53), It = -Math.pow(2, 53), Nt = 1, Dt = 2, Ct = 3, Lt = 4, qt = 5, Ut = 6, Ft = 7, zt = 8, Vt = 9, Kt = 10, Ht = 11, Zt = 12, Wt = 13, Jt = 14, Yt = 15, Qt = 16, Gt = 17, Xt = 18, te = 19, ee = 255, re = 127, ne = 0, ie = 1, oe = 2, se = 3, ae = 4, ue = 5, he = 6, fe = 7, ce = 128;
                function le(t, e, r) {
                    var n = 5;
                    if (Array.isArray(t)) for(var i = 0; i < t.length; i++)n += de(i.toString(), t[i], e, !0, r);
                    else for(var o in "function" == typeof (null == t ? void 0 : t.toBSON) && (t = t.toBSON()), t)n += de(o, t[o], e, !1, r);
                    return n;
                }
                function de(t, e, r, i, o) {
                    switch(void 0 === r && (r = !1), void 0 === i && (i = !1), void 0 === o && (o = !1), "function" == typeof (null == e ? void 0 : e.toBSON) && (e = e.toBSON()), n49(e)){
                        case "string":
                            return 1 + g3.byteLength(t, "utf8") + 1 + 4 + g3.byteLength(e, "utf8") + 1;
                        case "number":
                            return Math.floor(e) === e && e >= It && e <= Tt && e >= Pt && e <= $t ? (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 5 : (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 9;
                        case "undefined":
                            return i || !o ? (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 1 : 0;
                        case "boolean":
                            return (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 2;
                        case "object":
                            if (null == e || "MinKey" === e._bsontype || "MaxKey" === e._bsontype) return (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 1;
                            if ("ObjectId" === e._bsontype || "ObjectID" === e._bsontype) return (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 13;
                            if (e instanceof Date || I2(e)) return (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 9;
                            if (ArrayBuffer.isView(e) || e instanceof ArrayBuffer || $2(e)) return (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 6 + e.byteLength;
                            if ("Long" === e._bsontype || "Double" === e._bsontype || "Timestamp" === e._bsontype) return (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 9;
                            if ("Decimal128" === e._bsontype) return (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 17;
                            if ("Code" === e._bsontype) return null != e.scope && Object.keys(e.scope).length > 0 ? (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 1 + 4 + 4 + g3.byteLength(e.code.toString(), "utf8") + 1 + le(e.scope, r, o) : (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 1 + 4 + g3.byteLength(e.code.toString(), "utf8") + 1;
                            if ("Binary" === e._bsontype) return e.sub_type === K.SUBTYPE_BYTE_ARRAY ? (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + (e.position + 1 + 4 + 1 + 4) : (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + (e.position + 1 + 4 + 1);
                            if ("Symbol" === e._bsontype) return (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + g3.byteLength(e.value, "utf8") + 4 + 1 + 1;
                            if ("DBRef" === e._bsontype) {
                                var s = Object.assign({
                                    $ref: e.collection,
                                    $id: e.oid
                                }, e.fields);
                                return null != e.db && (s.$db = e.db), (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 1 + le(s, r, o);
                            }
                            return e instanceof RegExp || T2(e) ? (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 1 + g3.byteLength(e.source, "utf8") + 1 + (e.global ? 1 : 0) + (e.ignoreCase ? 1 : 0) + (e.multiline ? 1 : 0) + 1 : "BSONRegExp" === e._bsontype ? (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 1 + g3.byteLength(e.pattern, "utf8") + 1 + g3.byteLength(e.options, "utf8") + 1 : (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + le(e, r, o) + 1;
                        case "function":
                            if (e instanceof RegExp || T2(e) || "[object RegExp]" === String.call(e)) return (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 1 + g3.byteLength(e.source, "utf8") + 1 + (e.global ? 1 : 0) + (e.ignoreCase ? 1 : 0) + (e.multiline ? 1 : 0) + 1;
                            if (r && null != e.scope && Object.keys(e.scope).length > 0) return (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 1 + 4 + 4 + g3.byteLength(x2(e), "utf8") + 1 + le(e.scope, r, o);
                            if (r) return (null != t ? g3.byteLength(t, "utf8") + 1 : 0) + 1 + 4 + g3.byteLength(x2(e), "utf8") + 1;
                    }
                    return 0;
                }
                function pe(t, e, r) {
                    for(var n = 0, i = e; i < r; i += 1){
                        var o = t[i];
                        if (n) {
                            if (128 != (192 & o)) return !1;
                            n -= 1;
                        } else if (128 & o) {
                            if (192 == (224 & o)) n = 1;
                            else if (224 == (240 & o)) n = 2;
                            else {
                                if (240 != (248 & o)) return !1;
                                n = 3;
                            }
                        }
                    }
                    return !n;
                }
                var ye = G.fromNumber(Tt), me = G.fromNumber(It), be = {
                };
                function ve(t224, e112, r90) {
                    var n54 = (e112 = null == e112 ? {
                    } : e112) && e112.index ? e112.index : 0, i34 = t224[n54] | t224[n54 + 1] << 8 | t224[n54 + 2] << 16 | t224[n54 + 3] << 24;
                    if (i34 < 5) throw new S3("bson size must be >= 5, is " + i34);
                    if (e112.allowObjectSmallerThanBufferSize && t224.length < i34) throw new S3("buffer length " + t224.length + " must be >= bson size " + i34);
                    if (!e112.allowObjectSmallerThanBufferSize && t224.length !== i34) throw new S3("buffer length " + t224.length + " must === bson size " + i34);
                    if (i34 + n54 > t224.byteLength) throw new S3("(bson size " + i34 + " + options.index " + n54 + " must be <= buffer length " + t224.byteLength + ")");
                    if (0 !== t224[n54 + i34 - 1]) throw new S3("One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00");
                    return (function t225(e, r, n, i) {
                        void 0 === i && (i = !1);
                        var o, s = null != n.evalFunctions && n.evalFunctions, a = null != n.cacheFunctions && n.cacheFunctions, u = null == n.fieldsAsRaw ? null : n.fieldsAsRaw, h = null != n.raw && n.raw, f = "boolean" == typeof n.bsonRegExp && n.bsonRegExp, c = null != n.promoteBuffers && n.promoteBuffers, l = null == n.promoteLongs || n.promoteLongs, d = null == n.promoteValues || n.promoteValues, p = null == n.validation ? {
                            utf8: !0
                        } : n.validation, y = !0, m = new Set, b = p.utf8;
                        if ("boolean" == typeof b) o = b;
                        else {
                            y = !1;
                            var v = Object.keys(b).map(function(t) {
                                return b[t];
                            });
                            if (0 === v.length) throw new S3("UTF-8 validation setting cannot be empty");
                            if ("boolean" != typeof v[0]) throw new S3("Invalid UTF-8 validation option, must specify boolean values");
                            if (o = v[0], !v.every(function(t) {
                                return t === o;
                            })) throw new S3("Invalid UTF-8 validation option - keys must be all true or all false");
                        }
                        if (!y) for(var w = 0, _ = Object.keys(b); w < _.length; w++){
                            var O = _[w];
                            m.add(O);
                        }
                        var A = r;
                        if (e.length < 5) throw new S3("corrupt bson message < 5 bytes long");
                        var E = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24;
                        if (E < 5 || E > e.length) throw new S3("corrupt bson message");
                        var x = i ? [] : {
                        }, k = 0, j = !i && null;
                        for(;;){
                            var $ = e[r++];
                            if (0 === $) break;
                            for(var P = r; 0 !== e[P] && P < e.length;)P++;
                            if (P >= e.byteLength) throw new S3("Bad BSON Document: illegal CString");
                            var R = i ? k++ : e.toString("utf8", r, P), B = !0;
                            B = y || m.has(R) ? o : !o, !1 !== j && "$" === R[0] && (j = ge.test(R));
                            var T = void 0;
                            if (r = P + 1, $ === Dt) {
                                if ((pt = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) <= 0 || pt > e.length - r || 0 !== e[r + pt - 1]) throw new S3("bad string length in bson");
                                T = _e(e, r, r + pt - 1, B), r += pt;
                            } else if ($ === Ft) {
                                var I = g3.alloc(12);
                                e.copy(I, 0, r, r + 12), T = new bt(I), r += 12;
                            } else if ($ === Qt && !1 === d) T = new ct(e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24);
                            else if ($ === Qt) T = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24;
                            else if ($ === Nt && !1 === d) T = new ft(e.readDoubleLE(r)), r += 8;
                            else if ($ === Nt) T = e.readDoubleLE(r), r += 8;
                            else if ($ === Vt) {
                                var N = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24, D = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24;
                                T = new Date(new G(N, D).toNumber());
                            } else if ($ === zt) {
                                if (0 !== e[r] && 1 !== e[r]) throw new S3("illegal boolean type value");
                                T = 1 === e[r++];
                            } else if ($ === Ct) {
                                var C = r;
                                if ((q = e[r] | e[r + 1] << 8 | e[r + 2] << 16 | e[r + 3] << 24) <= 0 || q > e.length - r) throw new S3("bad embedded document length in bson");
                                if (h) T = e.slice(r, r + q);
                                else {
                                    var L = n;
                                    y || (L = M3(M3({
                                    }, n), {
                                        validation: {
                                            utf8: B
                                        }
                                    })), T = t225(e, C, L, !1);
                                }
                                r += q;
                            } else if ($ === Lt) {
                                C = r;
                                var q = e[r] | e[r + 1] << 8 | e[r + 2] << 16 | e[r + 3] << 24, U = n, F = r + q;
                                if (u && u[R]) {
                                    for(var z in U = {
                                    }, n)U[z] = n[z];
                                    U.raw = !0;
                                }
                                if (y || (U = M3(M3({
                                }, U), {
                                    validation: {
                                        utf8: B
                                    }
                                })), T = t225(e, C, U, !0), 0 !== e[(r += q) - 1]) throw new S3("invalid array terminator byte");
                                if (r !== F) throw new S3("corrupted array bson");
                            } else if ($ === Ut) T = void 0;
                            else if ($ === Kt) T = null;
                            else if ($ === Xt) {
                                N = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24, D = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24;
                                var V = new G(N, D);
                                T = l && !0 === d && V.lessThanOrEqual(ye) && V.greaterThanOrEqual(me) ? V.toNumber() : V;
                            } else if ($ === te) {
                                var J = g3.alloc(16);
                                e.copy(J, 0, r, r + 16), r += 16;
                                var Y = new ht(J);
                                T = "toObject" in Y && "function" == typeof Y.toObject ? Y.toObject() : Y;
                            } else if ($ === qt) {
                                var Q = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24, X = Q, tt = e[r++];
                                if (Q < 0) throw new S3("Negative binary type element size found");
                                if (Q > e.byteLength) throw new S3("Binary type size larger than document size");
                                if (null != e.slice) {
                                    if (tt === K.SUBTYPE_BYTE_ARRAY) {
                                        if ((Q = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) < 0) throw new S3("Negative binary type element size found for subtype 0x02");
                                        if (Q > X - 4) throw new S3("Binary type with subtype 0x02 contains too long binary size");
                                        if (Q < X - 4) throw new S3("Binary type with subtype 0x02 contains too short binary size");
                                    }
                                    T = c && d ? e.slice(r, r + Q) : new K(e.slice(r, r + Q), tt);
                                } else {
                                    var et = g3.alloc(Q);
                                    if (tt === K.SUBTYPE_BYTE_ARRAY) {
                                        if ((Q = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) < 0) throw new S3("Negative binary type element size found for subtype 0x02");
                                        if (Q > X - 4) throw new S3("Binary type with subtype 0x02 contains too long binary size");
                                        if (Q < X - 4) throw new S3("Binary type with subtype 0x02 contains too short binary size");
                                    }
                                    for(P = 0; P < Q; P++)et[P] = e[r + P];
                                    T = c && d ? et : new K(et, tt);
                                }
                                r += Q;
                            } else if ($ === Ht && !1 === f) {
                                for(P = r; 0 !== e[P] && P < e.length;)P++;
                                if (P >= e.length) throw new S3("Bad BSON Document: illegal CString");
                                var rt = e.toString("utf8", r, P);
                                for(P = r = P + 1; 0 !== e[P] && P < e.length;)P++;
                                if (P >= e.length) throw new S3("Bad BSON Document: illegal CString");
                                var nt = e.toString("utf8", r, P);
                                r = P + 1;
                                var it = new Array(nt.length);
                                for(P = 0; P < nt.length; P++)switch(nt[P]){
                                    case "m":
                                        it[P] = "m";
                                        break;
                                    case "s":
                                        it[P] = "g";
                                        break;
                                    case "i":
                                        it[P] = "i";
                                }
                                T = new RegExp(rt, it.join(""));
                            } else if ($ === Ht && !0 === f) {
                                for(P = r; 0 !== e[P] && P < e.length;)P++;
                                if (P >= e.length) throw new S3("Bad BSON Document: illegal CString");
                                rt = e.toString("utf8", r, P);
                                for(P = r = P + 1; 0 !== e[P] && P < e.length;)P++;
                                if (P >= e.length) throw new S3("Bad BSON Document: illegal CString");
                                nt = e.toString("utf8", r, P);
                                r = P + 1, T = new vt(rt, nt);
                            } else if ($ === Jt) {
                                if ((pt = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) <= 0 || pt > e.length - r || 0 !== e[r + pt - 1]) throw new S3("bad string length in bson");
                                var ot = _e(e, r, r + pt - 1, B);
                                T = d ? ot : new gt(ot), r += pt;
                            } else if ($ === Gt) {
                                N = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24, D = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24;
                                T = new _t(N, D);
                            } else if ($ === ee) T = new dt;
                            else if ($ === re) T = new lt;
                            else if ($ === Wt) {
                                if ((pt = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) <= 0 || pt > e.length - r || 0 !== e[r + pt - 1]) throw new S3("bad string length in bson");
                                var st = _e(e, r, r + pt - 1, B);
                                T = s ? a ? we(st, be, x) : we(st) : new H(st), r += pt;
                            } else if ($ === Yt) {
                                var at = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24;
                                if (at < 13) throw new S3("code_w_scope total size shorter minimum expected length");
                                if ((pt = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) <= 0 || pt > e.length - r || 0 !== e[r + pt - 1]) throw new S3("bad string length in bson");
                                st = _e(e, r, r + pt - 1, B), C = r += pt, q = e[r] | e[r + 1] << 8 | e[r + 2] << 16 | e[r + 3] << 24;
                                var ut = t225(e, C, n, !1);
                                if (r += q, at < 8 + q + pt) throw new S3("code_w_scope total size is too short, truncating scope");
                                if (at > 8 + q + pt) throw new S3("code_w_scope total size is too long, clips outer document");
                                s ? (T = a ? we(st, be, x) : we(st)).scope = ut : T = new H(st, ut);
                            } else {
                                if ($ !== Zt) throw new S3("Detected unknown BSON type " + $.toString(16) + ' for fieldname "' + R + '"');
                                var pt;
                                if ((pt = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) <= 0 || pt > e.length - r || 0 !== e[r + pt - 1]) throw new S3("bad string length in bson");
                                if (null != p && p.utf8 && !pe(e, r, r + pt - 1)) throw new S3("Invalid UTF-8 string in BSON document");
                                var yt = e.toString("utf8", r, r + pt - 1);
                                r += pt;
                                var mt = g3.alloc(12);
                                e.copy(mt, 0, r, r + 12);
                                I = new bt(mt);
                                r += 12, T = new W(yt, I);
                            }
                            "__proto__" === R ? Object.defineProperty(x, R, {
                                value: T,
                                writable: !0,
                                enumerable: !0,
                                configurable: !0
                            }) : x[R] = T;
                        }
                        if (E !== r - A) {
                            if (i) throw new S3("corrupt array bson");
                            throw new S3("corrupt object bson");
                        }
                        if (!j) return x;
                        if (Z(x)) {
                            var wt = Object.assign({
                            }, x);
                            return delete wt.$ref, delete wt.$id, delete wt.$db, new W(x.$ref, x.$id, x.$db, wt);
                        }
                        return x;
                    })(t224, n54, e112, r90);
                }
                var ge = /^\$ref$|^\$id$|^\$db$/;
                function we(t, e, r) {
                    return e ? (null == e[t] && (e[t] = new Function(t)), e[t].bind(r)) : new Function(t);
                }
                function _e(t, e, r, n) {
                    var i = t.toString("utf8", e, r);
                    if (n) {
                        for(var o = 0; o < i.length; o++)if (65533 === i.charCodeAt(o)) {
                            if (!pe(t, e, r)) throw new S3("Invalid UTF-8 string in BSON document");
                            break;
                        }
                    }
                    return i;
                }
                function Me(t, e, r, n, i, o) {
                    var s, a, u, h = "big" === n, f = 8 * o - i - 1, c = (1 << f) - 1, l = c >> 1, d = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = h ? o - 1 : 0, y = h ? -1 : 1, m = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;
                    for(e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (a = isNaN(e) ? 1 : 0, s = c) : (s = Math.floor(Math.log(e) / Math.LN2), e * (u = Math.pow(2, -s)) < 1 && (s--, u *= 2), (e += s + l >= 1 ? d / u : d * Math.pow(2, 1 - l)) * u >= 2 && (s++, u /= 2), s + l >= c ? (a = 0, s = c) : s + l >= 1 ? (a = (e * u - 1) * Math.pow(2, i), s += l) : (a = e * Math.pow(2, l - 1) * Math.pow(2, i), s = 0)), isNaN(e) && (a = 0); i >= 8;)t[r + p] = 255 & a, p += y, a /= 256, i -= 8;
                    for(s = s << i | a, isNaN(e) && (s += 8), f += i; f > 0;)t[r + p] = 255 & s, p += y, s /= 256, f -= 8;
                    t[r + p - y] |= 128 * m;
                }
                var Se = /\x00/, Oe = new Set([
                    "$db",
                    "$ref",
                    "$id",
                    "$clusterTime"
                ]);
                function Ae(t, e, r, n, i) {
                    t[n++] = Dt;
                    var o = i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8");
                    t[(n = n + o + 1) - 1] = 0;
                    var s = t.write(r, n + 4, void 0, "utf8");
                    return t[n + 3] = s + 1 >> 24 & 255, t[n + 2] = s + 1 >> 16 & 255, t[n + 1] = s + 1 >> 8 & 255, t[n] = s + 1 & 255, n = n + 4 + s, t[n++] = 0, n;
                }
                function Ee(t, e, r, n, i) {
                    Number.isInteger(r) && r >= Pt && r <= $t ? (t[n++] = Qt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, t[n++] = 255 & r, t[n++] = r >> 8 & 255, t[n++] = r >> 16 & 255, t[n++] = r >> 24 & 255) : (t[n++] = Nt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, Me(t, r, n, "little", 52, 8), n += 8);
                    return n;
                }
                function xe(t, e, r, n, i) {
                    return t[n++] = Kt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, n;
                }
                function ke(t, e, r, n, i) {
                    return t[n++] = zt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, t[n++] = r ? 1 : 0, n;
                }
                function je(t, e, r, n, i) {
                    t[n++] = Vt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
                    var o = G.fromNumber(r.getTime()), s = o.getLowBits(), a = o.getHighBits();
                    return t[n++] = 255 & s, t[n++] = s >> 8 & 255, t[n++] = s >> 16 & 255, t[n++] = s >> 24 & 255, t[n++] = 255 & a, t[n++] = a >> 8 & 255, t[n++] = a >> 16 & 255, t[n++] = a >> 24 & 255, n;
                }
                function $e(t, e, r, n, i) {
                    if (t[n++] = Ht, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, r.source && null != r.source.match(Se)) throw Error("value " + r.source + " must not contain null bytes");
                    return n += t.write(r.source, n, void 0, "utf8"), t[n++] = 0, r.ignoreCase && (t[n++] = 105), r.global && (t[n++] = 115), r.multiline && (t[n++] = 109), t[n++] = 0, n;
                }
                function Pe(t, e, r, n, i) {
                    if (t[n++] = Ht, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, null != r.pattern.match(Se)) throw Error("pattern " + r.pattern + " must not contain null bytes");
                    return n += t.write(r.pattern, n, void 0, "utf8"), t[n++] = 0, n += t.write(r.options.split("").sort().join(""), n, void 0, "utf8"), t[n++] = 0, n;
                }
                function Re(t, e, r, n, i) {
                    return null === r ? t[n++] = Kt : "MinKey" === r._bsontype ? t[n++] = ee : t[n++] = re, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, n;
                }
                function Be(t, e, r, n, i) {
                    if (t[n++] = Ft, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, "string" == typeof r.id) t.write(r.id, n, void 0, "binary");
                    else {
                        if (!P2(r.id)) throw new O3("object [" + JSON.stringify(r) + "] is not a valid ObjectId");
                        t.set(r.id.subarray(0, 12), n);
                    }
                    return n + 12;
                }
                function Te(t, e, r, n, i) {
                    t[n++] = qt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
                    var o = r.length;
                    return t[n++] = 255 & o, t[n++] = o >> 8 & 255, t[n++] = o >> 16 & 255, t[n++] = o >> 24 & 255, t[n++] = ne, t.set(C2(r), n), n += o;
                }
                function Ie(t, e, r, n, i, o, s, a, u, h) {
                    void 0 === i && (i = !1), void 0 === o && (o = 0), void 0 === s && (s = !1), void 0 === a && (a = !0), void 0 === u && (u = !1), void 0 === h && (h = []);
                    for(var f = 0; f < h.length; f++)if (h[f] === r) throw new S3("cyclic dependency detected");
                    h.push(r), t[n++] = Array.isArray(r) ? Lt : Ct, n += u ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
                    var c = Ke(t, r, i, n, o + 1, s, a, h);
                    return h.pop(), c;
                }
                function Ne(t, e, r, n, i) {
                    return t[n++] = te, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, t.set(r.bytes.subarray(0, 16), n), n + 16;
                }
                function De(t, e, r, n, i) {
                    t[n++] = "Long" === r._bsontype ? Xt : Gt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
                    var o = r.getLowBits(), s = r.getHighBits();
                    return t[n++] = 255 & o, t[n++] = o >> 8 & 255, t[n++] = o >> 16 & 255, t[n++] = o >> 24 & 255, t[n++] = 255 & s, t[n++] = s >> 8 & 255, t[n++] = s >> 16 & 255, t[n++] = s >> 24 & 255, n;
                }
                function Ce(t, e, r, n, i) {
                    return r = r.valueOf(), t[n++] = Qt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, t[n++] = 255 & r, t[n++] = r >> 8 & 255, t[n++] = r >> 16 & 255, t[n++] = r >> 24 & 255, n;
                }
                function Le(t, e, r, n, i) {
                    return t[n++] = Nt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, Me(t, r.value, n, "little", 52, 8), n += 8;
                }
                function qe(t, e, r, n, i, o, s) {
                    t[n++] = Wt, n += s ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
                    var a = x2(r), u = t.write(a, n + 4, void 0, "utf8") + 1;
                    return t[n] = 255 & u, t[n + 1] = u >> 8 & 255, t[n + 2] = u >> 16 & 255, t[n + 3] = u >> 24 & 255, n = n + 4 + u - 1, t[n++] = 0, n;
                }
                function Ue(t, e, r, i, o, s, a, u, h) {
                    if (void 0 === o && (o = !1), void 0 === s && (s = 0), void 0 === a && (a = !1), void 0 === u && (u = !0), void 0 === h && (h = !1), r.scope && "object" === n49(r.scope)) {
                        t[i++] = Yt, i += h ? t.write(e, i, void 0, "ascii") : t.write(e, i, void 0, "utf8"), t[i++] = 0;
                        var f = i, c = "string" == typeof r.code ? r.code : r.code.toString();
                        i += 4;
                        var l = t.write(c, i + 4, void 0, "utf8") + 1;
                        t[i] = 255 & l, t[i + 1] = l >> 8 & 255, t[i + 2] = l >> 16 & 255, t[i + 3] = l >> 24 & 255, t[i + 4 + l - 1] = 0, i = i + l + 4;
                        var d = Ke(t, r.scope, o, i, s + 1, a, u);
                        i = d - 1;
                        var p = d - f;
                        t[f++] = 255 & p, t[f++] = p >> 8 & 255, t[f++] = p >> 16 & 255, t[f++] = p >> 24 & 255, t[i++] = 0;
                    } else {
                        t[i++] = Wt, i += h ? t.write(e, i, void 0, "ascii") : t.write(e, i, void 0, "utf8"), t[i++] = 0;
                        c = r.code.toString();
                        var y = t.write(c, i + 4, void 0, "utf8") + 1;
                        t[i] = 255 & y, t[i + 1] = y >> 8 & 255, t[i + 2] = y >> 16 & 255, t[i + 3] = y >> 24 & 255, i = i + 4 + y - 1, t[i++] = 0;
                    }
                    return i;
                }
                function Fe(t, e, r, n, i) {
                    t[n++] = qt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
                    var o = r.value(!0), s = r.position;
                    return r.sub_type === K.SUBTYPE_BYTE_ARRAY && (s += 4), t[n++] = 255 & s, t[n++] = s >> 8 & 255, t[n++] = s >> 16 & 255, t[n++] = s >> 24 & 255, t[n++] = r.sub_type, r.sub_type === K.SUBTYPE_BYTE_ARRAY && (s -= 4, t[n++] = 255 & s, t[n++] = s >> 8 & 255, t[n++] = s >> 16 & 255, t[n++] = s >> 24 & 255), t.set(o, n), n += r.position;
                }
                function ze(t, e, r, n, i) {
                    t[n++] = Jt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
                    var o = t.write(r.value, n + 4, void 0, "utf8") + 1;
                    return t[n] = 255 & o, t[n + 1] = o >> 8 & 255, t[n + 2] = o >> 16 & 255, t[n + 3] = o >> 24 & 255, n = n + 4 + o - 1, t[n++] = 0, n;
                }
                function Ve(t, e, r, n, i, o, s) {
                    t[n++] = Ct, n += s ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
                    var a = n, u = {
                        $ref: r.collection || r.namespace,
                        $id: r.oid
                    };
                    null != r.db && (u.$db = r.db);
                    var h = Ke(t, u = Object.assign(u, r.fields), !1, n, i + 1, o), f = h - a;
                    return t[a++] = 255 & f, t[a++] = f >> 8 & 255, t[a++] = f >> 16 & 255, t[a++] = f >> 24 & 255, h;
                }
                function Ke(t, e, r, i, o, s, a, u) {
                    void 0 === r && (r = !1), void 0 === i && (i = 0), void 0 === o && (o = 0), void 0 === s && (s = !1), void 0 === a && (a = !0), void 0 === u && (u = []), i = i || 0, (u = u || []).push(e);
                    var h, f = i + 4;
                    if (Array.isArray(e)) for(var c = 0; c < e.length; c++){
                        var l = "" + c;
                        if ("function" == typeof (null == (b = e[c]) ? void 0 : b.toBSON) && (b = b.toBSON()), "string" == typeof b) f = Ae(t, l, b, f, !0);
                        else if ("number" == typeof b) f = Ee(t, l, b, f, !0);
                        else {
                            if ("bigint" == typeof b) throw new O3("Unsupported type BigInt, please use Decimal128");
                            if ("boolean" == typeof b) f = ke(t, l, b, f, !0);
                            else if (b instanceof Date || I2(b)) f = je(t, l, b, f, !0);
                            else if (void 0 === b) f = xe(t, l, 0, f, !0);
                            else if (null === b) f = xe(t, l, 0, f, !0);
                            else if ("ObjectId" === b._bsontype || "ObjectID" === b._bsontype) f = Be(t, l, b, f, !0);
                            else if (P2(b)) f = Te(t, l, b, f, !0);
                            else if (b instanceof RegExp || T2(b)) f = $e(t, l, b, f, !0);
                            else if ("object" === n49(b) && null == b._bsontype) f = Ie(t, l, b, f, r, o, s, a, !0, u);
                            else if ("object" === n49(b) && Mt(b) && "Decimal128" === b._bsontype) f = Ne(t, l, b, f, !0);
                            else if ("Long" === b._bsontype || "Timestamp" === b._bsontype) f = De(t, l, b, f, !0);
                            else if ("Double" === b._bsontype) f = Le(t, l, b, f, !0);
                            else if ("function" == typeof b && s) f = qe(t, l, b, f, 0, 0, !0);
                            else if ("Code" === b._bsontype) f = Ue(t, l, b, f, r, o, s, a, !0);
                            else if ("Binary" === b._bsontype) f = Fe(t, l, b, f, !0);
                            else if ("Symbol" === b._bsontype) f = ze(t, l, b, f, !0);
                            else if ("DBRef" === b._bsontype) f = Ve(t, l, b, f, o, s, !0);
                            else if ("BSONRegExp" === b._bsontype) f = Pe(t, l, b, f, !0);
                            else if ("Int32" === b._bsontype) f = Ce(t, l, b, f, !0);
                            else if ("MinKey" === b._bsontype || "MaxKey" === b._bsontype) f = Re(t, l, b, f, !0);
                            else if (void 0 !== b._bsontype) throw new O3("Unrecognized or invalid _bsontype: " + b._bsontype);
                        }
                    }
                    else if (e instanceof xt || (h = e, "[object Map]" === Object.prototype.toString.call(h))) for(var d = e.entries(), p = !1; !p;){
                        var y = d.next();
                        if (!(p = !!y.done)) {
                            l = y.value[0];
                            var m = n49(b = y.value[1]);
                            if ("string" == typeof l && !Oe.has(l)) {
                                if (null != l.match(Se)) throw Error("key " + l + " must not contain null bytes");
                                if (r) {
                                    if ("$" === l[0]) throw Error("key " + l + " must not start with '$'");
                                    if (~l.indexOf(".")) throw Error("key " + l + " must not contain '.'");
                                }
                            }
                            if ("string" === m) f = Ae(t, l, b, f);
                            else if ("number" === m) f = Ee(t, l, b, f);
                            else {
                                if ("bigint" === m || R2(b) || B2(b)) throw new O3("Unsupported type BigInt, please use Decimal128");
                                if ("boolean" === m) f = ke(t, l, b, f);
                                else if (b instanceof Date || I2(b)) f = je(t, l, b, f);
                                else if (null === b || void 0 === b && !1 === a) f = xe(t, l, 0, f);
                                else if ("ObjectId" === b._bsontype || "ObjectID" === b._bsontype) f = Be(t, l, b, f);
                                else if (P2(b)) f = Te(t, l, b, f);
                                else if (b instanceof RegExp || T2(b)) f = $e(t, l, b, f);
                                else if ("object" === m && null == b._bsontype) f = Ie(t, l, b, f, r, o, s, a, !1, u);
                                else if ("object" === m && "Decimal128" === b._bsontype) f = Ne(t, l, b, f);
                                else if ("Long" === b._bsontype || "Timestamp" === b._bsontype) f = De(t, l, b, f);
                                else if ("Double" === b._bsontype) f = Le(t, l, b, f);
                                else if ("Code" === b._bsontype) f = Ue(t, l, b, f, r, o, s, a);
                                else if ("function" == typeof b && s) f = qe(t, l, b, f, 0, 0, s);
                                else if ("Binary" === b._bsontype) f = Fe(t, l, b, f);
                                else if ("Symbol" === b._bsontype) f = ze(t, l, b, f);
                                else if ("DBRef" === b._bsontype) f = Ve(t, l, b, f, o, s);
                                else if ("BSONRegExp" === b._bsontype) f = Pe(t, l, b, f);
                                else if ("Int32" === b._bsontype) f = Ce(t, l, b, f);
                                else if ("MinKey" === b._bsontype || "MaxKey" === b._bsontype) f = Re(t, l, b, f);
                                else if (void 0 !== b._bsontype) throw new O3("Unrecognized or invalid _bsontype: " + b._bsontype);
                            }
                        }
                    }
                    else {
                        if ("function" == typeof (null == e ? void 0 : e.toBSON) && null != (e = e.toBSON()) && "object" !== n49(e)) throw new O3("toBSON function did not return an object");
                        for(var l in e){
                            var b;
                            "function" == typeof (null == (b = e[l]) ? void 0 : b.toBSON) && (b = b.toBSON());
                            m = n49(b);
                            if ("string" == typeof l && !Oe.has(l)) {
                                if (null != l.match(Se)) throw Error("key " + l + " must not contain null bytes");
                                if (r) {
                                    if ("$" === l[0]) throw Error("key " + l + " must not start with '$'");
                                    if (~l.indexOf(".")) throw Error("key " + l + " must not contain '.'");
                                }
                            }
                            if ("string" === m) f = Ae(t, l, b, f);
                            else if ("number" === m) f = Ee(t, l, b, f);
                            else {
                                if ("bigint" === m) throw new O3("Unsupported type BigInt, please use Decimal128");
                                if ("boolean" === m) f = ke(t, l, b, f);
                                else if (b instanceof Date || I2(b)) f = je(t, l, b, f);
                                else if (void 0 === b) !1 === a && (f = xe(t, l, 0, f));
                                else if (null === b) f = xe(t, l, 0, f);
                                else if ("ObjectId" === b._bsontype || "ObjectID" === b._bsontype) f = Be(t, l, b, f);
                                else if (P2(b)) f = Te(t, l, b, f);
                                else if (b instanceof RegExp || T2(b)) f = $e(t, l, b, f);
                                else if ("object" === m && null == b._bsontype) f = Ie(t, l, b, f, r, o, s, a, !1, u);
                                else if ("object" === m && "Decimal128" === b._bsontype) f = Ne(t, l, b, f);
                                else if ("Long" === b._bsontype || "Timestamp" === b._bsontype) f = De(t, l, b, f);
                                else if ("Double" === b._bsontype) f = Le(t, l, b, f);
                                else if ("Code" === b._bsontype) f = Ue(t, l, b, f, r, o, s, a);
                                else if ("function" == typeof b && s) f = qe(t, l, b, f, 0, 0, s);
                                else if ("Binary" === b._bsontype) f = Fe(t, l, b, f);
                                else if ("Symbol" === b._bsontype) f = ze(t, l, b, f);
                                else if ("DBRef" === b._bsontype) f = Ve(t, l, b, f, o, s);
                                else if ("BSONRegExp" === b._bsontype) f = Pe(t, l, b, f);
                                else if ("Int32" === b._bsontype) f = Ce(t, l, b, f);
                                else if ("MinKey" === b._bsontype || "MaxKey" === b._bsontype) f = Re(t, l, b, f);
                                else if (void 0 !== b._bsontype) throw new O3("Unrecognized or invalid _bsontype: " + b._bsontype);
                            }
                        }
                    }
                    u.pop(), t[f++] = 0;
                    var v = f - i;
                    return t[i++] = 255 & v, t[i++] = v >> 8 & 255, t[i++] = v >> 16 & 255, t[i++] = v >> 24 & 255, f;
                }
                var He = g3.alloc(17825792);
                function Ze(t) {
                    He.length < t && (He = g3.alloc(t));
                }
                function We(t, e) {
                    void 0 === e && (e = {
                    });
                    var r = "boolean" == typeof e.checkKeys && e.checkKeys, n = "boolean" == typeof e.serializeFunctions && e.serializeFunctions, i = "boolean" != typeof e.ignoreUndefined || e.ignoreUndefined, o = "number" == typeof e.minInternalBufferSize ? e.minInternalBufferSize : 17825792;
                    He.length < o && (He = g3.alloc(o));
                    var s = Ke(He, t, r, 0, 0, n, i, []), a = g3.alloc(s);
                    return He.copy(a, 0, 0, a.length), a;
                }
                function Je(t, e, r) {
                    void 0 === r && (r = {
                    });
                    var n = "boolean" == typeof r.checkKeys && r.checkKeys, i = "boolean" == typeof r.serializeFunctions && r.serializeFunctions, o = "boolean" != typeof r.ignoreUndefined || r.ignoreUndefined, s = "number" == typeof r.index ? r.index : 0, a = Ke(He, t, n, 0, 0, i, o);
                    return He.copy(e, s, 0, a), s + a - 1;
                }
                function Ye(t, e) {
                    return void 0 === e && (e = {
                    }), ve(t instanceof g3 ? t : C2(t), e);
                }
                function Qe(t, e) {
                    return void 0 === e && (e = {
                    }), le(t, "boolean" == typeof (e = e || {
                    }).serializeFunctions && e.serializeFunctions, "boolean" != typeof e.ignoreUndefined || e.ignoreUndefined);
                }
                function Ge(t, e, r, n, i, o) {
                    for(var s = Object.assign({
                        allowObjectSmallerThanBufferSize: !0,
                        index: 0
                    }, o), a = C2(t), u = e, h = 0; h < r; h++){
                        var f = a[u] | a[u + 1] << 8 | a[u + 2] << 16 | a[u + 3] << 24;
                        s.index = u, n[i + h] = ve(a, s), u += f;
                    }
                    return u;
                }
                var Xe = {
                    Binary: K,
                    Code: H,
                    DBRef: W,
                    Decimal128: ht,
                    Double: ft,
                    Int32: ct,
                    Long: G,
                    UUID: V2,
                    Map: xt,
                    MaxKey: lt,
                    MinKey: dt,
                    ObjectId: bt,
                    ObjectID: bt,
                    BSONRegExp: vt,
                    BSONSymbol: gt,
                    Timestamp: _t,
                    EJSON: Et,
                    setInternalBufferSize: Ze,
                    serialize: We,
                    serializeWithBufferAndIndex: Je,
                    deserialize: Ye,
                    calculateObjectSize: Qe,
                    deserializeStream: Ge,
                    BSONError: S3,
                    BSONTypeError: O3
                };
                e97.default = Xe;
            }).call(this, r79(6));
        },
        function(t226, e113, r91) {
            "use strict";
            var n55 = r91(0), i35 = r91(94), o26 = r91(2).Buffer, s22 = new Array(16);
            function a() {
                i35.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
            }
            function u(t, e) {
                return t << e | t >>> 32 - e;
            }
            function h(t, e, r, n, i, o, s) {
                return u(t + (e & r | ~e & n) + i + o | 0, s) + e | 0;
            }
            function f(t, e, r, n, i, o, s) {
                return u(t + (e & n | r & ~n) + i + o | 0, s) + e | 0;
            }
            function c(t, e, r, n, i, o, s) {
                return u(t + (e ^ r ^ n) + i + o | 0, s) + e | 0;
            }
            function l(t, e, r, n, i, o, s) {
                return u(t + (r ^ (e | ~n)) + i + o | 0, s) + e | 0;
            }
            n55(a, i35), a.prototype._update = function() {
                for(var t = s22, e = 0; e < 16; ++e)t[e] = this._block.readInt32LE(4 * e);
                var r = this._a, n = this._b, i = this._c, o = this._d;
                r = h(r, n, i, o, t[0], 3614090360, 7), o = h(o, r, n, i, t[1], 3905402710, 12), i = h(i, o, r, n, t[2], 606105819, 17), n = h(n, i, o, r, t[3], 3250441966, 22), r = h(r, n, i, o, t[4], 4118548399, 7), o = h(o, r, n, i, t[5], 1200080426, 12), i = h(i, o, r, n, t[6], 2821735955, 17), n = h(n, i, o, r, t[7], 4249261313, 22), r = h(r, n, i, o, t[8], 1770035416, 7), o = h(o, r, n, i, t[9], 2336552879, 12), i = h(i, o, r, n, t[10], 4294925233, 17), n = h(n, i, o, r, t[11], 2304563134, 22), r = h(r, n, i, o, t[12], 1804603682, 7), o = h(o, r, n, i, t[13], 4254626195, 12), i = h(i, o, r, n, t[14], 2792965006, 17), r = f(r, n = h(n, i, o, r, t[15], 1236535329, 22), i, o, t[1], 4129170786, 5), o = f(o, r, n, i, t[6], 3225465664, 9), i = f(i, o, r, n, t[11], 643717713, 14), n = f(n, i, o, r, t[0], 3921069994, 20), r = f(r, n, i, o, t[5], 3593408605, 5), o = f(o, r, n, i, t[10], 38016083, 9), i = f(i, o, r, n, t[15], 3634488961, 14), n = f(n, i, o, r, t[4], 3889429448, 20), r = f(r, n, i, o, t[9], 568446438, 5), o = f(o, r, n, i, t[14], 3275163606, 9), i = f(i, o, r, n, t[3], 4107603335, 14), n = f(n, i, o, r, t[8], 1163531501, 20), r = f(r, n, i, o, t[13], 2850285829, 5), o = f(o, r, n, i, t[2], 4243563512, 9), i = f(i, o, r, n, t[7], 1735328473, 14), r = c(r, n = f(n, i, o, r, t[12], 2368359562, 20), i, o, t[5], 4294588738, 4), o = c(o, r, n, i, t[8], 2272392833, 11), i = c(i, o, r, n, t[11], 1839030562, 16), n = c(n, i, o, r, t[14], 4259657740, 23), r = c(r, n, i, o, t[1], 2763975236, 4), o = c(o, r, n, i, t[4], 1272893353, 11), i = c(i, o, r, n, t[7], 4139469664, 16), n = c(n, i, o, r, t[10], 3200236656, 23), r = c(r, n, i, o, t[13], 681279174, 4), o = c(o, r, n, i, t[0], 3936430074, 11), i = c(i, o, r, n, t[3], 3572445317, 16), n = c(n, i, o, r, t[6], 76029189, 23), r = c(r, n, i, o, t[9], 3654602809, 4), o = c(o, r, n, i, t[12], 3873151461, 11), i = c(i, o, r, n, t[15], 530742520, 16), r = l(r, n = c(n, i, o, r, t[2], 3299628645, 23), i, o, t[0], 4096336452, 6), o = l(o, r, n, i, t[7], 1126891415, 10), i = l(i, o, r, n, t[14], 2878612391, 15), n = l(n, i, o, r, t[5], 4237533241, 21), r = l(r, n, i, o, t[12], 1700485571, 6), o = l(o, r, n, i, t[3], 2399980690, 10), i = l(i, o, r, n, t[10], 4293915773, 15), n = l(n, i, o, r, t[1], 2240044497, 21), r = l(r, n, i, o, t[8], 1873313359, 6), o = l(o, r, n, i, t[15], 4264355552, 10), i = l(i, o, r, n, t[6], 2734768916, 15), n = l(n, i, o, r, t[13], 1309151649, 21), r = l(r, n, i, o, t[4], 4149444226, 6), o = l(o, r, n, i, t[11], 3174756917, 10), i = l(i, o, r, n, t[2], 718787259, 15), n = l(n, i, o, r, t[9], 3951481745, 21), this._a = this._a + r | 0, this._b = this._b + n | 0, this._c = this._c + i | 0, this._d = this._d + o | 0;
            }, a.prototype._digest = function() {
                this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
                var t = o26.allocUnsafe(16);
                return t.writeInt32LE(this._a, 0), t.writeInt32LE(this._b, 4), t.writeInt32LE(this._c, 8), t.writeInt32LE(this._d, 12), t;
            }, t226.exports = a;
        },
        function(t227, e114, r92) {
            "use strict";
            var n56 = r92(29).codes.ERR_STREAM_PREMATURE_CLOSE;
            function i36() {
            }
            t227.exports = function t228(e115, r93, o) {
                if ("function" == typeof r93) return t228(e115, null, r93);
                r93 || (r93 = {
                }), o = (function(t) {
                    var e = !1;
                    return function() {
                        if (!e) {
                            e = !0;
                            for(var r = arguments.length, n = new Array(r), i = 0; i < r; i++)n[i] = arguments[i];
                            t.apply(this, n);
                        }
                    };
                })(o || i36);
                var s = r93.readable || !1 !== r93.readable && e115.readable, a = r93.writable || !1 !== r93.writable && e115.writable, u = function() {
                    e115.writable || f();
                }, h = e115._writableState && e115._writableState.finished, f = function() {
                    a = !1, h = !0, s || o.call(e115);
                }, c = e115._readableState && e115._readableState.endEmitted, l = function() {
                    s = !1, c = !0, a || o.call(e115);
                }, d = function(t) {
                    o.call(e115, t);
                }, p = function() {
                    var t;
                    return s && !c ? (e115._readableState && e115._readableState.ended || (t = new n56), o.call(e115, t)) : a && !h ? (e115._writableState && e115._writableState.ended || (t = new n56), o.call(e115, t)) : void 0;
                }, y = function() {
                    e115.req.on("finish", f);
                };
                return !function(t) {
                    return t.setHeader && "function" == typeof t.abort;
                }(e115) ? a && !e115._writableState && (e115.on("end", u), e115.on("close", u)) : (e115.on("complete", f), e115.on("abort", p), e115.req ? y() : e115.on("request", y)), e115.on("end", l), e115.on("finish", f), !1 !== r93.error && e115.on("error", d), e115.on("close", p), function() {
                    e115.removeListener("complete", f), e115.removeListener("abort", p), e115.removeListener("request", y), e115.req && e115.req.removeListener("finish", f), e115.removeListener("end", u), e115.removeListener("close", u), e115.removeListener("finish", f), e115.removeListener("end", l), e115.removeListener("error", d), e115.removeListener("close", p);
                };
            };
        },
        function(t229, e116, r94) {
            "use strict";
            var n57 = r94(3).Buffer, i37 = r94(0), o27 = r94(94), s23 = new Array(16), a22 = [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                7,
                4,
                13,
                1,
                10,
                6,
                15,
                3,
                12,
                0,
                9,
                5,
                2,
                14,
                11,
                8,
                3,
                10,
                14,
                4,
                9,
                15,
                8,
                1,
                2,
                7,
                0,
                6,
                13,
                11,
                5,
                12,
                1,
                9,
                11,
                10,
                0,
                8,
                12,
                4,
                13,
                3,
                7,
                15,
                14,
                5,
                6,
                2,
                4,
                0,
                5,
                9,
                7,
                12,
                2,
                10,
                14,
                1,
                3,
                8,
                11,
                6,
                15,
                13
            ], u = [
                5,
                14,
                7,
                0,
                9,
                2,
                11,
                4,
                13,
                6,
                15,
                8,
                1,
                10,
                3,
                12,
                6,
                11,
                3,
                7,
                0,
                13,
                5,
                10,
                14,
                15,
                8,
                12,
                4,
                9,
                1,
                2,
                15,
                5,
                1,
                3,
                7,
                14,
                6,
                9,
                11,
                8,
                12,
                2,
                10,
                0,
                4,
                13,
                8,
                6,
                4,
                1,
                3,
                11,
                15,
                0,
                5,
                12,
                2,
                13,
                9,
                7,
                10,
                14,
                12,
                15,
                10,
                4,
                1,
                5,
                8,
                7,
                6,
                2,
                13,
                14,
                0,
                3,
                9,
                11
            ], h = [
                11,
                14,
                15,
                12,
                5,
                8,
                7,
                9,
                11,
                13,
                14,
                15,
                6,
                7,
                9,
                8,
                7,
                6,
                8,
                13,
                11,
                9,
                7,
                15,
                7,
                12,
                15,
                9,
                11,
                7,
                13,
                12,
                11,
                13,
                6,
                7,
                14,
                9,
                13,
                15,
                14,
                8,
                13,
                6,
                5,
                12,
                7,
                5,
                11,
                12,
                14,
                15,
                14,
                15,
                9,
                8,
                9,
                14,
                5,
                6,
                8,
                6,
                5,
                12,
                9,
                15,
                5,
                11,
                6,
                8,
                13,
                12,
                5,
                12,
                13,
                14,
                11,
                8,
                5,
                6
            ], f = [
                8,
                9,
                9,
                11,
                13,
                15,
                15,
                5,
                7,
                7,
                8,
                11,
                14,
                14,
                12,
                6,
                9,
                13,
                15,
                7,
                12,
                8,
                9,
                11,
                7,
                7,
                12,
                7,
                6,
                15,
                13,
                11,
                9,
                7,
                15,
                11,
                8,
                6,
                6,
                14,
                12,
                13,
                5,
                14,
                13,
                13,
                7,
                5,
                15,
                5,
                8,
                11,
                14,
                14,
                6,
                14,
                6,
                9,
                12,
                9,
                12,
                5,
                15,
                8,
                8,
                5,
                12,
                9,
                12,
                5,
                14,
                6,
                8,
                13,
                6,
                5,
                15,
                13,
                11,
                11
            ], c = [
                0,
                1518500249,
                1859775393,
                2400959708,
                2840853838
            ], l = [
                1352829926,
                1548603684,
                1836072691,
                2053994217,
                0
            ];
            function d7() {
                o27.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
            }
            function p(t, e) {
                return t << e | t >>> 32 - e;
            }
            function y(t, e, r, n, i, o, s, a) {
                return p(t + (e ^ r ^ n) + o + s | 0, a) + i | 0;
            }
            function m(t, e, r, n, i, o, s, a) {
                return p(t + (e & r | ~e & n) + o + s | 0, a) + i | 0;
            }
            function b(t, e, r, n, i, o, s, a) {
                return p(t + ((e | ~r) ^ n) + o + s | 0, a) + i | 0;
            }
            function v(t, e, r, n, i, o, s, a) {
                return p(t + (e & n | r & ~n) + o + s | 0, a) + i | 0;
            }
            function g(t, e, r, n, i, o, s, a) {
                return p(t + (e ^ (r | ~n)) + o + s | 0, a) + i | 0;
            }
            i37(d7, o27), d7.prototype._update = function() {
                for(var t = s23, e = 0; e < 16; ++e)t[e] = this._block.readInt32LE(4 * e);
                for(var r = 0 | this._a, n = 0 | this._b, i = 0 | this._c, o = 0 | this._d, d = 0 | this._e, w = 0 | this._a, _ = 0 | this._b, M = 0 | this._c, S = 0 | this._d, O = 0 | this._e, A = 0; A < 80; A += 1){
                    var E, x;
                    A < 16 ? (E = y(r, n, i, o, d, t[a22[A]], c[0], h[A]), x = g(w, _, M, S, O, t[u[A]], l[0], f[A])) : A < 32 ? (E = m(r, n, i, o, d, t[a22[A]], c[1], h[A]), x = v(w, _, M, S, O, t[u[A]], l[1], f[A])) : A < 48 ? (E = b(r, n, i, o, d, t[a22[A]], c[2], h[A]), x = b(w, _, M, S, O, t[u[A]], l[2], f[A])) : A < 64 ? (E = v(r, n, i, o, d, t[a22[A]], c[3], h[A]), x = m(w, _, M, S, O, t[u[A]], l[3], f[A])) : (E = g(r, n, i, o, d, t[a22[A]], c[4], h[A]), x = y(w, _, M, S, O, t[u[A]], l[4], f[A])), r = d, d = o, o = p(i, 10), i = n, n = E, w = O, O = S, S = p(M, 10), M = _, _ = x;
                }
                var k = this._b + i + S | 0;
                this._b = this._c + o + O | 0, this._c = this._d + d + w | 0, this._d = this._e + r + _ | 0, this._e = this._a + n + M | 0, this._a = k;
            }, d7.prototype._digest = function() {
                this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
                var t = n57.alloc ? n57.alloc(20) : new n57(20);
                return t.writeInt32LE(this._a, 0), t.writeInt32LE(this._b, 4), t.writeInt32LE(this._c, 8), t.writeInt32LE(this._d, 12), t.writeInt32LE(this._e, 16), t;
            }, t229.exports = d7;
        },
        function(t230, e, r95) {
            (e = t230.exports = function(t) {
                t = t.toLowerCase();
                var r = e[t];
                if (!r) throw new Error(t + " is not supported (we accept pull requests)");
                return new r;
            }).sha = r95(191), e.sha1 = r95(192), e.sha224 = r95(193), e.sha256 = r95(103), e.sha384 = r95(194), e.sha512 = r95(104);
        },
        function(t, e, r) {
            (e = t.exports = r(105)).Stream = e, e.Readable = e, e.Writable = r(65), e.Duplex = r(26), e.Transform = r(109), e.PassThrough = r(200);
        },
        function(t231, e117, r96) {
            "use strict";
            (function(e118, n58, i38) {
                var o28 = r96(47);
                function s24(t232) {
                    var e119 = this;
                    this.next = null, this.entry = null, this.finish = function() {
                        !function(t, e, r) {
                            var n = t.entry;
                            t.entry = null;
                            for(; n;){
                                var i = n.callback;
                                e.pendingcb--, i(r), n = n.next;
                            }
                            e.corkedRequestsFree ? e.corkedRequestsFree.next = t : e.corkedRequestsFree = t;
                        }(e119, t232);
                    };
                }
                t231.exports = v;
                var a23, u22 = !e118.browser && [
                    "v0.10",
                    "v0.9."
                ].indexOf(e118.version.slice(0, 5)) > -1 ? n58 : o28.nextTick;
                v.WritableState = b;
                var h17 = Object.create(r96(37));
                h17.inherits = r96(0);
                var f18 = {
                    deprecate: r96(101)
                }, c14 = r96(106), l = r96(2).Buffer, d = i38.Uint8Array || function() {
                };
                var p, y = r96(107);
                function m() {
                }
                function b(t233, e120) {
                    a23 = a23 || r96(26), t233 = t233 || {
                    };
                    var n59 = e120 instanceof a23;
                    this.objectMode = !!t233.objectMode, n59 && (this.objectMode = this.objectMode || !!t233.writableObjectMode);
                    var i39 = t233.highWaterMark, h = t233.writableHighWaterMark, f = this.objectMode ? 16 : 16384;
                    this.highWaterMark = i39 || 0 === i39 ? i39 : n59 && (h || 0 === h) ? h : f, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
                    var c = !1 === t233.decodeStrings;
                    this.decodeStrings = !c, this.defaultEncoding = t233.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(t234) {
                        !function(t235, e121) {
                            var r97 = t235._writableState, n60 = r97.sync, i40 = r97.writecb;
                            if ((function(t) {
                                t.writing = !1, t.writecb = null, t.length -= t.writelen, t.writelen = 0;
                            })(r97), e121) !function(t, e, r, n, i) {
                                --e.pendingcb, r ? (o28.nextTick(i, n), o28.nextTick(O, t, e), t._writableState.errorEmitted = !0, t.emit("error", n)) : (i(n), t._writableState.errorEmitted = !0, t.emit("error", n), O(t, e));
                            }(t235, r97, n60, e121, i40);
                            else {
                                var s = M(r97);
                                s || r97.corked || r97.bufferProcessing || !r97.bufferedRequest || _(t235, r97), n60 ? u22(w, t235, r97, s, i40) : w(t235, r97, s, i40);
                            }
                        }(e120, t234);
                    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.bufferedRequestCount = 0, this.corkedRequestsFree = new s24(this);
                }
                function v(t) {
                    if (a23 = a23 || r96(26), !(p.call(v, this) || this instanceof a23)) return new v(t);
                    this._writableState = new b(t, this), this.writable = !0, t && ("function" == typeof t.write && (this._write = t.write), "function" == typeof t.writev && (this._writev = t.writev), "function" == typeof t.destroy && (this._destroy = t.destroy), "function" == typeof t.final && (this._final = t.final)), c14.call(this);
                }
                function g(t, e, r, n, i, o, s) {
                    e.writelen = n, e.writecb = s, e.writing = !0, e.sync = !0, r ? t._writev(i, e.onwrite) : t._write(i, o, e.onwrite), e.sync = !1;
                }
                function w(t236, e122, r, n) {
                    r || (function(t, e) {
                        0 === e.length && e.needDrain && (e.needDrain = !1, t.emit("drain"));
                    })(t236, e122), e122.pendingcb--, n(), O(t236, e122);
                }
                function _(t, e) {
                    e.bufferProcessing = !0;
                    var r = e.bufferedRequest;
                    if (t._writev && r && r.next) {
                        var n = e.bufferedRequestCount, i = new Array(n), o = e.corkedRequestsFree;
                        o.entry = r;
                        for(var a = 0, u = !0; r;)i[a] = r, r.isBuf || (u = !1), r = r.next, a += 1;
                        i.allBuffers = u, g(t, e, !0, e.length, i, "", o.finish), e.pendingcb++, e.lastBufferedRequest = null, o.next ? (e.corkedRequestsFree = o.next, o.next = null) : e.corkedRequestsFree = new s24(e), e.bufferedRequestCount = 0;
                    } else {
                        for(; r;){
                            var h = r.chunk, f = r.encoding, c = r.callback;
                            if (g(t, e, !1, e.objectMode ? 1 : h.length, h, f, c), r = r.next, e.bufferedRequestCount--, e.writing) break;
                        }
                        null === r && (e.lastBufferedRequest = null);
                    }
                    e.bufferedRequest = r, e.bufferProcessing = !1;
                }
                function M(t) {
                    return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing;
                }
                function S(t, e) {
                    t._final(function(r) {
                        e.pendingcb--, r && t.emit("error", r), e.prefinished = !0, t.emit("prefinish"), O(t, e);
                    });
                }
                function O(t237, e123) {
                    var r = M(e123);
                    return r && (!function(t, e) {
                        e.prefinished || e.finalCalled || ("function" == typeof t._final ? (e.pendingcb++, e.finalCalled = !0, o28.nextTick(S, t, e)) : (e.prefinished = !0, t.emit("prefinish")));
                    }(t237, e123), 0 === e123.pendingcb && (e123.finished = !0, t237.emit("finish"))), r;
                }
                h17.inherits(v, c14), b.prototype.getBuffer = function() {
                    for(var t = this.bufferedRequest, e = []; t;)e.push(t), t = t.next;
                    return e;
                }, (function() {
                    try {
                        Object.defineProperty(b.prototype, "buffer", {
                            get: f18.deprecate(function() {
                                return this.getBuffer();
                            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                        });
                    } catch (t) {
                    }
                })(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (p = Function.prototype[Symbol.hasInstance], Object.defineProperty(v, Symbol.hasInstance, {
                    value: function(t) {
                        return !!p.call(this, t) || this === v && t && t._writableState instanceof b;
                    }
                })) : p = function(t) {
                    return t instanceof this;
                }, v.prototype.pipe = function() {
                    this.emit("error", new Error("Cannot pipe, not readable"));
                }, v.prototype.write = function(t238, e124, r98) {
                    var n61, i41 = this._writableState, s25 = !1, a24 = !i41.objectMode && (n61 = t238, l.isBuffer(n61) || n61 instanceof d);
                    return a24 && !l.isBuffer(t238) && (t238 = (function(t) {
                        return l.from(t);
                    })(t238)), "function" == typeof e124 && (r98 = e124, e124 = null), a24 ? e124 = "buffer" : e124 || (e124 = i41.defaultEncoding), "function" != typeof r98 && (r98 = m), i41.ended ? (function(t, e) {
                        var r = new Error("write after end");
                        t.emit("error", r), o28.nextTick(e, r);
                    })(this, r98) : (a24 || (function(t, e, r, n) {
                        var i = !0, s = !1;
                        return null === r ? s = new TypeError("May not write null values to stream") : "string" == typeof r || void 0 === r || e.objectMode || (s = new TypeError("Invalid non-string/buffer chunk")), s && (t.emit("error", s), o28.nextTick(n, s), i = !1), i;
                    })(this, i41, t238, r98)) && (i41.pendingcb++, s25 = (function(t239, e125, r99, n, i, o) {
                        if (!r99) {
                            var s = function(t, e, r) {
                                t.objectMode || !1 === t.decodeStrings || "string" != typeof e || (e = l.from(e, r));
                                return e;
                            }(e125, n, i);
                            n !== s && (r99 = !0, i = "buffer", n = s);
                        }
                        var a = e125.objectMode ? 1 : n.length;
                        e125.length += a;
                        var u = e125.length < e125.highWaterMark;
                        u || (e125.needDrain = !0);
                        if (e125.writing || e125.corked) {
                            var h = e125.lastBufferedRequest;
                            e125.lastBufferedRequest = {
                                chunk: n,
                                encoding: i,
                                isBuf: r99,
                                callback: o,
                                next: null
                            }, h ? h.next = e125.lastBufferedRequest : e125.bufferedRequest = e125.lastBufferedRequest, e125.bufferedRequestCount += 1;
                        } else g(t239, e125, !1, a, n, i, o);
                        return u;
                    })(this, i41, a24, t238, e124, r98)), s25;
                }, v.prototype.cork = function() {
                    this._writableState.corked++;
                }, v.prototype.uncork = function() {
                    var t = this._writableState;
                    t.corked && (t.corked--, t.writing || t.corked || t.finished || t.bufferProcessing || !t.bufferedRequest || _(this, t));
                }, v.prototype.setDefaultEncoding = function(t) {
                    if ("string" == typeof t && (t = t.toLowerCase()), !([
                        "hex",
                        "utf8",
                        "utf-8",
                        "ascii",
                        "binary",
                        "base64",
                        "ucs2",
                        "ucs-2",
                        "utf16le",
                        "utf-16le",
                        "raw"
                    ].indexOf((t + "").toLowerCase()) > -1)) throw new TypeError("Unknown encoding: " + t);
                    return this._writableState.defaultEncoding = t, this;
                }, Object.defineProperty(v.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.highWaterMark;
                    }
                }), v.prototype._write = function(t, e, r) {
                    r(new Error("_write() is not implemented"));
                }, v.prototype._writev = null, v.prototype.end = function(t240, e126, r100) {
                    var n = this._writableState;
                    "function" == typeof t240 ? (r100 = t240, t240 = null, e126 = null) : "function" == typeof e126 && (r100 = e126, e126 = null), null != t240 && this.write(t240, e126), n.corked && (n.corked = 1, this.uncork()), n.ending || n.finished || (function(t, e, r) {
                        e.ending = !0, O(t, e), r && (e.finished ? o28.nextTick(r) : t.once("finish", r));
                        e.ended = !0, t.writable = !1;
                    })(this, n, r100);
                }, Object.defineProperty(v.prototype, "destroyed", {
                    get: function() {
                        return void 0 !== this._writableState && this._writableState.destroyed;
                    },
                    set: function(t) {
                        this._writableState && (this._writableState.destroyed = t);
                    }
                }), v.prototype.destroy = y.destroy, v.prototype._undestroy = y.undestroy, v.prototype._destroy = function(t, e) {
                    this.end(), e(t);
                };
            }).call(this, r96(5), r96(108).setImmediate, r96(6));
        },
        function(t241, e127, r101) {
            "use strict";
            var n62 = r101(10);
            function i42(t) {
                this.options = t, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0;
            }
            t241.exports = i42, i42.prototype._init = function() {
            }, i42.prototype.update = function(t) {
                return 0 === t.length ? [] : "decrypt" === this.type ? this._updateDecrypt(t) : this._updateEncrypt(t);
            }, i42.prototype._buffer = function(t, e) {
                for(var r = Math.min(this.buffer.length - this.bufferOff, t.length - e), n = 0; n < r; n++)this.buffer[this.bufferOff + n] = t[e + n];
                return this.bufferOff += r, r;
            }, i42.prototype._flushBuffer = function(t, e) {
                return this._update(this.buffer, 0, t, e), this.bufferOff = 0, this.blockSize;
            }, i42.prototype._updateEncrypt = function(t) {
                var e = 0, r = 0, n = (this.bufferOff + t.length) / this.blockSize | 0, i = new Array(n * this.blockSize);
                0 !== this.bufferOff && (e += this._buffer(t, e), this.bufferOff === this.buffer.length && (r += this._flushBuffer(i, r)));
                for(var o = t.length - (t.length - e) % this.blockSize; e < o; e += this.blockSize)this._update(t, e, i, r), r += this.blockSize;
                for(; e < t.length; e++, this.bufferOff++)this.buffer[this.bufferOff] = t[e];
                return i;
            }, i42.prototype._updateDecrypt = function(t) {
                for(var e = 0, r = 0, n = Math.ceil((this.bufferOff + t.length) / this.blockSize) - 1, i = new Array(n * this.blockSize); n > 0; n--)e += this._buffer(t, e), r += this._flushBuffer(i, r);
                return e += this._buffer(t, e), i;
            }, i42.prototype.final = function(t) {
                var e, r;
                return t && (e = this.update(t)), r = "encrypt" === this.type ? this._finalEncrypt() : this._finalDecrypt(), e ? e.concat(r) : r;
            }, i42.prototype._pad = function(t, e) {
                if (0 === e) return !1;
                for(; e < t.length;)t[e++] = 0;
                return !0;
            }, i42.prototype._finalEncrypt = function() {
                if (!this._pad(this.buffer, this.bufferOff)) return [];
                var t = new Array(this.blockSize);
                return this._update(this.buffer, 0, t, 0), t;
            }, i42.prototype._unpad = function(t) {
                return t;
            }, i42.prototype._finalDecrypt = function() {
                n62.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
                var t = new Array(this.blockSize);
                return this._flushBuffer(t, 0), this._unpad(t);
            };
        },
        function(t, e, r) {
            var n = r(213), i = r(221), o = r(122);
            e.createCipher = e.Cipher = n.createCipher, e.createCipheriv = e.Cipheriv = n.createCipheriv, e.createDecipher = e.Decipher = i.createDecipher, e.createDecipheriv = e.Decipheriv = i.createDecipheriv, e.listCiphers = e.getCiphers = function() {
                return Object.keys(o);
            };
        },
        function(t, e, r) {
            var n = {
                ECB: r(214),
                CBC: r(215),
                CFB: r(216),
                CFB8: r(217),
                CFB1: r(218),
                OFB: r(219),
                CTR: r(120),
                GCM: r(120)
            }, i = r(122);
            for(var o in i)i[o].module = n[i[o].mode];
            t.exports = i;
        },
        function(t242, e128, r102) {
            function n(t243) {
                return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t243);
            }
            var i;
            function o(t) {
                this.rand = t;
            }
            if (t242.exports = function(t) {
                return i || (i = new o(null)), i.generate(t);
            }, t242.exports.Rand = o, o.prototype.generate = function(t) {
                return this._rand(t);
            }, o.prototype._rand = function(t) {
                if (this.rand.getBytes) return this.rand.getBytes(t);
                for(var e = new Uint8Array(t), r = 0; r < e.length; r++)e[r] = this.rand.getByte();
                return e;
            }, "object" === ("undefined" == typeof self ? "undefined" : n(self))) self.crypto && self.crypto.getRandomValues ? o.prototype._rand = function(t) {
                var e = new Uint8Array(t);
                return self.crypto.getRandomValues(e), e;
            } : self.msCrypto && self.msCrypto.getRandomValues ? o.prototype._rand = function(t) {
                var e = new Uint8Array(t);
                return self.msCrypto.getRandomValues(e), e;
            } : "object" === ("undefined" == typeof window ? "undefined" : n(window)) && (o.prototype._rand = function() {
                throw new Error("Not implemented yet");
            });
            else try {
                var s = r102(227);
                if ("function" != typeof s.randomBytes) throw new Error("Not supported");
                o.prototype._rand = function(t) {
                    return s.randomBytes(t);
                };
            } catch (t) {
            }
        },
        function(t244, e129, r103) {
            /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */ var n63 = r103(3), i = n63.Buffer;
            function o(t, e) {
                for(var r in t)e[r] = t[r];
            }
            function s(t, e, r) {
                return i(t, e, r);
            }
            i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t244.exports = n63 : (o(n63, e129), e129.Buffer = s), s.prototype = Object.create(i.prototype), o(i, s), s.from = function(t, e, r) {
                if ("number" == typeof t) throw new TypeError("Argument must not be a number");
                return i(t, e, r);
            }, s.alloc = function(t, e, r) {
                if ("number" != typeof t) throw new TypeError("Argument must be a number");
                var n = i(t);
                return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n;
            }, s.allocUnsafe = function(t) {
                if ("number" != typeof t) throw new TypeError("Argument must be a number");
                return i(t);
            }, s.allocUnsafeSlow = function(t) {
                if ("number" != typeof t) throw new TypeError("Argument must be a number");
                return n63.SlowBuffer(t);
            };
        },
        function(t245, e130, r104) {
            (function(e131) {
                var n = r104(72), i43 = r104(28);
                function o(t) {
                    var e, r = t.modulus.byteLength();
                    do e = new n(i43(r));
                    while (e.cmp(t.modulus) >= 0 || !e.umod(t.prime1) || !e.umod(t.prime2))
                    return e;
                }
                function s26(t246, r) {
                    var i = function(t) {
                        var e = o(t);
                        return {
                            blinder: e.toRed(n.mont(t.modulus)).redPow(new n(t.publicExponent)).fromRed(),
                            unblinder: e.invm(t.modulus)
                        };
                    }(r), s = r.modulus.byteLength(), a = new n(t246).mul(i.blinder).umod(r.modulus), u = a.toRed(n.mont(r.prime1)), h = a.toRed(n.mont(r.prime2)), f = r.coefficient, c = r.prime1, l = r.prime2, d = u.redPow(r.exponent1).fromRed(), p = h.redPow(r.exponent2).fromRed(), y = d.isub(p).imul(f).umod(c).imul(l);
                    return p.iadd(y).imul(i.unblinder).umod(r.modulus).toArrayLike(e131, "be", s);
                }
                s26.getr = o, t245.exports = s26;
            }).call(this, r104(3).Buffer);
        },
        function(t247, e132, r105) {
            (function(t248) {
                function e133(t249) {
                    return (e133 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t249);
                }
                !function(t250, n64) {
                    function i44(t, e) {
                        if (!t) throw new Error(e || "Assertion failed");
                    }
                    function o29(t, e) {
                        t.super_ = e;
                        var r = function() {
                        };
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t;
                    }
                    function s27(t, e, r) {
                        if (s27.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
                    }
                    var a25;
                    "object" === e133(t250) ? t250.exports = s27 : n64.BN = s27, s27.BN = s27, s27.wordSize = 26;
                    try {
                        a25 = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r105(232).Buffer;
                    } catch (t251) {
                    }
                    function u23(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 48 && r <= 57 ? r - 48 : r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : void i44(!1, "Invalid character in " + t);
                    }
                    function h18(t, e, r) {
                        var n = u23(t, r);
                        return r - 1 >= e && (n |= u23(t, r - 1) << 4), n;
                    }
                    function f19(t, e, r, n) {
                        for(var o = 0, s = 0, a = Math.min(t.length, r), u = e; u < a; u++){
                            var h = t.charCodeAt(u) - 48;
                            o *= n, s = h >= 49 ? h - 49 + 10 : h >= 17 ? h - 17 + 10 : h, i44(h >= 0 && s < n, "Invalid character"), o += s;
                        }
                        return o;
                    }
                    function c15(t, e) {
                        t.words = e.words, t.length = e.length, t.negative = e.negative, t.red = e.red;
                    }
                    if (s27.isBN = function(t) {
                        return t instanceof s27 || null !== t && "object" === e133(t) && t.constructor.wordSize === s27.wordSize && Array.isArray(t.words);
                    }, s27.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e;
                    }, s27.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e;
                    }, s27.prototype._init = function(t, r, n) {
                        if ("number" == typeof t) return this._initNumber(t, r, n);
                        if ("object" === e133(t)) return this._initArray(t, r, n);
                        "hex" === r && (r = 16), i44(r === (0 | r) && r >= 2 && r <= 36);
                        var o = 0;
                        "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
                    }, s27.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [
                            67108863 & t
                        ], this.length = 1) : t < 4503599627370496 ? (this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863
                        ], this.length = 2) : (i44(t < 9007199254740992), this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863,
                            1
                        ], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
                    }, s27.prototype._initArray = function(t, e, r) {
                        if (i44("number" == typeof t.length), t.length <= 0) return this.words = [
                            0
                        ], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var o, s, a = 0;
                        if ("be" === r) for(n = t.length - 1, o = 0; n >= 0; n -= 3)s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        else if ("le" === r) for(n = 0, o = 0; n < t.length; n += 3)s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        return this._strip();
                    }, s27.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var i, o = 0, s = 0;
                        if ("be" === r) for(n = t.length - 1; n >= e; n -= 2)i = h18(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        else for(n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2)i = h18(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        this._strip();
                    }, s27.prototype._parseBase = function(t, e, r) {
                        this.words = [
                            0
                        ], this.length = 1;
                        for(var n = 0, i = 1; i <= 67108863; i *= e)n++;
                        n--, i = i / e | 0;
                        for(var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n)u = f19(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var c = 1;
                            for(u = f19(t, h, t.length, e), h = 0; h < s; h++)c *= e;
                            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        }
                        this._strip();
                    }, s27.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for(var e = 0; e < this.length; e++)t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red;
                    }, s27.prototype._move = function(t) {
                        c15(t, this);
                    }, s27.prototype.clone = function() {
                        var t = new s27(null);
                        return this.copy(t), t;
                    }, s27.prototype._expand = function(t) {
                        for(; this.length < t;)this.words[this.length++] = 0;
                        return this;
                    }, s27.prototype._strip = function() {
                        for(; this.length > 1 && 0 === this.words[this.length - 1];)this.length--;
                        return this._normSign();
                    }, s27.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }, "undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
                        s27.prototype[Symbol.for("nodejs.util.inspect.custom")] = l14;
                    } catch (t252) {
                        s27.prototype.inspect = l14;
                    }
                    else s27.prototype.inspect = l14;
                    function l14() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    }
                    var d8 = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000"
                    ], p6 = [
                        0,
                        0,
                        25,
                        16,
                        12,
                        11,
                        10,
                        9,
                        8,
                        8,
                        7,
                        7,
                        7,
                        7,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5
                    ], y5 = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        10000000,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64000000,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        24300000,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176
                    ];
                    s27.prototype.toString = function(t, e) {
                        var r;
                        if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                            r = "";
                            for(var n = 0, o = 0, s = 0; s < this.length; s++){
                                var a = this.words[s], u = (16777215 & (a << n | o)).toString(16);
                                r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? d8[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
                            }
                            for(0 !== o && (r = o.toString(16) + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var h = p6[t], f = y5[t];
                            r = "";
                            var c = this.clone();
                            for(c.negative = 0; !c.isZero();){
                                var l = c.modrn(f).toString(t);
                                r = (c = c.idivn(f)).isZero() ? l + r : d8[h - l.length] + l + r;
                            }
                            for(this.isZero() && (r = "0" + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        i44(!1, "Base should be between 2 and 36");
                    }, s27.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i44(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
                    }, s27.prototype.toJSON = function() {
                        return this.toString(16, 2);
                    }, a25 && (s27.prototype.toBuffer = function(t, e) {
                        return this.toArrayLike(a25, t, e);
                    }), s27.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e);
                    };
                    function m5(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0], o = 0 | e.words[0], s = i * o, a = 67108863 & s, u = s / 67108864 | 0;
                        r.words[0] = a;
                        for(var h = 1; h < n; h++){
                            for(var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++){
                                var p = h - d | 0;
                                f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
                            }
                            r.words[h] = 0 | c, u = 0 | f;
                        }
                        return 0 !== u ? r.words[h] = 0 | u : r.length--, r._strip();
                    }
                    s27.prototype.toArrayLike = function(t253, e134, r) {
                        this._strip();
                        var n = this.byteLength(), o = r || Math.max(1, n);
                        i44(n <= o, "byte array longer than desired length"), i44(o > 0, "Requested array length <= 0");
                        var s = function(t, e) {
                            return t.allocUnsafe ? t.allocUnsafe(e) : new t(e);
                        }(t253, o);
                        return this["_toArrayLike" + ("le" === e134 ? "LE" : "BE")](s, n), s;
                    }, s27.prototype._toArrayLikeLE = function(t, e) {
                        for(var r = 0, n = 0, i = 0, o = 0; i < this.length; i++){
                            var s = this.words[i] << o | n;
                            t[r++] = 255 & s, r < t.length && (t[r++] = s >> 8 & 255), r < t.length && (t[r++] = s >> 16 & 255), 6 === o ? (r < t.length && (t[r++] = s >> 24 & 255), n = 0, o = 0) : (n = s >>> 24, o += 2);
                        }
                        if (r < t.length) for(t[r++] = n; r < t.length;)t[r++] = 0;
                    }, s27.prototype._toArrayLikeBE = function(t, e) {
                        for(var r = t.length - 1, n = 0, i = 0, o = 0; i < this.length; i++){
                            var s = this.words[i] << o | n;
                            t[r--] = 255 & s, r >= 0 && (t[r--] = s >> 8 & 255), r >= 0 && (t[r--] = s >> 16 & 255), 6 === o ? (r >= 0 && (t[r--] = s >> 24 & 255), n = 0, o = 0) : (n = s >>> 24, o += 2);
                        }
                        if (r >= 0) for(t[r--] = n; r >= 0;)t[r--] = 0;
                    }, Math.clz32 ? s27.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t);
                    } : s27.prototype._countBits = function(t) {
                        var e = t, r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
                    }, s27.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t, r = 0;
                        return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
                    }, s27.prototype.bitLength = function() {
                        var t = this.words[this.length - 1], e = this._countBits(t);
                        return 26 * (this.length - 1) + e;
                    }, s27.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for(var t = 0, e = 0; e < this.length; e++){
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break;
                        }
                        return t;
                    }, s27.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8);
                    }, s27.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
                    }, s27.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
                    }, s27.prototype.isNeg = function() {
                        return 0 !== this.negative;
                    }, s27.prototype.neg = function() {
                        return this.clone().ineg();
                    }, s27.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this;
                    }, s27.prototype.iuor = function(t) {
                        for(; this.length < t.length;)this.words[this.length++] = 0;
                        for(var e = 0; e < t.length; e++)this.words[e] = this.words[e] | t.words[e];
                        return this._strip();
                    }, s27.prototype.ior = function(t) {
                        return i44(0 == (this.negative | t.negative)), this.iuor(t);
                    }, s27.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
                    }, s27.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
                    }, s27.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for(var r = 0; r < e.length; r++)this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this._strip();
                    }, s27.prototype.iand = function(t) {
                        return i44(0 == (this.negative | t.negative)), this.iuand(t);
                    }, s27.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
                    }, s27.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
                    }, s27.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for(var n = 0; n < r.length; n++)this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e) for(; n < e.length; n++)this.words[n] = e.words[n];
                        return this.length = e.length, this._strip();
                    }, s27.prototype.ixor = function(t) {
                        return i44(0 == (this.negative | t.negative)), this.iuxor(t);
                    }, s27.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
                    }, s27.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
                    }, s27.prototype.inotn = function(t) {
                        i44("number" == typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26), r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for(var n = 0; n < e; n++)this.words[n] = 67108863 & ~this.words[n];
                        return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this._strip();
                    }, s27.prototype.notn = function(t) {
                        return this.clone().inotn(t);
                    }, s27.prototype.setn = function(t, e) {
                        i44("number" == typeof t && t >= 0);
                        var r = t / 26 | 0, n = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this._strip();
                    }, s27.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for(var i = 0, o = 0; o < n.length; o++)e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for(; 0 !== i && o < r.length; o++)e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this) for(; o < r.length; o++)this.words[o] = r.words[o];
                        return this;
                    }, s27.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
                    }, s27.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign();
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for(var o = 0, s = 0; s < n.length; s++)o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        for(; 0 !== o && s < r.length; s++)o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        if (0 === o && s < r.length && r !== this) for(; s < r.length; s++)this.words[s] = r.words[s];
                        return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this._strip();
                    }, s27.prototype.sub = function(t) {
                        return this.clone().isub(t);
                    };
                    var b5 = function(t, e, r) {
                        var n, i, o, s = t.words, a = e.words, u = r.words, h = 0, f = 0 | s[0], c = 8191 & f, l = f >>> 13, d = 0 | s[1], p = 8191 & d, y = d >>> 13, m = 0 | s[2], b = 8191 & m, v = m >>> 13, g = 0 | s[3], w = 8191 & g, _ = g >>> 13, M = 0 | s[4], S = 8191 & M, O = M >>> 13, A = 0 | s[5], E = 8191 & A, x = A >>> 13, k = 0 | s[6], j = 8191 & k, $ = k >>> 13, P = 0 | s[7], R = 8191 & P, B = P >>> 13, T = 0 | s[8], I = 8191 & T, N = T >>> 13, D = 0 | s[9], C = 8191 & D, L = D >>> 13, q = 0 | a[0], U = 8191 & q, F = q >>> 13, z = 0 | a[1], V = 8191 & z, K = z >>> 13, H = 0 | a[2], Z = 8191 & H, W = H >>> 13, J = 0 | a[3], Y = 8191 & J, Q = J >>> 13, G = 0 | a[4], X = 8191 & G, tt = G >>> 13, et = 0 | a[5], rt = 8191 & et, nt = et >>> 13, it = 0 | a[6], ot = 8191 & it, st = it >>> 13, at = 0 | a[7], ut = 8191 & at, ht = at >>> 13, ft = 0 | a[8], ct = 8191 & ft, lt = ft >>> 13, dt = 0 | a[9], pt = 8191 & dt, yt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19;
                        var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
                        h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
                        var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
                        var vt = (h + (n = n + Math.imul(c, Z) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, W) | 0) + Math.imul(l, Z) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, W) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, Z) | 0, i = (i = i + Math.imul(p, W) | 0) + Math.imul(y, Z) | 0, o = o + Math.imul(y, W) | 0;
                        var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Q) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, Q) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, Z) | 0, i = (i = i + Math.imul(b, W) | 0) + Math.imul(v, Z) | 0, o = o + Math.imul(v, W) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, Q) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, Q) | 0;
                        var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, Z) | 0, i = (i = i + Math.imul(w, W) | 0) + Math.imul(_, Z) | 0, o = o + Math.imul(_, W) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, Q) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, Q) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;
                        var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, Z) | 0, i = (i = i + Math.imul(S, W) | 0) + Math.imul(O, Z) | 0, o = o + Math.imul(O, W) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, Q) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, Q) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                        var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, Z) | 0, i = (i = i + Math.imul(E, W) | 0) + Math.imul(x, Z) | 0, o = o + Math.imul(x, W) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, Q) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, Q) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                        var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, Z) | 0, i = (i = i + Math.imul(j, W) | 0) + Math.imul($, Z) | 0, o = o + Math.imul($, W) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, Q) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, Q) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
                        var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, Z) | 0, i = (i = i + Math.imul(R, W) | 0) + Math.imul(B, Z) | 0, o = o + Math.imul(B, W) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, Q) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, Q) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
                        var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, Z) | 0, i = (i = i + Math.imul(I, W) | 0) + Math.imul(N, Z) | 0, o = o + Math.imul(N, W) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, Q) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, Q) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
                        var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, Z), i = (i = Math.imul(C, W)) + Math.imul(L, Z) | 0, o = Math.imul(L, W), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, Q) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, Q) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
                        var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, Q)) + Math.imul(L, Y) | 0, o = Math.imul(L, Q), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
                        var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
                        var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
                        var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
                        var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
                        var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
                        var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
                        var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
                        return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
                    };
                    function v5(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for(var n = 0, i = 0, o = 0; o < r.length - 1; o++){
                            var s = i;
                            i = 0;
                            for(var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++){
                                var f = o - h, c = (0 | t.words[f]) * (0 | e.words[h]), l = 67108863 & c;
                                a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
                            }
                            r.words[o] = a, n = s, s = i;
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r._strip();
                    }
                    function g4(t, e, r) {
                        return v5(t, e, r);
                    }
                    function w4(t, e) {
                        this.x = t, this.y = e;
                    }
                    Math.imul || (b5 = m5), s27.prototype.mulTo = function(t, e) {
                        var r = this.length + t.length;
                        return 10 === this.length && 10 === t.length ? b5(this, t, e) : r < 63 ? m5(this, t, e) : r < 1024 ? v5(this, t, e) : g4(this, t, e);
                    }, w4.prototype.makeRBT = function(t) {
                        for(var e = new Array(t), r = s27.prototype._countBits(t) - 1, n = 0; n < t; n++)e[n] = this.revBin(n, r, t);
                        return e;
                    }, w4.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for(var n = 0, i = 0; i < e; i++)n |= (1 & t) << e - i - 1, t >>= 1;
                        return n;
                    }, w4.prototype.permute = function(t, e, r, n, i, o) {
                        for(var s = 0; s < o; s++)n[s] = e[t[s]], i[s] = r[t[s]];
                    }, w4.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for(var s = 1; s < i; s <<= 1)for(var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a)for(var c = u, l = h, d = 0; d < s; d++){
                            var p = r[f + d], y = n[f + d], m = r[f + d + s], b = n[f + d + s], v = c * m - l * b;
                            b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
                        }
                    }, w4.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t), n = 1 & r, i = 0;
                        for(r = r / 2 | 0; r; r >>>= 1)i++;
                        return 1 << i + 1 + n;
                    }, w4.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1)) for(var n = 0; n < r / 2; n++){
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
                        }
                    }, w4.prototype.normalize13b = function(t, e) {
                        for(var r = 0, n = 0; n < e / 2; n++){
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
                        }
                        return t;
                    }, w4.prototype.convert13b = function(t, e, r, n) {
                        for(var o = 0, s = 0; s < e; s++)o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                        for(s = 2 * e; s < n; ++s)r[s] = 0;
                        i44(0 === o), i44(0 == (-8192 & o));
                    }, w4.prototype.stub = function(t) {
                        for(var e = new Array(t), r = 0; r < t; r++)e[r] = 0;
                        return e;
                    }, w4.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length), i = this.makeRBT(n), o = this.stub(n), s = new Array(n), a = new Array(n), u = new Array(n), h = new Array(n), f = new Array(n), c = new Array(n), l = r.words;
                        l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);
                        for(var d = 0; d < n; d++){
                            var p = a[d] * f[d] - u[d] * c[d];
                            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r._strip();
                    }, s27.prototype.mul = function(t) {
                        var e = new s27(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e);
                    }, s27.prototype.mulf = function(t) {
                        var e = new s27(null);
                        return e.words = new Array(this.length + t.length), g4(this, t, e);
                    }, s27.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this);
                    }, s27.prototype.imuln = function(t) {
                        var e = t < 0;
                        e && (t = -t), i44("number" == typeof t), i44(t < 67108864);
                        for(var r = 0, n = 0; n < this.length; n++){
                            var o = (0 | this.words[n]) * t, s = (67108863 & o) + (67108863 & r);
                            r >>= 26, r += o / 67108864 | 0, r += s >>> 26, this.words[n] = 67108863 & s;
                        }
                        return 0 !== r && (this.words[n] = r, this.length++), e ? this.ineg() : this;
                    }, s27.prototype.muln = function(t) {
                        return this.clone().imuln(t);
                    }, s27.prototype.sqr = function() {
                        return this.mul(this);
                    }, s27.prototype.isqr = function() {
                        return this.imul(this.clone());
                    }, s27.prototype.pow = function(t254) {
                        var e135 = function(t) {
                            for(var e = new Array(t.bitLength()), r = 0; r < e.length; r++){
                                var n = r / 26 | 0, i = r % 26;
                                e[r] = t.words[n] >>> i & 1;
                            }
                            return e;
                        }(t254);
                        if (0 === e135.length) return new s27(1);
                        for(var r106 = this, n = 0; n < e135.length && 0 === e135[n]; n++, r106 = r106.sqr());
                        if (++n < e135.length) for(var i45 = r106.sqr(); n < e135.length; n++, i45 = i45.sqr())0 !== e135[n] && (r106 = r106.mul(i45));
                        return r106;
                    }, s27.prototype.iushln = function(t) {
                        i44("number" == typeof t && t >= 0);
                        var e, r = t % 26, n = (t - r) / 26, o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var s = 0;
                            for(e = 0; e < this.length; e++){
                                var a = this.words[e] & o, u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | s, s = a >>> 26 - r;
                            }
                            s && (this.words[e] = s, this.length++);
                        }
                        if (0 !== n) {
                            for(e = this.length - 1; e >= 0; e--)this.words[e + n] = this.words[e];
                            for(e = 0; e < n; e++)this.words[e] = 0;
                            this.length += n;
                        }
                        return this._strip();
                    }, s27.prototype.ishln = function(t) {
                        return i44(0 === this.negative), this.iushln(t);
                    }, s27.prototype.iushrn = function(t, e, r) {
                        var n;
                        i44("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26, s = Math.min((t - o) / 26, this.length), a = 67108863 ^ 67108863 >>> o << o, u = r;
                        if (n -= s, n = Math.max(0, n), u) {
                            for(var h = 0; h < s; h++)u.words[h] = this.words[h];
                            u.length = s;
                        }
                        if (0 === s) ;
                        else if (this.length > s) for(this.length -= s, h = 0; h < this.length; h++)this.words[h] = this.words[h + s];
                        else this.words[0] = 0, this.length = 1;
                        var f = 0;
                        for(h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--){
                            var c = 0 | this.words[h];
                            this.words[h] = f << 26 - o | c >>> o, f = c & a;
                        }
                        return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip();
                    }, s27.prototype.ishrn = function(t, e, r) {
                        return i44(0 === this.negative), this.iushrn(t, e, r);
                    }, s27.prototype.shln = function(t) {
                        return this.clone().ishln(t);
                    }, s27.prototype.ushln = function(t) {
                        return this.clone().iushln(t);
                    }, s27.prototype.shrn = function(t) {
                        return this.clone().ishrn(t);
                    }, s27.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t);
                    }, s27.prototype.testn = function(t) {
                        i44("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        return !(this.length <= r) && !!(this.words[r] & n);
                    }, s27.prototype.imaskn = function(t) {
                        i44("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26;
                        if (i44(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var n = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= n;
                        }
                        return this._strip();
                    }, s27.prototype.maskn = function(t) {
                        return this.clone().imaskn(t);
                    }, s27.prototype.iaddn = function(t) {
                        return i44("number" == typeof t), i44(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
                    }, s27.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for(var e = 0; e < this.length && this.words[e] >= 67108864; e++)this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this;
                    }, s27.prototype.isubn = function(t) {
                        if (i44("number" == typeof t), i44(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else for(var e = 0; e < this.length && this.words[e] < 0; e++)this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this._strip();
                    }, s27.prototype.addn = function(t) {
                        return this.clone().iaddn(t);
                    }, s27.prototype.subn = function(t) {
                        return this.clone().isubn(t);
                    }, s27.prototype.iabs = function() {
                        return this.negative = 0, this;
                    }, s27.prototype.abs = function() {
                        return this.clone().iabs();
                    }, s27.prototype._ishlnsubmul = function(t, e, r) {
                        var n, o, s = t.length + r;
                        this._expand(s);
                        var a = 0;
                        for(n = 0; n < t.length; n++){
                            o = (0 | this.words[n + r]) + a;
                            var u = (0 | t.words[n]) * e;
                            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
                        }
                        for(; n < this.length - r; n++)a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
                        if (0 === a) return this._strip();
                        for(i44(-1 === a), a = 0, n = 0; n < this.length; n++)a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
                        return this.negative = 1, this._strip();
                    }, s27.prototype._wordDiv = function(t, e) {
                        var r = (this.length, t.length), n = this.clone(), i = t, o = 0 | i.words[i.length - 1];
                        0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                        var a, u = n.length - i.length;
                        if ("mod" !== e) {
                            (a = new s27(null)).length = u + 1, a.words = new Array(a.length);
                            for(var h = 0; h < a.length; h++)a.words[h] = 0;
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, u);
                        0 === f.negative && (n = f, a && (a.words[u] = 1));
                        for(var c = u - 1; c >= 0; c--){
                            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);
                            for(l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;)l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
                            a && (a.words[c] = l);
                        }
                        return a && a._strip(), n._strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: a || null,
                            mod: n
                        };
                    }, s27.prototype.divmod = function(t, e, r) {
                        var n, o, a;
                        return i44(!t.isZero()), this.isZero() ? {
                            div: new s27(0),
                            mod: new s27(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
                            div: n,
                            mod: o
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
                            div: n,
                            mod: a.mod
                        }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
                            div: a.div,
                            mod: o
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new s27(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new s27(this.modrn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new s27(this.modrn(t.words[0]))
                        } : this._wordDiv(t, e);
                    }, s27.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div;
                    }, s27.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod;
                    }, s27.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod;
                    }, s27.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod, n = t.ushrn(1), i = t.andln(1), o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
                    }, s27.prototype.modrn = function(t) {
                        var e = t < 0;
                        e && (t = -t), i44(t <= 67108863);
                        for(var r = 67108864 % t, n = 0, o = this.length - 1; o >= 0; o--)n = (r * n + (0 | this.words[o])) % t;
                        return e ? -n : n;
                    }, s27.prototype.modn = function(t) {
                        return this.modrn(t);
                    }, s27.prototype.idivn = function(t) {
                        var e = t < 0;
                        e && (t = -t), i44(t <= 67108863);
                        for(var r = 0, n = this.length - 1; n >= 0; n--){
                            var o = (0 | this.words[n]) + 67108864 * r;
                            this.words[n] = o / t | 0, r = o % t;
                        }
                        return this._strip(), e ? this.ineg() : this;
                    }, s27.prototype.divn = function(t) {
                        return this.clone().idivn(t);
                    }, s27.prototype.egcd = function(t) {
                        i44(0 === t.negative), i44(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n = new s27(1), o = new s27(0), a = new s27(0), u = new s27(1), h = 0; e.isEven() && r.isEven();)e.iushrn(1), r.iushrn(1), ++h;
                        for(var f = r.clone(), c = e.clone(); !e.isZero();){
                            for(var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1);
                            if (l > 0) for(e.iushrn(l); l-- > 0;)(n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
                            for(var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1);
                            if (p > 0) for(r.iushrn(p); p-- > 0;)(a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(h)
                        };
                    }, s27.prototype._invmp = function(t) {
                        i44(0 === t.negative), i44(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n, o = new s27(1), a = new s27(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;){
                            for(var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1);
                            if (h > 0) for(e.iushrn(h); h-- > 0;)o.isOdd() && o.iadd(u), o.iushrn(1);
                            for(var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                            if (c > 0) for(r.iushrn(c); c-- > 0;)a.isOdd() && a.iadd(u), a.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
                        }
                        return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
                    }, s27.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(), r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for(var n = 0; e.isEven() && r.isEven(); n++)e.iushrn(1), r.iushrn(1);
                        for(;;){
                            for(; e.isEven();)e.iushrn(1);
                            for(; r.isEven();)r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o;
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r);
                        }
                        return r.iushln(n);
                    }, s27.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t);
                    }, s27.prototype.isEven = function() {
                        return 0 == (1 & this.words[0]);
                    }, s27.prototype.isOdd = function() {
                        return 1 == (1 & this.words[0]);
                    }, s27.prototype.andln = function(t) {
                        return this.words[0] & t;
                    }, s27.prototype.bincn = function(t) {
                        i44("number" == typeof t);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                        for(var o = n, s = r; 0 !== o && s < this.length; s++){
                            var a = 0 | this.words[s];
                            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
                        }
                        return 0 !== o && (this.words[s] = o, this.length++), this;
                    }, s27.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0];
                    }, s27.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this._strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), i44(t <= 67108863, "Number is too big");
                            var n = 0 | this.words[0];
                            e = n === t ? 0 : n < t ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s27.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s27.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = 0 | this.words[r], i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break;
                            }
                        }
                        return e;
                    }, s27.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t);
                    }, s27.prototype.gt = function(t) {
                        return 1 === this.cmp(t);
                    }, s27.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0;
                    }, s27.prototype.gte = function(t) {
                        return this.cmp(t) >= 0;
                    }, s27.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t);
                    }, s27.prototype.lt = function(t) {
                        return -1 === this.cmp(t);
                    }, s27.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0;
                    }, s27.prototype.lte = function(t) {
                        return this.cmp(t) <= 0;
                    }, s27.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t);
                    }, s27.prototype.eq = function(t) {
                        return 0 === this.cmp(t);
                    }, s27.red = function(t) {
                        return new x3(t);
                    }, s27.prototype.toRed = function(t) {
                        return i44(!this.red, "Already a number in reduction context"), i44(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
                    }, s27.prototype.fromRed = function() {
                        return i44(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }, s27.prototype._forceRed = function(t) {
                        return this.red = t, this;
                    }, s27.prototype.forceRed = function(t) {
                        return i44(!this.red, "Already a number in reduction context"), this._forceRed(t);
                    }, s27.prototype.redAdd = function(t) {
                        return i44(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
                    }, s27.prototype.redIAdd = function(t) {
                        return i44(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
                    }, s27.prototype.redSub = function(t) {
                        return i44(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
                    }, s27.prototype.redISub = function(t) {
                        return i44(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
                    }, s27.prototype.redShl = function(t) {
                        return i44(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
                    }, s27.prototype.redMul = function(t) {
                        return i44(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
                    }, s27.prototype.redIMul = function(t) {
                        return i44(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
                    }, s27.prototype.redSqr = function() {
                        return i44(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }, s27.prototype.redISqr = function() {
                        return i44(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }, s27.prototype.redSqrt = function() {
                        return i44(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }, s27.prototype.redInvm = function() {
                        return i44(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }, s27.prototype.redNeg = function() {
                        return i44(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }, s27.prototype.redPow = function(t) {
                        return i44(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
                    };
                    var _5 = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };
                    function M4(t, e) {
                        this.name = t, this.p = new s27(e, 16), this.n = this.p.bitLength(), this.k = new s27(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
                    }
                    function S4() {
                        M4.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                    }
                    function O4() {
                        M4.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                    }
                    function A5() {
                        M4.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                    }
                    function E3() {
                        M4.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                    }
                    function x3(t) {
                        if ("string" == typeof t) {
                            var e = s27._prime(t);
                            this.m = e.p, this.prime = e;
                        } else i44(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
                    }
                    function k3(t) {
                        x3.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s27(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
                    }
                    M4.prototype._tmp = function() {
                        var t = new s27(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t;
                    }, M4.prototype.ireduce = function(t) {
                        var e, r = t;
                        do this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                        while (e > this.n)
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }, M4.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e);
                    }, M4.prototype.imulK = function(t) {
                        return t.imul(this.k);
                    }, o29(S4, M4), S4.prototype.split = function(t, e) {
                        for(var r = Math.min(t.length, 9), n = 0; n < r; n++)e.words[n] = t.words[n];
                        if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
                        var i = t.words[9];
                        for(e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++){
                            var o = 0 | t.words[n];
                            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
                        }
                        i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
                    }, S4.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
                    }, o29(O4, M4), o29(A5, M4), o29(E3, M4), E3.prototype.imulK = function(t) {
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 19 * (0 | t.words[r]) + e, i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n;
                        }
                        return 0 !== e && (t.words[t.length++] = e), t;
                    }, s27._prime = function(t) {
                        if (_5[t]) return _5[t];
                        var e;
                        if ("k256" === t) e = new S4;
                        else if ("p224" === t) e = new O4;
                        else if ("p192" === t) e = new A5;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new E3;
                        }
                        return _5[t] = e, e;
                    }, x3.prototype._verify1 = function(t) {
                        i44(0 === t.negative, "red works only with positives"), i44(t.red, "red works only with red numbers");
                    }, x3.prototype._verify2 = function(t, e) {
                        i44(0 == (t.negative | e.negative), "red works only with positives"), i44(t.red && t.red === e.red, "red works only with red numbers");
                    }, x3.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : (c15(t, t.umod(this.m)._forceRed(this)), t);
                    }, x3.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
                    }, x3.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
                    }, x3.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                    }, x3.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
                    }, x3.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r;
                    }, x3.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e));
                    }, x3.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e));
                    }, x3.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e));
                    }, x3.prototype.isqr = function(t) {
                        return this.imul(t, t.clone());
                    }, x3.prototype.sqr = function(t) {
                        return this.mul(t, t);
                    }, x3.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (i44(e % 2 == 1), 3 === e) {
                            var r = this.m.add(new s27(1)).iushrn(2);
                            return this.pow(t, r);
                        }
                        for(var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);)o++, n.iushrn(1);
                        i44(!n.isZero());
                        var a = new s27(1).toRed(this), u = a.redNeg(), h = this.m.subn(1).iushrn(1), f = this.m.bitLength();
                        for(f = new s27(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);)f.redIAdd(u);
                        for(var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);){
                            for(var y = d, m = 0; 0 !== y.cmp(a); m++)y = y.redSqr();
                            i44(m < p);
                            var b = this.pow(c, new s27(1).iushln(p - m - 1));
                            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
                        }
                        return l;
                    }, x3.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
                    }, x3.prototype.pow = function(t, e) {
                        if (e.isZero()) return new s27(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = new Array(16);
                        r[0] = new s27(1).toRed(this), r[1] = t;
                        for(var n = 2; n < r.length; n++)r[n] = this.mul(r[n - 1], t);
                        var i = r[0], o = 0, a = 0, u = e.bitLength() % 26;
                        for(0 === u && (u = 26), n = e.length - 1; n >= 0; n--){
                            for(var h = e.words[n], f = u - 1; f >= 0; f--){
                                var c = h >> f & 1;
                                i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
                            }
                            u = 26;
                        }
                        return i;
                    }, x3.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e;
                    }, x3.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e;
                    }, s27.mont = function(t) {
                        return new k3(t);
                    }, o29(k3, x3), k3.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift));
                    }, k3.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e;
                    }, k3.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, k3.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new s27(0)._forceRed(this);
                        var r = t.mul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, k3.prototype.invm = function(t) {
                        return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
                    };
                }(t248, this);
            }).call(this, r105(24)(t247));
        },
        function(t, e, r) {
            "use strict";
            var n = e;
            n.version = r(233).version, n.utils = r(11), n.rand = r(69), n.curve = r(129), n.curves = r(74), n.ec = r(245), n.eddsa = r(249);
        },
        function(t255, e136, r107) {
            "use strict";
            var n, i = e136, o = r107(75), s = r107(129), a = r107(11).assert;
            function u(t) {
                "short" === t.type ? this.curve = new s.short(t) : "edwards" === t.type ? this.curve = new s.edwards(t) : this.curve = new s.mont(t), this.g = this.curve.g, this.n = this.curve.n, this.hash = t.hash, a(this.g.validate(), "Invalid curve"), a(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
            }
            function h(t, e) {
                Object.defineProperty(i, t, {
                    configurable: !0,
                    enumerable: !0,
                    get: function() {
                        var r = new u(e);
                        return Object.defineProperty(i, t, {
                            configurable: !0,
                            enumerable: !0,
                            value: r
                        }), r;
                    }
                });
            }
            i.PresetCurve = u, h("p192", {
                type: "short",
                prime: "p192",
                p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                hash: o.sha256,
                gRed: !1,
                g: [
                    "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
                    "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
                ]
            }), h("p224", {
                type: "short",
                prime: "p224",
                p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                hash: o.sha256,
                gRed: !1,
                g: [
                    "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
                    "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
                ]
            }), h("p256", {
                type: "short",
                prime: null,
                p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                hash: o.sha256,
                gRed: !1,
                g: [
                    "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
                    "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
                ]
            }), h("p384", {
                type: "short",
                prime: null,
                p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                hash: o.sha384,
                gRed: !1,
                g: [
                    "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
                    "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
                ]
            }), h("p521", {
                type: "short",
                prime: null,
                p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                hash: o.sha512,
                gRed: !1,
                g: [
                    "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
                    "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
                ]
            }), h("curve25519", {
                type: "mont",
                prime: "p25519",
                p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                a: "76d06",
                b: "1",
                n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                hash: o.sha256,
                gRed: !1,
                g: [
                    "9"
                ]
            }), h("ed25519", {
                type: "edwards",
                prime: "p25519",
                p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                a: "-1",
                c: "1",
                d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                hash: o.sha256,
                gRed: !1,
                g: [
                    "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
                    "6666666666666666666666666666666666666666666666666666666666666658"
                ]
            });
            try {
                n = r107(244);
            } catch (t) {
                n = void 0;
            }
            h("secp256k1", {
                type: "short",
                prime: "k256",
                p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                a: "0",
                b: "7",
                n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                h: "1",
                hash: o.sha256,
                beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                basis: [
                    {
                        a: "3086d221a7d46bcde86c90e49284eb15",
                        b: "-e4437ed6010e88286f547fa90abfe4c3"
                    },
                    {
                        a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                        b: "3086d221a7d46bcde86c90e49284eb15"
                    }
                ],
                gRed: !1,
                g: [
                    "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
                    "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
                    n
                ]
            });
        },
        function(t, e, r) {
            var n = e;
            n.utils = r(17), n.common = r(39), n.sha = r(238), n.ripemd = r(242), n.hmac = r(243), n.sha1 = n.sha.sha1, n.sha256 = n.sha.sha256, n.sha224 = n.sha.sha224, n.sha384 = n.sha.sha384, n.sha512 = n.sha.sha512, n.ripemd160 = n.ripemd.ripemd160;
        },
        function(t256, e137, r108) {
            "use strict";
            (function(e138) {
                function n(t257) {
                    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t257);
                }
                var i46, o = r108(3), s = o.Buffer, a = {
                };
                for(i46 in o)o.hasOwnProperty(i46) && "SlowBuffer" !== i46 && "Buffer" !== i46 && (a[i46] = o[i46]);
                var u = a.Buffer = {
                };
                for(i46 in s)s.hasOwnProperty(i46) && "allocUnsafe" !== i46 && "allocUnsafeSlow" !== i46 && (u[i46] = s[i46]);
                if (a.Buffer.prototype = s.prototype, u.from && u.from !== Uint8Array.from || (u.from = function(t, e, r) {
                    if ("number" == typeof t) throw new TypeError('The "value" argument must not be of type number. Received type ' + n(t));
                    if (t && void 0 === t.length) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + n(t));
                    return s(t, e, r);
                }), u.alloc || (u.alloc = function(t, e, r) {
                    if ("number" != typeof t) throw new TypeError('The "size" argument must be of type number. Received type ' + n(t));
                    if (t < 0 || t >= 2 * 1073741824) throw new RangeError('The value "' + t + '" is invalid for option "size"');
                    var i = s(t);
                    return e && 0 !== e.length ? "string" == typeof r ? i.fill(e, r) : i.fill(e) : i.fill(0), i;
                }), !a.kStringMaxLength) try {
                    a.kStringMaxLength = e138.binding("buffer").kStringMaxLength;
                } catch (t) {
                }
                a.constants || (a.constants = {
                    MAX_LENGTH: a.kMaxLength
                }, a.kStringMaxLength && (a.constants.MAX_STRING_LENGTH = a.kStringMaxLength)), t256.exports = a;
            }).call(this, r108(5));
        },
        function(t258, e139, r109) {
            "use strict";
            function n65(t259) {
                return (n65 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t259);
            }
            var i47 = r109(78).Reporter, o30 = r109(40).EncoderBuffer, s28 = r109(40).DecoderBuffer, a26 = r109(10), u24 = [
                "seq",
                "seqof",
                "set",
                "setof",
                "objid",
                "bool",
                "gentime",
                "utctime",
                "null_",
                "enum",
                "int",
                "objDesc",
                "bitstr",
                "bmpstr",
                "charstr",
                "genstr",
                "graphstr",
                "ia5str",
                "iso646str",
                "numstr",
                "octstr",
                "printstr",
                "t61str",
                "unistr",
                "utf8str",
                "videostr"
            ], h19 = [
                "key",
                "obj",
                "use",
                "optional",
                "explicit",
                "implicit",
                "def",
                "choice",
                "any",
                "contains"
            ].concat(u24);
            function f20(t, e, r) {
                var n = {
                };
                this._baseState = n, n.name = r, n.enc = t, n.parent = e || null, n.children = null, n.tag = null, n.args = null, n.reverseArgs = null, n.choice = null, n.optional = !1, n.any = !1, n.obj = !1, n.use = null, n.useDecoder = null, n.key = null, n.default = null, n.explicit = null, n.implicit = null, n.contains = null, n.parent || (n.children = [], this._wrap());
            }
            t258.exports = f20;
            var c16 = [
                "enc",
                "parent",
                "children",
                "tag",
                "args",
                "reverseArgs",
                "choice",
                "optional",
                "any",
                "obj",
                "use",
                "alteredUse",
                "key",
                "default",
                "explicit",
                "implicit",
                "contains"
            ];
            f20.prototype.clone = function() {
                var t = this._baseState, e = {
                };
                c16.forEach(function(r) {
                    e[r] = t[r];
                });
                var r = new this.constructor(e.parent);
                return r._baseState = e, r;
            }, f20.prototype._wrap = function() {
                var t = this._baseState;
                h19.forEach(function(e) {
                    this[e] = function() {
                        var r = new this.constructor(this);
                        return t.children.push(r), r[e].apply(r, arguments);
                    };
                }, this);
            }, f20.prototype._init = function(t260) {
                var e = this._baseState;
                a26(null === e.parent), t260.call(this), e.children = e.children.filter(function(t) {
                    return t._baseState.parent === this;
                }, this), a26.equal(e.children.length, 1, "Root node can have only one child");
            }, f20.prototype._useArgs = function(t261) {
                var e140 = this._baseState, r110 = t261.filter(function(t) {
                    return t instanceof this.constructor;
                }, this);
                t261 = t261.filter(function(t) {
                    return !(t instanceof this.constructor);
                }, this), 0 !== r110.length && (a26(null === e140.children), e140.children = r110, r110.forEach(function(t) {
                    t._baseState.parent = this;
                }, this)), 0 !== t261.length && (a26(null === e140.args), e140.args = t261, e140.reverseArgs = t261.map(function(t) {
                    if ("object" !== n65(t) || t.constructor !== Object) return t;
                    var e = {
                    };
                    return Object.keys(t).forEach(function(r) {
                        r == (0 | r) && (r |= 0);
                        var n = t[r];
                        e[n] = r;
                    }), e;
                }));
            }, [
                "_peekTag",
                "_decodeTag",
                "_use",
                "_decodeStr",
                "_decodeObjid",
                "_decodeTime",
                "_decodeNull",
                "_decodeInt",
                "_decodeBool",
                "_decodeList",
                "_encodeComposite",
                "_encodeStr",
                "_encodeObjid",
                "_encodeTime",
                "_encodeNull",
                "_encodeInt",
                "_encodeBool"
            ].forEach(function(t) {
                f20.prototype[t] = function() {
                    var e = this._baseState;
                    throw new Error(t + " not implemented for encoding: " + e.enc);
                };
            }), u24.forEach(function(t) {
                f20.prototype[t] = function() {
                    var e = this._baseState, r = Array.prototype.slice.call(arguments);
                    return a26(null === e.tag), e.tag = t, this._useArgs(r), this;
                };
            }), f20.prototype.use = function(t) {
                a26(t);
                var e = this._baseState;
                return a26(null === e.use), e.use = t, this;
            }, f20.prototype.optional = function() {
                return this._baseState.optional = !0, this;
            }, f20.prototype.def = function(t) {
                var e = this._baseState;
                return a26(null === e.default), e.default = t, e.optional = !0, this;
            }, f20.prototype.explicit = function(t) {
                var e = this._baseState;
                return a26(null === e.explicit && null === e.implicit), e.explicit = t, this;
            }, f20.prototype.implicit = function(t) {
                var e = this._baseState;
                return a26(null === e.explicit && null === e.implicit), e.implicit = t, this;
            }, f20.prototype.obj = function() {
                var t = this._baseState, e = Array.prototype.slice.call(arguments);
                return t.obj = !0, 0 !== e.length && this._useArgs(e), this;
            }, f20.prototype.key = function(t) {
                var e = this._baseState;
                return a26(null === e.key), e.key = t, this;
            }, f20.prototype.any = function() {
                return this._baseState.any = !0, this;
            }, f20.prototype.choice = function(t) {
                var e = this._baseState;
                return a26(null === e.choice), e.choice = t, this._useArgs(Object.keys(t).map(function(e) {
                    return t[e];
                })), this;
            }, f20.prototype.contains = function(t) {
                var e = this._baseState;
                return a26(null === e.use), e.contains = t, this;
            }, f20.prototype._decode = function(t, e) {
                var r111 = this._baseState;
                if (null === r111.parent) return t.wrapResult(r111.children[0]._decode(t, e));
                var n, i = r111.default, o = !0, a = null;
                if (null !== r111.key && (a = t.enterKey(r111.key)), r111.optional) {
                    var u = null;
                    if (null !== r111.explicit ? u = r111.explicit : null !== r111.implicit ? u = r111.implicit : null !== r111.tag && (u = r111.tag), null !== u || r111.any) {
                        if (o = this._peekTag(t, u, r111.any), t.isError(o)) return o;
                    } else {
                        var h = t.save();
                        try {
                            null === r111.choice ? this._decodeGeneric(r111.tag, t, e) : this._decodeChoice(t, e), o = !0;
                        } catch (t262) {
                            o = !1;
                        }
                        t.restore(h);
                    }
                }
                if (r111.obj && o && (n = t.enterObject()), o) {
                    if (null !== r111.explicit) {
                        var f = this._decodeTag(t, r111.explicit);
                        if (t.isError(f)) return f;
                        t = f;
                    }
                    var c = t.offset;
                    if (null === r111.use && null === r111.choice) {
                        var l;
                        r111.any && (l = t.save());
                        var d = this._decodeTag(t, null !== r111.implicit ? r111.implicit : r111.tag, r111.any);
                        if (t.isError(d)) return d;
                        r111.any ? i = t.raw(l) : t = d;
                    }
                    if (e && e.track && null !== r111.tag && e.track(t.path(), c, t.length, "tagged"), e && e.track && null !== r111.tag && e.track(t.path(), t.offset, t.length, "content"), r111.any || (i = null === r111.choice ? this._decodeGeneric(r111.tag, t, e) : this._decodeChoice(t, e)), t.isError(i)) return i;
                    if (r111.any || null !== r111.choice || null === r111.children || r111.children.forEach(function(r) {
                        r._decode(t, e);
                    }), r111.contains && ("octstr" === r111.tag || "bitstr" === r111.tag)) {
                        var p = new s28(i);
                        i = this._getUse(r111.contains, t._reporterState.obj)._decode(p, e);
                    }
                }
                return r111.obj && o && (i = t.leaveObject(n)), null === r111.key || null === i && !0 !== o ? null !== a && t.exitKey(a) : t.leaveKey(a, r111.key, i), i;
            }, f20.prototype._decodeGeneric = function(t, e, r) {
                var n = this._baseState;
                return "seq" === t || "set" === t ? null : "seqof" === t || "setof" === t ? this._decodeList(e, t, n.args[0], r) : /str$/.test(t) ? this._decodeStr(e, t, r) : "objid" === t && n.args ? this._decodeObjid(e, n.args[0], n.args[1], r) : "objid" === t ? this._decodeObjid(e, null, null, r) : "gentime" === t || "utctime" === t ? this._decodeTime(e, t, r) : "null_" === t ? this._decodeNull(e, r) : "bool" === t ? this._decodeBool(e, r) : "objDesc" === t ? this._decodeStr(e, t, r) : "int" === t || "enum" === t ? this._decodeInt(e, n.args && n.args[0], r) : null !== n.use ? this._getUse(n.use, e._reporterState.obj)._decode(e, r) : e.error("unknown tag: " + t);
            }, f20.prototype._getUse = function(t, e) {
                var r = this._baseState;
                return r.useDecoder = this._use(t, e), a26(null === r.useDecoder._baseState.parent), r.useDecoder = r.useDecoder._baseState.children[0], r.implicit !== r.useDecoder._baseState.implicit && (r.useDecoder = r.useDecoder.clone(), r.useDecoder._baseState.implicit = r.implicit), r.useDecoder;
            }, f20.prototype._decodeChoice = function(t, e) {
                var r = this._baseState, n = null, i = !1;
                return Object.keys(r.choice).some(function(o) {
                    var s = t.save(), a = r.choice[o];
                    try {
                        var u = a._decode(t, e);
                        if (t.isError(u)) return !1;
                        n = {
                            type: o,
                            value: u
                        }, i = !0;
                    } catch (e) {
                        return t.restore(s), !1;
                    }
                    return !0;
                }, this), i ? n : t.error("Choice not matched");
            }, f20.prototype._createEncoderBuffer = function(t) {
                return new o30(t, this.reporter);
            }, f20.prototype._encode = function(t, e, r) {
                var n = this._baseState;
                if (null === n.default || n.default !== t) {
                    var i = this._encodeValue(t, e, r);
                    if (void 0 !== i && !this._skipDefault(i, e, r)) return i;
                }
            }, f20.prototype._encodeValue = function(t264, e, r112) {
                var o31 = this._baseState;
                if (null === o31.parent) return o31.children[0]._encode(t264, e || new i47);
                var s = null;
                if (this.reporter = e, o31.optional && void 0 === t264) {
                    if (null === o31.default) return;
                    t264 = o31.default;
                }
                var a = null, u = !1;
                if (o31.any) s = this._createEncoderBuffer(t264);
                else if (o31.choice) s = this._encodeChoice(t264, e);
                else if (o31.contains) a = this._getUse(o31.contains, r112)._encode(t264, e), u = !0;
                else if (o31.children) a = o31.children.map(function(r) {
                    if ("null_" === r._baseState.tag) return r._encode(null, e, t264);
                    if (null === r._baseState.key) return e.error("Child should have a key");
                    var i = e.enterKey(r._baseState.key);
                    if ("object" !== n65(t264)) return e.error("Child expected, but input is not object");
                    var o = r._encode(t264[r._baseState.key], e, t264);
                    return e.leaveKey(i), o;
                }, this).filter(function(t) {
                    return t;
                }), a = this._createEncoderBuffer(a);
                else if ("seqof" === o31.tag || "setof" === o31.tag) {
                    if (!o31.args || 1 !== o31.args.length) return e.error("Too many args for : " + o31.tag);
                    if (!Array.isArray(t264)) return e.error("seqof/setof, but data is not Array");
                    var h = this.clone();
                    h._baseState.implicit = null, a = this._createEncoderBuffer(t264.map(function(r) {
                        var n = this._baseState;
                        return this._getUse(n.args[0], t264)._encode(r, e);
                    }, h));
                } else null !== o31.use ? s = this._getUse(o31.use, r112)._encode(t264, e) : (a = this._encodePrimitive(o31.tag, t264), u = !0);
                if (!o31.any && null === o31.choice) {
                    var f = null !== o31.implicit ? o31.implicit : o31.tag, c = null === o31.implicit ? "universal" : "context";
                    null === f ? null === o31.use && e.error("Tag could be omitted only for .use()") : null === o31.use && (s = this._encodeComposite(f, u, c, a));
                }
                return null !== o31.explicit && (s = this._encodeComposite(o31.explicit, !1, "context", s)), s;
            }, f20.prototype._encodeChoice = function(t, e) {
                var r = this._baseState, n = r.choice[t.type];
                return n || a26(!1, t.type + " not found in " + JSON.stringify(Object.keys(r.choice))), n._encode(t.value, e);
            }, f20.prototype._encodePrimitive = function(t, e) {
                var r = this._baseState;
                if (/str$/.test(t)) return this._encodeStr(e, t);
                if ("objid" === t && r.args) return this._encodeObjid(e, r.reverseArgs[0], r.args[1]);
                if ("objid" === t) return this._encodeObjid(e, null, null);
                if ("gentime" === t || "utctime" === t) return this._encodeTime(e, t);
                if ("null_" === t) return this._encodeNull();
                if ("int" === t || "enum" === t) return this._encodeInt(e, r.args && r.reverseArgs[0]);
                if ("bool" === t) return this._encodeBool(e);
                if ("objDesc" === t) return this._encodeStr(e, t);
                throw new Error("Unsupported tag: " + t);
            }, f20.prototype._isNumstr = function(t) {
                return /^[0-9 ]*$/.test(t);
            }, f20.prototype._isPrintstr = function(t) {
                return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(t);
            };
        },
        function(t265, e141, r113) {
            "use strict";
            var n66 = r113(0);
            function i(t) {
                this._reporterState = {
                    obj: null,
                    path: [],
                    options: t || {
                    },
                    errors: []
                };
            }
            function o(t, e) {
                this.path = t, this.rethrow(e);
            }
            e141.Reporter = i, i.prototype.isError = function(t) {
                return t instanceof o;
            }, i.prototype.save = function() {
                var t = this._reporterState;
                return {
                    obj: t.obj,
                    pathLen: t.path.length
                };
            }, i.prototype.restore = function(t) {
                var e = this._reporterState;
                e.obj = t.obj, e.path = e.path.slice(0, t.pathLen);
            }, i.prototype.enterKey = function(t) {
                return this._reporterState.path.push(t);
            }, i.prototype.exitKey = function(t) {
                var e = this._reporterState;
                e.path = e.path.slice(0, t - 1);
            }, i.prototype.leaveKey = function(t, e, r) {
                var n = this._reporterState;
                this.exitKey(t), null !== n.obj && (n.obj[e] = r);
            }, i.prototype.path = function() {
                return this._reporterState.path.join("/");
            }, i.prototype.enterObject = function() {
                var t = this._reporterState, e = t.obj;
                return t.obj = {
                }, e;
            }, i.prototype.leaveObject = function(t) {
                var e = this._reporterState, r = e.obj;
                return e.obj = t, r;
            }, i.prototype.error = function(t266) {
                var e, r = this._reporterState, n = t266 instanceof o;
                if (e = n ? t266 : new o(r.path.map(function(t) {
                    return "[" + JSON.stringify(t) + "]";
                }).join(""), t266.message || t266, t266.stack), !r.options.partial) throw e;
                return n || r.errors.push(e), e;
            }, i.prototype.wrapResult = function(t) {
                var e = this._reporterState;
                return e.options.partial ? {
                    result: this.isError(t) ? null : t,
                    errors: e.errors
                } : t;
            }, n66(o, Error), o.prototype.rethrow = function(t) {
                if (this.message = t + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, o), !this.stack) try {
                    throw new Error(this.message);
                } catch (t267) {
                    this.stack = t267.stack;
                }
                return this;
            };
        },
        function(t268, e142, r114) {
            "use strict";
            function n(t) {
                var e = {
                };
                return Object.keys(t).forEach(function(r) {
                    (0 | r) == r && (r |= 0);
                    var n = t[r];
                    e[n] = r;
                }), e;
            }
            e142.tagClass = {
                0: "universal",
                1: "application",
                2: "context",
                3: "private"
            }, e142.tagClassByName = n(e142.tagClass), e142.tag = {
                0: "end",
                1: "bool",
                2: "int",
                3: "bitstr",
                4: "octstr",
                5: "null_",
                6: "objid",
                7: "objDesc",
                8: "external",
                9: "real",
                10: "enum",
                11: "embed",
                12: "utf8str",
                13: "relativeOid",
                16: "seq",
                17: "set",
                18: "numstr",
                19: "printstr",
                20: "t61str",
                21: "videostr",
                22: "ia5str",
                23: "utctime",
                24: "gentime",
                25: "graphstr",
                26: "iso646str",
                27: "genstr",
                28: "unistr",
                29: "charstr",
                30: "bmpstr"
            }, e142.tagByName = n(e142.tag);
        },
        function(t269, e143, r115) {
            (function(t270) {
                function e144(t271) {
                    return (e144 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t271);
                }
                !function(t272, n67) {
                    function i48(t, e) {
                        if (!t) throw new Error(e || "Assertion failed");
                    }
                    function o32(t, e) {
                        t.super_ = e;
                        var r = function() {
                        };
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t;
                    }
                    function s29(t, e, r) {
                        if (s29.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
                    }
                    var a27;
                    "object" === e144(t272) ? t272.exports = s29 : n67.BN = s29, s29.BN = s29, s29.wordSize = 26;
                    try {
                        a27 = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r115(268).Buffer;
                    } catch (t273) {
                    }
                    function u25(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
                    }
                    function h20(t, e, r) {
                        var n = u25(t, r);
                        return r - 1 >= e && (n |= u25(t, r - 1) << 4), n;
                    }
                    function f21(t, e, r, n) {
                        for(var i = 0, o = Math.min(t.length, r), s = e; s < o; s++){
                            var a = t.charCodeAt(s) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
                        }
                        return i;
                    }
                    s29.isBN = function(t) {
                        return t instanceof s29 || null !== t && "object" === e144(t) && t.constructor.wordSize === s29.wordSize && Array.isArray(t.words);
                    }, s29.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e;
                    }, s29.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e;
                    }, s29.prototype._init = function(t, r, n) {
                        if ("number" == typeof t) return this._initNumber(t, r, n);
                        if ("object" === e144(t)) return this._initArray(t, r, n);
                        "hex" === r && (r = 16), i48(r === (0 | r) && r >= 2 && r <= 36);
                        var o = 0;
                        "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
                    }, s29.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [
                            67108863 & t
                        ], this.length = 1) : t < 4503599627370496 ? (this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863
                        ], this.length = 2) : (i48(t < 9007199254740992), this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863,
                            1
                        ], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
                    }, s29.prototype._initArray = function(t, e, r) {
                        if (i48("number" == typeof t.length), t.length <= 0) return this.words = [
                            0
                        ], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var o, s, a = 0;
                        if ("be" === r) for(n = t.length - 1, o = 0; n >= 0; n -= 3)s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        else if ("le" === r) for(n = 0, o = 0; n < t.length; n += 3)s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        return this.strip();
                    }, s29.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var i, o = 0, s = 0;
                        if ("be" === r) for(n = t.length - 1; n >= e; n -= 2)i = h20(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        else for(n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2)i = h20(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        this.strip();
                    }, s29.prototype._parseBase = function(t, e, r) {
                        this.words = [
                            0
                        ], this.length = 1;
                        for(var n = 0, i = 1; i <= 67108863; i *= e)n++;
                        n--, i = i / e | 0;
                        for(var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n)u = f21(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var c = 1;
                            for(u = f21(t, h, t.length, e), h = 0; h < s; h++)c *= e;
                            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        }
                        this.strip();
                    }, s29.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for(var e = 0; e < this.length; e++)t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red;
                    }, s29.prototype.clone = function() {
                        var t = new s29(null);
                        return this.copy(t), t;
                    }, s29.prototype._expand = function(t) {
                        for(; this.length < t;)this.words[this.length++] = 0;
                        return this;
                    }, s29.prototype.strip = function() {
                        for(; this.length > 1 && 0 === this.words[this.length - 1];)this.length--;
                        return this._normSign();
                    }, s29.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }, s29.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    };
                    var c17 = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000"
                    ], l15 = [
                        0,
                        0,
                        25,
                        16,
                        12,
                        11,
                        10,
                        9,
                        8,
                        8,
                        7,
                        7,
                        7,
                        7,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5
                    ], d9 = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        10000000,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64000000,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        24300000,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176
                    ];
                    function p7(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0], o = 0 | e.words[0], s = i * o, a = 67108863 & s, u = s / 67108864 | 0;
                        r.words[0] = a;
                        for(var h = 1; h < n; h++){
                            for(var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++){
                                var p = h - d | 0;
                                f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
                            }
                            r.words[h] = 0 | c, u = 0 | f;
                        }
                        return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip();
                    }
                    s29.prototype.toString = function(t, e) {
                        var r;
                        if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                            r = "";
                            for(var n = 0, o = 0, s = 0; s < this.length; s++){
                                var a = this.words[s], u = (16777215 & (a << n | o)).toString(16);
                                r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? c17[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
                            }
                            for(0 !== o && (r = o.toString(16) + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var h = l15[t], f = d9[t];
                            r = "";
                            var p = this.clone();
                            for(p.negative = 0; !p.isZero();){
                                var y = p.modn(f).toString(t);
                                r = (p = p.idivn(f)).isZero() ? y + r : c17[h - y.length] + y + r;
                            }
                            for(this.isZero() && (r = "0" + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        i48(!1, "Base should be between 2 and 36");
                    }, s29.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i48(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
                    }, s29.prototype.toJSON = function() {
                        return this.toString(16);
                    }, s29.prototype.toBuffer = function(t, e) {
                        return i48(void 0 !== a27), this.toArrayLike(a27, t, e);
                    }, s29.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e);
                    }, s29.prototype.toArrayLike = function(t, e, r) {
                        var n = this.byteLength(), o = r || Math.max(1, n);
                        i48(n <= o, "byte array longer than desired length"), i48(o > 0, "Requested array length <= 0"), this.strip();
                        var s, a, u = "le" === e, h = new t(o), f = this.clone();
                        if (u) {
                            for(a = 0; !f.isZero(); a++)s = f.andln(255), f.iushrn(8), h[a] = s;
                            for(; a < o; a++)h[a] = 0;
                        } else {
                            for(a = 0; a < o - n; a++)h[a] = 0;
                            for(a = 0; !f.isZero(); a++)s = f.andln(255), f.iushrn(8), h[o - a - 1] = s;
                        }
                        return h;
                    }, Math.clz32 ? s29.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t);
                    } : s29.prototype._countBits = function(t) {
                        var e = t, r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
                    }, s29.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t, r = 0;
                        return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
                    }, s29.prototype.bitLength = function() {
                        var t = this.words[this.length - 1], e = this._countBits(t);
                        return 26 * (this.length - 1) + e;
                    }, s29.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for(var t = 0, e = 0; e < this.length; e++){
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break;
                        }
                        return t;
                    }, s29.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8);
                    }, s29.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
                    }, s29.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
                    }, s29.prototype.isNeg = function() {
                        return 0 !== this.negative;
                    }, s29.prototype.neg = function() {
                        return this.clone().ineg();
                    }, s29.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this;
                    }, s29.prototype.iuor = function(t) {
                        for(; this.length < t.length;)this.words[this.length++] = 0;
                        for(var e = 0; e < t.length; e++)this.words[e] = this.words[e] | t.words[e];
                        return this.strip();
                    }, s29.prototype.ior = function(t) {
                        return i48(0 == (this.negative | t.negative)), this.iuor(t);
                    }, s29.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
                    }, s29.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
                    }, s29.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for(var r = 0; r < e.length; r++)this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this.strip();
                    }, s29.prototype.iand = function(t) {
                        return i48(0 == (this.negative | t.negative)), this.iuand(t);
                    }, s29.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
                    }, s29.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
                    }, s29.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for(var n = 0; n < r.length; n++)this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e) for(; n < e.length; n++)this.words[n] = e.words[n];
                        return this.length = e.length, this.strip();
                    }, s29.prototype.ixor = function(t) {
                        return i48(0 == (this.negative | t.negative)), this.iuxor(t);
                    }, s29.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
                    }, s29.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
                    }, s29.prototype.inotn = function(t) {
                        i48("number" == typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26), r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for(var n = 0; n < e; n++)this.words[n] = 67108863 & ~this.words[n];
                        return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip();
                    }, s29.prototype.notn = function(t) {
                        return this.clone().inotn(t);
                    }, s29.prototype.setn = function(t, e) {
                        i48("number" == typeof t && t >= 0);
                        var r = t / 26 | 0, n = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip();
                    }, s29.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for(var i = 0, o = 0; o < n.length; o++)e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for(; 0 !== i && o < r.length; o++)e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this) for(; o < r.length; o++)this.words[o] = r.words[o];
                        return this;
                    }, s29.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
                    }, s29.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign();
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for(var o = 0, s = 0; s < n.length; s++)o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        for(; 0 !== o && s < r.length; s++)o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        if (0 === o && s < r.length && r !== this) for(; s < r.length; s++)this.words[s] = r.words[s];
                        return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip();
                    }, s29.prototype.sub = function(t) {
                        return this.clone().isub(t);
                    };
                    var y6 = function(t, e, r) {
                        var n, i, o, s = t.words, a = e.words, u = r.words, h = 0, f = 0 | s[0], c = 8191 & f, l = f >>> 13, d = 0 | s[1], p = 8191 & d, y = d >>> 13, m = 0 | s[2], b = 8191 & m, v = m >>> 13, g = 0 | s[3], w = 8191 & g, _ = g >>> 13, M = 0 | s[4], S = 8191 & M, O = M >>> 13, A = 0 | s[5], E = 8191 & A, x = A >>> 13, k = 0 | s[6], j = 8191 & k, $ = k >>> 13, P = 0 | s[7], R = 8191 & P, B = P >>> 13, T = 0 | s[8], I = 8191 & T, N = T >>> 13, D = 0 | s[9], C = 8191 & D, L = D >>> 13, q = 0 | a[0], U = 8191 & q, F = q >>> 13, z = 0 | a[1], V = 8191 & z, K = z >>> 13, H = 0 | a[2], Z = 8191 & H, W = H >>> 13, J = 0 | a[3], Y = 8191 & J, Q = J >>> 13, G = 0 | a[4], X = 8191 & G, tt = G >>> 13, et = 0 | a[5], rt = 8191 & et, nt = et >>> 13, it = 0 | a[6], ot = 8191 & it, st = it >>> 13, at = 0 | a[7], ut = 8191 & at, ht = at >>> 13, ft = 0 | a[8], ct = 8191 & ft, lt = ft >>> 13, dt = 0 | a[9], pt = 8191 & dt, yt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19;
                        var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
                        h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
                        var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
                        var vt = (h + (n = n + Math.imul(c, Z) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, W) | 0) + Math.imul(l, Z) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, W) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, Z) | 0, i = (i = i + Math.imul(p, W) | 0) + Math.imul(y, Z) | 0, o = o + Math.imul(y, W) | 0;
                        var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Q) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, Q) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, Z) | 0, i = (i = i + Math.imul(b, W) | 0) + Math.imul(v, Z) | 0, o = o + Math.imul(v, W) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, Q) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, Q) | 0;
                        var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, Z) | 0, i = (i = i + Math.imul(w, W) | 0) + Math.imul(_, Z) | 0, o = o + Math.imul(_, W) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, Q) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, Q) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;
                        var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, Z) | 0, i = (i = i + Math.imul(S, W) | 0) + Math.imul(O, Z) | 0, o = o + Math.imul(O, W) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, Q) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, Q) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                        var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, Z) | 0, i = (i = i + Math.imul(E, W) | 0) + Math.imul(x, Z) | 0, o = o + Math.imul(x, W) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, Q) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, Q) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                        var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, Z) | 0, i = (i = i + Math.imul(j, W) | 0) + Math.imul($, Z) | 0, o = o + Math.imul($, W) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, Q) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, Q) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
                        var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, Z) | 0, i = (i = i + Math.imul(R, W) | 0) + Math.imul(B, Z) | 0, o = o + Math.imul(B, W) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, Q) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, Q) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
                        var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, Z) | 0, i = (i = i + Math.imul(I, W) | 0) + Math.imul(N, Z) | 0, o = o + Math.imul(N, W) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, Q) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, Q) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
                        var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, Z), i = (i = Math.imul(C, W)) + Math.imul(L, Z) | 0, o = Math.imul(L, W), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, Q) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, Q) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
                        var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, Q)) + Math.imul(L, Y) | 0, o = Math.imul(L, Q), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
                        var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
                        var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
                        var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
                        var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
                        var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
                        var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
                        var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
                        return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
                    };
                    function m6(t, e, r) {
                        return (new b6).mulp(t, e, r);
                    }
                    function b6(t, e) {
                        this.x = t, this.y = e;
                    }
                    Math.imul || (y6 = p7), s29.prototype.mulTo = function(t274, e145) {
                        var r116 = this.length + t274.length;
                        return 10 === this.length && 10 === t274.length ? y6(this, t274, e145) : r116 < 63 ? p7(this, t274, e145) : r116 < 1024 ? (function(t, e, r) {
                            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                            for(var n = 0, i = 0, o = 0; o < r.length - 1; o++){
                                var s = i;
                                i = 0;
                                for(var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++){
                                    var f = o - h, c = (0 | t.words[f]) * (0 | e.words[h]), l = 67108863 & c;
                                    a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
                                }
                                r.words[o] = a, n = s, s = i;
                            }
                            return 0 !== n ? r.words[o] = n : r.length--, r.strip();
                        })(this, t274, e145) : m6(this, t274, e145);
                    }, b6.prototype.makeRBT = function(t) {
                        for(var e = new Array(t), r = s29.prototype._countBits(t) - 1, n = 0; n < t; n++)e[n] = this.revBin(n, r, t);
                        return e;
                    }, b6.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for(var n = 0, i = 0; i < e; i++)n |= (1 & t) << e - i - 1, t >>= 1;
                        return n;
                    }, b6.prototype.permute = function(t, e, r, n, i, o) {
                        for(var s = 0; s < o; s++)n[s] = e[t[s]], i[s] = r[t[s]];
                    }, b6.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for(var s = 1; s < i; s <<= 1)for(var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a)for(var c = u, l = h, d = 0; d < s; d++){
                            var p = r[f + d], y = n[f + d], m = r[f + d + s], b = n[f + d + s], v = c * m - l * b;
                            b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
                        }
                    }, b6.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t), n = 1 & r, i = 0;
                        for(r = r / 2 | 0; r; r >>>= 1)i++;
                        return 1 << i + 1 + n;
                    }, b6.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1)) for(var n = 0; n < r / 2; n++){
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
                        }
                    }, b6.prototype.normalize13b = function(t, e) {
                        for(var r = 0, n = 0; n < e / 2; n++){
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
                        }
                        return t;
                    }, b6.prototype.convert13b = function(t, e, r, n) {
                        for(var o = 0, s = 0; s < e; s++)o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                        for(s = 2 * e; s < n; ++s)r[s] = 0;
                        i48(0 === o), i48(0 == (-8192 & o));
                    }, b6.prototype.stub = function(t) {
                        for(var e = new Array(t), r = 0; r < t; r++)e[r] = 0;
                        return e;
                    }, b6.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length), i = this.makeRBT(n), o = this.stub(n), s = new Array(n), a = new Array(n), u = new Array(n), h = new Array(n), f = new Array(n), c = new Array(n), l = r.words;
                        l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);
                        for(var d = 0; d < n; d++){
                            var p = a[d] * f[d] - u[d] * c[d];
                            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip();
                    }, s29.prototype.mul = function(t) {
                        var e = new s29(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e);
                    }, s29.prototype.mulf = function(t) {
                        var e = new s29(null);
                        return e.words = new Array(this.length + t.length), m6(this, t, e);
                    }, s29.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this);
                    }, s29.prototype.imuln = function(t) {
                        i48("number" == typeof t), i48(t < 67108864);
                        for(var e = 0, r = 0; r < this.length; r++){
                            var n = (0 | this.words[r]) * t, o = (67108863 & n) + (67108863 & e);
                            e >>= 26, e += n / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o;
                        }
                        return 0 !== e && (this.words[r] = e, this.length++), this;
                    }, s29.prototype.muln = function(t) {
                        return this.clone().imuln(t);
                    }, s29.prototype.sqr = function() {
                        return this.mul(this);
                    }, s29.prototype.isqr = function() {
                        return this.imul(this.clone());
                    }, s29.prototype.pow = function(t275) {
                        var e146 = function(t) {
                            for(var e = new Array(t.bitLength()), r = 0; r < e.length; r++){
                                var n = r / 26 | 0, i = r % 26;
                                e[r] = (t.words[n] & 1 << i) >>> i;
                            }
                            return e;
                        }(t275);
                        if (0 === e146.length) return new s29(1);
                        for(var r117 = this, n = 0; n < e146.length && 0 === e146[n]; n++, r117 = r117.sqr());
                        if (++n < e146.length) for(var i49 = r117.sqr(); n < e146.length; n++, i49 = i49.sqr())0 !== e146[n] && (r117 = r117.mul(i49));
                        return r117;
                    }, s29.prototype.iushln = function(t) {
                        i48("number" == typeof t && t >= 0);
                        var e, r = t % 26, n = (t - r) / 26, o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var s = 0;
                            for(e = 0; e < this.length; e++){
                                var a = this.words[e] & o, u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | s, s = a >>> 26 - r;
                            }
                            s && (this.words[e] = s, this.length++);
                        }
                        if (0 !== n) {
                            for(e = this.length - 1; e >= 0; e--)this.words[e + n] = this.words[e];
                            for(e = 0; e < n; e++)this.words[e] = 0;
                            this.length += n;
                        }
                        return this.strip();
                    }, s29.prototype.ishln = function(t) {
                        return i48(0 === this.negative), this.iushln(t);
                    }, s29.prototype.iushrn = function(t, e, r) {
                        var n;
                        i48("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26, s = Math.min((t - o) / 26, this.length), a = 67108863 ^ 67108863 >>> o << o, u = r;
                        if (n -= s, n = Math.max(0, n), u) {
                            for(var h = 0; h < s; h++)u.words[h] = this.words[h];
                            u.length = s;
                        }
                        if (0 === s) ;
                        else if (this.length > s) for(this.length -= s, h = 0; h < this.length; h++)this.words[h] = this.words[h + s];
                        else this.words[0] = 0, this.length = 1;
                        var f = 0;
                        for(h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--){
                            var c = 0 | this.words[h];
                            this.words[h] = f << 26 - o | c >>> o, f = c & a;
                        }
                        return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
                    }, s29.prototype.ishrn = function(t, e, r) {
                        return i48(0 === this.negative), this.iushrn(t, e, r);
                    }, s29.prototype.shln = function(t) {
                        return this.clone().ishln(t);
                    }, s29.prototype.ushln = function(t) {
                        return this.clone().iushln(t);
                    }, s29.prototype.shrn = function(t) {
                        return this.clone().ishrn(t);
                    }, s29.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t);
                    }, s29.prototype.testn = function(t) {
                        i48("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        return !(this.length <= r) && !!(this.words[r] & n);
                    }, s29.prototype.imaskn = function(t) {
                        i48("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26;
                        if (i48(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var n = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= n;
                        }
                        return this.strip();
                    }, s29.prototype.maskn = function(t) {
                        return this.clone().imaskn(t);
                    }, s29.prototype.iaddn = function(t) {
                        return i48("number" == typeof t), i48(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
                    }, s29.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for(var e = 0; e < this.length && this.words[e] >= 67108864; e++)this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this;
                    }, s29.prototype.isubn = function(t) {
                        if (i48("number" == typeof t), i48(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else for(var e = 0; e < this.length && this.words[e] < 0; e++)this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this.strip();
                    }, s29.prototype.addn = function(t) {
                        return this.clone().iaddn(t);
                    }, s29.prototype.subn = function(t) {
                        return this.clone().isubn(t);
                    }, s29.prototype.iabs = function() {
                        return this.negative = 0, this;
                    }, s29.prototype.abs = function() {
                        return this.clone().iabs();
                    }, s29.prototype._ishlnsubmul = function(t, e, r) {
                        var n, o, s = t.length + r;
                        this._expand(s);
                        var a = 0;
                        for(n = 0; n < t.length; n++){
                            o = (0 | this.words[n + r]) + a;
                            var u = (0 | t.words[n]) * e;
                            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
                        }
                        for(; n < this.length - r; n++)a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
                        if (0 === a) return this.strip();
                        for(i48(-1 === a), a = 0, n = 0; n < this.length; n++)a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
                        return this.negative = 1, this.strip();
                    }, s29.prototype._wordDiv = function(t, e) {
                        var r = (this.length, t.length), n = this.clone(), i = t, o = 0 | i.words[i.length - 1];
                        0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                        var a, u = n.length - i.length;
                        if ("mod" !== e) {
                            (a = new s29(null)).length = u + 1, a.words = new Array(a.length);
                            for(var h = 0; h < a.length; h++)a.words[h] = 0;
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, u);
                        0 === f.negative && (n = f, a && (a.words[u] = 1));
                        for(var c = u - 1; c >= 0; c--){
                            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);
                            for(l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;)l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
                            a && (a.words[c] = l);
                        }
                        return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: a || null,
                            mod: n
                        };
                    }, s29.prototype.divmod = function(t, e, r) {
                        var n, o, a;
                        return i48(!t.isZero()), this.isZero() ? {
                            div: new s29(0),
                            mod: new s29(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
                            div: n,
                            mod: o
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
                            div: n,
                            mod: a.mod
                        }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
                            div: a.div,
                            mod: o
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new s29(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new s29(this.modn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new s29(this.modn(t.words[0]))
                        } : this._wordDiv(t, e);
                    }, s29.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div;
                    }, s29.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod;
                    }, s29.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod;
                    }, s29.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod, n = t.ushrn(1), i = t.andln(1), o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
                    }, s29.prototype.modn = function(t) {
                        i48(t <= 67108863);
                        for(var e = 67108864 % t, r = 0, n = this.length - 1; n >= 0; n--)r = (e * r + (0 | this.words[n])) % t;
                        return r;
                    }, s29.prototype.idivn = function(t) {
                        i48(t <= 67108863);
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = (0 | this.words[r]) + 67108864 * e;
                            this.words[r] = n / t | 0, e = n % t;
                        }
                        return this.strip();
                    }, s29.prototype.divn = function(t) {
                        return this.clone().idivn(t);
                    }, s29.prototype.egcd = function(t) {
                        i48(0 === t.negative), i48(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n = new s29(1), o = new s29(0), a = new s29(0), u = new s29(1), h = 0; e.isEven() && r.isEven();)e.iushrn(1), r.iushrn(1), ++h;
                        for(var f = r.clone(), c = e.clone(); !e.isZero();){
                            for(var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1);
                            if (l > 0) for(e.iushrn(l); l-- > 0;)(n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
                            for(var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1);
                            if (p > 0) for(r.iushrn(p); p-- > 0;)(a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(h)
                        };
                    }, s29.prototype._invmp = function(t) {
                        i48(0 === t.negative), i48(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n, o = new s29(1), a = new s29(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;){
                            for(var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1);
                            if (h > 0) for(e.iushrn(h); h-- > 0;)o.isOdd() && o.iadd(u), o.iushrn(1);
                            for(var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                            if (c > 0) for(r.iushrn(c); c-- > 0;)a.isOdd() && a.iadd(u), a.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
                        }
                        return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
                    }, s29.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(), r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for(var n = 0; e.isEven() && r.isEven(); n++)e.iushrn(1), r.iushrn(1);
                        for(;;){
                            for(; e.isEven();)e.iushrn(1);
                            for(; r.isEven();)r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o;
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r);
                        }
                        return r.iushln(n);
                    }, s29.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t);
                    }, s29.prototype.isEven = function() {
                        return 0 == (1 & this.words[0]);
                    }, s29.prototype.isOdd = function() {
                        return 1 == (1 & this.words[0]);
                    }, s29.prototype.andln = function(t) {
                        return this.words[0] & t;
                    }, s29.prototype.bincn = function(t) {
                        i48("number" == typeof t);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                        for(var o = n, s = r; 0 !== o && s < this.length; s++){
                            var a = 0 | this.words[s];
                            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
                        }
                        return 0 !== o && (this.words[s] = o, this.length++), this;
                    }, s29.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0];
                    }, s29.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), i48(t <= 67108863, "Number is too big");
                            var n = 0 | this.words[0];
                            e = n === t ? 0 : n < t ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s29.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s29.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = 0 | this.words[r], i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break;
                            }
                        }
                        return e;
                    }, s29.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t);
                    }, s29.prototype.gt = function(t) {
                        return 1 === this.cmp(t);
                    }, s29.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0;
                    }, s29.prototype.gte = function(t) {
                        return this.cmp(t) >= 0;
                    }, s29.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t);
                    }, s29.prototype.lt = function(t) {
                        return -1 === this.cmp(t);
                    }, s29.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0;
                    }, s29.prototype.lte = function(t) {
                        return this.cmp(t) <= 0;
                    }, s29.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t);
                    }, s29.prototype.eq = function(t) {
                        return 0 === this.cmp(t);
                    }, s29.red = function(t) {
                        return new O5(t);
                    }, s29.prototype.toRed = function(t) {
                        return i48(!this.red, "Already a number in reduction context"), i48(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
                    }, s29.prototype.fromRed = function() {
                        return i48(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }, s29.prototype._forceRed = function(t) {
                        return this.red = t, this;
                    }, s29.prototype.forceRed = function(t) {
                        return i48(!this.red, "Already a number in reduction context"), this._forceRed(t);
                    }, s29.prototype.redAdd = function(t) {
                        return i48(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
                    }, s29.prototype.redIAdd = function(t) {
                        return i48(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
                    }, s29.prototype.redSub = function(t) {
                        return i48(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
                    }, s29.prototype.redISub = function(t) {
                        return i48(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
                    }, s29.prototype.redShl = function(t) {
                        return i48(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
                    }, s29.prototype.redMul = function(t) {
                        return i48(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
                    }, s29.prototype.redIMul = function(t) {
                        return i48(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
                    }, s29.prototype.redSqr = function() {
                        return i48(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }, s29.prototype.redISqr = function() {
                        return i48(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }, s29.prototype.redSqrt = function() {
                        return i48(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }, s29.prototype.redInvm = function() {
                        return i48(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }, s29.prototype.redNeg = function() {
                        return i48(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }, s29.prototype.redPow = function(t) {
                        return i48(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
                    };
                    var v6 = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };
                    function g5(t, e) {
                        this.name = t, this.p = new s29(e, 16), this.n = this.p.bitLength(), this.k = new s29(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
                    }
                    function w5() {
                        g5.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                    }
                    function _6() {
                        g5.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                    }
                    function M5() {
                        g5.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                    }
                    function S5() {
                        g5.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                    }
                    function O5(t) {
                        if ("string" == typeof t) {
                            var e = s29._prime(t);
                            this.m = e.p, this.prime = e;
                        } else i48(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
                    }
                    function A6(t) {
                        O5.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s29(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
                    }
                    g5.prototype._tmp = function() {
                        var t = new s29(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t;
                    }, g5.prototype.ireduce = function(t) {
                        var e, r = t;
                        do this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                        while (e > this.n)
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }, g5.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e);
                    }, g5.prototype.imulK = function(t) {
                        return t.imul(this.k);
                    }, o32(w5, g5), w5.prototype.split = function(t, e) {
                        for(var r = Math.min(t.length, 9), n = 0; n < r; n++)e.words[n] = t.words[n];
                        if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
                        var i = t.words[9];
                        for(e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++){
                            var o = 0 | t.words[n];
                            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
                        }
                        i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
                    }, w5.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
                    }, o32(_6, g5), o32(M5, g5), o32(S5, g5), S5.prototype.imulK = function(t) {
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 19 * (0 | t.words[r]) + e, i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n;
                        }
                        return 0 !== e && (t.words[t.length++] = e), t;
                    }, s29._prime = function(t) {
                        if (v6[t]) return v6[t];
                        var e;
                        if ("k256" === t) e = new w5;
                        else if ("p224" === t) e = new _6;
                        else if ("p192" === t) e = new M5;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new S5;
                        }
                        return v6[t] = e, e;
                    }, O5.prototype._verify1 = function(t) {
                        i48(0 === t.negative, "red works only with positives"), i48(t.red, "red works only with red numbers");
                    }, O5.prototype._verify2 = function(t, e) {
                        i48(0 == (t.negative | e.negative), "red works only with positives"), i48(t.red && t.red === e.red, "red works only with red numbers");
                    }, O5.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
                    }, O5.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
                    }, O5.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
                    }, O5.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                    }, O5.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
                    }, O5.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r;
                    }, O5.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e));
                    }, O5.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e));
                    }, O5.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e));
                    }, O5.prototype.isqr = function(t) {
                        return this.imul(t, t.clone());
                    }, O5.prototype.sqr = function(t) {
                        return this.mul(t, t);
                    }, O5.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (i48(e % 2 == 1), 3 === e) {
                            var r = this.m.add(new s29(1)).iushrn(2);
                            return this.pow(t, r);
                        }
                        for(var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);)o++, n.iushrn(1);
                        i48(!n.isZero());
                        var a = new s29(1).toRed(this), u = a.redNeg(), h = this.m.subn(1).iushrn(1), f = this.m.bitLength();
                        for(f = new s29(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);)f.redIAdd(u);
                        for(var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);){
                            for(var y = d, m = 0; 0 !== y.cmp(a); m++)y = y.redSqr();
                            i48(m < p);
                            var b = this.pow(c, new s29(1).iushln(p - m - 1));
                            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
                        }
                        return l;
                    }, O5.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
                    }, O5.prototype.pow = function(t, e) {
                        if (e.isZero()) return new s29(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = new Array(16);
                        r[0] = new s29(1).toRed(this), r[1] = t;
                        for(var n = 2; n < r.length; n++)r[n] = this.mul(r[n - 1], t);
                        var i = r[0], o = 0, a = 0, u = e.bitLength() % 26;
                        for(0 === u && (u = 26), n = e.length - 1; n >= 0; n--){
                            for(var h = e.words[n], f = u - 1; f >= 0; f--){
                                var c = h >> f & 1;
                                i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
                            }
                            u = 26;
                        }
                        return i;
                    }, O5.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e;
                    }, O5.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e;
                    }, s29.mont = function(t) {
                        return new A6(t);
                    }, o32(A6, O5), A6.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift));
                    }, A6.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e;
                    }, A6.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A6.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new s29(0)._forceRed(this);
                        var r = t.mul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A6.prototype.invm = function(t) {
                        return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
                    };
                }(t270, this);
            }).call(this, r115(24)(t269));
        },
        function(t, e, r) {
            "use strict";
            t.exports = r(277);
        },
        function(t, e, r) {
            "use strict";
            t.exports = new Set([
                "__proto__",
                "constructor",
                "prototype"
            ]);
        },
        function(t276, e147, r) {
            "use strict";
            var n = r(84);
            /*!
 * ignore
 */ t276.exports = function(t) {
                var e = null != this ? this.path : null;
                return n(t, e);
            };
        },
        function(t, e148, r118) {
            "use strict";
            var n = r118(20);
            /*!
 * Given a value, cast it to a boolean, or throw a `CastError` if the value
 * cannot be casted. `null` and `undefined` are considered valid.
 *
 * @param {Any} value
 * @param {String} [path] optional the path to set on the CastError
 * @return {Boolean|null|undefined}
 * @throws {CastError} if `value` is not one of the allowed values
 * @api private
 */ t.exports = function(e, r) {
                if (t.exports.convertToTrue.has(e)) return !0;
                if (t.exports.convertToFalse.has(e)) return !1;
                if (null == e) return e;
                throw new n("boolean", e, r);
            }, t.exports.convertToTrue = new Set([
                !0,
                "true",
                1,
                "1",
                "yes"
            ]), t.exports.convertToFalse = new Set([
                !1,
                "false",
                0,
                "0",
                "no"
            ]);
        },
        function(t277, e149, r119) {
            "use strict";
            (function(n68) {
                /*!
 * Module dependencies.
 */ function i50(t, e, r) {
                    return e in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function o33(t278) {
                    return (o33 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t278);
                }
                function s30(t279, e150) {
                    var r120 = "undefined" != typeof Symbol && t279[Symbol.iterator] || t279["@@iterator"];
                    if (!r120) {
                        if (Array.isArray(t279) || (r120 = (function(t, e) {
                            if (!t) return;
                            if ("string" == typeof t) return a28(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === r && t.constructor && (r = t.constructor.name);
                            if ("Map" === r || "Set" === r) return Array.from(t);
                            if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return a28(t, e);
                        })(t279)) || e150 && t279 && "number" == typeof t279.length) {
                            r120 && (t279 = r120);
                            var n = 0, i = function() {
                            };
                            return {
                                s: i,
                                n: function() {
                                    return n >= t279.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t279[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: i
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var o, s = !0, u = !1;
                    return {
                        s: function() {
                            r120 = r120.call(t279);
                        },
                        n: function() {
                            var t = r120.next();
                            return s = t.done, t;
                        },
                        e: function(t) {
                            u = !0, o = t;
                        },
                        f: function() {
                            try {
                                s || null == r120.return || r120.return();
                            } finally{
                                if (u) throw o;
                            }
                        }
                    };
                }
                function a28(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var u26, h21 = r119(12).EventEmitter, f22 = r119(306), c18 = r119(19), l16 = r119(9), d10 = r119(15), p8 = r119(307), y7 = r119(86), m7 = r119(155), b7 = r119(14), v7 = r119(22), g = r119(308), w6 = r119(310), _7 = r119(150), M = r119(81), S6 = r119(25).get().ReadPreference, O6 = r119(311), A = r119(4), E = r119(315), x = r119(316).middlewareFunctions, k4 = r119(157).middlewareFunctions, j3 = x.concat(k4).reduce(function(t, e) {
                    return t.add(e);
                }, new Set), $ = A.isPOJO, P3 = 0;
                function R3(t, e) {
                    if (!(this instanceof R3)) return new R3(t, e);
                    if (this.obj = t, this.paths = {
                    }, this.aliases = {
                    }, this.subpaths = {
                    }, this.virtuals = {
                    }, this.singleNestedPaths = {
                    }, this.nested = {
                    }, this.inherits = {
                    }, this.callQueue = [], this._indexes = [], this.methods = {
                    }, this.methodOptions = {
                    }, this.statics = {
                    }, this.tree = {
                    }, this.query = {
                    }, this.childSchemas = [], this.plugins = [], this.$id = ++P3, this.mapPaths = [], this.s = {
                        hooks: new f22
                    }, this.options = this.defaultOptions(e), Array.isArray(t)) {
                        var r, n = s30(t);
                        try {
                            for(n.s(); !(r = n.n()).done;){
                                var i = r.value;
                                this.add(i);
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                    } else t && this.add(t);
                    var o = t && t._id && A.isObject(t._id);
                    !this.paths._id && this.options._id && !o && m7(this), this.setupTimestamp(this.options.timestamps);
                }
                /*!
 * Create virtual properties with alias field
 */ /*!
 * Inherit from EventEmitter.
 */ R3.prototype = Object.create(h21.prototype), R3.prototype.constructor = R3, R3.prototype.instanceOfSchema = !0, /*!
 * ignore
 */ Object.defineProperty(R3.prototype, "$schemaType", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !0
                }), Object.defineProperty(R3.prototype, "childSchemas", {
                    configurable: !1,
                    enumerable: !0,
                    writable: !0
                }), Object.defineProperty(R3.prototype, "virtuals", {
                    configurable: !1,
                    enumerable: !0,
                    writable: !0
                }), R3.prototype.obj, R3.prototype.paths, R3.prototype.tree, R3.prototype.clone = function() {
                    var t = this, e151 = this._clone();
                    return e151.on("init", function(e) {
                        return t.emit("init", e);
                    }), e151;
                }, R3.prototype._clone = function(t280) {
                    var e152 = new (t280 = t280 || (null == this.base ? R3 : this.base.Schema))({
                    }, this._userProvidedOptions);
                    return e152.base = this.base, e152.obj = this.obj, e152.options = A.clone(this.options), e152.callQueue = this.callQueue.map(function(t) {
                        return t;
                    }), e152.methods = A.clone(this.methods), e152.methodOptions = A.clone(this.methodOptions), e152.statics = A.clone(this.statics), e152.query = A.clone(this.query), e152.plugins = Array.prototype.slice.call(this.plugins), e152._indexes = A.clone(this._indexes), e152.s.hooks = this.s.hooks.clone(), e152.tree = A.clone(this.tree), e152.paths = A.clone(this.paths), e152.nested = A.clone(this.nested), e152.subpaths = A.clone(this.subpaths), e152.singleNestedPaths = A.clone(this.singleNestedPaths), e152.childSchemas = /*!
 * ignore
 */ (function(t) {
                        for(var e = [], r = 0, n = Object.keys(t.paths); r < n.length; r++){
                            var i = n[r], o = t.paths[i];
                            (o.$isMongooseDocumentArray || o.$isSingleNested) && e.push({
                                schema: o.schema,
                                model: o.caster
                            });
                        }
                        return e;
                    })(e152), e152.virtuals = A.clone(this.virtuals), e152.$globalPluginsApplied = this.$globalPluginsApplied, e152.$isRootDiscriminator = this.$isRootDiscriminator, e152.$implicitlyCreated = this.$implicitlyCreated, e152.$id = ++P3, e152.$originalSchemaId = this.$id, e152.mapPaths = [].concat(this.mapPaths), null != this.discriminatorMapping && (e152.discriminatorMapping = Object.assign({
                    }, this.discriminatorMapping)), null != this.discriminators && (e152.discriminators = Object.assign({
                    }, this.discriminators)), e152.aliases = Object.assign({
                    }, this.aliases), e152;
                }, R3.prototype.pick = function(t, e) {
                    var r = new R3({
                    }, e || this.options);
                    if (!Array.isArray(t)) throw new c18('Schema#pick() only accepts an array argument, got "' + o33(t) + '"');
                    var n, a = s30(t);
                    try {
                        for(a.s(); !(n = a.n()).done;){
                            var u = n.value;
                            if (this.nested[u]) r.add(i50({
                            }, u, b7(this.tree, u)));
                            else {
                                var h = this.path(u);
                                if (null == h) throw new c18("Path `" + u + "` is not in the schema");
                                r.add(i50({
                                }, u, h));
                            }
                        }
                    } catch (t281) {
                        a.e(t281);
                    } finally{
                        a.f();
                    }
                    return r;
                }, R3.prototype.defaultOptions = function(t) {
                    this._userProvidedOptions = null == t ? {
                    } : A.clone(t);
                    var e = this.base && this.base.options || {
                    }, r = !("strict" in e) || e.strict;
                    if ((t = A.options({
                        strict: r,
                        strictQuery: "strict" in this._userProvidedOptions ? this._userProvidedOptions.strict : "strictQuery" in e ? e.strictQuery : r,
                        bufferCommands: !0,
                        capped: !1,
                        versionKey: "__v",
                        optimisticConcurrency: !1,
                        minimize: !0,
                        autoIndex: null,
                        discriminatorKey: "__t",
                        shardKey: null,
                        read: null,
                        validateBeforeSave: !0,
                        _id: !0,
                        id: !0,
                        typeKey: "type"
                    }, A.clone(t))).read && (t.read = S6(t.read)), t.versionKey && "string" != typeof t.versionKey) throw new c18("`versionKey` must be falsy or string, got `" + o33(t.versionKey) + "`");
                    if (t.optimisticConcurrency && !t.versionKey) throw new c18("Must set `versionKey` if using `optimisticConcurrency`");
                    return t;
                }, R3.prototype.add = function(t282, e153) {
                    if (t282 instanceof R3 || null != t282 && t282.instanceOfSchema) return _7(this, t282), this;
                    if (!1 === t282._id && null == e153 && (this.options._id = !1), "__proto__." === (e153 = e153 || "") || "constructor." === e153 || "prototype." === e153) return this;
                    for(var r121 = Object.keys(t282), n69 = this.options.typeKey, i = 0, o34 = r121; i < o34.length; i++){
                        var a = o34[i], u = e153 + a, h = t282[a];
                        if (null == h) throw new TypeError("Invalid value for schema path `" + u + '`, got value "' + h + '"');
                        if ("_id" !== a || !1 !== h) {
                            if (h instanceof y7 || "VirtualType" === (h.constructor && h.constructor.name || null)) this.virtual(h);
                            else {
                                if (Array.isArray(h) && 1 === h.length && null == h[0]) throw new TypeError("Invalid value for schema Array path `" + u + '`, got value "' + h[0] + '"');
                                if ($(h) || h instanceof d10) {
                                    if (Object.keys(h).length < 1) e153 && (this.nested[e153.substring(0, e153.length - 1)] = !0), this.path(u, h);
                                    else if (!h[n69] || "type" === n69 && $(h.type) && h.type.type) this.nested[u] = !0, this.add(h, u + ".");
                                    else {
                                        var f = h[n69];
                                        if ($(f) && Object.keys(f).length > 0) {
                                            e153 && (this.nested[e153.substring(0, e153.length - 1)] = !0);
                                            var c = new R3(f), l = Object.assign({
                                            }, h, {
                                                type: c
                                            });
                                            this.path(e153 + a, l);
                                        } else e153 && (this.nested[e153.substring(0, e153.length - 1)] = !0), this.path(e153 + a, h);
                                    }
                                } else e153 && (this.nested[e153.substring(0, e153.length - 1)] = !0), this.path(e153 + a, h);
                            }
                        }
                    }
                    return (function(t283, e154) {
                        var r, n = s30(e154 = e154 || Object.keys(t283.paths));
                        try {
                            for(n.s(); !(r = n.n()).done;){
                                var i = r.value, o = b7(t283.paths[i], "options");
                                if (null != o) {
                                    var a = t283.paths[i].path, u = o.alias;
                                    if (u) {
                                        if ("string" != typeof u) throw new Error("Invalid value for alias option on " + a + ", got " + u);
                                        t283.aliases[u] = a, t283.virtual(u).get(function(t) {
                                            return function() {
                                                return "function" == typeof this.get ? this.get(t) : this[t];
                                            };
                                        }(a)).set(function(t) {
                                            return function(e) {
                                                return this.$set(t, e);
                                            };
                                        }(a));
                                    }
                                }
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                    })(this, Object.keys(t282).map(function(t) {
                        return e153 ? e153 + t : t;
                    })), this;
                }, R3.reserved = Object.create(null), R3.prototype.reserved = R3.reserved;
                var B = R3.reserved;
                /*!
 * ignore
 */ function T(t) {
                    return /\.\d+/.test(t) ? t.replace(/\.\d+\./g, ".$.").replace(/\.\d+$/, ".$") : t;
                }
                /*!
 * ignore
 */ function I(t, e) {
                    if (0 === t.mapPaths.length) return null;
                    var r, n = s30(t.mapPaths);
                    try {
                        for(n.s(); !(r = n.n()).done;){
                            var i = r.value.path;
                            if (new RegExp("^" + i.replace(/\.\$\*/g, "\\.[^.]+") + "$").test(e)) return t.paths[i];
                        }
                    } catch (t284) {
                        n.e(t284);
                    } finally{
                        n.f();
                    }
                    return null;
                }
                /*!
 * ignore. Deprecated re: #6405
 */ function N(t, e) {
                    var r = e.split(/\.(\d+)\.|\.(\d+)$/).filter(Boolean);
                    if (r.length < 2) return t.paths.hasOwnProperty(r[0]) ? t.paths[r[0]] : "adhocOrUndefined";
                    var n = t.path(r[0]), i = !1;
                    if (!n) return "adhocOrUndefined";
                    for(var o = r.length - 1, s = 1; s < r.length; ++s){
                        i = !1;
                        var a = r[s];
                        if (s === o && n && !/\D/.test(a)) {
                            n = n.$isMongooseDocumentArray ? n.$embeddedSchemaType : n instanceof u26.Array ? n.caster : void 0;
                            break;
                        }
                        if (/\D/.test(a)) {
                            if (!n || !n.schema) {
                                n = void 0;
                                break;
                            }
                            i = "nested" === n.schema.pathType(a), n = n.schema.path(a);
                        } else n instanceof u26.Array && s !== o && (n = n.caster);
                    }
                    return t.subpaths[e] = n, n ? "real" : i ? "nested" : "adhocOrUndefined";
                }
                /*!
 * ignore
 */ B.prototype = B.emit = B.listeners = B.on = B.removeListener = B.collection = B.errors = B.get = B.init = B.isModified = B.isNew = B.populated = B.remove = B.save = B.toObject = B.validate = 1, B.collection = 1, R3.prototype.path = function(t285, e155) {
                    var r122 = T(t285);
                    if (void 0 === e155) {
                        var n = function(t, e, r) {
                            if (t.paths.hasOwnProperty(e)) return t.paths[e];
                            if (t.subpaths.hasOwnProperty(r)) return t.subpaths[r];
                            if (t.singleNestedPaths.hasOwnProperty(r) && "object" === o33(t.singleNestedPaths[r])) return t.singleNestedPaths[r];
                            return null;
                        }(this, t285, r122);
                        if (null != n) return n;
                        var i = I(this, t285);
                        return null != i ? i : null != (n = this.hasMixedParent(r122)) ? n : /\.\d+\.?.*$/.test(t285) ? (function(t, e) {
                            return N(t, e), t.subpaths[e];
                        })(this, t285) : void 0;
                    }
                    var a = t285.split(".")[0];
                    if (B[a] && !this.options.supressReservedKeysWarning) {
                        var u = "`".concat(a, "` is a reserved schema pathname and may break some functionality. ") + "You are allowed to use it, but use at your own risk. To disable this warning pass `supressReservedKeysWarning` as a schema option.";
                        A.warn(u);
                    }
                    "object" === o33(e155) && A.hasUserDefinedProperty(e155, "ref") && E(e155.ref, t285);
                    var h, f = t285.split(/\./), c = f.pop(), d = this.tree, p = "", y = s30(f);
                    try {
                        for(y.s(); !(h = y.n()).done;){
                            var m = h.value;
                            if (p = p += (p.length > 0 ? "." : "") + m, d[m] || (this.nested[p] = !0, d[m] = {
                            }), "object" !== o33(d[m])) {
                                var b = "Cannot set nested path `" + t285 + "`. Parent path `" + p + "` already set to type " + d[m].name + ".";
                                throw new Error(b);
                            }
                            d = d[m];
                        }
                    } catch (t) {
                        y.e(t);
                    } finally{
                        y.f();
                    }
                    d[c] = A.clone(e155), this.paths[t285] = this.interpretAsType(t285, e155, this.options);
                    var v = this.paths[t285];
                    if (v.$isSchemaMap) {
                        var g = t285 + ".$*";
                        this.paths[g] = v.$__schemaType, this.mapPaths.push(this.paths[g]);
                    }
                    if (v.$isSingleNested) {
                        for(var w = 0, _ = Object.keys(v.schema.paths); w < _.length; w++){
                            var M = _[w];
                            this.singleNestedPaths[t285 + "." + M] = v.schema.paths[M];
                        }
                        for(var S = 0, O = Object.keys(v.schema.singleNestedPaths); S < O.length; S++){
                            var x = O[S];
                            this.singleNestedPaths[t285 + "." + x] = v.schema.singleNestedPaths[x];
                        }
                        for(var k = 0, j = Object.keys(v.schema.subpaths); k < j.length; k++){
                            var $ = j[k];
                            this.singleNestedPaths[t285 + "." + $] = v.schema.subpaths[$];
                        }
                        for(var P = 0, R = Object.keys(v.schema.nested); P < R.length; P++){
                            var D = R[P];
                            this.singleNestedPaths[t285 + "." + D] = "nested";
                        }
                        Object.defineProperty(v.schema, "base", {
                            configurable: !0,
                            enumerable: !1,
                            writable: !1,
                            value: this.base
                        }), v.caster.base = this.base, this.childSchemas.push({
                            schema: v.schema,
                            model: v.caster
                        });
                    } else v.$isMongooseDocumentArray && (Object.defineProperty(v.schema, "base", {
                        configurable: !0,
                        enumerable: !1,
                        writable: !1,
                        value: this.base
                    }), v.casterConstructor.base = this.base, this.childSchemas.push({
                        schema: v.schema,
                        model: v.casterConstructor
                    }));
                    if (v.$isMongooseArray && v.caster instanceof l16) {
                        for(var C = t285, L = v, q = []; L.$isMongooseArray;)C += ".$", L.$isMongooseDocumentArray ? (L.$embeddedSchemaType._arrayPath = C, L.$embeddedSchemaType._arrayParentPath = t285, L = L.$embeddedSchemaType.clone()) : (L.caster._arrayPath = C, L.caster._arrayParentPath = t285, L = L.caster.clone()), L.path = C, q.push(L);
                        for(var U = 0, F = q; U < F.length; U++){
                            var z = F[U];
                            this.subpaths[z.path] = z;
                        }
                    }
                    if (v.$isMongooseDocumentArray) {
                        for(var V = 0, K = Object.keys(v.schema.paths); V < K.length; V++){
                            var H = K[V], Z = v.schema.paths[H];
                            this.subpaths[t285 + "." + H] = Z, "object" === o33(Z) && null != Z && (Z.$isUnderneathDocArray = !0);
                        }
                        for(var W = 0, J = Object.keys(v.schema.subpaths); W < J.length; W++){
                            var Y = J[W], Q = v.schema.subpaths[Y];
                            this.subpaths[t285 + "." + Y] = Q, "object" === o33(Q) && null != Q && (Q.$isUnderneathDocArray = !0);
                        }
                        for(var G = 0, X = Object.keys(v.schema.singleNestedPaths); G < X.length; G++){
                            var tt = X[G], et = v.schema.singleNestedPaths[tt];
                            this.subpaths[t285 + "." + tt] = et, "object" === o33(et) && null != et && (et.$isUnderneathDocArray = !0);
                        }
                    }
                    return this;
                }, Object.defineProperty(R3.prototype, "base", {
                    configurable: !0,
                    enumerable: !1,
                    writable: !0,
                    value: null
                }), R3.prototype.interpretAsType = function(t286, e156, r123) {
                    if (e156 instanceof l16) {
                        if (e156.path === t286) return e156;
                        var s = e156.clone();
                        return s.path = t286, s;
                    }
                    var a29 = null != this.base ? this.base.Schema.Types : R3.Types;
                    if (!(A.isPOJO(e156) || e156 instanceof d10) && "Object" !== A.getFunctionName(e156.constructor)) {
                        var u = e156;
                        (e156 = {
                        })[r123.typeKey] = u;
                    }
                    var h, f = e156[r123.typeKey] && (e156[r123.typeKey] instanceof Function || "type" !== r123.typeKey || !e156.type.type) ? e156[r123.typeKey] : {
                    };
                    if (A.isPOJO(f) || "mixed" === f) return new a29.Mixed(t286, e156);
                    if (Array.isArray(f) || f === Array || "array" === f || f === a29.Array) {
                        var c = f === Array || "array" === f ? e156.cast || e156.of : f[0];
                        if (c && c.instanceOfSchema) {
                            if (!(c instanceof R3)) throw new TypeError("Schema for array path `" + t286 + "` is from a different copy of the Mongoose module. Please make sure you're using the same version of Mongoose everywhere with `npm list mongoose`.");
                            return new a29.DocumentArray(t286, c, e156);
                        }
                        if (c && c[r123.typeKey] && c[r123.typeKey].instanceOfSchema) {
                            if (!(c[r123.typeKey] instanceof R3)) throw new TypeError("Schema for array path `" + t286 + "` is from a different copy of the Mongoose module. Please make sure you're using the same version of Mongoose everywhere with `npm list mongoose`.");
                            return new a29.DocumentArray(t286, c[r123.typeKey], e156, c);
                        }
                        if (Array.isArray(c)) return new a29.Array(t286, this.interpretAsType(t286, c, r123), e156);
                        var p = null == c || !c[r123.typeKey] || "type" === r123.typeKey && c.type.type ? c : c[r123.typeKey];
                        if ("string" == typeof c) c = a29[c.charAt(0).toUpperCase() + c.substring(1)];
                        else if (A.isPOJO(p)) {
                            if (Object.keys(p).length) {
                                var y = {
                                    minimize: r123.minimize
                                };
                                r123.typeKey && (y.typeKey = r123.typeKey), r123.hasOwnProperty("strict") && (y.strict = r123.strict), this._userProvidedOptions.hasOwnProperty("_id") ? y._id = this._userProvidedOptions._id : null != R3.Types.DocumentArray.defaultOptions._id && (y._id = R3.Types.DocumentArray.defaultOptions._id);
                                var m = new R3(p, y);
                                return m.$implicitlyCreated = !0, new a29.DocumentArray(t286, m, e156);
                            }
                            return new a29.Array(t286, a29.Mixed, e156);
                        }
                        if (c) {
                            if (f = !c[r123.typeKey] || "type" === r123.typeKey && c.type.type ? c : c[r123.typeKey], Array.isArray(f)) return new a29.Array(t286, this.interpretAsType(t286, f, r123), e156);
                            if ("ClockDate" === (h = "string" == typeof f ? f : f.schemaName || A.getFunctionName(f)) && (h = "Date"), void 0 === h) throw new TypeError("Invalid schema configuration: " + "Could not determine the embedded type for array `".concat(t286, "`. ") + "See https://mongoosejs.com/docs/guide.html#definition for more info on supported schema syntaxes.");
                            if (!a29.hasOwnProperty(h)) throw new TypeError("Invalid schema configuration: " + "`".concat(h, "` is not a valid type within the array `").concat(t286, "`.") + "See https://bit.ly/mongoose-schematypes for a list of valid schema types.");
                        }
                        return new a29.Array(t286, c || a29.Mixed, e156, r123);
                    }
                    if (f && f.instanceOfSchema) return new a29.Subdocument(f, t286, e156);
                    if ((h = n68.isBuffer(f) ? "Buffer" : "function" == typeof f || "object" === o33(f) ? f.schemaName || A.getFunctionName(f) : null == f ? "" + f : f.toString()) && (h = h.charAt(0).toUpperCase() + h.substring(1)), "ObjectID" === h && (h = "ObjectId"), "ClockDate" === h && (h = "Date"), void 0 === h) throw new TypeError("Invalid schema configuration: `".concat(t286, "` schematype definition is ") + "invalid. See https://mongoosejs.com/docs/guide.html#definition for more info on supported schema syntaxes.");
                    if (null == a29[h]) throw new TypeError("Invalid schema configuration: `".concat(h, "` is not ") + "a valid type at path `".concat(t286, "`. See ") + "https://bit.ly/mongoose-schematypes for a list of valid schema types.");
                    var b = new a29[h](t286, e156);
                    return b.$isSchemaMap && /*!
 * ignore
 */ (function(t, e, r, n, o) {
                        var s = r + ".$*", a = {
                            type: {
                            }
                        };
                        if (A.hasUserDefinedProperty(n, "of")) {
                            var u = A.isPOJO(n.of) && Object.keys(n.of).length > 0 && !A.hasUserDefinedProperty(n.of, t.options.typeKey);
                            a = u ? i50({
                            }, t.options.typeKey, new R3(n.of)) : A.isPOJO(n.of) ? Object.assign({
                            }, n.of) : i50({
                            }, t.options.typeKey, n.of), A.hasUserDefinedProperty(n, "ref") && (a.ref = n.ref);
                        }
                        e.$__schemaType = t.interpretAsType(s, a, o);
                    })(this, b, t286, e156, r123), b;
                }, R3.prototype.eachPath = function(t) {
                    for(var e = Object.keys(this.paths), r = e.length, n = 0; n < r; ++n)t(e[n], this.paths[e[n]]);
                    return this;
                }, R3.prototype.requiredPaths = function(t) {
                    if (this._requiredpaths && !t) return this._requiredpaths;
                    for(var e = Object.keys(this.paths), r = e.length, n = []; r--;){
                        var i = e[r];
                        this.paths[i].isRequired && n.push(i);
                    }
                    return this._requiredpaths = n, this._requiredpaths;
                }, R3.prototype.indexedPaths = function() {
                    return this._indexedpaths || (this._indexedpaths = this.indexes()), this._indexedpaths;
                }, R3.prototype.pathType = function(t) {
                    var e = T(t);
                    if (this.paths.hasOwnProperty(t)) return "real";
                    if (this.virtuals.hasOwnProperty(t)) return "virtual";
                    if (this.nested.hasOwnProperty(t)) return "nested";
                    if (this.subpaths.hasOwnProperty(e) || this.subpaths.hasOwnProperty(t)) return "real";
                    var r = this.singleNestedPaths.hasOwnProperty(e) || this.singleNestedPaths.hasOwnProperty(t);
                    return r ? "nested" === r ? "nested" : "real" : null != I(this, t) ? "real" : /\.\d+\.|\.\d+$/.test(t) ? N(this, t) : "adhocOrUndefined";
                }, R3.prototype.hasMixedParent = function(t) {
                    var e = t.split(/\./g);
                    t = "";
                    for(var r = 0; r < e.length; ++r)if (t = r > 0 ? t + "." + e[r] : e[r], this.paths.hasOwnProperty(t) && this.paths[t] instanceof u26.Mixed) return this.paths[t];
                    return null;
                }, R3.prototype.setupTimestamp = function(t) {
                    return O6(this, t);
                }, R3.prototype.queue = function(t, e) {
                    return this.callQueue.push([
                        t,
                        e
                    ]), this;
                }, R3.prototype.pre = function(t) {
                    if (t instanceof RegExp) {
                        var e, r = Array.prototype.slice.call(arguments, 1), n = s30(j3);
                        try {
                            for(n.s(); !(e = n.n()).done;){
                                var i = e.value;
                                t.test(i) && this.pre.apply(this, [
                                    i
                                ].concat(r));
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                        return this;
                    }
                    if (Array.isArray(t)) {
                        var o, a = Array.prototype.slice.call(arguments, 1), u = s30(t);
                        try {
                            for(u.s(); !(o = u.n()).done;){
                                var h = o.value;
                                this.pre.apply(this, [
                                    h
                                ].concat(a));
                            }
                        } catch (t) {
                            u.e(t);
                        } finally{
                            u.f();
                        }
                        return this;
                    }
                    return this.s.hooks.pre.apply(this.s.hooks, arguments), this;
                }, R3.prototype.post = function(t) {
                    if (t instanceof RegExp) {
                        var e, r = Array.prototype.slice.call(arguments, 1), n = s30(j3);
                        try {
                            for(n.s(); !(e = n.n()).done;){
                                var i = e.value;
                                t.test(i) && this.post.apply(this, [
                                    i
                                ].concat(r));
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                        return this;
                    }
                    if (Array.isArray(t)) {
                        var o, a = Array.prototype.slice.call(arguments, 1), u = s30(t);
                        try {
                            for(u.s(); !(o = u.n()).done;){
                                var h = o.value;
                                this.post.apply(this, [
                                    h
                                ].concat(a));
                            }
                        } catch (t) {
                            u.e(t);
                        } finally{
                            u.f();
                        }
                        return this;
                    }
                    return this.s.hooks.post.apply(this.s.hooks, arguments), this;
                }, R3.prototype.plugin = function(t, e) {
                    if ("function" != typeof t) throw new Error('First param to `schema.plugin()` must be a function, got "' + o33(t) + '"');
                    if (e && e.deduplicate) {
                        var r, n = s30(this.plugins);
                        try {
                            for(n.s(); !(r = n.n()).done;){
                                if (r.value.fn === t) return this;
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                    }
                    return this.plugins.push({
                        fn: t,
                        opts: e
                    }), t(this, e), this;
                }, R3.prototype.method = function(t, e, r) {
                    if ("string" != typeof t) for(var n in t)this.methods[n] = t[n], this.methodOptions[n] = A.clone(r);
                    else this.methods[t] = e, this.methodOptions[t] = A.clone(r);
                    return this;
                }, R3.prototype.static = function(t, e) {
                    if ("string" != typeof t) for(var r in t)this.statics[r] = t[r];
                    else this.statics[t] = e;
                    return this;
                }, R3.prototype.index = function(t, e) {
                    return t || (t = {
                    }), e || (e = {
                    }), e.expires && A.expires(e), this._indexes.push([
                        t,
                        e
                    ]), this;
                }, R3.prototype.set = function(t, e, r) {
                    if (1 === arguments.length) return this.options[t];
                    switch(t){
                        case "read":
                            this.options[t] = S6(e, r), this._userProvidedOptions[t] = this.options[t];
                            break;
                        case "timestamps":
                            this.setupTimestamp(e), this.options[t] = e, this._userProvidedOptions[t] = this.options[t];
                            break;
                        case "_id":
                            this.options[t] = e, this._userProvidedOptions[t] = this.options[t], e && !this.paths._id ? m7(this) : !e && null != this.paths._id && this.paths._id.auto && this.remove("_id");
                            break;
                        default:
                            this.options[t] = e, this._userProvidedOptions[t] = this.options[t];
                    }
                    return this;
                }, R3.prototype.get = function(t) {
                    return this.options[t];
                };
                var D = "2d 2dsphere hashed text".split(" ");
                /*!
 * ignore
 */ function C3(t, e) {
                    var r, n = e.split("."), i = n.pop(), o = t.tree, a = s30(n);
                    try {
                        for(a.s(); !(r = a.n()).done;)o = o[r.value];
                    } catch (t287) {
                        a.e(t287);
                    } finally{
                        a.f();
                    }
                    delete o[i];
                }
                /*!
 * ignore
 */ function L2(t) {
                    return t.startsWith("$[") && t.endsWith("]");
                }
                /*!
 * Called by `compile()` _right before_ compiling. Good for making any changes to
 * the schema that should respect options set by plugins, like `id`
 */ Object.defineProperty(R3, "indexTypes", {
                    get: function() {
                        return D;
                    },
                    set: function() {
                        throw new Error("Cannot overwrite Schema.indexTypes");
                    }
                }), R3.prototype.indexes = function() {
                    return g(this);
                }, R3.prototype.virtual = function(t288, e) {
                    if (t288 instanceof y7 || "VirtualType" === v7(t288)) return this.virtual(t288.path, t288.options);
                    if (e = new p8(e), A.hasUserDefinedProperty(e, [
                        "ref",
                        "refPath"
                    ])) {
                        if (null == e.localField) throw new Error("Reference virtuals require `localField` option");
                        if (null == e.foreignField) throw new Error("Reference virtuals require `foreignField` option");
                        this.pre("init", function(r) {
                            if (M.has(t288, r)) {
                                var n = M.get(t288, r);
                                this.$$populatedVirtuals || (this.$$populatedVirtuals = {
                                }), e.justOne || e.count ? this.$$populatedVirtuals[t288] = Array.isArray(n) ? n[0] : n : this.$$populatedVirtuals[t288] = Array.isArray(n) ? n : null == n ? [] : [
                                    n
                                ], M.unset(t288, r);
                            }
                        });
                        var r124 = this.virtual(t288);
                        r124.options = e, r124.set(function(r) {
                            this.$$populatedVirtuals || (this.$$populatedVirtuals = {
                            }), e.justOne || e.count ? (this.$$populatedVirtuals[t288] = Array.isArray(r) ? r[0] : r, "object" !== o33(this.$$populatedVirtuals[t288]) && (this.$$populatedVirtuals[t288] = e.count ? r : null)) : (this.$$populatedVirtuals[t288] = Array.isArray(r) ? r : null == r ? [] : [
                                r
                            ], this.$$populatedVirtuals[t288] = this.$$populatedVirtuals[t288].filter(function(t) {
                                return t && "object" === o33(t);
                            }));
                        }), "function" == typeof e.get && r124.get(e.get);
                        for(var n70 = t288.split("."), i = n70[0], s = 0; s < n70.length - 1; ++s){
                            if (null != this.paths[i] && this.paths[i].$isMongooseDocumentArray) {
                                var a = n70.slice(s + 1).join(".");
                                this.paths[i].schema.virtual(a, e);
                                break;
                            }
                            i += "." + n70[s + 1];
                        }
                        return r124;
                    }
                    var u = this.virtuals, h = t288.split(".");
                    if ("real" === this.pathType(t288)) throw new Error('Virtual path "' + t288 + '" conflicts with a real path in the schema');
                    return u[t288] = h.reduce(function(r, n, i) {
                        return r[n] || (r[n] = i === h.length - 1 ? new y7(e, t288) : {
                        }), r[n];
                    }, this.tree), u[t288];
                }, R3.prototype.virtualpath = function(t) {
                    return this.virtuals.hasOwnProperty(t) ? this.virtuals[t] : null;
                }, R3.prototype.remove = function(t289) {
                    return "string" == typeof t289 && (t289 = [
                        t289
                    ]), Array.isArray(t289) && t289.forEach(function(t) {
                        if (null != this.path(t) || this.nested[t]) {
                            if (this.nested[t]) {
                                var e, r = s30(Object.keys(this.paths).concat(Object.keys(this.nested)));
                                try {
                                    for(r.s(); !(e = r.n()).done;){
                                        var n = e.value;
                                        n.startsWith(t + ".") && (delete this.paths[n], delete this.nested[n], C3(this, n));
                                    }
                                } catch (t290) {
                                    r.e(t290);
                                } finally{
                                    r.f();
                                }
                                return delete this.nested[t], void C3(this, t);
                            }
                            delete this.paths[t], C3(this, t);
                        }
                    }, this), this;
                }, R3.prototype.loadClass = function(t, e157) {
                    return t === Object.prototype || t === Function.prototype || t.prototype.hasOwnProperty("$isMongooseModelPrototype") || (this.loadClass(Object.getPrototypeOf(t), e157), e157 || Object.getOwnPropertyNames(t).forEach(function(e) {
                        if (!e.match(/^(length|name|prototype|constructor|__proto__)$/)) {
                            var r = Object.getOwnPropertyDescriptor(t, e);
                            r.hasOwnProperty("value") && this.static(e, r.value);
                        }
                    }, this), Object.getOwnPropertyNames(t.prototype).forEach(function(r) {
                        if (!r.match(/^(constructor)$/)) {
                            var n = Object.getOwnPropertyDescriptor(t.prototype, r);
                            e157 || "function" == typeof n.value && this.method(r, n.value), "function" == typeof n.get && (this.virtuals[r] && (this.virtuals[r].getters = []), this.virtual(r).get(n.get)), "function" == typeof n.set && (this.virtuals[r] && (this.virtuals[r].setters = []), this.virtual(r).set(n.set));
                        }
                    }, this)), this;
                }, /*!
 * ignore
 */ R3.prototype._getSchema = function(t292) {
                    var e158 = this.path(t292), r = [];
                    if (e158) return e158.$fullPath = t292, e158;
                    for(var n72 = t292.split("."), i51 = 0; i51 < n72.length; ++i51)("$" === n72[i51] || L2(n72[i51])) && (n72[i51] = "0");
                    return (function t(e, n) {
                        for(var i, o, s = e.length + 1; s--;)if (o = e.slice(0, s).join("."), i = n.path(o)) {
                            if (r.push(o), i.caster) {
                                if (i.caster instanceof u26.Mixed) return i.caster.$fullPath = r.join("."), i.caster;
                                if (s !== e.length && i.schema) {
                                    var a = void 0;
                                    return "$" === e[s] || L2(e[s]) ? s + 1 === e.length ? i : ((a = t(e.slice(s + 1), i.schema)) && (a.$isUnderneathDocArray = a.$isUnderneathDocArray || !i.schema.$isSingleNested), a) : ((a = t(e.slice(s), i.schema)) && (a.$isUnderneathDocArray = a.$isUnderneathDocArray || !i.schema.$isSingleNested), a);
                                }
                            } else if (i.$isSchemaMap) return s >= e.length ? i : s + 1 >= e.length ? i.$__schemaType : t(e.slice(s + 1), i.$__schemaType.schema);
                            return i.$fullPath = r.join("."), i;
                        }
                    })(n72, this);
                }, /*!
 * ignore
 */ R3.prototype._getPathType = function(t293) {
                    if (this.path(t293)) return "real";
                    return (function t(e, r) {
                        for(var n, i, o = e.length + 1; o--;){
                            if (i = e.slice(0, o).join("."), n = r.path(i)) return n.caster ? n.caster instanceof u26.Mixed ? {
                                schema: n,
                                pathType: "mixed"
                            } : o !== e.length && n.schema ? "$" === e[o] || L2(e[o]) ? o === e.length - 1 ? {
                                schema: n,
                                pathType: "nested"
                            } : t(e.slice(o + 1), n.schema) : t(e.slice(o), n.schema) : {
                                schema: n,
                                pathType: n.$isSingleNested ? "nested" : "array"
                            } : {
                                schema: n,
                                pathType: "real"
                            };
                            if (o === e.length && r.nested[i]) return {
                                schema: r,
                                pathType: "nested"
                            };
                        }
                        return {
                            schema: n || r,
                            pathType: "undefined"
                        };
                    })(t293.split("."), this);
                }, R3.prototype._preCompile = function() {
                    w6(this);
                }, /*!
 * Module exports.
 */ t277.exports = e149 = R3, R3.Types = u26 = r119(87), /*!
 * ignore
 */ e149.ObjectId = u26.ObjectId;
            }).call(this, r119(3).Buffer);
        },
        function(t294, e159, r126) {
            "use strict";
            function n73(t295, e160) {
                var r127 = "undefined" != typeof Symbol && t295[Symbol.iterator] || t295["@@iterator"];
                if (!r127) {
                    if (Array.isArray(t295) || (r127 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return i52(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i52(t, e);
                    })(t295)) || e160 && t295 && "number" == typeof t295.length) {
                        r127 && (t295 = r127);
                        var n = 0, o = function() {
                        };
                        return {
                            s: o,
                            n: function() {
                                return n >= t295.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t295[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: o
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r127 = r127.call(t295);
                    },
                    n: function() {
                        var t = r127.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r127.return || r127.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function i52(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            var o35 = r126(4);
            function s31(t, e) {
                this.path = e, this.getters = [], this.setters = [], this.options = Object.assign({
                }, t);
            }
            s31.prototype._applyDefaultGetters = function() {
                if (!(this.getters.length > 0 || this.setters.length > 0)) {
                    var t = "$" + this.path;
                    this.getters.push(function() {
                        return this[t];
                    }), this.setters.push(function(e) {
                        this[t] = e;
                    });
                }
            }, /*!
 * ignore
 */ s31.prototype.clone = function() {
                var t = new s31(this.options, this.path);
                return t.getters = [].concat(this.getters), t.setters = [].concat(this.setters), t;
            }, s31.prototype.get = function(t) {
                return this.getters.push(t), this;
            }, s31.prototype.set = function(t) {
                return this.setters.push(t), this;
            }, s31.prototype.applyGetters = function(t, e) {
                o35.hasUserDefinedProperty(this.options, [
                    "ref",
                    "refPath"
                ]) && e.$$populatedVirtuals && e.$$populatedVirtuals.hasOwnProperty(this.path) && (t = e.$$populatedVirtuals[this.path]);
                var r, i = t, s = n73(this.getters);
                try {
                    for(s.s(); !(r = s.n()).done;)i = r.value.call(e, i, this, e);
                } catch (t296) {
                    s.e(t296);
                } finally{
                    s.f();
                }
                return i;
            }, s31.prototype.applySetters = function(t, e) {
                var r, i = t, o = n73(this.setters);
                try {
                    for(o.s(); !(r = o.n()).done;)i = r.value.call(e, i, this, e);
                } catch (t297) {
                    o.e(t297);
                } finally{
                    o.f();
                }
                return i;
            }, /*!
 * exports
 */ t294.exports = s31;
        },
        function(t, e, r) {
            "use strict";
            /*!
 * Module exports.
 */ e.String = r(318), e.Number = r(159), e.Boolean = r(321), e.DocumentArray = r(322), e.Subdocument = r(330), e.Array = r(88), e.Buffer = r(332), e.Date = r(334), e.ObjectId = r(337), e.Mixed = r(45), e.Decimal128 = e.Decimal = r(339), e.Map = r(341), e.Oid = e.ObjectId, e.Object = e.Mixed, e.Bool = e.Boolean, e.ObjectID = e.ObjectId;
        },
        function(t298, e161, r128) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n74(t299, e162) {
                var r129 = "undefined" != typeof Symbol && t299[Symbol.iterator] || t299["@@iterator"];
                if (!r129) {
                    if (Array.isArray(t299) || (r129 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return i53(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i53(t, e);
                    })(t299)) || e162 && t299 && "number" == typeof t299.length) {
                        r129 && (t299 = r129);
                        var n = 0, o = function() {
                        };
                        return {
                            s: o,
                            n: function() {
                                return n >= t299.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t299[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: o
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r129 = r129.call(t299);
                    },
                    n: function() {
                        var t = r129.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r129.return || r129.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function i53(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            var o36, s32, a30 = r128(83), u27 = r128(153), h22 = r128(19), f23 = r128(323), c19 = r128(9), l17 = c19.CastError, d = r128(45), p9 = r128(324), y8 = r128(325), m8 = r128(164), b = r128(8), v = r128(4), g6 = r128(56).castToNumber, w7 = r128(165), _8 = r128(57), M = Symbol("mongoose#isNestedArray"), S = Object.freeze({
            });
            function O(t, e, n, i) {
                s32 || (s32 = r128(58).Embedded);
                var o, a, u = "type";
                if (i && i.typeKey && (u = i.typeKey), this.schemaOptions = i, e) {
                    var h = {
                    };
                    v.isPOJO(e) && (e[u] ? (delete (h = v.clone(e))[u], e = e[u]) : e = d), null != n && null != n.ref && null == h.ref && (h.ref = n.ref), e === Object && (e = d);
                    var f = "string" == typeof e ? e : v.getFunctionName(e), l = r128(87), p = l.hasOwnProperty(f) ? l[f] : e;
                    if (this.casterConstructor = p, this.casterConstructor instanceof O && (this.casterConstructor[M] = !0), "function" != typeof p || p.$isArraySubdocument || p.$isSchemaMap) this.caster = p, this.caster instanceof s32 || (this.caster.path = t);
                    else {
                        var y = this.caster instanceof s32 ? null : t;
                        this.caster = new p(y, h);
                    }
                    this.$embeddedSchemaType = this.caster;
                }
                if (this.$isMongooseArray = !0, c19.call(this, t, n, "Array"), null != this.defaultValue && (o = this.defaultValue, a = "function" == typeof o), !("defaultValue" in this) || void 0 !== this.defaultValue) {
                    var m = function() {
                        return a ? o.call(this) : null != o ? [].concat(o) : [];
                    };
                    m.$runBeforeSetters = !a, this.default(m);
                }
            }
            O.schemaName = "Array", O.options = {
                castNonArrays: !0
            }, /*!
 * ignore
 */ O.defaultOptions = {
            }, O.set = c19.set, /*!
 * Inherits from SchemaType.
 */ O.prototype = Object.create(c19.prototype), O.prototype.constructor = O, O.prototype.OptionsConstructor = f23, /*!
 * ignore
 */ O._checkRequired = c19.prototype.checkRequired, O.checkRequired = c19.checkRequired, O.prototype.checkRequired = function(t, e) {
                return c19._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : O.checkRequired())(t);
            }, O.prototype.enum = function() {
                for(var t = this;;){
                    var e = t && t.caster && t.caster.instance;
                    if ("Array" !== e) {
                        if ("String" !== e && "Number" !== e) throw new Error("`enum` can only be set on an array of strings or numbers , not " + e);
                        break;
                    }
                    t = t.caster;
                }
                var r = arguments;
                return !Array.isArray(arguments) && v.isObject(arguments) && (r = v.object.vals(r)), t.caster.enum.apply(t.caster, r), this;
            }, O.prototype.applyGetters = function(t, e) {
                if (null != e && null != e.$__ && e.$populated(this.path)) return t;
                var r = c19.prototype.applyGetters.call(this, t, e);
                if (Array.isArray(r)) for(var n = v.isMongooseArray(r) ? r.__array : r, i = n.length, o = 0; o < i; ++o)n[o] = this.caster.applyGetters(n[o], e);
                return r;
            }, O.prototype._applySetters = function(t, e, r, n) {
                if (this.casterConstructor.$isMongooseArray && O.options.castNonArrays && !this[M]) {
                    for(var i = 0, o = this; null != o && o.$isMongooseArray && !o.$isMongooseDocumentArray;)++i, o = o.casterConstructor;
                    if (null != t && 0 !== t.length) {
                        var s = p9(t);
                        if (s.min === s.max && s.max < i && s.containsNonArrayItem) for(var a = s.max; a < i; ++a)t = [
                            t
                        ];
                    }
                }
                return c19.prototype._applySetters.call(this, t, e, r, n);
            }, O.prototype.cast = function(t, e, n, i, s) {
                var a, u;
                if (o36 || (o36 = r128(58).Array), Array.isArray(t)) {
                    if (!t.length && e) {
                        var h = e.schema.indexedPaths(), f = this.path;
                        for(a = 0, u = h.length; a < u; ++a){
                            var c = h[a][0][f];
                            if ("2dsphere" === c || "2d" === c) return;
                        }
                        var p = this.path.endsWith(".coordinates") ? this.path.substring(0, this.path.lastIndexOf(".")) : null;
                        if (null != p) for(a = 0, u = h.length; a < u; ++a){
                            if ("2dsphere" === h[a][0][p]) return;
                        }
                    }
                    s = s || S;
                    var y = v.isMongooseArray(t) ? t.__array : t;
                    if (y = (t = o36(y, s.path || this._arrayPath || this.path, e, this)).__array, n && null != e && null != e.$__ && e.$populated(this.path)) return t;
                    var m = this.caster, g = m.$isMongooseArray;
                    if (m && this.casterConstructor !== d) try {
                        var w = y.length;
                        for(a = 0; a < w; a++){
                            var _ = {
                            };
                            g && (null != s.arrayPath || null != m._arrayParentPath) && (_.arrayPathIndex = a), y[a] = m.applySetters(y[a], e, n, void 0, _);
                        }
                    } catch (e) {
                        throw new l17("[" + e.kind + "]", b.inspect(t), this.path + "." + a, e, this);
                    }
                    return t;
                }
                if (n || O.options.castNonArrays) return e && n && e.markModified(this.path), this.cast([
                    t
                ], e, n);
                throw new l17("Array", b.inspect(t), this.path, null, this);
            }, /*!
 * ignore
 */ O.prototype._castForPopulate = function(t, e) {
                if (o36 || (o36 = r128(58).Array), Array.isArray(t)) {
                    var n, i = t.__array ? t.__array : t, s = i.length, a = this.caster;
                    if (a && this.casterConstructor !== d) try {
                        for(n = 0; n < s; n++){
                            var u = {
                            };
                            a.$isMongooseArray && null != a._arrayParentPath && (u.arrayPathIndex = n), i[n] = a.cast(i[n], e, !1, void 0, u);
                        }
                    } catch (e) {
                        throw new l17("[" + e.kind + "]", b.inspect(t), this.path + "." + n, e, this);
                    }
                    return t;
                }
                throw new l17("Array", b.inspect(t), this.path, null, this);
            }, O.prototype.$toObject = O.prototype.toObject, /*!
 * Ignore
 */ O.prototype.discriminator = function(t, e) {
                for(var r = this; r.$isMongooseArray && !r.$isMongooseDocumentArray;)if (null == (r = r.casterConstructor) || "function" == typeof r) throw new h22("You can only add an embedded discriminator on a document array, " + this.path + " is a plain array");
                return r.discriminator(t, e);
            }, /*!
 * ignore
 */ O.prototype.clone = function() {
                var t = Object.assign({
                }, this.options), e = new this.constructor(this.path, this.caster, t, this.schemaOptions);
                return e.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e.requiredValidator = this.requiredValidator), e;
            }, O.prototype.castForQuery = function(t300, e) {
                var r, n, i = this;
                if (2 === arguments.length) {
                    if (!(r = this.$conditionalHandlers[t300])) throw new Error("Can't use " + t300 + " with Array.");
                    n = r.call(this, e);
                } else {
                    n = t300;
                    var o = this.casterConstructor;
                    if (n && o.discriminators && o.schema && o.schema.options && o.schema.options.discriminatorKey) {
                        if ("string" == typeof n[o.schema.options.discriminatorKey] && o.discriminators[n[o.schema.options.discriminatorKey]]) o = o.discriminators[n[o.schema.options.discriminatorKey]];
                        else {
                            var s = _8(o.discriminators, n[o.schema.options.discriminatorKey]);
                            s && (o = s);
                        }
                    }
                    var a = this.casterConstructor.prototype, u = a && (a.castForQuery || a.cast);
                    !u && o.castForQuery && (u = o.castForQuery);
                    var h = this.caster;
                    Array.isArray(n) ? (this.setters.reverse().forEach(function(t) {
                        n = t.call(i, n, i);
                    }), n = n.map(function(t) {
                        return v.isObject(t) && t.$elemMatch ? t : u ? t = u.call(h, t) : null != t ? t = new o(t) : t;
                    })) : u ? n = u.call(h, n) : null != n && (n = new o(n));
                }
                return n;
            };
            var A = O.prototype.$conditionalHandlers = {
            };
            function E(t301) {
                return function(e) {
                    if (!Array.isArray(e)) throw new TypeError("conditional " + t301 + " requires an array");
                    var r, i = [], o = n74(e);
                    try {
                        for(o.s(); !(r = o.n()).done;){
                            var s = r.value;
                            i.push(y8(this.casterConstructor.schema, s));
                        }
                    } catch (t) {
                        o.e(t);
                    } finally{
                        o.f();
                    }
                    return i;
                };
            }
            A.$all = function(t302) {
                return Array.isArray(t302) || (t302 = [
                    t302
                ]), t302 = t302.map(function(t) {
                    if (!v.isObject(t)) return t;
                    if (null != t.$elemMatch) return {
                        $elemMatch: y8(this.casterConstructor.schema, t.$elemMatch)
                    };
                    var e = {
                    };
                    return e[this.path] = t, y8(this.casterConstructor.schema, e)[this.path];
                }, this), this.castForQuery(t302);
            }, A.$options = String, A.$elemMatch = function(t) {
                for(var e = Object.keys(t), r = e.length, n = 0; n < r; ++n){
                    var i = e[n], o = t[i];
                    m8(i) && null != o && (t[i] = this.castForQuery(i, o));
                }
                var s = this && this.casterConstructor && this.casterConstructor.schema && this.casterConstructor.schema.options && this.casterConstructor.schema.options.discriminatorKey, a = this && this.casterConstructor && this.casterConstructor.schema && this.casterConstructor.schema.discriminators || {
                };
                return null != s && null != t[s] && null != a[t[s]] ? y8(a[t[s]], t) : y8(this.casterConstructor.schema, t);
            }, A.$geoIntersects = w7.cast$geoIntersects, A.$or = E("$or"), A.$and = E("$and"), A.$nor = E("$nor"), A.$near = A.$nearSphere = w7.cast$near, A.$within = A.$geoWithin = w7.cast$within, A.$size = A.$minDistance = A.$maxDistance = g6, A.$exists = a30, A.$type = u27, A.$eq = A.$gt = A.$gte = A.$lt = A.$lte = A.$ne = A.$regex = O.prototype.castForQuery, A.$nin = c19.prototype.$conditionalHandlers.$nin, A.$in = c19.prototype.$conditionalHandlers.$in, /*!
 * Module exports.
 */ t298.exports = O;
        },
        function(t303, e163, r130) {
            "use strict";
            (function(e164) {
                function n75(t304, e165) {
                    var r131 = "undefined" != typeof Symbol && t304[Symbol.iterator] || t304["@@iterator"];
                    if (!r131) {
                        if (Array.isArray(t304) || (r131 = (function(t, e) {
                            if (!t) return;
                            if ("string" == typeof t) return i54(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === r && t.constructor && (r = t.constructor.name);
                            if ("Map" === r || "Set" === r) return Array.from(t);
                            if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i54(t, e);
                        })(t304)) || e165 && t304 && "number" == typeof t304.length) {
                            r131 && (t304 = r131);
                            var n = 0, o = function() {
                            };
                            return {
                                s: o,
                                n: function() {
                                    return n >= t304.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t304[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: o
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var s, a = !0, u = !1;
                    return {
                        s: function() {
                            r131 = r131.call(t304);
                        },
                        n: function() {
                            var t = r131.next();
                            return a = t.done, t;
                        },
                        e: function(t) {
                            u = !0, s = t;
                        },
                        f: function() {
                            try {
                                a || null == r131.return || r131.return();
                            } finally{
                                if (u) throw s;
                            }
                        }
                    };
                }
                function i54(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var o37 = r130(13), s33 = r130(46), a31 = r130(19), u28 = r130(18), h = r130(167), f = r130(34).internalToObjectOptions, c = r130(4), l = r130(1).arrayAtomicsSymbol, d = r130(1).arrayParentSymbol, p = r130(1).arrayPathSymbol, y = r130(1).arraySchemaSymbol, m = r130(1).populateModelSymbol, b = Symbol("mongoose#Array#sliced"), v = Array.prototype.push, g = {
                    $__getAtomics: function() {
                        var t = [], e = Object.keys(this[l] || {
                        }), r = e.length, n = Object.assign({
                        }, f, {
                            _isNested: !0
                        });
                        if (0 === r) return t[0] = [
                            "$set",
                            this.toObject(n)
                        ], t;
                        for(; r--;){
                            var i = e[r], o = this[l][i];
                            c.isMongooseObject(o) ? o = o.toObject(n) : Array.isArray(o) ? o = this.toObject.call(o, n) : null != o && Array.isArray(o.$each) ? o.$each = this.toObject.call(o.$each, n) : null != o && "function" == typeof o.valueOf && (o = o.valueOf()), "$addToSet" === i && (o = {
                                $each: o
                            }), t.push([
                                i,
                                o
                            ]);
                        }
                        return t;
                    },
                    /*!
   * ignore
   */ $atomics: function() {
                        return this[l];
                    },
                    /*!
   * ignore
   */ $parent: function() {
                        return this[d];
                    },
                    /*!
   * ignore
   */ $path: function() {
                        return this[p];
                    },
                    $shift: function() {
                        if (this._registerAtomic("$pop", -1), this._markModified(), !this._shifted) return this._shifted = !0, [].shift.call(this);
                    },
                    $pop: function() {
                        if (this._registerAtomic("$pop", 1), this._markModified(), !this._popped) return this._popped = !0, [].pop.call(this);
                    },
                    /*!
   * ignore
   */ $schema: function() {
                        return this[y];
                    },
                    _cast: function(t) {
                        var r, n = !1, i = this[d];
                        return i && (n = i.$populated(this[p], !0)), n && null != t ? (r = n.options[m], (e164.isBuffer(t) || t instanceof u28 || !c.isObject(t)) && (t = {
                            _id: t
                        }), t.schema && t.schema.discriminatorMapping && void 0 !== t.schema.discriminatorMapping.key || (t = new r(t)), this[y].caster.applySetters(t, i, !0)) : this[y].caster.applySetters(t, i, !1);
                    },
                    _mapCast: function(t, e) {
                        return this._cast(t, this.length + e);
                    },
                    _markModified: function(t) {
                        var e, r = this[d];
                        if (r) {
                            if (e = this[p], arguments.length && (e = e + "." + t), null != e && e.endsWith(".$")) return this;
                            r.markModified(e, 0 !== arguments.length ? t : r);
                        }
                        return this;
                    },
                    _registerAtomic: function(t305, e) {
                        if (!this[b]) {
                            if ("$set" === t305) return this[l] = {
                                $set: e
                            }, h(this[d], this[p]), this._markModified(), this;
                            var r, n = this[l];
                            if ("$pop" === t305 && !("$pop" in n)) {
                                var i = this;
                                this[d].once("save", function() {
                                    i._popped = i._shifted = null;
                                });
                            }
                            if (n.$set || Object.keys(n).length && !(t305 in n)) return this[l] = {
                                $set: this
                            }, this;
                            if ("$pullAll" === t305 || "$addToSet" === t305) n[t305] || (n[t305] = []), n[t305] = n[t305].concat(e);
                            else if ("$pullDocs" === t305) {
                                var o = n.$pull || (n.$pull = {
                                });
                                e[0] instanceof s33 ? (r = o.$or || (o.$or = []), Array.prototype.push.apply(r, e.map(function(t) {
                                    return t.toObject({
                                        transform: !1,
                                        virtuals: !1
                                    });
                                }))) : (r = o._id || (o._id = {
                                    $in: []
                                })).$in = r.$in.concat(e);
                            } else "$push" === t305 ? (n.$push = n.$push || {
                                $each: []
                            }, null != e && c.hasUserDefinedProperty(e, "$each") ? n.$push = e : n.$push.$each = n.$push.$each.concat(e)) : n[t305] = e;
                            return this;
                        }
                    },
                    addToSet: function() {
                        w(this, arguments);
                        var t306 = [].map.call(arguments, this._mapCast, this);
                        t306 = this[y].applySetters(t306, this[d]);
                        var e166 = [], r = "";
                        t306[0] instanceof s33 ? r = "doc" : t306[0] instanceof Date && (r = "date");
                        var n76 = c.isMongooseArray(t306) ? t306.__array : this, i = c.isMongooseArray(this) ? this.__array : this;
                        return n76.forEach(function(t307) {
                            var n, o = +t307;
                            switch(r){
                                case "doc":
                                    n = this.some(function(e) {
                                        return e.equals(t307);
                                    });
                                    break;
                                case "date":
                                    n = this.some(function(t) {
                                        return +t === o;
                                    });
                                    break;
                                default:
                                    n = ~this.indexOf(t307);
                            }
                            n || (i.push(t307), this._registerAtomic("$addToSet", t307), this._markModified(), [].push.call(e166, t307));
                        }, this), e166;
                    },
                    hasAtomics: function() {
                        return c.isPOJO(this[l]) ? Object.keys(this[l]).length : 0;
                    },
                    includes: function(t, e) {
                        return -1 !== this.indexOf(t, e);
                    },
                    indexOf: function(t, e) {
                        t instanceof u28 && (t = t.toString()), e = null == e ? 0 : e;
                        for(var r = this.length, n = e; n < r; ++n)if (t == this[n]) return n;
                        return -1;
                    },
                    inspect: function() {
                        return JSON.stringify(this);
                    },
                    nonAtomicPush: function() {
                        var t = [].map.call(arguments, this._mapCast, this), e = [].push.apply(this, t);
                        return this._registerAtomic("$set", this), this._markModified(), e;
                    },
                    pop: function() {
                        var t = [].pop.call(this);
                        return this._registerAtomic("$set", this), this._markModified(), t;
                    },
                    pull: function() {
                        for(var t308, e167 = [].map.call(arguments, this._cast, this), r = this[d].get(this[p]), n = r.length; n--;)if ((t308 = r[n]) instanceof o37) {
                            var i = e167.some(function(e) {
                                return t308.equals(e);
                            });
                            i && [].splice.call(r, n, 1);
                        } else ~r.indexOf.call(e167, t308) && [].splice.call(r, n, 1);
                        return e167[0] instanceof s33 ? this._registerAtomic("$pullDocs", e167.map(function(t) {
                            return t.$__getValue("_id") || t;
                        })) : this._registerAtomic("$pullAll", e167), this._markModified(), h(this[d], this[p]) > 0 && this._registerAtomic("$set", this), this;
                    },
                    push: function() {
                        var t = arguments, e = t, r = null != t[0] && c.hasUserDefinedProperty(t[0], "$each"), n = c.isMongooseArray(this) ? this.__array : this;
                        if (r && (e = t[0], t = t[0].$each), null == this[y]) return v.apply(this, t);
                        w(this, t);
                        var i, o = this[d];
                        t = [].map.call(t, this._mapCast, this), t = this[y].applySetters(t, o, void 0, void 0, {
                            skipDocumentArrayCast: !0
                        });
                        var s = this[l];
                        if (r) {
                            if (e.$each = t, 0 !== (s.$push && s.$push.$each && s.$push.$each.length || 0) && s.$push.$position != e.$position) throw new a31("Cannot call `Array#push()` multiple times with different `$position`");
                            null != e.$position ? ([].splice.apply(n, [
                                e.$position,
                                0
                            ].concat(t)), i = this.length) : i = [].push.apply(n, t);
                        } else {
                            if (0 !== (s.$push && s.$push.$each && s.$push.$each.length || 0) && null != s.$push.$position) throw new a31("Cannot call `Array#push()` multiple times with different `$position`");
                            e = t, i = [].push.apply(n, t);
                        }
                        return this._registerAtomic("$push", e), this._markModified(), i;
                    },
                    remove: function() {
                        return this.pull.apply(this, arguments);
                    },
                    set: function(t, e, r) {
                        var n = this.__array;
                        if (r) return n[t] = e, this;
                        var i = g._cast.call(this, e, t);
                        return n[t] = i, g._markModified.call(this, t), this;
                    },
                    shift: function() {
                        var t = c.isMongooseArray(this) ? this.__array : this, e = [].shift.call(t);
                        return this._registerAtomic("$set", this), this._markModified(), e;
                    },
                    sort: function() {
                        var t = c.isMongooseArray(this) ? this.__array : this, e = [].sort.apply(t, arguments);
                        return this._registerAtomic("$set", this), e;
                    },
                    splice: function() {
                        var t, e = c.isMongooseArray(this) ? this.__array : this;
                        if (w(this, Array.prototype.slice.call(arguments, 2)), arguments.length) {
                            var r;
                            if (null == this[y]) r = arguments;
                            else {
                                r = [];
                                for(var n = 0; n < arguments.length; ++n)r[n] = n < 2 ? arguments[n] : this._cast(arguments[n], arguments[0] + (n - 2));
                            }
                            t = [].splice.apply(e, r), this._registerAtomic("$set", this);
                        }
                        return t;
                    },
                    /*!
   * ignore
   */ toBSON: function() {
                        return this.toObject(f);
                    },
                    toObject: function(t) {
                        var e168 = c.isMongooseArray(this) ? this.__array : this;
                        return t && t.depopulate ? ((t = c.clone(t))._isNested = !0, [].concat(e168).map(function(e) {
                            return e instanceof o37 ? e.toObject(t) : e;
                        })) : [].concat(e168);
                    },
                    $toObject: function() {
                        return this.constructor.prototype.toObject.apply(this, arguments);
                    },
                    unshift: function() {
                        var t;
                        w(this, arguments), null == this[y] ? t = arguments : (t = [].map.call(arguments, this._cast, this), t = this[y].applySetters(t, this[d]));
                        var e = c.isMongooseArray(this) ? this.__array : this;
                        return [].unshift.apply(e, t), this._registerAtomic("$set", this), this._markModified(), this.length;
                    }
                };
                /*!
 * ignore
 */ function w(t309, e169) {
                    var r132, i55, s34, a32 = null == t309 ? null : t309[y] && t309[y].caster && t309[y].caster.options && t309[y].caster.options.ref || null;
                    0 === t309.length && 0 !== e169.length && /*!
 * ignore
 */ (function(t, e) {
                        if (!e) return !1;
                        var r, i = n75(t);
                        try {
                            for(i.s(); !(r = i.n()).done;){
                                var s = r.value;
                                if (null == s) return !1;
                                var a = s.constructor;
                                if (!(s instanceof o37) || a.modelName !== e && a.baseModelName !== e) return !1;
                            }
                        } catch (t310) {
                            i.e(t310);
                        } finally{
                            i.f();
                        }
                        return !0;
                    })(e169, a32) && t309[d].$populated(t309[p], [], (r132 = {
                    }, i55 = m, s34 = e169[0].constructor, i55 in r132 ? Object.defineProperty(r132, i55, {
                        value: s34,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : r132[i55] = s34, r132));
                }
                for(var _ = function() {
                    var t = S[M];
                    if (null == Array.prototype[t]) return "continue";
                    g[t] = function() {
                        var e = c.isMongooseArray(this) ? this.__array : this, r = [].concat(e);
                        return r[t].apply(r, arguments);
                    };
                }, M = 0, S = [
                    "filter",
                    "flat",
                    "flatMap",
                    "map",
                    "slice"
                ]; M < S.length; M++)_();
                t303.exports = g;
            }).call(this, r130(3).Buffer);
        },
        function(t311, e170, r133) {
            "use strict";
            var n77 = r133(13), i56 = r133(42), o38 = r133(34).internalToObjectOptions, s35 = r133(53), a = r133(8), u = r133(4);
            function h(t, e, r, i, o) {
                if (null != r) {
                    var s = {
                        isNew: r.isNew
                    };
                    "defaults" in r.$__ && (s.defaults = r.$__.defaults), o = Object.assign(s, o);
                }
                null != o && null != o.path && (this.$basePath = o.path), n77.call(this, t, e, i, o), delete this.$__.priorDoc;
            }
            t311.exports = h, h.prototype = Object.create(n77.prototype), Object.defineProperty(h.prototype, "$isSubdocument", {
                configurable: !1,
                writable: !1,
                value: !0
            }), Object.defineProperty(h.prototype, "$isSingleNested", {
                configurable: !1,
                writable: !1,
                value: !0
            }), /*!
 * ignore
 */ h.prototype.toBSON = function() {
                return this.toObject(o38);
            }, h.prototype.save = function(t312, e) {
                var r = this;
                return "function" == typeof t312 && (e = t312, t312 = {
                }), (t312 = t312 || {
                }).suppressWarning || u.warn("mongoose: calling `save()` on a subdoc does **not** save the document to MongoDB, it only runs save middleware. Use `subdoc.save({ suppressWarning: true })` to hide this warning if you're sure this behavior is right for your app."), s35(e, function(t) {
                    r.$__save(t);
                });
            }, /*!
 * Given a path relative to this document, return the path relative
 * to the top-level document.
 */ h.prototype.$__fullPath = function(t) {
                return this.$__.fullPath || this.ownerDocument(), t ? this.$__.fullPath + "." + t : this.$__.fullPath;
            }, /*!
 * Given a path relative to this document, return the path relative
 * to the top-level document.
 */ h.prototype.$__pathRelativeToParent = function(t) {
                return null == t ? this.$basePath : [
                    this.$basePath,
                    t
                ].join(".");
            }, h.prototype.$__save = function(t) {
                var e = this;
                return i56(function() {
                    return t(null, e);
                });
            }, /*!
 * ignore
 */ h.prototype.$isValid = function(t) {
                var e = this.$parent(), r = this.$__pathRelativeToParent(t);
                return null != e && null != r ? e.$isValid(r) : n77.prototype.$isValid.call(this, t);
            }, /*!
 * ignore
 */ h.prototype.markModified = function(t) {
                n77.prototype.markModified.call(this, t);
                var e = this.$parent(), r = this.$__pathRelativeToParent(t);
                if (null != e && null != r) {
                    var i = this.$__pathRelativeToParent().replace(/\.$/, "");
                    e.isDirectModified(i) || this.isNew || this.$__parent.markModified(r, this);
                }
            }, /*!
 * ignore
 */ h.prototype.isModified = function(t313, e) {
                var r = this, i = this.$parent();
                return null != i ? (Array.isArray(t313) || "string" == typeof t313 ? t313 = (t313 = Array.isArray(t313) ? t313 : t313.split(" ")).map(function(t) {
                    return r.$__pathRelativeToParent(t);
                }).filter(function(t) {
                    return null != t;
                }) : t313 || (t313 = this.$__pathRelativeToParent()), i.$isModified(t313, e)) : n77.prototype.isModified.call(this, t313, e);
            }, h.prototype.$markValid = function(t) {
                n77.prototype.$markValid.call(this, t);
                var e = this.$parent(), r = this.$__pathRelativeToParent(t);
                null != e && null != r && e.$markValid(r);
            }, /*!
 * ignore
 */ h.prototype.invalidate = function(t, e, r) {
                n77.prototype.invalidate.call(this, t, e, r);
                var i = this.$parent(), o = this.$__pathRelativeToParent(t);
                if (null != i && null != o) i.invalidate(o, e, r);
                else if ("cast" === e.kind || "CastError" === e.name || null == o) throw e;
                return this.ownerDocument().$__.validationError;
            }, /*!
 * ignore
 */ h.prototype.$ignore = function(t) {
                n77.prototype.$ignore.call(this, t);
                var e = this.$parent(), r = this.$__pathRelativeToParent(t);
                null != e && null != r && e.$ignore(r);
            }, h.prototype.ownerDocument = function() {
                if (this.$__.ownerDocument) return this.$__.ownerDocument;
                for(var t = this, e = [], r = new Set([
                    t
                ]); "function" == typeof t.$__pathRelativeToParent;){
                    e.unshift(t.$__pathRelativeToParent(void 0, !0));
                    var n = t.$parent();
                    if (null == n) break;
                    if (t = n, r.has(t)) throw new Error("Infinite subdocument loop: subdoc with _id " + t._id + " is a parent of itself");
                    r.add(t);
                }
                return this.$__.fullPath = e.join("."), this.$__.ownerDocument = t, this.$__.ownerDocument;
            }, h.prototype.parent = function() {
                return this.$__parent;
            }, h.prototype.$parent = h.prototype.parent, /*!
 * no-op for hooks
 */ h.prototype.$__remove = function(t) {
                if (null != t) return t(null, this);
            }, h.prototype.$__removeFromParent = function() {
                this.$__parent.set(this.$basePath, null);
            }, h.prototype.remove = function(t314, e171) {
                return "function" == typeof t314 && (e171 = t314, t314 = null), /*!
 * Registers remove event listeners for triggering
 * on subdocuments.
 *
 * @param {Subdocument} sub
 * @api private
 */ (function(t) {
                    var e = t.ownerDocument();
                    function r() {
                        e.$removeListener("save", r), e.$removeListener("remove", r), t.emit("remove", t), t.constructor.emit("remove", t), e = t = null;
                    }
                    e.$on("save", r), e.$on("remove", r);
                })(this), t314 && t314.noop || this.$__removeFromParent(), this.$__remove(e171);
            }, /*!
 * ignore
 */ h.prototype.populate = function() {
                throw new Error('Mongoose does not support calling populate() on nested docs. Instead of `doc.nested.populate("path")`, use `doc.populate("nested.path")`');
            }, h.prototype.inspect = function() {
                return this.toObject({
                    transform: !1,
                    virtuals: !1,
                    flattenDecimals: !1
                });
            }, a.inspect.custom && /*!
  * Avoid Node deprecation warning DEP0079
  */ (h.prototype[a.inspect.custom] = h.prototype.inspect);
        },
        function(t315, e172, r134) {
            "use strict";
            var n, i57 = r134(1).documentSchemaSymbol, o39 = r134(34).internalToObjectOptions, s36 = r134(4), a33 = r134(1).getSymbol, u29 = r134(1).scopeSymbol, h23 = s36.isPOJO;
            /*!
 * Compiles schemas.
 */ function f24(t, e, i, o) {
                n = n || r134(13);
                for(var s = o.typeKey, a = 0, u = Object.keys(t); a < u.length; a++){
                    var f = u[a], l = t[f];
                    c20({
                        prop: f,
                        subprops: h23(l) && Object.keys(l).length > 0 && (!l[s] || "type" === s && h23(l.type) && l.type.type) ? l : null,
                        prototype: e,
                        prefix: i,
                        options: o
                    });
                }
            }
            /*!
 * Defines the accessor named prop on the incoming prototype.
 */ function c20(t316) {
                var e173 = t316.prop, h = t316.subprops, c = t316.prototype, l = t316.prefix, d = t316.options;
                n = n || r134(13);
                var p = (l ? l + "." : "") + e173;
                l = l || "", h ? Object.defineProperty(c, e173, {
                    enumerable: !0,
                    configurable: !0,
                    get: function() {
                        var t, e, r135 = this;
                        if (this.$__.getters || (this.$__.getters = {
                        }), !this.$__.getters[p]) {
                            var o = Object.create(n.prototype, (t = this, e = {
                            }, Object.getOwnPropertyNames(t).forEach(function(r) {
                                -1 === [
                                    "isNew",
                                    "$__",
                                    "$errors",
                                    "errors",
                                    "_doc",
                                    "$locals",
                                    "$op",
                                    "__parentArray",
                                    "__index",
                                    "$isDocumentArrayElement"
                                ].indexOf(r) || (e[r] = Object.getOwnPropertyDescriptor(t, r), e[r].enumerable = !1);
                            }), e));
                            l || (o.$__[u29] = this), o.$__.nestedPath = p, Object.defineProperty(o, "schema", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: c.schema
                            }), Object.defineProperty(o, "$__schema", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: c.schema
                            }), Object.defineProperty(o, i57, {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: c.schema
                            }), Object.defineProperty(o, "toObject", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: function() {
                                    return s36.clone(r135.get(p, null, {
                                        virtuals: this && this.schema && this.schema.options && this.schema.options.toObject && this.schema.options.toObject.virtuals || null
                                    }));
                                }
                            }), Object.defineProperty(o, "$__get", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: function() {
                                    return r135.get(p, null, {
                                        virtuals: this && this.schema && this.schema.options && this.schema.options.toObject && this.schema.options.toObject.virtuals || null
                                    });
                                }
                            }), Object.defineProperty(o, "toJSON", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: function() {
                                    return r135.get(p, null, {
                                        virtuals: this && this.schema && this.schema.options && this.schema.options.toJSON && this.schema.options.toJSON.virtuals || null
                                    });
                                }
                            }), Object.defineProperty(o, "$__isNested", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: !0
                            });
                            var a = Object.freeze({
                                minimize: !0,
                                virtuals: !1,
                                getters: !1,
                                transform: !1
                            });
                            Object.defineProperty(o, "$isEmpty", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: function() {
                                    return 0 === Object.keys(this.get(p, null, a) || {
                                    }).length;
                                }
                            }), Object.defineProperty(o, "$__parent", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: this
                            }), f24(h, o, p, d), this.$__.getters[p] = o;
                        }
                        return this.$__.getters[p];
                    },
                    set: function(t) {
                        null != t && t.$__isNested ? t = t.$__get() : t instanceof n && !t.$__isNested && (t = t.$toObject(o39)), (this.$__[u29] || this).$set(p, t);
                    }
                }) : Object.defineProperty(c, e173, {
                    enumerable: !0,
                    configurable: !0,
                    get: function() {
                        return this[a33].call(this.$__[u29] || this, p);
                    },
                    set: function(t) {
                        this.$set.call(this.$__[u29] || this, p, t);
                    }
                });
            }
            /*!
 * exports
 */ e172.compile = f24, e172.defineKey = c20;
        },
        function(t317, e, r) {
            "use strict";
            /*!
 * ignore
 */ function n(t318) {
                return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t318);
            }
            t317.exports = function(t) {
                return null == t || "object" !== n(t) || !("$meta" in t) && !("$slice" in t);
            };
        },
        function(t319, e) {
            var r = {
            }.toString;
            t319.exports = Array.isArray || function(t) {
                return "[object Array]" == r.call(t);
            };
        },
        function(t320, e174, r136) {
            "use strict";
            var n78 = r136(182).Buffer, i58 = r136(95).Transform;
            function o40(t) {
                i58.call(this), this._block = n78.allocUnsafe(t), this._blockSize = t, this._blockOffset = 0, this._length = [
                    0,
                    0,
                    0,
                    0
                ], this._finalized = !1;
            }
            r136(0)(o40, i58), o40.prototype._transform = function(t, e, r) {
                var n = null;
                try {
                    this.update(t, e);
                } catch (t321) {
                    n = t321;
                }
                r(n);
            }, o40.prototype._flush = function(t) {
                var e = null;
                try {
                    this.push(this.digest());
                } catch (t322) {
                    e = t322;
                }
                t(e);
            }, o40.prototype.update = function(t323, e175) {
                if ((function(t, e) {
                    if (!n78.isBuffer(t) && "string" != typeof t) throw new TypeError(e + " must be a string or a buffer");
                })(t323, "Data"), this._finalized) throw new Error("Digest already called");
                n78.isBuffer(t323) || (t323 = n78.from(t323, e175));
                for(var r = this._block, i = 0; this._blockOffset + t323.length - i >= this._blockSize;){
                    for(var o = this._blockOffset; o < this._blockSize;)r[o++] = t323[i++];
                    this._update(), this._blockOffset = 0;
                }
                for(; i < t323.length;)r[this._blockOffset++] = t323[i++];
                for(var s = 0, a = 8 * t323.length; a > 0; ++s)this._length[s] += a, (a = this._length[s] / 4294967296 | 0) > 0 && (this._length[s] -= 4294967296 * a);
                return this;
            }, o40.prototype._update = function() {
                throw new Error("_update is not implemented");
            }, o40.prototype.digest = function(t) {
                if (this._finalized) throw new Error("Digest already called");
                this._finalized = !0;
                var e = this._digest();
                void 0 !== t && (e = e.toString(t)), this._block.fill(0), this._blockOffset = 0;
                for(var r = 0; r < 4; ++r)this._length[r] = 0;
                return e;
            }, o40.prototype._digest = function() {
                throw new Error("_digest is not implemented");
            }, t320.exports = o40;
        },
        function(t, e, r) {
            (e = t.exports = r(96)).Stream = e, e.Readable = e, e.Writable = r(100), e.Duplex = r(30), e.Transform = r(102), e.PassThrough = r(189), e.finished = r(61), e.pipeline = r(190);
        },
        function(t324, e176, r137) {
            "use strict";
            (function(e177, n79) {
                var i59;
                t324.exports = A, A.ReadableState = O;
                r137(12).EventEmitter;
                var o41 = function(t, e) {
                    return t.listeners(e).length;
                }, s37 = r137(97), a34 = r137(3).Buffer, u30 = e177.Uint8Array || function() {
                };
                var h, f25 = r137(183);
                h = f25 && f25.debuglog ? f25.debuglog("stream") : function() {
                };
                var c21, l18, d11, p10 = r137(184), y9 = r137(98), m9 = r137(99).getHighWaterMark, b = r137(29).codes, v = b.ERR_INVALID_ARG_TYPE, g = b.ERR_STREAM_PUSH_AFTER_EOF, w = b.ERR_METHOD_NOT_IMPLEMENTED, _ = b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
                r137(0)(A, s37);
                var M = y9.errorOrDestroy, S = [
                    "error",
                    "close",
                    "destroy",
                    "pause",
                    "resume"
                ];
                function O(t, e, n) {
                    i59 = i59 || r137(30), t = t || {
                    }, "boolean" != typeof n && (n = e instanceof i59), this.objectMode = !!t.objectMode, n && (this.objectMode = this.objectMode || !!t.readableObjectMode), this.highWaterMark = m9(this, t, "readableHighWaterMark", n), this.buffer = new p10, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = !1 !== t.emitClose, this.autoDestroy = !!t.autoDestroy, this.destroyed = !1, this.defaultEncoding = t.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, t.encoding && (c21 || (c21 = r137(36).StringDecoder), this.decoder = new c21(t.encoding), this.encoding = t.encoding);
                }
                function A(t) {
                    if (i59 = i59 || r137(30), !(this instanceof A)) return new A(t);
                    var e = this instanceof i59;
                    this._readableState = new O(t, this, e), this.readable = !0, t && ("function" == typeof t.read && (this._read = t.read), "function" == typeof t.destroy && (this._destroy = t.destroy)), s37.call(this);
                }
                function E(t325, e178, r138, n80, i) {
                    h("readableAddChunk", e178);
                    var o, s = t325._readableState;
                    if (null === e178) s.reading = !1, (function(t, e) {
                        if (h("onEofChunk"), e.ended) return;
                        if (e.decoder) {
                            var r = e.decoder.end();
                            r && r.length && (e.buffer.push(r), e.length += e.objectMode ? 1 : r.length);
                        }
                        e.ended = !0, e.sync ? j(t) : (e.needReadable = !1, e.emittedReadable || (e.emittedReadable = !0, $(t)));
                    })(t325, s);
                    else if (i || (o = (function(t, e) {
                        var r;
                        n = e, a34.isBuffer(n) || n instanceof u30 || "string" == typeof e || void 0 === e || t.objectMode || (r = new v("chunk", [
                            "string",
                            "Buffer",
                            "Uint8Array"
                        ], e));
                        var n;
                        return r;
                    })(s, e178)), o) M(t325, o);
                    else if (s.objectMode || e178 && e178.length > 0) {
                        if ("string" == typeof e178 || s.objectMode || Object.getPrototypeOf(e178) === a34.prototype || (e178 = (function(t) {
                            return a34.from(t);
                        })(e178)), n80) s.endEmitted ? M(t325, new _) : x(t325, s, e178, !0);
                        else if (s.ended) M(t325, new g);
                        else {
                            if (s.destroyed) return !1;
                            s.reading = !1, s.decoder && !r138 ? (e178 = s.decoder.write(e178), s.objectMode || 0 !== e178.length ? x(t325, s, e178, !1) : P(t325, s)) : x(t325, s, e178, !1);
                        }
                    } else n80 || (s.reading = !1, P(t325, s));
                    return !s.ended && (s.length < s.highWaterMark || 0 === s.length);
                }
                function x(t, e, r, n) {
                    e.flowing && 0 === e.length && !e.sync ? (e.awaitDrain = 0, t.emit("data", r)) : (e.length += e.objectMode ? 1 : r.length, n ? e.buffer.unshift(r) : e.buffer.push(r), e.needReadable && j(t)), P(t, e);
                }
                Object.defineProperty(A.prototype, "destroyed", {
                    enumerable: !1,
                    get: function() {
                        return void 0 !== this._readableState && this._readableState.destroyed;
                    },
                    set: function(t) {
                        this._readableState && (this._readableState.destroyed = t);
                    }
                }), A.prototype.destroy = y9.destroy, A.prototype._undestroy = y9.undestroy, A.prototype._destroy = function(t, e) {
                    e(t);
                }, A.prototype.push = function(t, e) {
                    var r, n = this._readableState;
                    return n.objectMode ? r = !0 : "string" == typeof t && ((e = e || n.defaultEncoding) !== n.encoding && (t = a34.from(t, e), e = ""), r = !0), E(this, t, e, !1, r);
                }, A.prototype.unshift = function(t) {
                    return E(this, t, null, !0, !1);
                }, A.prototype.isPaused = function() {
                    return !1 === this._readableState.flowing;
                }, A.prototype.setEncoding = function(t) {
                    c21 || (c21 = r137(36).StringDecoder);
                    var e = new c21(t);
                    this._readableState.decoder = e, this._readableState.encoding = this._readableState.decoder.encoding;
                    for(var n = this._readableState.buffer.head, i = ""; null !== n;)i += e.write(n.data), n = n.next;
                    return this._readableState.buffer.clear(), "" !== i && this._readableState.buffer.push(i), this._readableState.length = i.length, this;
                };
                function k(t326, e) {
                    return t326 <= 0 || 0 === e.length && e.ended ? 0 : e.objectMode ? 1 : t326 != t326 ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t326 > e.highWaterMark && (e.highWaterMark = (function(t) {
                        return t >= 1073741824 ? t = 1073741824 : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++), t;
                    })(t326)), t326 <= e.length ? t326 : e.ended ? e.length : (e.needReadable = !0, 0));
                }
                function j(t) {
                    var e = t._readableState;
                    h("emitReadable", e.needReadable, e.emittedReadable), e.needReadable = !1, e.emittedReadable || (h("emitReadable", e.flowing), e.emittedReadable = !0, n79.nextTick($, t));
                }
                function $(t) {
                    var e = t._readableState;
                    h("emitReadable_", e.destroyed, e.length, e.ended), e.destroyed || !e.length && !e.ended || (t.emit("readable"), e.emittedReadable = !1), e.needReadable = !e.flowing && !e.ended && e.length <= e.highWaterMark, N(t);
                }
                function P(t, e) {
                    e.readingMore || (e.readingMore = !0, n79.nextTick(R, t, e));
                }
                function R(t, e) {
                    for(; !e.reading && !e.ended && (e.length < e.highWaterMark || e.flowing && 0 === e.length);){
                        var r = e.length;
                        if (h("maybeReadMore read 0"), t.read(0), r === e.length) break;
                    }
                    e.readingMore = !1;
                }
                function B(t) {
                    var e = t._readableState;
                    e.readableListening = t.listenerCount("readable") > 0, e.resumeScheduled && !e.paused ? e.flowing = !0 : t.listenerCount("data") > 0 && t.resume();
                }
                function T(t) {
                    h("readable nexttick read 0"), t.read(0);
                }
                function I(t, e) {
                    h("resume", e.reading), e.reading || t.read(0), e.resumeScheduled = !1, t.emit("resume"), N(t), e.flowing && !e.reading && t.read(0);
                }
                function N(t) {
                    var e = t._readableState;
                    for(h("flow", e.flowing); e.flowing && null !== t.read(););
                }
                function D(t, e) {
                    var r;
                    return 0 === e.length ? null : (e.objectMode ? r = e.buffer.shift() : !t || t >= e.length ? (r = e.decoder ? e.buffer.join("") : 1 === e.buffer.length ? e.buffer.first() : e.buffer.concat(e.length), e.buffer.clear()) : r = e.buffer.consume(t, e.decoder), r);
                }
                function C(t) {
                    var e = t._readableState;
                    h("endReadable", e.endEmitted), e.endEmitted || (e.ended = !0, n79.nextTick(L, e, t));
                }
                function L(t, e) {
                    if (h("endReadableNT", t.endEmitted, t.length), !t.endEmitted && 0 === t.length && (t.endEmitted = !0, e.readable = !1, e.emit("end"), t.autoDestroy)) {
                        var r = e._writableState;
                        (!r || r.autoDestroy && r.finished) && e.destroy();
                    }
                }
                function q(t, e) {
                    for(var r = 0, n = t.length; r < n; r++)if (t[r] === e) return r;
                    return -1;
                }
                A.prototype.read = function(t) {
                    h("read", t), t = parseInt(t, 10);
                    var e = this._readableState, r = t;
                    if (0 !== t && (e.emittedReadable = !1), 0 === t && e.needReadable && ((0 !== e.highWaterMark ? e.length >= e.highWaterMark : e.length > 0) || e.ended)) return h("read: emitReadable", e.length, e.ended), 0 === e.length && e.ended ? C(this) : j(this), null;
                    if (0 === (t = k(t, e)) && e.ended) return 0 === e.length && C(this), null;
                    var n, i = e.needReadable;
                    return h("need readable", i), (0 === e.length || e.length - t < e.highWaterMark) && h("length less than watermark", i = !0), e.ended || e.reading ? h("reading or ended", i = !1) : i && (h("do read"), e.reading = !0, e.sync = !0, 0 === e.length && (e.needReadable = !0), this._read(e.highWaterMark), e.sync = !1, e.reading || (t = k(r, e))), null === (n = t > 0 ? D(t, e) : null) ? (e.needReadable = e.length <= e.highWaterMark, t = 0) : (e.length -= t, e.awaitDrain = 0), 0 === e.length && (e.ended || (e.needReadable = !0), r !== t && e.ended && C(this)), null !== n && this.emit("data", n), n;
                }, A.prototype._read = function(t) {
                    M(this, new w("_read()"));
                }, A.prototype.pipe = function(t327, e179) {
                    var r139 = this, i = this._readableState;
                    switch(i.pipesCount){
                        case 0:
                            i.pipes = t327;
                            break;
                        case 1:
                            i.pipes = [
                                i.pipes,
                                t327
                            ];
                            break;
                        default:
                            i.pipes.push(t327);
                    }
                    i.pipesCount += 1, h("pipe count=%d opts=%j", i.pipesCount, e179);
                    var s = (!e179 || !1 !== e179.end) && t327 !== n79.stdout && t327 !== n79.stderr ? u : m;
                    function a(e, n) {
                        h("onunpipe"), e === r139 && n && !1 === n.hasUnpiped && (n.hasUnpiped = !0, h("cleanup"), t327.removeListener("close", p), t327.removeListener("finish", y), t327.removeListener("drain", f), t327.removeListener("error", d), t327.removeListener("unpipe", a), r139.removeListener("end", u), r139.removeListener("end", m), r139.removeListener("data", l), c = !0, !i.awaitDrain || t327._writableState && !t327._writableState.needDrain || f());
                    }
                    function u() {
                        h("onend"), t327.end();
                    }
                    i.endEmitted ? n79.nextTick(s) : r139.once("end", s), t327.on("unpipe", a);
                    var f = function(t) {
                        return function() {
                            var e = t._readableState;
                            h("pipeOnDrain", e.awaitDrain), e.awaitDrain && e.awaitDrain--, 0 === e.awaitDrain && o41(t, "data") && (e.flowing = !0, N(t));
                        };
                    }(r139);
                    t327.on("drain", f);
                    var c = !1;
                    function l(e) {
                        h("ondata");
                        var n = t327.write(e);
                        h("dest.write", n), !1 === n && ((1 === i.pipesCount && i.pipes === t327 || i.pipesCount > 1 && -1 !== q(i.pipes, t327)) && !c && (h("false write response, pause", i.awaitDrain), i.awaitDrain++), r139.pause());
                    }
                    function d(e) {
                        h("onerror", e), m(), t327.removeListener("error", d), 0 === o41(t327, "error") && M(t327, e);
                    }
                    function p() {
                        t327.removeListener("finish", y), m();
                    }
                    function y() {
                        h("onfinish"), t327.removeListener("close", p), m();
                    }
                    function m() {
                        h("unpipe"), r139.unpipe(t327);
                    }
                    return r139.on("data", l), (function(t, e, r) {
                        if ("function" == typeof t.prependListener) return t.prependListener(e, r);
                        t._events && t._events[e] ? Array.isArray(t._events[e]) ? t._events[e].unshift(r) : t._events[e] = [
                            r,
                            t._events[e]
                        ] : t.on(e, r);
                    })(t327, "error", d), t327.once("close", p), t327.once("finish", y), t327.emit("pipe", r139), i.flowing || (h("pipe resume"), r139.resume()), t327;
                }, A.prototype.unpipe = function(t) {
                    var e = this._readableState, r = {
                        hasUnpiped: !1
                    };
                    if (0 === e.pipesCount) return this;
                    if (1 === e.pipesCount) return t && t !== e.pipes || (t || (t = e.pipes), e.pipes = null, e.pipesCount = 0, e.flowing = !1, t && t.emit("unpipe", this, r)), this;
                    if (!t) {
                        var n = e.pipes, i = e.pipesCount;
                        e.pipes = null, e.pipesCount = 0, e.flowing = !1;
                        for(var o = 0; o < i; o++)n[o].emit("unpipe", this, {
                            hasUnpiped: !1
                        });
                        return this;
                    }
                    var s = q(e.pipes, t);
                    return -1 === s || (e.pipes.splice(s, 1), e.pipesCount -= 1, 1 === e.pipesCount && (e.pipes = e.pipes[0]), t.emit("unpipe", this, r)), this;
                }, A.prototype.on = function(t, e) {
                    var r = s37.prototype.on.call(this, t, e), i = this._readableState;
                    return "data" === t ? (i.readableListening = this.listenerCount("readable") > 0, !1 !== i.flowing && this.resume()) : "readable" === t && (i.endEmitted || i.readableListening || (i.readableListening = i.needReadable = !0, i.flowing = !1, i.emittedReadable = !1, h("on readable", i.length, i.reading), i.length ? j(this) : i.reading || n79.nextTick(T, this))), r;
                }, A.prototype.addListener = A.prototype.on, A.prototype.removeListener = function(t, e) {
                    var r = s37.prototype.removeListener.call(this, t, e);
                    return "readable" === t && n79.nextTick(B, this), r;
                }, A.prototype.removeAllListeners = function(t) {
                    var e = s37.prototype.removeAllListeners.apply(this, arguments);
                    return "readable" !== t && void 0 !== t || n79.nextTick(B, this), e;
                }, A.prototype.resume = function() {
                    var t328 = this._readableState;
                    return t328.flowing || (h("resume"), t328.flowing = !t328.readableListening, (function(t, e) {
                        e.resumeScheduled || (e.resumeScheduled = !0, n79.nextTick(I, t, e));
                    })(this, t328)), t328.paused = !1, this;
                }, A.prototype.pause = function() {
                    return h("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (h("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
                }, A.prototype.wrap = function(t329) {
                    var e180 = this, r = this._readableState, n = !1;
                    for(var i60 in t329.on("end", function() {
                        if (h("wrapped end"), r.decoder && !r.ended) {
                            var t = r.decoder.end();
                            t && t.length && e180.push(t);
                        }
                        e180.push(null);
                    }), t329.on("data", function(i) {
                        (h("wrapped data"), r.decoder && (i = r.decoder.write(i)), r.objectMode && null == i) || (r.objectMode || i && i.length) && (e180.push(i) || (n = !0, t329.pause()));
                    }), t329)void 0 === this[i60] && "function" == typeof t329[i60] && (this[i60] = (function(e) {
                        return function() {
                            return t329[e].apply(t329, arguments);
                        };
                    })(i60));
                    for(var o = 0; o < S.length; o++)t329.on(S[o], this.emit.bind(this, S[o]));
                    return this._read = function(e) {
                        h("wrapped _read", e), n && (n = !1, t329.resume());
                    }, this;
                }, "function" == typeof Symbol && (A.prototype[Symbol.asyncIterator] = function() {
                    return void 0 === l18 && (l18 = r137(187)), l18(this);
                }), Object.defineProperty(A.prototype, "readableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState.highWaterMark;
                    }
                }), Object.defineProperty(A.prototype, "readableBuffer", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState && this._readableState.buffer;
                    }
                }), Object.defineProperty(A.prototype, "readableFlowing", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState.flowing;
                    },
                    set: function(t) {
                        this._readableState && (this._readableState.flowing = t);
                    }
                }), A._fromList = D, Object.defineProperty(A.prototype, "readableLength", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState.length;
                    }
                }), "function" == typeof Symbol && (A.from = function(t, e) {
                    return void 0 === d11 && (d11 = r137(188)), d11(A, t, e);
                });
            }).call(this, r137(6), r137(5));
        },
        function(t, e, r) {
            t.exports = r(12).EventEmitter;
        },
        function(t330, e181, r140) {
            "use strict";
            (function(e182) {
                function r141(t, e) {
                    i(t, e), n81(t);
                }
                function n81(t) {
                    t._writableState && !t._writableState.emitClose || t._readableState && !t._readableState.emitClose || t.emit("close");
                }
                function i(t, e) {
                    t.emit("error", e);
                }
                t330.exports = {
                    destroy: function(t331, o) {
                        var s = this, a = this._readableState && this._readableState.destroyed, u = this._writableState && this._writableState.destroyed;
                        return a || u ? (o ? o(t331) : t331 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, e182.nextTick(i, this, t331)) : e182.nextTick(i, this, t331)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(t331 || null, function(t) {
                            !o && t ? s._writableState ? s._writableState.errorEmitted ? e182.nextTick(n81, s) : (s._writableState.errorEmitted = !0, e182.nextTick(r141, s, t)) : e182.nextTick(r141, s, t) : o ? (e182.nextTick(n81, s), o(t)) : e182.nextTick(n81, s);
                        }), this);
                    },
                    undestroy: function() {
                        this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
                    },
                    errorOrDestroy: function(t, e) {
                        var r = t._readableState, n = t._writableState;
                        r && r.autoDestroy || n && n.autoDestroy ? t.destroy(e) : t.emit("error", e);
                    }
                };
            }).call(this, r140(5));
        },
        function(t332, e183, r142) {
            "use strict";
            var n = r142(29).codes.ERR_INVALID_OPT_VALUE;
            t332.exports = {
                getHighWaterMark: function(t333, e184, r, i) {
                    var o = function(t, e, r) {
                        return null != t.highWaterMark ? t.highWaterMark : e ? t[r] : null;
                    }(e184, i, r);
                    if (null != o) {
                        if (!isFinite(o) || Math.floor(o) !== o || o < 0) throw new n(i ? r : "highWaterMark", o);
                        return Math.floor(o);
                    }
                    return t333.objectMode ? 16 : 16384;
                }
            };
        },
        function(t334, e185, r143) {
            "use strict";
            (function(e186, n82) {
                function i61(t335) {
                    var e187 = this;
                    this.next = null, this.entry = null, this.finish = function() {
                        !function(t, e, r) {
                            var n = t.entry;
                            t.entry = null;
                            for(; n;){
                                var i = n.callback;
                                e.pendingcb--, i(r), n = n.next;
                            }
                            e.corkedRequestsFree.next = t;
                        }(e187, t335);
                    };
                }
                var o42;
                t334.exports = A, A.WritableState = O;
                var s38 = {
                    deprecate: r143(101)
                }, a35 = r143(97), u31 = r143(3).Buffer, h24 = e186.Uint8Array || function() {
                };
                var f26, c22 = r143(98), l = r143(99).getHighWaterMark, d = r143(29).codes, p = d.ERR_INVALID_ARG_TYPE, y = d.ERR_METHOD_NOT_IMPLEMENTED, m = d.ERR_MULTIPLE_CALLBACK, b = d.ERR_STREAM_CANNOT_PIPE, v = d.ERR_STREAM_DESTROYED, g = d.ERR_STREAM_NULL_VALUES, w = d.ERR_STREAM_WRITE_AFTER_END, _ = d.ERR_UNKNOWN_ENCODING, M = c22.errorOrDestroy;
                function S() {
                }
                function O(t336, e188, s39) {
                    o42 = o42 || r143(30), t336 = t336 || {
                    }, "boolean" != typeof s39 && (s39 = e188 instanceof o42), this.objectMode = !!t336.objectMode, s39 && (this.objectMode = this.objectMode || !!t336.writableObjectMode), this.highWaterMark = l(this, t336, "writableHighWaterMark", s39), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
                    var a = !1 === t336.decodeStrings;
                    this.decodeStrings = !a, this.defaultEncoding = t336.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(t337) {
                        !function(t338, e189) {
                            var r144 = t338._writableState, i62 = r144.sync, o43 = r144.writecb;
                            if ("function" != typeof o43) throw new m;
                            if ((function(t) {
                                t.writing = !1, t.writecb = null, t.length -= t.writelen, t.writelen = 0;
                            })(r144), e189) !function(t, e, r, i, o) {
                                --e.pendingcb, r ? (n82.nextTick(o, i), n82.nextTick(P, t, e), t._writableState.errorEmitted = !0, M(t, i)) : (o(i), t._writableState.errorEmitted = !0, M(t, i), P(t, e));
                            }(t338, r144, i62, e189, o43);
                            else {
                                var s = j(r144) || t338.destroyed;
                                s || r144.corked || r144.bufferProcessing || !r144.bufferedRequest || k(t338, r144), i62 ? n82.nextTick(x, t338, r144, s, o43) : x(t338, r144, s, o43);
                            }
                        }(e188, t337);
                    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = !1 !== t336.emitClose, this.autoDestroy = !!t336.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new i61(this);
                }
                function A(t) {
                    var e = this instanceof (o42 = o42 || r143(30));
                    if (!e && !f26.call(A, this)) return new A(t);
                    this._writableState = new O(t, this, e), this.writable = !0, t && ("function" == typeof t.write && (this._write = t.write), "function" == typeof t.writev && (this._writev = t.writev), "function" == typeof t.destroy && (this._destroy = t.destroy), "function" == typeof t.final && (this._final = t.final)), a35.call(this);
                }
                function E(t, e, r, n, i, o, s) {
                    e.writelen = n, e.writecb = s, e.writing = !0, e.sync = !0, e.destroyed ? e.onwrite(new v("write")) : r ? t._writev(i, e.onwrite) : t._write(i, o, e.onwrite), e.sync = !1;
                }
                function x(t339, e190, r, n) {
                    r || (function(t, e) {
                        0 === e.length && e.needDrain && (e.needDrain = !1, t.emit("drain"));
                    })(t339, e190), e190.pendingcb--, n(), P(t339, e190);
                }
                function k(t, e) {
                    e.bufferProcessing = !0;
                    var r = e.bufferedRequest;
                    if (t._writev && r && r.next) {
                        var n = e.bufferedRequestCount, o = new Array(n), s = e.corkedRequestsFree;
                        s.entry = r;
                        for(var a = 0, u = !0; r;)o[a] = r, r.isBuf || (u = !1), r = r.next, a += 1;
                        o.allBuffers = u, E(t, e, !0, e.length, o, "", s.finish), e.pendingcb++, e.lastBufferedRequest = null, s.next ? (e.corkedRequestsFree = s.next, s.next = null) : e.corkedRequestsFree = new i61(e), e.bufferedRequestCount = 0;
                    } else {
                        for(; r;){
                            var h = r.chunk, f = r.encoding, c = r.callback;
                            if (E(t, e, !1, e.objectMode ? 1 : h.length, h, f, c), r = r.next, e.bufferedRequestCount--, e.writing) break;
                        }
                        null === r && (e.lastBufferedRequest = null);
                    }
                    e.bufferedRequest = r, e.bufferProcessing = !1;
                }
                function j(t) {
                    return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing;
                }
                function $(t, e) {
                    t._final(function(r) {
                        e.pendingcb--, r && M(t, r), e.prefinished = !0, t.emit("prefinish"), P(t, e);
                    });
                }
                function P(t340, e191) {
                    var r = j(e191);
                    if (r && ((function(t, e) {
                        e.prefinished || e.finalCalled || ("function" != typeof t._final || e.destroyed ? (e.prefinished = !0, t.emit("prefinish")) : (e.pendingcb++, e.finalCalled = !0, n82.nextTick($, t, e)));
                    })(t340, e191), 0 === e191.pendingcb && (e191.finished = !0, t340.emit("finish"), e191.autoDestroy))) {
                        var i = t340._readableState;
                        (!i || i.autoDestroy && i.endEmitted) && t340.destroy();
                    }
                    return r;
                }
                r143(0)(A, a35), O.prototype.getBuffer = function() {
                    for(var t = this.bufferedRequest, e = []; t;)e.push(t), t = t.next;
                    return e;
                }, (function() {
                    try {
                        Object.defineProperty(O.prototype, "buffer", {
                            get: s38.deprecate(function() {
                                return this.getBuffer();
                            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                        });
                    } catch (t) {
                    }
                })(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (f26 = Function.prototype[Symbol.hasInstance], Object.defineProperty(A, Symbol.hasInstance, {
                    value: function(t) {
                        return !!f26.call(this, t) || this === A && t && t._writableState instanceof O;
                    }
                })) : f26 = function(t) {
                    return t instanceof this;
                }, A.prototype.pipe = function() {
                    M(this, new b);
                }, A.prototype.write = function(t341, e192, r145) {
                    var i63, o44 = this._writableState, s40 = !1, a36 = !o44.objectMode && (i63 = t341, u31.isBuffer(i63) || i63 instanceof h24);
                    return a36 && !u31.isBuffer(t341) && (t341 = (function(t) {
                        return u31.from(t);
                    })(t341)), "function" == typeof e192 && (r145 = e192, e192 = null), a36 ? e192 = "buffer" : e192 || (e192 = o44.defaultEncoding), "function" != typeof r145 && (r145 = S), o44.ending ? (function(t, e) {
                        var r = new w;
                        M(t, r), n82.nextTick(e, r);
                    })(this, r145) : (a36 || (function(t, e, r, i) {
                        var o;
                        return null === r ? o = new g : "string" == typeof r || e.objectMode || (o = new p("chunk", [
                            "string",
                            "Buffer"
                        ], r)), !o || (M(t, o), n82.nextTick(i, o), !1);
                    })(this, o44, t341, r145)) && (o44.pendingcb++, s40 = (function(t342, e193, r146, n, i, o) {
                        if (!r146) {
                            var s = function(t, e, r) {
                                t.objectMode || !1 === t.decodeStrings || "string" != typeof e || (e = u31.from(e, r));
                                return e;
                            }(e193, n, i);
                            n !== s && (r146 = !0, i = "buffer", n = s);
                        }
                        var a = e193.objectMode ? 1 : n.length;
                        e193.length += a;
                        var h = e193.length < e193.highWaterMark;
                        h || (e193.needDrain = !0);
                        if (e193.writing || e193.corked) {
                            var f = e193.lastBufferedRequest;
                            e193.lastBufferedRequest = {
                                chunk: n,
                                encoding: i,
                                isBuf: r146,
                                callback: o,
                                next: null
                            }, f ? f.next = e193.lastBufferedRequest : e193.bufferedRequest = e193.lastBufferedRequest, e193.bufferedRequestCount += 1;
                        } else E(t342, e193, !1, a, n, i, o);
                        return h;
                    })(this, o44, a36, t341, e192, r145)), s40;
                }, A.prototype.cork = function() {
                    this._writableState.corked++;
                }, A.prototype.uncork = function() {
                    var t = this._writableState;
                    t.corked && (t.corked--, t.writing || t.corked || t.bufferProcessing || !t.bufferedRequest || k(this, t));
                }, A.prototype.setDefaultEncoding = function(t) {
                    if ("string" == typeof t && (t = t.toLowerCase()), !([
                        "hex",
                        "utf8",
                        "utf-8",
                        "ascii",
                        "binary",
                        "base64",
                        "ucs2",
                        "ucs-2",
                        "utf16le",
                        "utf-16le",
                        "raw"
                    ].indexOf((t + "").toLowerCase()) > -1)) throw new _(t);
                    return this._writableState.defaultEncoding = t, this;
                }, Object.defineProperty(A.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState && this._writableState.getBuffer();
                    }
                }), Object.defineProperty(A.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.highWaterMark;
                    }
                }), A.prototype._write = function(t, e, r) {
                    r(new y("_write()"));
                }, A.prototype._writev = null, A.prototype.end = function(t343, e194, r147) {
                    var i = this._writableState;
                    return "function" == typeof t343 ? (r147 = t343, t343 = null, e194 = null) : "function" == typeof e194 && (r147 = e194, e194 = null), null != t343 && this.write(t343, e194), i.corked && (i.corked = 1, this.uncork()), i.ending || (function(t, e, r) {
                        e.ending = !0, P(t, e), r && (e.finished ? n82.nextTick(r) : t.once("finish", r));
                        e.ended = !0, t.writable = !1;
                    })(this, i, r147), this;
                }, Object.defineProperty(A.prototype, "writableLength", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.length;
                    }
                }), Object.defineProperty(A.prototype, "destroyed", {
                    enumerable: !1,
                    get: function() {
                        return void 0 !== this._writableState && this._writableState.destroyed;
                    },
                    set: function(t) {
                        this._writableState && (this._writableState.destroyed = t);
                    }
                }), A.prototype.destroy = c22.destroy, A.prototype._undestroy = c22.undestroy, A.prototype._destroy = function(t, e) {
                    e(t);
                };
            }).call(this, r143(6), r143(5));
        },
        function(t345, e195, r148) {
            (function(e196) {
                function r149(t) {
                    try {
                        if (!e196.localStorage) return !1;
                    } catch (t344) {
                        return !1;
                    }
                    var r = e196.localStorage[t];
                    return null != r && "true" === String(r).toLowerCase();
                }
                t345.exports = function(t, e) {
                    if (r149("noDeprecation")) return t;
                    var n = !1;
                    return function() {
                        if (!n) {
                            if (r149("throwDeprecation")) throw new Error(e);
                            r149("traceDeprecation") ? console.trace(e) : console.warn(e), n = !0;
                        }
                        return t.apply(this, arguments);
                    };
                };
            }).call(this, r148(6));
        },
        function(t346, e197, r150) {
            "use strict";
            t346.exports = f;
            var n83 = r150(29).codes, i64 = n83.ERR_METHOD_NOT_IMPLEMENTED, o = n83.ERR_MULTIPLE_CALLBACK, s = n83.ERR_TRANSFORM_ALREADY_TRANSFORMING, a = n83.ERR_TRANSFORM_WITH_LENGTH_0, u = r150(30);
            function h(t, e) {
                var r = this._transformState;
                r.transforming = !1;
                var n = r.writecb;
                if (null === n) return this.emit("error", new o);
                r.writechunk = null, r.writecb = null, null != e && this.push(e), n(t);
                var i = this._readableState;
                i.reading = !1, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
            }
            function f(t) {
                if (!(this instanceof f)) return new f(t);
                u.call(this, t), this._transformState = {
                    afterTransform: h.bind(this),
                    needTransform: !1,
                    transforming: !1,
                    writecb: null,
                    writechunk: null,
                    writeencoding: null
                }, this._readableState.needReadable = !0, this._readableState.sync = !1, t && ("function" == typeof t.transform && (this._transform = t.transform), "function" == typeof t.flush && (this._flush = t.flush)), this.on("prefinish", c);
            }
            function c() {
                var t = this;
                "function" != typeof this._flush || this._readableState.destroyed ? l(this, null, null) : this._flush(function(e, r) {
                    l(t, e, r);
                });
            }
            function l(t, e, r) {
                if (e) return t.emit("error", e);
                if (null != r && t.push(r), t._writableState.length) throw new a;
                if (t._transformState.transforming) throw new s;
                return t.push(null);
            }
            r150(0)(f, u), f.prototype.push = function(t, e) {
                return this._transformState.needTransform = !1, u.prototype.push.call(this, t, e);
            }, f.prototype._transform = function(t, e, r) {
                r(new i64("_transform()"));
            }, f.prototype._write = function(t, e, r) {
                var n = this._transformState;
                if (n.writecb = r, n.writechunk = t, n.writeencoding = e, !n.transforming) {
                    var i = this._readableState;
                    (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
                }
            }, f.prototype._read = function(t) {
                var e = this._transformState;
                null === e.writechunk || e.transforming ? e.needTransform = !0 : (e.transforming = !0, this._transform(e.writechunk, e.writeencoding, e.afterTransform));
            }, f.prototype._destroy = function(t347, e) {
                u.prototype._destroy.call(this, t347, function(t) {
                    e(t);
                });
            };
        },
        function(t348, e198, r151) {
            var n84 = r151(0), i65 = r151(31), o45 = r151(2).Buffer, s = [
                1116352408,
                1899447441,
                3049323471,
                3921009573,
                961987163,
                1508970993,
                2453635748,
                2870763221,
                3624381080,
                310598401,
                607225278,
                1426881987,
                1925078388,
                2162078206,
                2614888103,
                3248222580,
                3835390401,
                4022224774,
                264347078,
                604807628,
                770255983,
                1249150122,
                1555081692,
                1996064986,
                2554220882,
                2821834349,
                2952996808,
                3210313671,
                3336571891,
                3584528711,
                113926993,
                338241895,
                666307205,
                773529912,
                1294757372,
                1396182291,
                1695183700,
                1986661051,
                2177026350,
                2456956037,
                2730485921,
                2820302411,
                3259730800,
                3345764771,
                3516065817,
                3600352804,
                4094571909,
                275423344,
                430227734,
                506948616,
                659060556,
                883997877,
                958139571,
                1322822218,
                1537002063,
                1747873779,
                1955562222,
                2024104815,
                2227730452,
                2361852424,
                2428436474,
                2756734187,
                3204031479,
                3329325298
            ], a37 = new Array(64);
            function u32() {
                this.init(), this._w = a37, i65.call(this, 64, 56);
            }
            function h(t, e, r) {
                return r ^ t & (e ^ r);
            }
            function f(t, e, r) {
                return t & e | r & (t | e);
            }
            function c(t) {
                return (t >>> 2 | t << 30) ^ (t >>> 13 | t << 19) ^ (t >>> 22 | t << 10);
            }
            function l(t) {
                return (t >>> 6 | t << 26) ^ (t >>> 11 | t << 21) ^ (t >>> 25 | t << 7);
            }
            function d(t) {
                return (t >>> 7 | t << 25) ^ (t >>> 18 | t << 14) ^ t >>> 3;
            }
            n84(u32, i65), u32.prototype.init = function() {
                return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
            }, u32.prototype._update = function(t) {
                for(var e, r = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, a = 0 | this._d, u = 0 | this._e, p = 0 | this._f, y = 0 | this._g, m = 0 | this._h, b = 0; b < 16; ++b)r[b] = t.readInt32BE(4 * b);
                for(; b < 64; ++b)r[b] = 0 | (((e = r[b - 2]) >>> 17 | e << 15) ^ (e >>> 19 | e << 13) ^ e >>> 10) + r[b - 7] + d(r[b - 15]) + r[b - 16];
                for(var v = 0; v < 64; ++v){
                    var g = m + l(u) + h(u, p, y) + s[v] + r[v] | 0, w = c(n) + f(n, i, o) | 0;
                    m = y, y = p, p = u, u = a + g | 0, a = o, o = i, i = n, n = g + w | 0;
                }
                this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = a + this._d | 0, this._e = u + this._e | 0, this._f = p + this._f | 0, this._g = y + this._g | 0, this._h = m + this._h | 0;
            }, u32.prototype._hash = function() {
                var t = o45.allocUnsafe(32);
                return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t.writeInt32BE(this._h, 28), t;
            }, t348.exports = u32;
        },
        function(t349, e199, r152) {
            var n85 = r152(0), i66 = r152(31), o46 = r152(2).Buffer, s = [
                1116352408,
                3609767458,
                1899447441,
                602891725,
                3049323471,
                3964484399,
                3921009573,
                2173295548,
                961987163,
                4081628472,
                1508970993,
                3053834265,
                2453635748,
                2937671579,
                2870763221,
                3664609560,
                3624381080,
                2734883394,
                310598401,
                1164996542,
                607225278,
                1323610764,
                1426881987,
                3590304994,
                1925078388,
                4068182383,
                2162078206,
                991336113,
                2614888103,
                633803317,
                3248222580,
                3479774868,
                3835390401,
                2666613458,
                4022224774,
                944711139,
                264347078,
                2341262773,
                604807628,
                2007800933,
                770255983,
                1495990901,
                1249150122,
                1856431235,
                1555081692,
                3175218132,
                1996064986,
                2198950837,
                2554220882,
                3999719339,
                2821834349,
                766784016,
                2952996808,
                2566594879,
                3210313671,
                3203337956,
                3336571891,
                1034457026,
                3584528711,
                2466948901,
                113926993,
                3758326383,
                338241895,
                168717936,
                666307205,
                1188179964,
                773529912,
                1546045734,
                1294757372,
                1522805485,
                1396182291,
                2643833823,
                1695183700,
                2343527390,
                1986661051,
                1014477480,
                2177026350,
                1206759142,
                2456956037,
                344077627,
                2730485921,
                1290863460,
                2820302411,
                3158454273,
                3259730800,
                3505952657,
                3345764771,
                106217008,
                3516065817,
                3606008344,
                3600352804,
                1432725776,
                4094571909,
                1467031594,
                275423344,
                851169720,
                430227734,
                3100823752,
                506948616,
                1363258195,
                659060556,
                3750685593,
                883997877,
                3785050280,
                958139571,
                3318307427,
                1322822218,
                3812723403,
                1537002063,
                2003034995,
                1747873779,
                3602036899,
                1955562222,
                1575990012,
                2024104815,
                1125592928,
                2227730452,
                2716904306,
                2361852424,
                442776044,
                2428436474,
                593698344,
                2756734187,
                3733110249,
                3204031479,
                2999351573,
                3329325298,
                3815920427,
                3391569614,
                3928383900,
                3515267271,
                566280711,
                3940187606,
                3454069534,
                4118630271,
                4000239992,
                116418474,
                1914138554,
                174292421,
                2731055270,
                289380356,
                3203993006,
                460393269,
                320620315,
                685471733,
                587496836,
                852142971,
                1086792851,
                1017036298,
                365543100,
                1126000580,
                2618297676,
                1288033470,
                3409855158,
                1501505948,
                4234509866,
                1607167915,
                987167468,
                1816402316,
                1246189591
            ], a38 = new Array(160);
            function u33() {
                this.init(), this._w = a38, i66.call(this, 128, 112);
            }
            function h(t, e, r) {
                return r ^ t & (e ^ r);
            }
            function f(t, e, r) {
                return t & e | r & (t | e);
            }
            function c(t, e) {
                return (t >>> 28 | e << 4) ^ (e >>> 2 | t << 30) ^ (e >>> 7 | t << 25);
            }
            function l(t, e) {
                return (t >>> 14 | e << 18) ^ (t >>> 18 | e << 14) ^ (e >>> 9 | t << 23);
            }
            function d(t, e) {
                return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ t >>> 7;
            }
            function p(t, e) {
                return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ (t >>> 7 | e << 25);
            }
            function y(t, e) {
                return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ t >>> 6;
            }
            function m(t, e) {
                return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ (t >>> 6 | e << 26);
            }
            function b(t, e) {
                return t >>> 0 < e >>> 0 ? 1 : 0;
            }
            n85(u33, i66), u33.prototype.init = function() {
                return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
            }, u33.prototype._update = function(t) {
                for(var e = this._w, r = 0 | this._ah, n = 0 | this._bh, i = 0 | this._ch, o = 0 | this._dh, a = 0 | this._eh, u = 0 | this._fh, v = 0 | this._gh, g = 0 | this._hh, w = 0 | this._al, _ = 0 | this._bl, M = 0 | this._cl, S = 0 | this._dl, O = 0 | this._el, A = 0 | this._fl, E = 0 | this._gl, x = 0 | this._hl, k = 0; k < 32; k += 2)e[k] = t.readInt32BE(4 * k), e[k + 1] = t.readInt32BE(4 * k + 4);
                for(; k < 160; k += 2){
                    var j = e[k - 30], $ = e[k - 30 + 1], P = d(j, $), R = p($, j), B = y(j = e[k - 4], $ = e[k - 4 + 1]), T = m($, j), I = e[k - 14], N = e[k - 14 + 1], D = e[k - 32], C = e[k - 32 + 1], L = R + N | 0, q = P + I + b(L, R) | 0;
                    q = (q = q + B + b(L = L + T | 0, T) | 0) + D + b(L = L + C | 0, C) | 0, e[k] = q, e[k + 1] = L;
                }
                for(var U = 0; U < 160; U += 2){
                    q = e[U], L = e[U + 1];
                    var F = f(r, n, i), z = f(w, _, M), V = c(r, w), K = c(w, r), H = l(a, O), Z = l(O, a), W = s[U], J = s[U + 1], Y = h(a, u, v), Q = h(O, A, E), G = x + Z | 0, X = g + H + b(G, x) | 0;
                    X = (X = (X = X + Y + b(G = G + Q | 0, Q) | 0) + W + b(G = G + J | 0, J) | 0) + q + b(G = G + L | 0, L) | 0;
                    var tt = K + z | 0, et = V + F + b(tt, K) | 0;
                    g = v, x = E, v = u, E = A, u = a, A = O, a = o + X + b(O = S + G | 0, S) | 0, o = i, S = M, i = n, M = _, n = r, _ = w, r = X + et + b(w = G + tt | 0, G) | 0;
                }
                this._al = this._al + w | 0, this._bl = this._bl + _ | 0, this._cl = this._cl + M | 0, this._dl = this._dl + S | 0, this._el = this._el + O | 0, this._fl = this._fl + A | 0, this._gl = this._gl + E | 0, this._hl = this._hl + x | 0, this._ah = this._ah + r + b(this._al, w) | 0, this._bh = this._bh + n + b(this._bl, _) | 0, this._ch = this._ch + i + b(this._cl, M) | 0, this._dh = this._dh + o + b(this._dl, S) | 0, this._eh = this._eh + a + b(this._el, O) | 0, this._fh = this._fh + u + b(this._fl, A) | 0, this._gh = this._gh + v + b(this._gl, E) | 0, this._hh = this._hh + g + b(this._hl, x) | 0;
            }, u33.prototype._hash = function() {
                var t = o46.allocUnsafe(64);
                function e200(e, r, n) {
                    t.writeInt32BE(e, n), t.writeInt32BE(r, n + 4);
                }
                return e200(this._ah, this._al, 0), e200(this._bh, this._bl, 8), e200(this._ch, this._cl, 16), e200(this._dh, this._dl, 24), e200(this._eh, this._el, 32), e200(this._fh, this._fl, 40), e200(this._gh, this._gl, 48), e200(this._hh, this._hl, 56), t;
            }, t349.exports = u33;
        },
        function(t350, e201, r153) {
            "use strict";
            (function(e202, n86) {
                var i67 = r153(47);
                t350.exports = g7;
                var o47, s41 = r153(93);
                g7.ReadableState = v8;
                r153(12).EventEmitter;
                var a39 = function(t, e) {
                    return t.listeners(e).length;
                }, u34 = r153(106), h25 = r153(2).Buffer, f27 = e202.Uint8Array || function() {
                };
                var c23 = Object.create(r153(37));
                c23.inherits = r153(0);
                var l19 = r153(196), d = void 0;
                d = l19 && l19.debuglog ? l19.debuglog("stream") : function() {
                };
                var p11, y10 = r153(197), m10 = r153(107);
                c23.inherits(g7, u34);
                var b8 = [
                    "error",
                    "close",
                    "destroy",
                    "pause",
                    "resume"
                ];
                function v8(t, e) {
                    t = t || {
                    };
                    var n = e instanceof (o47 = o47 || r153(26));
                    this.objectMode = !!t.objectMode, n && (this.objectMode = this.objectMode || !!t.readableObjectMode);
                    var i = t.highWaterMark, s = t.readableHighWaterMark, a = this.objectMode ? 16 : 16384;
                    this.highWaterMark = i || 0 === i ? i : n && (s || 0 === s) ? s : a, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new y10, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.destroyed = !1, this.defaultEncoding = t.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, t.encoding && (p11 || (p11 = r153(36).StringDecoder), this.decoder = new p11(t.encoding), this.encoding = t.encoding);
                }
                function g7(t) {
                    if (o47 = o47 || r153(26), !(this instanceof g7)) return new g7(t);
                    this._readableState = new v8(t, this), this.readable = !0, t && ("function" == typeof t.read && (this._read = t.read), "function" == typeof t.destroy && (this._destroy = t.destroy)), u34.call(this);
                }
                function w(t351, e203, r154, n87, i) {
                    var o, s = t351._readableState;
                    null === e203 ? (s.reading = !1, (function(t, e) {
                        if (e.ended) return;
                        if (e.decoder) {
                            var r = e.decoder.end();
                            r && r.length && (e.buffer.push(r), e.length += e.objectMode ? 1 : r.length);
                        }
                        e.ended = !0, S(t);
                    })(t351, s)) : (i || (o = (function(t, e) {
                        var r;
                        n = e, h25.isBuffer(n) || n instanceof f27 || "string" == typeof e || void 0 === e || t.objectMode || (r = new TypeError("Invalid non-string/buffer chunk"));
                        var n;
                        return r;
                    })(s, e203)), o ? t351.emit("error", o) : s.objectMode || e203 && e203.length > 0 ? ("string" == typeof e203 || s.objectMode || Object.getPrototypeOf(e203) === h25.prototype || (e203 = (function(t) {
                        return h25.from(t);
                    })(e203)), n87 ? s.endEmitted ? t351.emit("error", new Error("stream.unshift() after end event")) : _(t351, s, e203, !0) : s.ended ? t351.emit("error", new Error("stream.push() after EOF")) : (s.reading = !1, s.decoder && !r154 ? (e203 = s.decoder.write(e203), s.objectMode || 0 !== e203.length ? _(t351, s, e203, !1) : A(t351, s)) : _(t351, s, e203, !1))) : n87 || (s.reading = !1));
                    return (function(t) {
                        return !t.ended && (t.needReadable || t.length < t.highWaterMark || 0 === t.length);
                    })(s);
                }
                function _(t, e, r, n) {
                    e.flowing && 0 === e.length && !e.sync ? (t.emit("data", r), t.read(0)) : (e.length += e.objectMode ? 1 : r.length, n ? e.buffer.unshift(r) : e.buffer.push(r), e.needReadable && S(t)), A(t, e);
                }
                Object.defineProperty(g7.prototype, "destroyed", {
                    get: function() {
                        return void 0 !== this._readableState && this._readableState.destroyed;
                    },
                    set: function(t) {
                        this._readableState && (this._readableState.destroyed = t);
                    }
                }), g7.prototype.destroy = m10.destroy, g7.prototype._undestroy = m10.undestroy, g7.prototype._destroy = function(t, e) {
                    this.push(null), e(t);
                }, g7.prototype.push = function(t, e) {
                    var r, n = this._readableState;
                    return n.objectMode ? r = !0 : "string" == typeof t && ((e = e || n.defaultEncoding) !== n.encoding && (t = h25.from(t, e), e = ""), r = !0), w(this, t, e, !1, r);
                }, g7.prototype.unshift = function(t) {
                    return w(this, t, null, !0, !1);
                }, g7.prototype.isPaused = function() {
                    return !1 === this._readableState.flowing;
                }, g7.prototype.setEncoding = function(t) {
                    return p11 || (p11 = r153(36).StringDecoder), this._readableState.decoder = new p11(t), this._readableState.encoding = t, this;
                };
                function M(t352, e) {
                    return t352 <= 0 || 0 === e.length && e.ended ? 0 : e.objectMode ? 1 : t352 != t352 ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t352 > e.highWaterMark && (e.highWaterMark = (function(t) {
                        return t >= 8388608 ? t = 8388608 : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++), t;
                    })(t352)), t352 <= e.length ? t352 : e.ended ? e.length : (e.needReadable = !0, 0));
                }
                function S(t) {
                    var e = t._readableState;
                    e.needReadable = !1, e.emittedReadable || (d("emitReadable", e.flowing), e.emittedReadable = !0, e.sync ? i67.nextTick(O, t) : O(t));
                }
                function O(t) {
                    d("emit readable"), t.emit("readable"), j(t);
                }
                function A(t, e) {
                    e.readingMore || (e.readingMore = !0, i67.nextTick(E, t, e));
                }
                function E(t, e) {
                    for(var r = e.length; !e.reading && !e.flowing && !e.ended && e.length < e.highWaterMark && (d("maybeReadMore read 0"), t.read(0), r !== e.length);)r = e.length;
                    e.readingMore = !1;
                }
                function x(t) {
                    d("readable nexttick read 0"), t.read(0);
                }
                function k(t, e) {
                    e.reading || (d("resume read 0"), t.read(0)), e.resumeScheduled = !1, e.awaitDrain = 0, t.emit("resume"), j(t), e.flowing && !e.reading && t.read(0);
                }
                function j(t) {
                    var e = t._readableState;
                    for(d("flow", e.flowing); e.flowing && null !== t.read(););
                }
                function $(t353, e204) {
                    var r155;
                    return 0 === e204.length ? null : (e204.objectMode ? r155 = e204.buffer.shift() : !t353 || t353 >= e204.length ? (r155 = e204.decoder ? e204.buffer.join("") : 1 === e204.buffer.length ? e204.buffer.head.data : e204.buffer.concat(e204.length), e204.buffer.clear()) : r155 = (function(t354, e205, r156) {
                        var n88;
                        t354 < e205.head.data.length ? (n88 = e205.head.data.slice(0, t354), e205.head.data = e205.head.data.slice(t354)) : n88 = t354 === e205.head.data.length ? e205.shift() : r156 ? (function(t, e) {
                            var r = e.head, n = 1, i = r.data;
                            t -= i.length;
                            for(; r = r.next;){
                                var o = r.data, s = t > o.length ? o.length : t;
                                if (s === o.length ? i += o : i += o.slice(0, t), 0 === (t -= s)) {
                                    s === o.length ? (++n, r.next ? e.head = r.next : e.head = e.tail = null) : (e.head = r, r.data = o.slice(s));
                                    break;
                                }
                                ++n;
                            }
                            return e.length -= n, i;
                        })(t354, e205) : (function(t, e) {
                            var r = h25.allocUnsafe(t), n = e.head, i = 1;
                            n.data.copy(r), t -= n.data.length;
                            for(; n = n.next;){
                                var o = n.data, s = t > o.length ? o.length : t;
                                if (o.copy(r, r.length - t, 0, s), 0 === (t -= s)) {
                                    s === o.length ? (++i, n.next ? e.head = n.next : e.head = e.tail = null) : (e.head = n, n.data = o.slice(s));
                                    break;
                                }
                                ++i;
                            }
                            return e.length -= i, r;
                        })(t354, e205);
                        return n88;
                    })(t353, e204.buffer, e204.decoder), r155);
                }
                function P(t) {
                    var e = t._readableState;
                    if (e.length > 0) throw new Error('"endReadable()" called on non-empty stream');
                    e.endEmitted || (e.ended = !0, i67.nextTick(R, e, t));
                }
                function R(t, e) {
                    t.endEmitted || 0 !== t.length || (t.endEmitted = !0, e.readable = !1, e.emit("end"));
                }
                function B(t, e) {
                    for(var r = 0, n = t.length; r < n; r++)if (t[r] === e) return r;
                    return -1;
                }
                g7.prototype.read = function(t) {
                    d("read", t), t = parseInt(t, 10);
                    var e = this._readableState, r = t;
                    if (0 !== t && (e.emittedReadable = !1), 0 === t && e.needReadable && (e.length >= e.highWaterMark || e.ended)) return d("read: emitReadable", e.length, e.ended), 0 === e.length && e.ended ? P(this) : S(this), null;
                    if (0 === (t = M(t, e)) && e.ended) return 0 === e.length && P(this), null;
                    var n, i = e.needReadable;
                    return d("need readable", i), (0 === e.length || e.length - t < e.highWaterMark) && d("length less than watermark", i = !0), e.ended || e.reading ? d("reading or ended", i = !1) : i && (d("do read"), e.reading = !0, e.sync = !0, 0 === e.length && (e.needReadable = !0), this._read(e.highWaterMark), e.sync = !1, e.reading || (t = M(r, e))), null === (n = t > 0 ? $(t, e) : null) ? (e.needReadable = !0, t = 0) : e.length -= t, 0 === e.length && (e.ended || (e.needReadable = !0), r !== t && e.ended && P(this)), null !== n && this.emit("data", n), n;
                }, g7.prototype._read = function(t) {
                    this.emit("error", new Error("_read() is not implemented"));
                }, g7.prototype.pipe = function(t355, e206) {
                    var r157 = this, o = this._readableState;
                    switch(o.pipesCount){
                        case 0:
                            o.pipes = t355;
                            break;
                        case 1:
                            o.pipes = [
                                o.pipes,
                                t355
                            ];
                            break;
                        default:
                            o.pipes.push(t355);
                    }
                    o.pipesCount += 1, d("pipe count=%d opts=%j", o.pipesCount, e206);
                    var u = (!e206 || !1 !== e206.end) && t355 !== n86.stdout && t355 !== n86.stderr ? f : g;
                    function h(e, n) {
                        d("onunpipe"), e === r157 && n && !1 === n.hasUnpiped && (n.hasUnpiped = !0, d("cleanup"), t355.removeListener("close", b), t355.removeListener("finish", v), t355.removeListener("drain", c), t355.removeListener("error", m), t355.removeListener("unpipe", h), r157.removeListener("end", f), r157.removeListener("end", g), r157.removeListener("data", y), l = !0, !o.awaitDrain || t355._writableState && !t355._writableState.needDrain || c());
                    }
                    function f() {
                        d("onend"), t355.end();
                    }
                    o.endEmitted ? i67.nextTick(u) : r157.once("end", u), t355.on("unpipe", h);
                    var c = function(t) {
                        return function() {
                            var e = t._readableState;
                            d("pipeOnDrain", e.awaitDrain), e.awaitDrain && e.awaitDrain--, 0 === e.awaitDrain && a39(t, "data") && (e.flowing = !0, j(t));
                        };
                    }(r157);
                    t355.on("drain", c);
                    var l = !1;
                    var p = !1;
                    function y(e) {
                        d("ondata"), p = !1, !1 !== t355.write(e) || p || ((1 === o.pipesCount && o.pipes === t355 || o.pipesCount > 1 && -1 !== B(o.pipes, t355)) && !l && (d("false write response, pause", r157._readableState.awaitDrain), r157._readableState.awaitDrain++, p = !0), r157.pause());
                    }
                    function m(e) {
                        d("onerror", e), g(), t355.removeListener("error", m), 0 === a39(t355, "error") && t355.emit("error", e);
                    }
                    function b() {
                        t355.removeListener("finish", v), g();
                    }
                    function v() {
                        d("onfinish"), t355.removeListener("close", b), g();
                    }
                    function g() {
                        d("unpipe"), r157.unpipe(t355);
                    }
                    return r157.on("data", y), (function(t, e, r) {
                        if ("function" == typeof t.prependListener) return t.prependListener(e, r);
                        t._events && t._events[e] ? s41(t._events[e]) ? t._events[e].unshift(r) : t._events[e] = [
                            r,
                            t._events[e]
                        ] : t.on(e, r);
                    })(t355, "error", m), t355.once("close", b), t355.once("finish", v), t355.emit("pipe", r157), o.flowing || (d("pipe resume"), r157.resume()), t355;
                }, g7.prototype.unpipe = function(t) {
                    var e = this._readableState, r = {
                        hasUnpiped: !1
                    };
                    if (0 === e.pipesCount) return this;
                    if (1 === e.pipesCount) return t && t !== e.pipes || (t || (t = e.pipes), e.pipes = null, e.pipesCount = 0, e.flowing = !1, t && t.emit("unpipe", this, r)), this;
                    if (!t) {
                        var n = e.pipes, i = e.pipesCount;
                        e.pipes = null, e.pipesCount = 0, e.flowing = !1;
                        for(var o = 0; o < i; o++)n[o].emit("unpipe", this, r);
                        return this;
                    }
                    var s = B(e.pipes, t);
                    return -1 === s || (e.pipes.splice(s, 1), e.pipesCount -= 1, 1 === e.pipesCount && (e.pipes = e.pipes[0]), t.emit("unpipe", this, r)), this;
                }, g7.prototype.on = function(t, e) {
                    var r = u34.prototype.on.call(this, t, e);
                    if ("data" === t) !1 !== this._readableState.flowing && this.resume();
                    else if ("readable" === t) {
                        var n = this._readableState;
                        n.endEmitted || n.readableListening || (n.readableListening = n.needReadable = !0, n.emittedReadable = !1, n.reading ? n.length && S(this) : i67.nextTick(x, this));
                    }
                    return r;
                }, g7.prototype.addListener = g7.prototype.on, g7.prototype.resume = function() {
                    var t356 = this._readableState;
                    return t356.flowing || (d("resume"), t356.flowing = !0, (function(t, e) {
                        e.resumeScheduled || (e.resumeScheduled = !0, i67.nextTick(k, t, e));
                    })(this, t356)), this;
                }, g7.prototype.pause = function() {
                    return d("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (d("pause"), this._readableState.flowing = !1, this.emit("pause")), this;
                }, g7.prototype.wrap = function(t357) {
                    var e207 = this, r = this._readableState, n = !1;
                    for(var i68 in t357.on("end", function() {
                        if (d("wrapped end"), r.decoder && !r.ended) {
                            var t = r.decoder.end();
                            t && t.length && e207.push(t);
                        }
                        e207.push(null);
                    }), t357.on("data", function(i) {
                        (d("wrapped data"), r.decoder && (i = r.decoder.write(i)), r.objectMode && null == i) || (r.objectMode || i && i.length) && (e207.push(i) || (n = !0, t357.pause()));
                    }), t357)void 0 === this[i68] && "function" == typeof t357[i68] && (this[i68] = (function(e) {
                        return function() {
                            return t357[e].apply(t357, arguments);
                        };
                    })(i68));
                    for(var o = 0; o < b8.length; o++)t357.on(b8[o], this.emit.bind(this, b8[o]));
                    return this._read = function(e) {
                        d("wrapped _read", e), n && (n = !1, t357.resume());
                    }, this;
                }, Object.defineProperty(g7.prototype, "readableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState.highWaterMark;
                    }
                }), g7._fromList = $;
            }).call(this, r153(6), r153(5));
        },
        function(t, e, r) {
            t.exports = r(12).EventEmitter;
        },
        function(t358, e208, r158) {
            "use strict";
            var n = r158(47);
            function i(t, e) {
                t.emit("error", e);
            }
            t358.exports = {
                destroy: function(t359, e) {
                    var r = this, o = this._readableState && this._readableState.destroyed, s = this._writableState && this._writableState.destroyed;
                    return o || s ? (e ? e(t359) : !t359 || this._writableState && this._writableState.errorEmitted || n.nextTick(i, this, t359), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(t359 || null, function(t) {
                        !e && t ? (n.nextTick(i, r, t), r._writableState && (r._writableState.errorEmitted = !0)) : e && e(t);
                    }), this);
                },
                undestroy: function() {
                    this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
                }
            };
        },
        function(t360, e209, r) {
            (function(t361) {
                var n = void 0 !== t361 && t361 || "undefined" != typeof self && self || window, i = Function.prototype.apply;
                function o(t, e) {
                    this._id = t, this._clearFn = e;
                }
                e209.setTimeout = function() {
                    return new o(i.call(setTimeout, n, arguments), clearTimeout);
                }, e209.setInterval = function() {
                    return new o(i.call(setInterval, n, arguments), clearInterval);
                }, e209.clearTimeout = e209.clearInterval = function(t) {
                    t && t.close();
                }, o.prototype.unref = o.prototype.ref = function() {
                }, o.prototype.close = function() {
                    this._clearFn.call(n, this._id);
                }, e209.enroll = function(t, e) {
                    clearTimeout(t._idleTimeoutId), t._idleTimeout = e;
                }, e209.unenroll = function(t) {
                    clearTimeout(t._idleTimeoutId), t._idleTimeout = -1;
                }, e209._unrefActive = e209.active = function(t) {
                    clearTimeout(t._idleTimeoutId);
                    var e = t._idleTimeout;
                    e >= 0 && (t._idleTimeoutId = setTimeout(function() {
                        t._onTimeout && t._onTimeout();
                    }, e));
                }, r(199), e209.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== t361 && t361.setImmediate || this && this.setImmediate, e209.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== t361 && t361.clearImmediate || this && this.clearImmediate;
            }).call(this, r(6));
        },
        function(t362, e210, r159) {
            "use strict";
            t362.exports = s;
            var n89 = r159(26), i69 = Object.create(r159(37));
            function o(t, e) {
                var r = this._transformState;
                r.transforming = !1;
                var n = r.writecb;
                if (!n) return this.emit("error", new Error("write callback called multiple times"));
                r.writechunk = null, r.writecb = null, null != e && this.push(e), n(t);
                var i = this._readableState;
                i.reading = !1, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
            }
            function s(t) {
                if (!(this instanceof s)) return new s(t);
                n89.call(this, t), this._transformState = {
                    afterTransform: o.bind(this),
                    needTransform: !1,
                    transforming: !1,
                    writecb: null,
                    writechunk: null,
                    writeencoding: null
                }, this._readableState.needReadable = !0, this._readableState.sync = !1, t && ("function" == typeof t.transform && (this._transform = t.transform), "function" == typeof t.flush && (this._flush = t.flush)), this.on("prefinish", a);
            }
            function a() {
                var t = this;
                "function" == typeof this._flush ? this._flush(function(e, r) {
                    u(t, e, r);
                }) : u(this, null, null);
            }
            function u(t, e, r) {
                if (e) return t.emit("error", e);
                if (null != r && t.push(r), t._writableState.length) throw new Error("Calling transform done when ws.length != 0");
                if (t._transformState.transforming) throw new Error("Calling transform done when still transforming");
                return t.push(null);
            }
            i69.inherits = r159(0), i69.inherits(s, n89), s.prototype.push = function(t, e) {
                return this._transformState.needTransform = !1, n89.prototype.push.call(this, t, e);
            }, s.prototype._transform = function(t, e, r) {
                throw new Error("_transform() is not implemented");
            }, s.prototype._write = function(t, e, r) {
                var n = this._transformState;
                if (n.writecb = r, n.writechunk = t, n.writeencoding = e, !n.transforming) {
                    var i = this._readableState;
                    (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
                }
            }, s.prototype._read = function(t) {
                var e = this._transformState;
                null !== e.writechunk && e.writecb && !e.transforming ? (e.transforming = !0, this._transform(e.writechunk, e.writeencoding, e.afterTransform)) : e.needTransform = !0;
            }, s.prototype._destroy = function(t363, e) {
                var r = this;
                n89.prototype._destroy.call(this, t363, function(t) {
                    e(t), r.emit("close");
                });
            };
        },
        function(t364, e211, r160) {
            "use strict";
            var n90 = r160(0), i70 = r160(205), o = r160(23), s = r160(2).Buffer, a40 = r160(111), u = r160(62), h = r160(63), f = s.alloc(128);
            function c(t, e) {
                o.call(this, "digest"), "string" == typeof e && (e = s.from(e));
                var r = "sha512" === t || "sha384" === t ? 128 : 64;
                (this._alg = t, this._key = e, e.length > r) ? e = ("rmd160" === t ? new u : h(t)).update(e).digest() : e.length < r && (e = s.concat([
                    e,
                    f
                ], r));
                for(var n = this._ipad = s.allocUnsafe(r), i = this._opad = s.allocUnsafe(r), a = 0; a < r; a++)n[a] = 54 ^ e[a], i[a] = 92 ^ e[a];
                this._hash = "rmd160" === t ? new u : h(t), this._hash.update(n);
            }
            n90(c, o), c.prototype._update = function(t) {
                this._hash.update(t);
            }, c.prototype._final = function() {
                var t = this._hash.digest();
                return ("rmd160" === this._alg ? new u : h(this._alg)).update(this._opad).update(t).digest();
            }, t364.exports = function(t, e) {
                return "rmd160" === (t = t.toLowerCase()) || "ripemd160" === t ? new c("rmd160", e) : "md5" === t ? new i70(a40, e) : new c(t, e);
            };
        },
        function(t365, e, r) {
            var n = r(60);
            t365.exports = function(t) {
                return (new n).update(t).digest();
            };
        },
        function(t) {
            t.exports = JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}');
        },
        function(t, e, r) {
            e.pbkdf2 = r(207), e.pbkdf2Sync = r(116);
        },
        function(t366, e212) {
            var r = Math.pow(2, 30) - 1;
            t366.exports = function(t, e) {
                if ("number" != typeof t) throw new TypeError("Iterations not a number");
                if (t < 0) throw new TypeError("Bad iterations");
                if ("number" != typeof e) throw new TypeError("Key length not a number");
                if (e < 0 || e > r || e != e) throw new TypeError("Bad key length");
            };
        },
        function(t, e213, r161) {
            (function(e, r) {
                var n;
                if (e.process && e.process.browser) n = "utf-8";
                else if (e.process && e.process.version) n = parseInt(r.version.split(".")[0].slice(1), 10) >= 6 ? "utf-8" : "binary";
                else n = "utf-8";
                t.exports = n;
            }).call(this, r161(6), r161(5));
        },
        function(t367, e214, r162) {
            var n91 = r162(111), i71 = r162(62), o48 = r162(63), s = r162(2).Buffer, a41 = r162(114), u35 = r162(115), h26 = r162(117), f28 = s.alloc(128), c = {
                md5: 16,
                sha1: 20,
                sha224: 28,
                sha256: 32,
                sha384: 48,
                sha512: 64,
                rmd160: 20,
                ripemd160: 20
            };
            function l20(t368, e215, r) {
                var a = function(t369) {
                    function e216(e) {
                        return o48(t369).update(e).digest();
                    }
                    return "rmd160" === t369 || "ripemd160" === t369 ? function(t) {
                        return (new i71).update(t).digest();
                    } : "md5" === t369 ? n91 : e216;
                }(t368), u = "sha512" === t368 || "sha384" === t368 ? 128 : 64;
                e215.length > u ? e215 = a(e215) : e215.length < u && (e215 = s.concat([
                    e215,
                    f28
                ], u));
                for(var h = s.allocUnsafe(u + c[t368]), l = s.allocUnsafe(u + c[t368]), d = 0; d < u; d++)h[d] = 54 ^ e215[d], l[d] = 92 ^ e215[d];
                var p = s.allocUnsafe(u + r + 4);
                h.copy(p, 0, 0, u), this.ipad1 = p, this.ipad2 = h, this.opad = l, this.alg = t368, this.blocksize = u, this.hash = a, this.size = c[t368];
            }
            l20.prototype.run = function(t, e) {
                return t.copy(e, this.blocksize), this.hash(e).copy(this.opad, this.blocksize), this.hash(this.opad);
            }, t367.exports = function(t, e, r, n, i) {
                a41(r, n);
                var o = new l20(i = i || "sha1", t = h26(t, u35, "Password"), (e = h26(e, u35, "Salt")).length), f = s.allocUnsafe(n), d = s.allocUnsafe(e.length + 4);
                e.copy(d, 0, 0, e.length);
                for(var p = 0, y = c[i], m = Math.ceil(n / y), b = 1; b <= m; b++){
                    d.writeUInt32BE(b, e.length);
                    for(var v = o.run(d, o.ipad1), g = v, w = 1; w < r; w++){
                        g = o.run(g, o.ipad2);
                        for(var _ = 0; _ < y; _++)v[_] ^= g[_];
                    }
                    v.copy(f, p), p += y;
                }
                return f;
            };
        },
        function(t370, e217, r163) {
            var n = r163(2).Buffer;
            t370.exports = function(t, e, r) {
                if (n.isBuffer(t)) return t;
                if ("string" == typeof t) return n.from(t, e);
                if (ArrayBuffer.isView(t)) return n.from(t.buffer);
                throw new TypeError(r + " must be a string, a Buffer, a typed array or a DataView");
            };
        },
        function(t371, e218, r164) {
            "use strict";
            e218.readUInt32BE = function(t, e) {
                return (t[0 + e] << 24 | t[1 + e] << 16 | t[2 + e] << 8 | t[3 + e]) >>> 0;
            }, e218.writeUInt32BE = function(t, e, r) {
                t[0 + r] = e >>> 24, t[1 + r] = e >>> 16 & 255, t[2 + r] = e >>> 8 & 255, t[3 + r] = 255 & e;
            }, e218.ip = function(t, e, r, n) {
                for(var i = 0, o = 0, s = 6; s >= 0; s -= 2){
                    for(var a = 0; a <= 24; a += 8)i <<= 1, i |= e >>> a + s & 1;
                    for(a = 0; a <= 24; a += 8)i <<= 1, i |= t >>> a + s & 1;
                }
                for(s = 6; s >= 0; s -= 2){
                    for(a = 1; a <= 25; a += 8)o <<= 1, o |= e >>> a + s & 1;
                    for(a = 1; a <= 25; a += 8)o <<= 1, o |= t >>> a + s & 1;
                }
                r[n + 0] = i >>> 0, r[n + 1] = o >>> 0;
            }, e218.rip = function(t, e, r, n) {
                for(var i = 0, o = 0, s = 0; s < 4; s++)for(var a = 24; a >= 0; a -= 8)i <<= 1, i |= e >>> a + s & 1, i <<= 1, i |= t >>> a + s & 1;
                for(s = 4; s < 8; s++)for(a = 24; a >= 0; a -= 8)o <<= 1, o |= e >>> a + s & 1, o <<= 1, o |= t >>> a + s & 1;
                r[n + 0] = i >>> 0, r[n + 1] = o >>> 0;
            }, e218.pc1 = function(t, e, r, n) {
                for(var i = 0, o = 0, s = 7; s >= 5; s--){
                    for(var a = 0; a <= 24; a += 8)i <<= 1, i |= e >> a + s & 1;
                    for(a = 0; a <= 24; a += 8)i <<= 1, i |= t >> a + s & 1;
                }
                for(a = 0; a <= 24; a += 8)i <<= 1, i |= e >> a + s & 1;
                for(s = 1; s <= 3; s++){
                    for(a = 0; a <= 24; a += 8)o <<= 1, o |= e >> a + s & 1;
                    for(a = 0; a <= 24; a += 8)o <<= 1, o |= t >> a + s & 1;
                }
                for(a = 0; a <= 24; a += 8)o <<= 1, o |= t >> a + s & 1;
                r[n + 0] = i >>> 0, r[n + 1] = o >>> 0;
            }, e218.r28shl = function(t, e) {
                return t << e & 268435455 | t >>> 28 - e;
            };
            var n92 = [
                14,
                11,
                17,
                4,
                27,
                23,
                25,
                0,
                13,
                22,
                7,
                18,
                5,
                9,
                16,
                24,
                2,
                20,
                12,
                21,
                1,
                8,
                15,
                26,
                15,
                4,
                25,
                19,
                9,
                1,
                26,
                16,
                5,
                11,
                23,
                8,
                12,
                7,
                17,
                0,
                22,
                3,
                10,
                14,
                6,
                20,
                27,
                24
            ];
            e218.pc2 = function(t, e, r, i) {
                for(var o = 0, s = 0, a = n92.length >>> 1, u = 0; u < a; u++)o <<= 1, o |= t >>> n92[u] & 1;
                for(u = a; u < n92.length; u++)s <<= 1, s |= e >>> n92[u] & 1;
                r[i + 0] = o >>> 0, r[i + 1] = s >>> 0;
            }, e218.expand = function(t, e, r) {
                var n = 0, i = 0;
                n = (1 & t) << 5 | t >>> 27;
                for(var o = 23; o >= 15; o -= 4)n <<= 6, n |= t >>> o & 63;
                for(o = 11; o >= 3; o -= 4)i |= t >>> o & 63, i <<= 6;
                i |= (31 & t) << 1 | t >>> 31, e[r + 0] = n >>> 0, e[r + 1] = i >>> 0;
            };
            var i72 = [
                14,
                0,
                4,
                15,
                13,
                7,
                1,
                4,
                2,
                14,
                15,
                2,
                11,
                13,
                8,
                1,
                3,
                10,
                10,
                6,
                6,
                12,
                12,
                11,
                5,
                9,
                9,
                5,
                0,
                3,
                7,
                8,
                4,
                15,
                1,
                12,
                14,
                8,
                8,
                2,
                13,
                4,
                6,
                9,
                2,
                1,
                11,
                7,
                15,
                5,
                12,
                11,
                9,
                3,
                7,
                14,
                3,
                10,
                10,
                0,
                5,
                6,
                0,
                13,
                15,
                3,
                1,
                13,
                8,
                4,
                14,
                7,
                6,
                15,
                11,
                2,
                3,
                8,
                4,
                14,
                9,
                12,
                7,
                0,
                2,
                1,
                13,
                10,
                12,
                6,
                0,
                9,
                5,
                11,
                10,
                5,
                0,
                13,
                14,
                8,
                7,
                10,
                11,
                1,
                10,
                3,
                4,
                15,
                13,
                4,
                1,
                2,
                5,
                11,
                8,
                6,
                12,
                7,
                6,
                12,
                9,
                0,
                3,
                5,
                2,
                14,
                15,
                9,
                10,
                13,
                0,
                7,
                9,
                0,
                14,
                9,
                6,
                3,
                3,
                4,
                15,
                6,
                5,
                10,
                1,
                2,
                13,
                8,
                12,
                5,
                7,
                14,
                11,
                12,
                4,
                11,
                2,
                15,
                8,
                1,
                13,
                1,
                6,
                10,
                4,
                13,
                9,
                0,
                8,
                6,
                15,
                9,
                3,
                8,
                0,
                7,
                11,
                4,
                1,
                15,
                2,
                14,
                12,
                3,
                5,
                11,
                10,
                5,
                14,
                2,
                7,
                12,
                7,
                13,
                13,
                8,
                14,
                11,
                3,
                5,
                0,
                6,
                6,
                15,
                9,
                0,
                10,
                3,
                1,
                4,
                2,
                7,
                8,
                2,
                5,
                12,
                11,
                1,
                12,
                10,
                4,
                14,
                15,
                9,
                10,
                3,
                6,
                15,
                9,
                0,
                0,
                6,
                12,
                10,
                11,
                1,
                7,
                13,
                13,
                8,
                15,
                9,
                1,
                4,
                3,
                5,
                14,
                11,
                5,
                12,
                2,
                7,
                8,
                2,
                4,
                14,
                2,
                14,
                12,
                11,
                4,
                2,
                1,
                12,
                7,
                4,
                10,
                7,
                11,
                13,
                6,
                1,
                8,
                5,
                5,
                0,
                3,
                15,
                15,
                10,
                13,
                3,
                0,
                9,
                14,
                8,
                9,
                6,
                4,
                11,
                2,
                8,
                1,
                12,
                11,
                7,
                10,
                1,
                13,
                14,
                7,
                2,
                8,
                13,
                15,
                6,
                9,
                15,
                12,
                0,
                5,
                9,
                6,
                10,
                3,
                4,
                0,
                5,
                14,
                3,
                12,
                10,
                1,
                15,
                10,
                4,
                15,
                2,
                9,
                7,
                2,
                12,
                6,
                9,
                8,
                5,
                0,
                6,
                13,
                1,
                3,
                13,
                4,
                14,
                14,
                0,
                7,
                11,
                5,
                3,
                11,
                8,
                9,
                4,
                14,
                3,
                15,
                2,
                5,
                12,
                2,
                9,
                8,
                5,
                12,
                15,
                3,
                10,
                7,
                11,
                0,
                14,
                4,
                1,
                10,
                7,
                1,
                6,
                13,
                0,
                11,
                8,
                6,
                13,
                4,
                13,
                11,
                0,
                2,
                11,
                14,
                7,
                15,
                4,
                0,
                9,
                8,
                1,
                13,
                10,
                3,
                14,
                12,
                3,
                9,
                5,
                7,
                12,
                5,
                2,
                10,
                15,
                6,
                8,
                1,
                6,
                1,
                6,
                4,
                11,
                11,
                13,
                13,
                8,
                12,
                1,
                3,
                4,
                7,
                10,
                14,
                7,
                10,
                9,
                15,
                5,
                6,
                0,
                8,
                15,
                0,
                14,
                5,
                2,
                9,
                3,
                2,
                12,
                13,
                1,
                2,
                15,
                8,
                13,
                4,
                8,
                6,
                10,
                15,
                3,
                11,
                7,
                1,
                4,
                10,
                12,
                9,
                5,
                3,
                6,
                14,
                11,
                5,
                0,
                0,
                14,
                12,
                9,
                7,
                2,
                7,
                2,
                11,
                1,
                4,
                14,
                1,
                7,
                9,
                4,
                12,
                10,
                14,
                8,
                2,
                13,
                0,
                15,
                6,
                12,
                10,
                9,
                13,
                0,
                15,
                3,
                3,
                5,
                5,
                6,
                8,
                11
            ];
            e218.substitute = function(t, e) {
                for(var r = 0, n = 0; n < 4; n++)r <<= 4, r |= i72[64 * n + (t >>> 18 - 6 * n & 63)];
                for(n = 0; n < 4; n++)r <<= 4, r |= i72[256 + 64 * n + (e >>> 18 - 6 * n & 63)];
                return r >>> 0;
            };
            var o49 = [
                16,
                25,
                12,
                11,
                3,
                20,
                4,
                15,
                31,
                17,
                9,
                6,
                27,
                14,
                1,
                22,
                30,
                24,
                8,
                18,
                0,
                5,
                29,
                23,
                13,
                19,
                2,
                26,
                10,
                21,
                28,
                7
            ];
            e218.permute = function(t) {
                for(var e = 0, r = 0; r < o49.length; r++)e <<= 1, e |= t >>> o49[r] & 1;
                return e >>> 0;
            }, e218.padSplit = function(t, e, r) {
                for(var n = t.toString(2); n.length < e;)n = "0" + n;
                for(var i = [], o = 0; o < e; o += r)i.push(n.slice(o, o + r));
                return i.join(" ");
            };
        },
        function(t372, e219, r165) {
            "use strict";
            var n93 = r165(10), i73 = r165(0), o = r165(118), s42 = r165(66);
            function a42() {
                this.tmp = new Array(2), this.keys = null;
            }
            function u36(t) {
                s42.call(this, t);
                var e = new a42;
                this._desState = e, this.deriveKeys(e, t.key);
            }
            i73(u36, s42), t372.exports = u36, u36.create = function(t) {
                return new u36(t);
            };
            var h27 = [
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                1
            ];
            u36.prototype.deriveKeys = function(t, e) {
                t.keys = new Array(32), n93.equal(e.length, this.blockSize, "Invalid key length");
                var r = o.readUInt32BE(e, 0), i = o.readUInt32BE(e, 4);
                o.pc1(r, i, t.tmp, 0), r = t.tmp[0], i = t.tmp[1];
                for(var s = 0; s < t.keys.length; s += 2){
                    var a = h27[s >>> 1];
                    r = o.r28shl(r, a), i = o.r28shl(i, a), o.pc2(r, i, t.keys, s);
                }
            }, u36.prototype._update = function(t, e, r, n) {
                var i = this._desState, s = o.readUInt32BE(t, e), a = o.readUInt32BE(t, e + 4);
                o.ip(s, a, i.tmp, 0), s = i.tmp[0], a = i.tmp[1], "encrypt" === this.type ? this._encrypt(i, s, a, i.tmp, 0) : this._decrypt(i, s, a, i.tmp, 0), s = i.tmp[0], a = i.tmp[1], o.writeUInt32BE(r, s, n), o.writeUInt32BE(r, a, n + 4);
            }, u36.prototype._pad = function(t, e) {
                for(var r = t.length - e, n = e; n < t.length; n++)t[n] = r;
                return !0;
            }, u36.prototype._unpad = function(t) {
                for(var e = t[t.length - 1], r = t.length - e; r < t.length; r++)n93.equal(t[r], e);
                return t.slice(0, t.length - e);
            }, u36.prototype._encrypt = function(t, e, r, n, i) {
                for(var s = e, a = r, u = 0; u < t.keys.length; u += 2){
                    var h = t.keys[u], f = t.keys[u + 1];
                    o.expand(a, t.tmp, 0), h ^= t.tmp[0], f ^= t.tmp[1];
                    var c = o.substitute(h, f), l = a;
                    a = (s ^ o.permute(c)) >>> 0, s = l;
                }
                o.rip(a, s, n, i);
            }, u36.prototype._decrypt = function(t, e, r, n, i) {
                for(var s = r, a = e, u = t.keys.length - 2; u >= 0; u -= 2){
                    var h = t.keys[u], f = t.keys[u + 1];
                    o.expand(s, t.tmp, 0), h ^= t.tmp[0], f ^= t.tmp[1];
                    var c = o.substitute(h, f), l = s;
                    s = (a ^ o.permute(c)) >>> 0, a = l;
                }
                o.rip(s, a, n, i);
            };
        },
        function(t373, e220, r166) {
            var n = r166(38), i = r166(2).Buffer, o50 = r166(121);
            function s(t) {
                var e = t._cipher.encryptBlockRaw(t._prev);
                return o50(t._prev), e;
            }
            e220.encrypt = function(t, e) {
                var r = Math.ceil(e.length / 16), o = t._cache.length;
                t._cache = i.concat([
                    t._cache,
                    i.allocUnsafe(16 * r)
                ]);
                for(var a = 0; a < r; a++){
                    var u = s(t), h = o + 16 * a;
                    t._cache.writeUInt32BE(u[0], h + 0), t._cache.writeUInt32BE(u[1], h + 4), t._cache.writeUInt32BE(u[2], h + 8), t._cache.writeUInt32BE(u[3], h + 12);
                }
                var f = t._cache.slice(0, e.length);
                return t._cache = t._cache.slice(e.length), n(e, f);
            };
        },
        function(t374, e221) {
            t374.exports = function(t) {
                for(var e, r = t.length; r--;){
                    if (255 !== (e = t.readUInt8(r))) {
                        e++, t.writeUInt8(e, r);
                        break;
                    }
                    t.writeUInt8(0, r);
                }
            };
        },
        function(t) {
            t.exports = JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}');
        },
        function(t375, e222, r167) {
            var n94 = r167(48), i74 = r167(2).Buffer, o51 = r167(23), s43 = r167(0), a = r167(220), u37 = r167(38), h = r167(121);
            function f29(t376, e223, r168, s44) {
                o51.call(this);
                var u38 = i74.alloc(4, 0);
                this._cipher = new n94.AES(e223);
                var f30 = this._cipher.encryptBlock(u38);
                this._ghash = new a(f30), r168 = (function(t, e, r) {
                    if (12 === e.length) return t._finID = i74.concat([
                        e,
                        i74.from([
                            0,
                            0,
                            0,
                            1
                        ])
                    ]), i74.concat([
                        e,
                        i74.from([
                            0,
                            0,
                            0,
                            2
                        ])
                    ]);
                    var n = new a(r), o = e.length, s = o % 16;
                    n.update(e), s && (s = 16 - s, n.update(i74.alloc(s, 0))), n.update(i74.alloc(8, 0));
                    var u = 8 * o, f = i74.alloc(8);
                    f.writeUIntBE(u, 0, 8), n.update(f), t._finID = n.state;
                    var c = i74.from(t._finID);
                    return h(c), c;
                })(this, r168, f30), this._prev = i74.from(r168), this._cache = i74.allocUnsafe(0), this._secCache = i74.allocUnsafe(0), this._decrypt = s44, this._alen = 0, this._len = 0, this._mode = t376, this._authTag = null, this._called = !1;
            }
            s43(f29, o51), f29.prototype._update = function(t) {
                if (!this._called && this._alen) {
                    var e = 16 - this._alen % 16;
                    e < 16 && (e = i74.alloc(e, 0), this._ghash.update(e));
                }
                this._called = !0;
                var r = this._mode.encrypt(this, t);
                return this._decrypt ? this._ghash.update(t) : this._ghash.update(r), this._len += t.length, r;
            }, f29.prototype._final = function() {
                if (this._decrypt && !this._authTag) throw new Error("Unsupported state or unable to authenticate data");
                var t377 = u37(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
                if (this._decrypt && (function(t, e) {
                    var r = 0;
                    t.length !== e.length && r++;
                    for(var n = Math.min(t.length, e.length), i = 0; i < n; ++i)r += t[i] ^ e[i];
                    return r;
                })(t377, this._authTag)) throw new Error("Unsupported state or unable to authenticate data");
                this._authTag = t377, this._cipher.scrub();
            }, f29.prototype.getAuthTag = function() {
                if (this._decrypt || !i74.isBuffer(this._authTag)) throw new Error("Attempting to get auth tag in unsupported state");
                return this._authTag;
            }, f29.prototype.setAuthTag = function(t) {
                if (!this._decrypt) throw new Error("Attempting to set auth tag in unsupported state");
                this._authTag = t;
            }, f29.prototype.setAAD = function(t) {
                if (this._called) throw new Error("Attempting to set AAD in unsupported state");
                this._ghash.update(t), this._alen += t.length;
            }, t375.exports = f29;
        },
        function(t378, e224, r169) {
            var n = r169(48), i = r169(2).Buffer, o = r169(23);
            function s45(t, e, r, s) {
                o.call(this), this._cipher = new n.AES(e), this._prev = i.from(r), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = s, this._mode = t;
            }
            r169(0)(s45, o), s45.prototype._update = function(t) {
                return this._mode.encrypt(this, t, this._decrypt);
            }, s45.prototype._final = function() {
                this._cipher.scrub();
            }, t378.exports = s45;
        },
        function(t379, e225, r170) {
            var n95 = r170(28);
            t379.exports = v, v.simpleSieve = m, v.fermatTest = b;
            var i75 = r170(126), o = new i75(24), s = new (r170(127)), a = new i75(1), u = new i75(2), h = new i75(5), f = (new i75(16), new i75(8), new i75(10)), c = new i75(3), l = (new i75(7), new i75(11)), d = new i75(4), p12 = (new i75(12), null);
            function y() {
                if (null !== p12) return p12;
                var t = [];
                t[0] = 2;
                for(var e = 1, r = 3; r < 1048576; r += 2){
                    for(var n = Math.ceil(Math.sqrt(r)), i = 0; i < e && t[i] <= n && r % t[i] != 0; i++);
                    e !== i && t[i] <= n || (t[e++] = r);
                }
                return p12 = t, t;
            }
            function m(t) {
                for(var e = y(), r = 0; r < e.length; r++)if (0 === t.modn(e[r])) return 0 === t.cmpn(e[r]);
                return !0;
            }
            function b(t) {
                var e = i75.mont(t);
                return 0 === u.toRed(e).redPow(t.subn(1)).fromRed().cmpn(1);
            }
            function v(t, e) {
                if (t < 16) return new i75(2 === e || 5 === e ? [
                    140,
                    123
                ] : [
                    140,
                    39
                ]);
                var r, p;
                for(e = new i75(e);;){
                    for(r = new i75(n95(Math.ceil(t / 8))); r.bitLength() > t;)r.ishrn(1);
                    if (r.isEven() && r.iadd(a), r.testn(1) || r.iadd(u), e.cmp(u)) {
                        if (!e.cmp(h)) for(; r.mod(f).cmp(c);)r.iadd(d);
                    } else for(; r.mod(o).cmp(l);)r.iadd(d);
                    if (m(p = r.shrn(1)) && m(r) && b(p) && b(r) && s.test(p) && s.test(r)) return r;
                }
            }
        },
        function(t380, e226, r171) {
            (function(t381) {
                function e227(t382) {
                    return (e227 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t382);
                }
                !function(t383, n96) {
                    function i76(t, e) {
                        if (!t) throw new Error(e || "Assertion failed");
                    }
                    function o52(t, e) {
                        t.super_ = e;
                        var r = function() {
                        };
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t;
                    }
                    function s46(t, e, r) {
                        if (s46.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
                    }
                    var a43;
                    "object" === e227(t383) ? t383.exports = s46 : n96.BN = s46, s46.BN = s46, s46.wordSize = 26;
                    try {
                        a43 = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r171(224).Buffer;
                    } catch (t384) {
                    }
                    function u39(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
                    }
                    function h28(t, e, r) {
                        var n = u39(t, r);
                        return r - 1 >= e && (n |= u39(t, r - 1) << 4), n;
                    }
                    function f31(t, e, r, n) {
                        for(var i = 0, o = Math.min(t.length, r), s = e; s < o; s++){
                            var a = t.charCodeAt(s) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
                        }
                        return i;
                    }
                    s46.isBN = function(t) {
                        return t instanceof s46 || null !== t && "object" === e227(t) && t.constructor.wordSize === s46.wordSize && Array.isArray(t.words);
                    }, s46.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e;
                    }, s46.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e;
                    }, s46.prototype._init = function(t, r, n) {
                        if ("number" == typeof t) return this._initNumber(t, r, n);
                        if ("object" === e227(t)) return this._initArray(t, r, n);
                        "hex" === r && (r = 16), i76(r === (0 | r) && r >= 2 && r <= 36);
                        var o = 0;
                        "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
                    }, s46.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [
                            67108863 & t
                        ], this.length = 1) : t < 4503599627370496 ? (this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863
                        ], this.length = 2) : (i76(t < 9007199254740992), this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863,
                            1
                        ], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
                    }, s46.prototype._initArray = function(t, e, r) {
                        if (i76("number" == typeof t.length), t.length <= 0) return this.words = [
                            0
                        ], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var o, s, a = 0;
                        if ("be" === r) for(n = t.length - 1, o = 0; n >= 0; n -= 3)s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        else if ("le" === r) for(n = 0, o = 0; n < t.length; n += 3)s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        return this.strip();
                    }, s46.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var i, o = 0, s = 0;
                        if ("be" === r) for(n = t.length - 1; n >= e; n -= 2)i = h28(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        else for(n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2)i = h28(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        this.strip();
                    }, s46.prototype._parseBase = function(t, e, r) {
                        this.words = [
                            0
                        ], this.length = 1;
                        for(var n = 0, i = 1; i <= 67108863; i *= e)n++;
                        n--, i = i / e | 0;
                        for(var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n)u = f31(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var c = 1;
                            for(u = f31(t, h, t.length, e), h = 0; h < s; h++)c *= e;
                            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        }
                        this.strip();
                    }, s46.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for(var e = 0; e < this.length; e++)t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red;
                    }, s46.prototype.clone = function() {
                        var t = new s46(null);
                        return this.copy(t), t;
                    }, s46.prototype._expand = function(t) {
                        for(; this.length < t;)this.words[this.length++] = 0;
                        return this;
                    }, s46.prototype.strip = function() {
                        for(; this.length > 1 && 0 === this.words[this.length - 1];)this.length--;
                        return this._normSign();
                    }, s46.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }, s46.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    };
                    var c24 = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000"
                    ], l21 = [
                        0,
                        0,
                        25,
                        16,
                        12,
                        11,
                        10,
                        9,
                        8,
                        8,
                        7,
                        7,
                        7,
                        7,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5
                    ], d12 = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        10000000,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64000000,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        24300000,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176
                    ];
                    function p13(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0], o = 0 | e.words[0], s = i * o, a = 67108863 & s, u = s / 67108864 | 0;
                        r.words[0] = a;
                        for(var h = 1; h < n; h++){
                            for(var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++){
                                var p = h - d | 0;
                                f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
                            }
                            r.words[h] = 0 | c, u = 0 | f;
                        }
                        return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip();
                    }
                    s46.prototype.toString = function(t, e) {
                        var r;
                        if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                            r = "";
                            for(var n = 0, o = 0, s = 0; s < this.length; s++){
                                var a = this.words[s], u = (16777215 & (a << n | o)).toString(16);
                                r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? c24[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
                            }
                            for(0 !== o && (r = o.toString(16) + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var h = l21[t], f = d12[t];
                            r = "";
                            var p = this.clone();
                            for(p.negative = 0; !p.isZero();){
                                var y = p.modn(f).toString(t);
                                r = (p = p.idivn(f)).isZero() ? y + r : c24[h - y.length] + y + r;
                            }
                            for(this.isZero() && (r = "0" + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        i76(!1, "Base should be between 2 and 36");
                    }, s46.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i76(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
                    }, s46.prototype.toJSON = function() {
                        return this.toString(16);
                    }, s46.prototype.toBuffer = function(t, e) {
                        return i76(void 0 !== a43), this.toArrayLike(a43, t, e);
                    }, s46.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e);
                    }, s46.prototype.toArrayLike = function(t, e, r) {
                        var n = this.byteLength(), o = r || Math.max(1, n);
                        i76(n <= o, "byte array longer than desired length"), i76(o > 0, "Requested array length <= 0"), this.strip();
                        var s, a, u = "le" === e, h = new t(o), f = this.clone();
                        if (u) {
                            for(a = 0; !f.isZero(); a++)s = f.andln(255), f.iushrn(8), h[a] = s;
                            for(; a < o; a++)h[a] = 0;
                        } else {
                            for(a = 0; a < o - n; a++)h[a] = 0;
                            for(a = 0; !f.isZero(); a++)s = f.andln(255), f.iushrn(8), h[o - a - 1] = s;
                        }
                        return h;
                    }, Math.clz32 ? s46.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t);
                    } : s46.prototype._countBits = function(t) {
                        var e = t, r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
                    }, s46.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t, r = 0;
                        return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
                    }, s46.prototype.bitLength = function() {
                        var t = this.words[this.length - 1], e = this._countBits(t);
                        return 26 * (this.length - 1) + e;
                    }, s46.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for(var t = 0, e = 0; e < this.length; e++){
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break;
                        }
                        return t;
                    }, s46.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8);
                    }, s46.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
                    }, s46.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
                    }, s46.prototype.isNeg = function() {
                        return 0 !== this.negative;
                    }, s46.prototype.neg = function() {
                        return this.clone().ineg();
                    }, s46.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this;
                    }, s46.prototype.iuor = function(t) {
                        for(; this.length < t.length;)this.words[this.length++] = 0;
                        for(var e = 0; e < t.length; e++)this.words[e] = this.words[e] | t.words[e];
                        return this.strip();
                    }, s46.prototype.ior = function(t) {
                        return i76(0 == (this.negative | t.negative)), this.iuor(t);
                    }, s46.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
                    }, s46.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
                    }, s46.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for(var r = 0; r < e.length; r++)this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this.strip();
                    }, s46.prototype.iand = function(t) {
                        return i76(0 == (this.negative | t.negative)), this.iuand(t);
                    }, s46.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
                    }, s46.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
                    }, s46.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for(var n = 0; n < r.length; n++)this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e) for(; n < e.length; n++)this.words[n] = e.words[n];
                        return this.length = e.length, this.strip();
                    }, s46.prototype.ixor = function(t) {
                        return i76(0 == (this.negative | t.negative)), this.iuxor(t);
                    }, s46.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
                    }, s46.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
                    }, s46.prototype.inotn = function(t) {
                        i76("number" == typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26), r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for(var n = 0; n < e; n++)this.words[n] = 67108863 & ~this.words[n];
                        return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip();
                    }, s46.prototype.notn = function(t) {
                        return this.clone().inotn(t);
                    }, s46.prototype.setn = function(t, e) {
                        i76("number" == typeof t && t >= 0);
                        var r = t / 26 | 0, n = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip();
                    }, s46.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for(var i = 0, o = 0; o < n.length; o++)e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for(; 0 !== i && o < r.length; o++)e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this) for(; o < r.length; o++)this.words[o] = r.words[o];
                        return this;
                    }, s46.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
                    }, s46.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign();
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for(var o = 0, s = 0; s < n.length; s++)o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        for(; 0 !== o && s < r.length; s++)o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        if (0 === o && s < r.length && r !== this) for(; s < r.length; s++)this.words[s] = r.words[s];
                        return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip();
                    }, s46.prototype.sub = function(t) {
                        return this.clone().isub(t);
                    };
                    var y11 = function(t, e, r) {
                        var n, i, o, s = t.words, a = e.words, u = r.words, h = 0, f = 0 | s[0], c = 8191 & f, l = f >>> 13, d = 0 | s[1], p = 8191 & d, y = d >>> 13, m = 0 | s[2], b = 8191 & m, v = m >>> 13, g = 0 | s[3], w = 8191 & g, _ = g >>> 13, M = 0 | s[4], S = 8191 & M, O = M >>> 13, A = 0 | s[5], E = 8191 & A, x = A >>> 13, k = 0 | s[6], j = 8191 & k, $ = k >>> 13, P = 0 | s[7], R = 8191 & P, B = P >>> 13, T = 0 | s[8], I = 8191 & T, N = T >>> 13, D = 0 | s[9], C = 8191 & D, L = D >>> 13, q = 0 | a[0], U = 8191 & q, F = q >>> 13, z = 0 | a[1], V = 8191 & z, K = z >>> 13, H = 0 | a[2], Z = 8191 & H, W = H >>> 13, J = 0 | a[3], Y = 8191 & J, Q = J >>> 13, G = 0 | a[4], X = 8191 & G, tt = G >>> 13, et = 0 | a[5], rt = 8191 & et, nt = et >>> 13, it = 0 | a[6], ot = 8191 & it, st = it >>> 13, at = 0 | a[7], ut = 8191 & at, ht = at >>> 13, ft = 0 | a[8], ct = 8191 & ft, lt = ft >>> 13, dt = 0 | a[9], pt = 8191 & dt, yt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19;
                        var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
                        h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
                        var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
                        var vt = (h + (n = n + Math.imul(c, Z) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, W) | 0) + Math.imul(l, Z) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, W) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, Z) | 0, i = (i = i + Math.imul(p, W) | 0) + Math.imul(y, Z) | 0, o = o + Math.imul(y, W) | 0;
                        var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Q) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, Q) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, Z) | 0, i = (i = i + Math.imul(b, W) | 0) + Math.imul(v, Z) | 0, o = o + Math.imul(v, W) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, Q) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, Q) | 0;
                        var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, Z) | 0, i = (i = i + Math.imul(w, W) | 0) + Math.imul(_, Z) | 0, o = o + Math.imul(_, W) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, Q) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, Q) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;
                        var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, Z) | 0, i = (i = i + Math.imul(S, W) | 0) + Math.imul(O, Z) | 0, o = o + Math.imul(O, W) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, Q) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, Q) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                        var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, Z) | 0, i = (i = i + Math.imul(E, W) | 0) + Math.imul(x, Z) | 0, o = o + Math.imul(x, W) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, Q) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, Q) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                        var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, Z) | 0, i = (i = i + Math.imul(j, W) | 0) + Math.imul($, Z) | 0, o = o + Math.imul($, W) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, Q) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, Q) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
                        var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, Z) | 0, i = (i = i + Math.imul(R, W) | 0) + Math.imul(B, Z) | 0, o = o + Math.imul(B, W) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, Q) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, Q) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
                        var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, Z) | 0, i = (i = i + Math.imul(I, W) | 0) + Math.imul(N, Z) | 0, o = o + Math.imul(N, W) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, Q) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, Q) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
                        var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, Z), i = (i = Math.imul(C, W)) + Math.imul(L, Z) | 0, o = Math.imul(L, W), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, Q) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, Q) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
                        var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, Q)) + Math.imul(L, Y) | 0, o = Math.imul(L, Q), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
                        var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
                        var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
                        var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
                        var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
                        var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
                        var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
                        var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
                        return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
                    };
                    function m11(t, e, r) {
                        return (new b9).mulp(t, e, r);
                    }
                    function b9(t, e) {
                        this.x = t, this.y = e;
                    }
                    Math.imul || (y11 = p13), s46.prototype.mulTo = function(t385, e228) {
                        var r172 = this.length + t385.length;
                        return 10 === this.length && 10 === t385.length ? y11(this, t385, e228) : r172 < 63 ? p13(this, t385, e228) : r172 < 1024 ? (function(t, e, r) {
                            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                            for(var n = 0, i = 0, o = 0; o < r.length - 1; o++){
                                var s = i;
                                i = 0;
                                for(var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++){
                                    var f = o - h, c = (0 | t.words[f]) * (0 | e.words[h]), l = 67108863 & c;
                                    a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
                                }
                                r.words[o] = a, n = s, s = i;
                            }
                            return 0 !== n ? r.words[o] = n : r.length--, r.strip();
                        })(this, t385, e228) : m11(this, t385, e228);
                    }, b9.prototype.makeRBT = function(t) {
                        for(var e = new Array(t), r = s46.prototype._countBits(t) - 1, n = 0; n < t; n++)e[n] = this.revBin(n, r, t);
                        return e;
                    }, b9.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for(var n = 0, i = 0; i < e; i++)n |= (1 & t) << e - i - 1, t >>= 1;
                        return n;
                    }, b9.prototype.permute = function(t, e, r, n, i, o) {
                        for(var s = 0; s < o; s++)n[s] = e[t[s]], i[s] = r[t[s]];
                    }, b9.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for(var s = 1; s < i; s <<= 1)for(var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a)for(var c = u, l = h, d = 0; d < s; d++){
                            var p = r[f + d], y = n[f + d], m = r[f + d + s], b = n[f + d + s], v = c * m - l * b;
                            b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
                        }
                    }, b9.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t), n = 1 & r, i = 0;
                        for(r = r / 2 | 0; r; r >>>= 1)i++;
                        return 1 << i + 1 + n;
                    }, b9.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1)) for(var n = 0; n < r / 2; n++){
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
                        }
                    }, b9.prototype.normalize13b = function(t, e) {
                        for(var r = 0, n = 0; n < e / 2; n++){
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
                        }
                        return t;
                    }, b9.prototype.convert13b = function(t, e, r, n) {
                        for(var o = 0, s = 0; s < e; s++)o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                        for(s = 2 * e; s < n; ++s)r[s] = 0;
                        i76(0 === o), i76(0 == (-8192 & o));
                    }, b9.prototype.stub = function(t) {
                        for(var e = new Array(t), r = 0; r < t; r++)e[r] = 0;
                        return e;
                    }, b9.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length), i = this.makeRBT(n), o = this.stub(n), s = new Array(n), a = new Array(n), u = new Array(n), h = new Array(n), f = new Array(n), c = new Array(n), l = r.words;
                        l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);
                        for(var d = 0; d < n; d++){
                            var p = a[d] * f[d] - u[d] * c[d];
                            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip();
                    }, s46.prototype.mul = function(t) {
                        var e = new s46(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e);
                    }, s46.prototype.mulf = function(t) {
                        var e = new s46(null);
                        return e.words = new Array(this.length + t.length), m11(this, t, e);
                    }, s46.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this);
                    }, s46.prototype.imuln = function(t) {
                        i76("number" == typeof t), i76(t < 67108864);
                        for(var e = 0, r = 0; r < this.length; r++){
                            var n = (0 | this.words[r]) * t, o = (67108863 & n) + (67108863 & e);
                            e >>= 26, e += n / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o;
                        }
                        return 0 !== e && (this.words[r] = e, this.length++), this;
                    }, s46.prototype.muln = function(t) {
                        return this.clone().imuln(t);
                    }, s46.prototype.sqr = function() {
                        return this.mul(this);
                    }, s46.prototype.isqr = function() {
                        return this.imul(this.clone());
                    }, s46.prototype.pow = function(t386) {
                        var e229 = function(t) {
                            for(var e = new Array(t.bitLength()), r = 0; r < e.length; r++){
                                var n = r / 26 | 0, i = r % 26;
                                e[r] = (t.words[n] & 1 << i) >>> i;
                            }
                            return e;
                        }(t386);
                        if (0 === e229.length) return new s46(1);
                        for(var r173 = this, n = 0; n < e229.length && 0 === e229[n]; n++, r173 = r173.sqr());
                        if (++n < e229.length) for(var i77 = r173.sqr(); n < e229.length; n++, i77 = i77.sqr())0 !== e229[n] && (r173 = r173.mul(i77));
                        return r173;
                    }, s46.prototype.iushln = function(t) {
                        i76("number" == typeof t && t >= 0);
                        var e, r = t % 26, n = (t - r) / 26, o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var s = 0;
                            for(e = 0; e < this.length; e++){
                                var a = this.words[e] & o, u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | s, s = a >>> 26 - r;
                            }
                            s && (this.words[e] = s, this.length++);
                        }
                        if (0 !== n) {
                            for(e = this.length - 1; e >= 0; e--)this.words[e + n] = this.words[e];
                            for(e = 0; e < n; e++)this.words[e] = 0;
                            this.length += n;
                        }
                        return this.strip();
                    }, s46.prototype.ishln = function(t) {
                        return i76(0 === this.negative), this.iushln(t);
                    }, s46.prototype.iushrn = function(t, e, r) {
                        var n;
                        i76("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26, s = Math.min((t - o) / 26, this.length), a = 67108863 ^ 67108863 >>> o << o, u = r;
                        if (n -= s, n = Math.max(0, n), u) {
                            for(var h = 0; h < s; h++)u.words[h] = this.words[h];
                            u.length = s;
                        }
                        if (0 === s) ;
                        else if (this.length > s) for(this.length -= s, h = 0; h < this.length; h++)this.words[h] = this.words[h + s];
                        else this.words[0] = 0, this.length = 1;
                        var f = 0;
                        for(h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--){
                            var c = 0 | this.words[h];
                            this.words[h] = f << 26 - o | c >>> o, f = c & a;
                        }
                        return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
                    }, s46.prototype.ishrn = function(t, e, r) {
                        return i76(0 === this.negative), this.iushrn(t, e, r);
                    }, s46.prototype.shln = function(t) {
                        return this.clone().ishln(t);
                    }, s46.prototype.ushln = function(t) {
                        return this.clone().iushln(t);
                    }, s46.prototype.shrn = function(t) {
                        return this.clone().ishrn(t);
                    }, s46.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t);
                    }, s46.prototype.testn = function(t) {
                        i76("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        return !(this.length <= r) && !!(this.words[r] & n);
                    }, s46.prototype.imaskn = function(t) {
                        i76("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26;
                        if (i76(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var n = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= n;
                        }
                        return this.strip();
                    }, s46.prototype.maskn = function(t) {
                        return this.clone().imaskn(t);
                    }, s46.prototype.iaddn = function(t) {
                        return i76("number" == typeof t), i76(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
                    }, s46.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for(var e = 0; e < this.length && this.words[e] >= 67108864; e++)this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this;
                    }, s46.prototype.isubn = function(t) {
                        if (i76("number" == typeof t), i76(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else for(var e = 0; e < this.length && this.words[e] < 0; e++)this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this.strip();
                    }, s46.prototype.addn = function(t) {
                        return this.clone().iaddn(t);
                    }, s46.prototype.subn = function(t) {
                        return this.clone().isubn(t);
                    }, s46.prototype.iabs = function() {
                        return this.negative = 0, this;
                    }, s46.prototype.abs = function() {
                        return this.clone().iabs();
                    }, s46.prototype._ishlnsubmul = function(t, e, r) {
                        var n, o, s = t.length + r;
                        this._expand(s);
                        var a = 0;
                        for(n = 0; n < t.length; n++){
                            o = (0 | this.words[n + r]) + a;
                            var u = (0 | t.words[n]) * e;
                            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
                        }
                        for(; n < this.length - r; n++)a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
                        if (0 === a) return this.strip();
                        for(i76(-1 === a), a = 0, n = 0; n < this.length; n++)a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
                        return this.negative = 1, this.strip();
                    }, s46.prototype._wordDiv = function(t, e) {
                        var r = (this.length, t.length), n = this.clone(), i = t, o = 0 | i.words[i.length - 1];
                        0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                        var a, u = n.length - i.length;
                        if ("mod" !== e) {
                            (a = new s46(null)).length = u + 1, a.words = new Array(a.length);
                            for(var h = 0; h < a.length; h++)a.words[h] = 0;
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, u);
                        0 === f.negative && (n = f, a && (a.words[u] = 1));
                        for(var c = u - 1; c >= 0; c--){
                            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);
                            for(l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;)l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
                            a && (a.words[c] = l);
                        }
                        return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: a || null,
                            mod: n
                        };
                    }, s46.prototype.divmod = function(t, e, r) {
                        var n, o, a;
                        return i76(!t.isZero()), this.isZero() ? {
                            div: new s46(0),
                            mod: new s46(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
                            div: n,
                            mod: o
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
                            div: n,
                            mod: a.mod
                        }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
                            div: a.div,
                            mod: o
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new s46(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new s46(this.modn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new s46(this.modn(t.words[0]))
                        } : this._wordDiv(t, e);
                    }, s46.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div;
                    }, s46.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod;
                    }, s46.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod;
                    }, s46.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod, n = t.ushrn(1), i = t.andln(1), o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
                    }, s46.prototype.modn = function(t) {
                        i76(t <= 67108863);
                        for(var e = 67108864 % t, r = 0, n = this.length - 1; n >= 0; n--)r = (e * r + (0 | this.words[n])) % t;
                        return r;
                    }, s46.prototype.idivn = function(t) {
                        i76(t <= 67108863);
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = (0 | this.words[r]) + 67108864 * e;
                            this.words[r] = n / t | 0, e = n % t;
                        }
                        return this.strip();
                    }, s46.prototype.divn = function(t) {
                        return this.clone().idivn(t);
                    }, s46.prototype.egcd = function(t) {
                        i76(0 === t.negative), i76(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n = new s46(1), o = new s46(0), a = new s46(0), u = new s46(1), h = 0; e.isEven() && r.isEven();)e.iushrn(1), r.iushrn(1), ++h;
                        for(var f = r.clone(), c = e.clone(); !e.isZero();){
                            for(var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1);
                            if (l > 0) for(e.iushrn(l); l-- > 0;)(n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
                            for(var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1);
                            if (p > 0) for(r.iushrn(p); p-- > 0;)(a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(h)
                        };
                    }, s46.prototype._invmp = function(t) {
                        i76(0 === t.negative), i76(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n, o = new s46(1), a = new s46(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;){
                            for(var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1);
                            if (h > 0) for(e.iushrn(h); h-- > 0;)o.isOdd() && o.iadd(u), o.iushrn(1);
                            for(var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                            if (c > 0) for(r.iushrn(c); c-- > 0;)a.isOdd() && a.iadd(u), a.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
                        }
                        return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
                    }, s46.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(), r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for(var n = 0; e.isEven() && r.isEven(); n++)e.iushrn(1), r.iushrn(1);
                        for(;;){
                            for(; e.isEven();)e.iushrn(1);
                            for(; r.isEven();)r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o;
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r);
                        }
                        return r.iushln(n);
                    }, s46.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t);
                    }, s46.prototype.isEven = function() {
                        return 0 == (1 & this.words[0]);
                    }, s46.prototype.isOdd = function() {
                        return 1 == (1 & this.words[0]);
                    }, s46.prototype.andln = function(t) {
                        return this.words[0] & t;
                    }, s46.prototype.bincn = function(t) {
                        i76("number" == typeof t);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                        for(var o = n, s = r; 0 !== o && s < this.length; s++){
                            var a = 0 | this.words[s];
                            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
                        }
                        return 0 !== o && (this.words[s] = o, this.length++), this;
                    }, s46.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0];
                    }, s46.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), i76(t <= 67108863, "Number is too big");
                            var n = 0 | this.words[0];
                            e = n === t ? 0 : n < t ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s46.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s46.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = 0 | this.words[r], i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break;
                            }
                        }
                        return e;
                    }, s46.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t);
                    }, s46.prototype.gt = function(t) {
                        return 1 === this.cmp(t);
                    }, s46.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0;
                    }, s46.prototype.gte = function(t) {
                        return this.cmp(t) >= 0;
                    }, s46.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t);
                    }, s46.prototype.lt = function(t) {
                        return -1 === this.cmp(t);
                    }, s46.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0;
                    }, s46.prototype.lte = function(t) {
                        return this.cmp(t) <= 0;
                    }, s46.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t);
                    }, s46.prototype.eq = function(t) {
                        return 0 === this.cmp(t);
                    }, s46.red = function(t) {
                        return new O7(t);
                    }, s46.prototype.toRed = function(t) {
                        return i76(!this.red, "Already a number in reduction context"), i76(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
                    }, s46.prototype.fromRed = function() {
                        return i76(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }, s46.prototype._forceRed = function(t) {
                        return this.red = t, this;
                    }, s46.prototype.forceRed = function(t) {
                        return i76(!this.red, "Already a number in reduction context"), this._forceRed(t);
                    }, s46.prototype.redAdd = function(t) {
                        return i76(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
                    }, s46.prototype.redIAdd = function(t) {
                        return i76(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
                    }, s46.prototype.redSub = function(t) {
                        return i76(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
                    }, s46.prototype.redISub = function(t) {
                        return i76(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
                    }, s46.prototype.redShl = function(t) {
                        return i76(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
                    }, s46.prototype.redMul = function(t) {
                        return i76(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
                    }, s46.prototype.redIMul = function(t) {
                        return i76(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
                    }, s46.prototype.redSqr = function() {
                        return i76(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }, s46.prototype.redISqr = function() {
                        return i76(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }, s46.prototype.redSqrt = function() {
                        return i76(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }, s46.prototype.redInvm = function() {
                        return i76(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }, s46.prototype.redNeg = function() {
                        return i76(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }, s46.prototype.redPow = function(t) {
                        return i76(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
                    };
                    var v9 = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };
                    function g8(t, e) {
                        this.name = t, this.p = new s46(e, 16), this.n = this.p.bitLength(), this.k = new s46(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
                    }
                    function w8() {
                        g8.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                    }
                    function _9() {
                        g8.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                    }
                    function M6() {
                        g8.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                    }
                    function S7() {
                        g8.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                    }
                    function O7(t) {
                        if ("string" == typeof t) {
                            var e = s46._prime(t);
                            this.m = e.p, this.prime = e;
                        } else i76(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
                    }
                    function A7(t) {
                        O7.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s46(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
                    }
                    g8.prototype._tmp = function() {
                        var t = new s46(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t;
                    }, g8.prototype.ireduce = function(t) {
                        var e, r = t;
                        do this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                        while (e > this.n)
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }, g8.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e);
                    }, g8.prototype.imulK = function(t) {
                        return t.imul(this.k);
                    }, o52(w8, g8), w8.prototype.split = function(t, e) {
                        for(var r = Math.min(t.length, 9), n = 0; n < r; n++)e.words[n] = t.words[n];
                        if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
                        var i = t.words[9];
                        for(e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++){
                            var o = 0 | t.words[n];
                            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
                        }
                        i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
                    }, w8.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
                    }, o52(_9, g8), o52(M6, g8), o52(S7, g8), S7.prototype.imulK = function(t) {
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 19 * (0 | t.words[r]) + e, i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n;
                        }
                        return 0 !== e && (t.words[t.length++] = e), t;
                    }, s46._prime = function(t) {
                        if (v9[t]) return v9[t];
                        var e;
                        if ("k256" === t) e = new w8;
                        else if ("p224" === t) e = new _9;
                        else if ("p192" === t) e = new M6;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new S7;
                        }
                        return v9[t] = e, e;
                    }, O7.prototype._verify1 = function(t) {
                        i76(0 === t.negative, "red works only with positives"), i76(t.red, "red works only with red numbers");
                    }, O7.prototype._verify2 = function(t, e) {
                        i76(0 == (t.negative | e.negative), "red works only with positives"), i76(t.red && t.red === e.red, "red works only with red numbers");
                    }, O7.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
                    }, O7.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
                    }, O7.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
                    }, O7.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                    }, O7.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
                    }, O7.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r;
                    }, O7.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e));
                    }, O7.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e));
                    }, O7.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e));
                    }, O7.prototype.isqr = function(t) {
                        return this.imul(t, t.clone());
                    }, O7.prototype.sqr = function(t) {
                        return this.mul(t, t);
                    }, O7.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (i76(e % 2 == 1), 3 === e) {
                            var r = this.m.add(new s46(1)).iushrn(2);
                            return this.pow(t, r);
                        }
                        for(var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);)o++, n.iushrn(1);
                        i76(!n.isZero());
                        var a = new s46(1).toRed(this), u = a.redNeg(), h = this.m.subn(1).iushrn(1), f = this.m.bitLength();
                        for(f = new s46(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);)f.redIAdd(u);
                        for(var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);){
                            for(var y = d, m = 0; 0 !== y.cmp(a); m++)y = y.redSqr();
                            i76(m < p);
                            var b = this.pow(c, new s46(1).iushln(p - m - 1));
                            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
                        }
                        return l;
                    }, O7.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
                    }, O7.prototype.pow = function(t, e) {
                        if (e.isZero()) return new s46(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = new Array(16);
                        r[0] = new s46(1).toRed(this), r[1] = t;
                        for(var n = 2; n < r.length; n++)r[n] = this.mul(r[n - 1], t);
                        var i = r[0], o = 0, a = 0, u = e.bitLength() % 26;
                        for(0 === u && (u = 26), n = e.length - 1; n >= 0; n--){
                            for(var h = e.words[n], f = u - 1; f >= 0; f--){
                                var c = h >> f & 1;
                                i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
                            }
                            u = 26;
                        }
                        return i;
                    }, O7.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e;
                    }, O7.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e;
                    }, s46.mont = function(t) {
                        return new A7(t);
                    }, o52(A7, O7), A7.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift));
                    }, A7.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e;
                    }, A7.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A7.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new s46(0)._forceRed(this);
                        var r = t.mul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A7.prototype.invm = function(t) {
                        return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
                    };
                }(t381, this);
            }).call(this, r171(24)(t380));
        },
        function(t387, e230, r174) {
            var n = r174(225), i78 = r174(69);
            function o53(t) {
                this.rand = t || new i78.Rand;
            }
            t387.exports = o53, o53.create = function(t) {
                return new o53(t);
            }, o53.prototype._randbelow = function(t) {
                var e = t.bitLength(), r = Math.ceil(e / 8);
                do var i = new n(this.rand.generate(r));
                while (i.cmp(t) >= 0)
                return i;
            }, o53.prototype._randrange = function(t, e) {
                var r = e.sub(t);
                return t.add(this._randbelow(r));
            }, o53.prototype.test = function(t, e, r) {
                var i = t.bitLength(), o = n.mont(t), s = new n(1).toRed(o);
                e || (e = Math.max(1, i / 48 | 0));
                for(var a = t.subn(1), u = 0; !a.testn(u); u++);
                for(var h = t.shrn(u), f = a.toRed(o); e > 0; e--){
                    var c = this._randrange(new n(2), a);
                    r && r(c);
                    var l = c.toRed(o).redPow(h);
                    if (0 !== l.cmp(s) && 0 !== l.cmp(f)) {
                        for(var d = 1; d < u; d++){
                            if (0 === (l = l.redSqr()).cmp(s)) return !1;
                            if (0 === l.cmp(f)) break;
                        }
                        if (d === u) return !1;
                    }
                }
                return !0;
            }, o53.prototype.getDivisor = function(t, e) {
                var r = t.bitLength(), i = n.mont(t), o = new n(1).toRed(i);
                e || (e = Math.max(1, r / 48 | 0));
                for(var s = t.subn(1), a = 0; !s.testn(a); a++);
                for(var u = t.shrn(a), h = s.toRed(i); e > 0; e--){
                    var f = this._randrange(new n(2), s), c = t.gcd(f);
                    if (0 !== c.cmpn(1)) return c;
                    var l = f.toRed(i).redPow(u);
                    if (0 !== l.cmp(o) && 0 !== l.cmp(h)) {
                        for(var d = 1; d < a; d++){
                            if (0 === (l = l.redSqr()).cmp(o)) return l.fromRed().subn(1).gcd(t);
                            if (0 === l.cmp(h)) break;
                        }
                        if (d === a) return (l = l.redSqr()).fromRed().subn(1).gcd(t);
                    }
                }
                return !1;
            };
        },
        function(t388, e231, r175) {
            "use strict";
            var n97 = e231;
            function i79(t) {
                return 1 === t.length ? "0" + t : t;
            }
            function o54(t) {
                for(var e = "", r = 0; r < t.length; r++)e += i79(t[r].toString(16));
                return e;
            }
            n97.toArray = function(t, e) {
                if (Array.isArray(t)) return t.slice();
                if (!t) return [];
                var r = [];
                if ("string" != typeof t) {
                    for(var n = 0; n < t.length; n++)r[n] = 0 | t[n];
                    return r;
                }
                if ("hex" === e) {
                    (t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t = "0" + t);
                    for(n = 0; n < t.length; n += 2)r.push(parseInt(t[n] + t[n + 1], 16));
                } else for(n = 0; n < t.length; n++){
                    var i = t.charCodeAt(n), o = i >> 8, s = 255 & i;
                    o ? r.push(o, s) : r.push(s);
                }
                return r;
            }, n97.zero2 = i79, n97.toHex = o54, n97.encode = function(t, e) {
                return "hex" === e ? o54(t) : t;
            };
        },
        function(t, e, r) {
            "use strict";
            var n = e;
            n.base = r(50), n.short = r(235), n.mont = r(236), n.edwards = r(237);
        },
        function(t389, e232, r176) {
            "use strict";
            var n98 = r176(17).rotr32;
            function i(t, e, r) {
                return t & e ^ ~t & r;
            }
            function o(t, e, r) {
                return t & e ^ t & r ^ e & r;
            }
            function s(t, e, r) {
                return t ^ e ^ r;
            }
            e232.ft_1 = function(t, e, r, n) {
                return 0 === t ? i(e, r, n) : 1 === t || 3 === t ? s(e, r, n) : 2 === t ? o(e, r, n) : void 0;
            }, e232.ch32 = i, e232.maj32 = o, e232.p32 = s, e232.s0_256 = function(t) {
                return n98(t, 2) ^ n98(t, 13) ^ n98(t, 22);
            }, e232.s1_256 = function(t) {
                return n98(t, 6) ^ n98(t, 11) ^ n98(t, 25);
            }, e232.g0_256 = function(t) {
                return n98(t, 7) ^ n98(t, 18) ^ t >>> 3;
            }, e232.g1_256 = function(t) {
                return n98(t, 17) ^ n98(t, 19) ^ t >>> 10;
            };
        },
        function(t390, e, r177) {
            "use strict";
            var n99 = r177(17), i80 = r177(39), o55 = r177(130), s = r177(10), a = n99.sum32, u = n99.sum32_4, h = n99.sum32_5, f = o55.ch32, c = o55.maj32, l = o55.s0_256, d = o55.s1_256, p = o55.g0_256, y = o55.g1_256, m12 = i80.BlockHash, b10 = [
                1116352408,
                1899447441,
                3049323471,
                3921009573,
                961987163,
                1508970993,
                2453635748,
                2870763221,
                3624381080,
                310598401,
                607225278,
                1426881987,
                1925078388,
                2162078206,
                2614888103,
                3248222580,
                3835390401,
                4022224774,
                264347078,
                604807628,
                770255983,
                1249150122,
                1555081692,
                1996064986,
                2554220882,
                2821834349,
                2952996808,
                3210313671,
                3336571891,
                3584528711,
                113926993,
                338241895,
                666307205,
                773529912,
                1294757372,
                1396182291,
                1695183700,
                1986661051,
                2177026350,
                2456956037,
                2730485921,
                2820302411,
                3259730800,
                3345764771,
                3516065817,
                3600352804,
                4094571909,
                275423344,
                430227734,
                506948616,
                659060556,
                883997877,
                958139571,
                1322822218,
                1537002063,
                1747873779,
                1955562222,
                2024104815,
                2227730452,
                2361852424,
                2428436474,
                2756734187,
                3204031479,
                3329325298
            ];
            function v10() {
                if (!(this instanceof v10)) return new v10;
                m12.call(this), this.h = [
                    1779033703,
                    3144134277,
                    1013904242,
                    2773480762,
                    1359893119,
                    2600822924,
                    528734635,
                    1541459225
                ], this.k = b10, this.W = new Array(64);
            }
            n99.inherits(v10, m12), t390.exports = v10, v10.blockSize = 512, v10.outSize = 256, v10.hmacStrength = 192, v10.padLength = 64, v10.prototype._update = function(t, e) {
                for(var r = this.W, n = 0; n < 16; n++)r[n] = t[e + n];
                for(; n < r.length; n++)r[n] = u(y(r[n - 2]), r[n - 7], p(r[n - 15]), r[n - 16]);
                var i = this.h[0], o = this.h[1], m = this.h[2], b = this.h[3], v = this.h[4], g = this.h[5], w = this.h[6], _ = this.h[7];
                for(s(this.k.length === r.length), n = 0; n < r.length; n++){
                    var M = h(_, d(v), f(v, g, w), this.k[n], r[n]), S = a(l(i), c(i, o, m));
                    _ = w, w = g, g = v, v = a(b, M), b = m, m = o, o = i, i = a(M, S);
                }
                this.h[0] = a(this.h[0], i), this.h[1] = a(this.h[1], o), this.h[2] = a(this.h[2], m), this.h[3] = a(this.h[3], b), this.h[4] = a(this.h[4], v), this.h[5] = a(this.h[5], g), this.h[6] = a(this.h[6], w), this.h[7] = a(this.h[7], _);
            }, v10.prototype._digest = function(t) {
                return "hex" === t ? n99.toHex32(this.h, "big") : n99.split32(this.h, "big");
            };
        },
        function(t391, e233, r178) {
            "use strict";
            var n100 = r178(17), i81 = r178(39), o56 = r178(10), s47 = n100.rotr64_hi, a44 = n100.rotr64_lo, u40 = n100.shr64_hi, h29 = n100.shr64_lo, f32 = n100.sum64, c25 = n100.sum64_hi, l = n100.sum64_lo, d13 = n100.sum64_4_hi, p14 = n100.sum64_4_lo, y = n100.sum64_5_hi, m = n100.sum64_5_lo, b11 = i81.BlockHash, v11 = [
                1116352408,
                3609767458,
                1899447441,
                602891725,
                3049323471,
                3964484399,
                3921009573,
                2173295548,
                961987163,
                4081628472,
                1508970993,
                3053834265,
                2453635748,
                2937671579,
                2870763221,
                3664609560,
                3624381080,
                2734883394,
                310598401,
                1164996542,
                607225278,
                1323610764,
                1426881987,
                3590304994,
                1925078388,
                4068182383,
                2162078206,
                991336113,
                2614888103,
                633803317,
                3248222580,
                3479774868,
                3835390401,
                2666613458,
                4022224774,
                944711139,
                264347078,
                2341262773,
                604807628,
                2007800933,
                770255983,
                1495990901,
                1249150122,
                1856431235,
                1555081692,
                3175218132,
                1996064986,
                2198950837,
                2554220882,
                3999719339,
                2821834349,
                766784016,
                2952996808,
                2566594879,
                3210313671,
                3203337956,
                3336571891,
                1034457026,
                3584528711,
                2466948901,
                113926993,
                3758326383,
                338241895,
                168717936,
                666307205,
                1188179964,
                773529912,
                1546045734,
                1294757372,
                1522805485,
                1396182291,
                2643833823,
                1695183700,
                2343527390,
                1986661051,
                1014477480,
                2177026350,
                1206759142,
                2456956037,
                344077627,
                2730485921,
                1290863460,
                2820302411,
                3158454273,
                3259730800,
                3505952657,
                3345764771,
                106217008,
                3516065817,
                3606008344,
                3600352804,
                1432725776,
                4094571909,
                1467031594,
                275423344,
                851169720,
                430227734,
                3100823752,
                506948616,
                1363258195,
                659060556,
                3750685593,
                883997877,
                3785050280,
                958139571,
                3318307427,
                1322822218,
                3812723403,
                1537002063,
                2003034995,
                1747873779,
                3602036899,
                1955562222,
                1575990012,
                2024104815,
                1125592928,
                2227730452,
                2716904306,
                2361852424,
                442776044,
                2428436474,
                593698344,
                2756734187,
                3733110249,
                3204031479,
                2999351573,
                3329325298,
                3815920427,
                3391569614,
                3928383900,
                3515267271,
                566280711,
                3940187606,
                3454069534,
                4118630271,
                4000239992,
                116418474,
                1914138554,
                174292421,
                2731055270,
                289380356,
                3203993006,
                460393269,
                320620315,
                685471733,
                587496836,
                852142971,
                1086792851,
                1017036298,
                365543100,
                1126000580,
                2618297676,
                1288033470,
                3409855158,
                1501505948,
                4234509866,
                1607167915,
                987167468,
                1816402316,
                1246189591
            ];
            function g9() {
                if (!(this instanceof g9)) return new g9;
                b11.call(this), this.h = [
                    1779033703,
                    4089235720,
                    3144134277,
                    2227873595,
                    1013904242,
                    4271175723,
                    2773480762,
                    1595750129,
                    1359893119,
                    2917565137,
                    2600822924,
                    725511199,
                    528734635,
                    4215389547,
                    1541459225,
                    327033209
                ], this.k = v11, this.W = new Array(160);
            }
            function w(t, e, r, n, i) {
                var o = t & r ^ ~t & i;
                return o < 0 && (o += 4294967296), o;
            }
            function _(t, e, r, n, i, o) {
                var s = e & n ^ ~e & o;
                return s < 0 && (s += 4294967296), s;
            }
            function M(t, e, r, n, i) {
                var o = t & r ^ t & i ^ r & i;
                return o < 0 && (o += 4294967296), o;
            }
            function S(t, e, r, n, i, o) {
                var s = e & n ^ e & o ^ n & o;
                return s < 0 && (s += 4294967296), s;
            }
            function O(t, e) {
                var r = s47(t, e, 28) ^ s47(e, t, 2) ^ s47(e, t, 7);
                return r < 0 && (r += 4294967296), r;
            }
            function A(t, e) {
                var r = a44(t, e, 28) ^ a44(e, t, 2) ^ a44(e, t, 7);
                return r < 0 && (r += 4294967296), r;
            }
            function E(t, e) {
                var r = s47(t, e, 14) ^ s47(t, e, 18) ^ s47(e, t, 9);
                return r < 0 && (r += 4294967296), r;
            }
            function x(t, e) {
                var r = a44(t, e, 14) ^ a44(t, e, 18) ^ a44(e, t, 9);
                return r < 0 && (r += 4294967296), r;
            }
            function k5(t, e) {
                var r = s47(t, e, 1) ^ s47(t, e, 8) ^ u40(t, e, 7);
                return r < 0 && (r += 4294967296), r;
            }
            function j4(t, e) {
                var r = a44(t, e, 1) ^ a44(t, e, 8) ^ h29(t, e, 7);
                return r < 0 && (r += 4294967296), r;
            }
            function $3(t, e) {
                var r = s47(t, e, 19) ^ s47(e, t, 29) ^ u40(t, e, 6);
                return r < 0 && (r += 4294967296), r;
            }
            function P4(t, e) {
                var r = a44(t, e, 19) ^ a44(e, t, 29) ^ h29(t, e, 6);
                return r < 0 && (r += 4294967296), r;
            }
            n100.inherits(g9, b11), t391.exports = g9, g9.blockSize = 1024, g9.outSize = 512, g9.hmacStrength = 192, g9.padLength = 128, g9.prototype._prepareBlock = function(t, e) {
                for(var r = this.W, n = 0; n < 32; n++)r[n] = t[e + n];
                for(; n < r.length; n += 2){
                    var i = $3(r[n - 4], r[n - 3]), o = P4(r[n - 4], r[n - 3]), s = r[n - 14], a = r[n - 13], u = k5(r[n - 30], r[n - 29]), h = j4(r[n - 30], r[n - 29]), f = r[n - 32], c = r[n - 31];
                    r[n] = d13(i, o, s, a, u, h, f, c), r[n + 1] = p14(i, o, s, a, u, h, f, c);
                }
            }, g9.prototype._update = function(t, e) {
                this._prepareBlock(t, e);
                var r = this.W, n = this.h[0], i = this.h[1], s = this.h[2], a = this.h[3], u = this.h[4], h = this.h[5], d = this.h[6], p = this.h[7], b = this.h[8], v = this.h[9], g = this.h[10], k = this.h[11], j = this.h[12], $ = this.h[13], P = this.h[14], R = this.h[15];
                o56(this.k.length === r.length);
                for(var B = 0; B < r.length; B += 2){
                    var T = P, I = R, N = E(b, v), D = x(b, v), C = w(b, v, g, k, j), L = _(b, v, g, k, j, $), q = this.k[B], U = this.k[B + 1], F = r[B], z = r[B + 1], V = y(T, I, N, D, C, L, q, U, F, z), K = m(T, I, N, D, C, L, q, U, F, z);
                    T = O(n, i), I = A(n, i), N = M(n, i, s, a, u), D = S(n, i, s, a, u, h);
                    var H = c25(T, I, N, D), Z = l(T, I, N, D);
                    P = j, R = $, j = g, $ = k, g = b, k = v, b = c25(d, p, V, K), v = l(p, p, V, K), d = u, p = h, u = s, h = a, s = n, a = i, n = c25(V, K, H, Z), i = l(V, K, H, Z);
                }
                f32(this.h, 0, n, i), f32(this.h, 2, s, a), f32(this.h, 4, u, h), f32(this.h, 6, d, p), f32(this.h, 8, b, v), f32(this.h, 10, g, k), f32(this.h, 12, j, $), f32(this.h, 14, P, R);
            }, g9.prototype._digest = function(t) {
                return "hex" === t ? n100.toHex32(this.h, "big") : n100.split32(this.h, "big");
            };
        },
        function(t, e, r) {
            "use strict";
            var n = e;
            n.bignum = r(134), n.define = r(254).define, n.base = r(257), n.constants = r(258), n.decoders = r(137), n.encoders = r(135);
        },
        function(t392, e234, r179) {
            (function(t393) {
                function e235(t394) {
                    return (e235 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t394);
                }
                !function(t395, n101) {
                    function i82(t, e) {
                        if (!t) throw new Error(e || "Assertion failed");
                    }
                    function o57(t, e) {
                        t.super_ = e;
                        var r = function() {
                        };
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t;
                    }
                    function s48(t, e, r) {
                        if (s48.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
                    }
                    var a45;
                    "object" === e235(t395) ? t395.exports = s48 : n101.BN = s48, s48.BN = s48, s48.wordSize = 26;
                    try {
                        a45 = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r179(253).Buffer;
                    } catch (t396) {
                    }
                    function u41(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
                    }
                    function h30(t, e, r) {
                        var n = u41(t, r);
                        return r - 1 >= e && (n |= u41(t, r - 1) << 4), n;
                    }
                    function f33(t, e, r, n) {
                        for(var i = 0, o = Math.min(t.length, r), s = e; s < o; s++){
                            var a = t.charCodeAt(s) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
                        }
                        return i;
                    }
                    s48.isBN = function(t) {
                        return t instanceof s48 || null !== t && "object" === e235(t) && t.constructor.wordSize === s48.wordSize && Array.isArray(t.words);
                    }, s48.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e;
                    }, s48.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e;
                    }, s48.prototype._init = function(t, r, n) {
                        if ("number" == typeof t) return this._initNumber(t, r, n);
                        if ("object" === e235(t)) return this._initArray(t, r, n);
                        "hex" === r && (r = 16), i82(r === (0 | r) && r >= 2 && r <= 36);
                        var o = 0;
                        "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
                    }, s48.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [
                            67108863 & t
                        ], this.length = 1) : t < 4503599627370496 ? (this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863
                        ], this.length = 2) : (i82(t < 9007199254740992), this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863,
                            1
                        ], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
                    }, s48.prototype._initArray = function(t, e, r) {
                        if (i82("number" == typeof t.length), t.length <= 0) return this.words = [
                            0
                        ], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var o, s, a = 0;
                        if ("be" === r) for(n = t.length - 1, o = 0; n >= 0; n -= 3)s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        else if ("le" === r) for(n = 0, o = 0; n < t.length; n += 3)s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        return this.strip();
                    }, s48.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var i, o = 0, s = 0;
                        if ("be" === r) for(n = t.length - 1; n >= e; n -= 2)i = h30(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        else for(n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2)i = h30(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        this.strip();
                    }, s48.prototype._parseBase = function(t, e, r) {
                        this.words = [
                            0
                        ], this.length = 1;
                        for(var n = 0, i = 1; i <= 67108863; i *= e)n++;
                        n--, i = i / e | 0;
                        for(var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n)u = f33(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var c = 1;
                            for(u = f33(t, h, t.length, e), h = 0; h < s; h++)c *= e;
                            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        }
                        this.strip();
                    }, s48.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for(var e = 0; e < this.length; e++)t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red;
                    }, s48.prototype.clone = function() {
                        var t = new s48(null);
                        return this.copy(t), t;
                    }, s48.prototype._expand = function(t) {
                        for(; this.length < t;)this.words[this.length++] = 0;
                        return this;
                    }, s48.prototype.strip = function() {
                        for(; this.length > 1 && 0 === this.words[this.length - 1];)this.length--;
                        return this._normSign();
                    }, s48.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }, s48.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    };
                    var c26 = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000"
                    ], l22 = [
                        0,
                        0,
                        25,
                        16,
                        12,
                        11,
                        10,
                        9,
                        8,
                        8,
                        7,
                        7,
                        7,
                        7,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5
                    ], d14 = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        10000000,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64000000,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        24300000,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176
                    ];
                    function p15(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0], o = 0 | e.words[0], s = i * o, a = 67108863 & s, u = s / 67108864 | 0;
                        r.words[0] = a;
                        for(var h = 1; h < n; h++){
                            for(var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++){
                                var p = h - d | 0;
                                f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
                            }
                            r.words[h] = 0 | c, u = 0 | f;
                        }
                        return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip();
                    }
                    s48.prototype.toString = function(t, e) {
                        var r;
                        if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                            r = "";
                            for(var n = 0, o = 0, s = 0; s < this.length; s++){
                                var a = this.words[s], u = (16777215 & (a << n | o)).toString(16);
                                r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? c26[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
                            }
                            for(0 !== o && (r = o.toString(16) + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var h = l22[t], f = d14[t];
                            r = "";
                            var p = this.clone();
                            for(p.negative = 0; !p.isZero();){
                                var y = p.modn(f).toString(t);
                                r = (p = p.idivn(f)).isZero() ? y + r : c26[h - y.length] + y + r;
                            }
                            for(this.isZero() && (r = "0" + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        i82(!1, "Base should be between 2 and 36");
                    }, s48.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i82(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
                    }, s48.prototype.toJSON = function() {
                        return this.toString(16);
                    }, s48.prototype.toBuffer = function(t, e) {
                        return i82(void 0 !== a45), this.toArrayLike(a45, t, e);
                    }, s48.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e);
                    }, s48.prototype.toArrayLike = function(t, e, r) {
                        var n = this.byteLength(), o = r || Math.max(1, n);
                        i82(n <= o, "byte array longer than desired length"), i82(o > 0, "Requested array length <= 0"), this.strip();
                        var s, a, u = "le" === e, h = new t(o), f = this.clone();
                        if (u) {
                            for(a = 0; !f.isZero(); a++)s = f.andln(255), f.iushrn(8), h[a] = s;
                            for(; a < o; a++)h[a] = 0;
                        } else {
                            for(a = 0; a < o - n; a++)h[a] = 0;
                            for(a = 0; !f.isZero(); a++)s = f.andln(255), f.iushrn(8), h[o - a - 1] = s;
                        }
                        return h;
                    }, Math.clz32 ? s48.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t);
                    } : s48.prototype._countBits = function(t) {
                        var e = t, r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
                    }, s48.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t, r = 0;
                        return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
                    }, s48.prototype.bitLength = function() {
                        var t = this.words[this.length - 1], e = this._countBits(t);
                        return 26 * (this.length - 1) + e;
                    }, s48.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for(var t = 0, e = 0; e < this.length; e++){
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break;
                        }
                        return t;
                    }, s48.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8);
                    }, s48.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
                    }, s48.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
                    }, s48.prototype.isNeg = function() {
                        return 0 !== this.negative;
                    }, s48.prototype.neg = function() {
                        return this.clone().ineg();
                    }, s48.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this;
                    }, s48.prototype.iuor = function(t) {
                        for(; this.length < t.length;)this.words[this.length++] = 0;
                        for(var e = 0; e < t.length; e++)this.words[e] = this.words[e] | t.words[e];
                        return this.strip();
                    }, s48.prototype.ior = function(t) {
                        return i82(0 == (this.negative | t.negative)), this.iuor(t);
                    }, s48.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
                    }, s48.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
                    }, s48.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for(var r = 0; r < e.length; r++)this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this.strip();
                    }, s48.prototype.iand = function(t) {
                        return i82(0 == (this.negative | t.negative)), this.iuand(t);
                    }, s48.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
                    }, s48.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
                    }, s48.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for(var n = 0; n < r.length; n++)this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e) for(; n < e.length; n++)this.words[n] = e.words[n];
                        return this.length = e.length, this.strip();
                    }, s48.prototype.ixor = function(t) {
                        return i82(0 == (this.negative | t.negative)), this.iuxor(t);
                    }, s48.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
                    }, s48.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
                    }, s48.prototype.inotn = function(t) {
                        i82("number" == typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26), r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for(var n = 0; n < e; n++)this.words[n] = 67108863 & ~this.words[n];
                        return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip();
                    }, s48.prototype.notn = function(t) {
                        return this.clone().inotn(t);
                    }, s48.prototype.setn = function(t, e) {
                        i82("number" == typeof t && t >= 0);
                        var r = t / 26 | 0, n = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip();
                    }, s48.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for(var i = 0, o = 0; o < n.length; o++)e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for(; 0 !== i && o < r.length; o++)e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this) for(; o < r.length; o++)this.words[o] = r.words[o];
                        return this;
                    }, s48.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
                    }, s48.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign();
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for(var o = 0, s = 0; s < n.length; s++)o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        for(; 0 !== o && s < r.length; s++)o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        if (0 === o && s < r.length && r !== this) for(; s < r.length; s++)this.words[s] = r.words[s];
                        return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip();
                    }, s48.prototype.sub = function(t) {
                        return this.clone().isub(t);
                    };
                    var y12 = function(t, e, r) {
                        var n, i, o, s = t.words, a = e.words, u = r.words, h = 0, f = 0 | s[0], c = 8191 & f, l = f >>> 13, d = 0 | s[1], p = 8191 & d, y = d >>> 13, m = 0 | s[2], b = 8191 & m, v = m >>> 13, g = 0 | s[3], w = 8191 & g, _ = g >>> 13, M = 0 | s[4], S = 8191 & M, O = M >>> 13, A = 0 | s[5], E = 8191 & A, x = A >>> 13, k = 0 | s[6], j = 8191 & k, $ = k >>> 13, P = 0 | s[7], R = 8191 & P, B = P >>> 13, T = 0 | s[8], I = 8191 & T, N = T >>> 13, D = 0 | s[9], C = 8191 & D, L = D >>> 13, q = 0 | a[0], U = 8191 & q, F = q >>> 13, z = 0 | a[1], V = 8191 & z, K = z >>> 13, H = 0 | a[2], Z = 8191 & H, W = H >>> 13, J = 0 | a[3], Y = 8191 & J, Q = J >>> 13, G = 0 | a[4], X = 8191 & G, tt = G >>> 13, et = 0 | a[5], rt = 8191 & et, nt = et >>> 13, it = 0 | a[6], ot = 8191 & it, st = it >>> 13, at = 0 | a[7], ut = 8191 & at, ht = at >>> 13, ft = 0 | a[8], ct = 8191 & ft, lt = ft >>> 13, dt = 0 | a[9], pt = 8191 & dt, yt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19;
                        var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
                        h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
                        var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
                        var vt = (h + (n = n + Math.imul(c, Z) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, W) | 0) + Math.imul(l, Z) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, W) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, Z) | 0, i = (i = i + Math.imul(p, W) | 0) + Math.imul(y, Z) | 0, o = o + Math.imul(y, W) | 0;
                        var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Q) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, Q) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, Z) | 0, i = (i = i + Math.imul(b, W) | 0) + Math.imul(v, Z) | 0, o = o + Math.imul(v, W) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, Q) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, Q) | 0;
                        var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, Z) | 0, i = (i = i + Math.imul(w, W) | 0) + Math.imul(_, Z) | 0, o = o + Math.imul(_, W) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, Q) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, Q) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;
                        var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, Z) | 0, i = (i = i + Math.imul(S, W) | 0) + Math.imul(O, Z) | 0, o = o + Math.imul(O, W) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, Q) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, Q) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                        var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, Z) | 0, i = (i = i + Math.imul(E, W) | 0) + Math.imul(x, Z) | 0, o = o + Math.imul(x, W) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, Q) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, Q) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                        var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, Z) | 0, i = (i = i + Math.imul(j, W) | 0) + Math.imul($, Z) | 0, o = o + Math.imul($, W) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, Q) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, Q) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
                        var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, Z) | 0, i = (i = i + Math.imul(R, W) | 0) + Math.imul(B, Z) | 0, o = o + Math.imul(B, W) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, Q) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, Q) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
                        var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, Z) | 0, i = (i = i + Math.imul(I, W) | 0) + Math.imul(N, Z) | 0, o = o + Math.imul(N, W) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, Q) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, Q) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
                        var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, Z), i = (i = Math.imul(C, W)) + Math.imul(L, Z) | 0, o = Math.imul(L, W), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, Q) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, Q) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
                        var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, Q)) + Math.imul(L, Y) | 0, o = Math.imul(L, Q), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
                        var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
                        var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
                        var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
                        var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
                        var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
                        var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
                        var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
                        return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
                    };
                    function m13(t, e, r) {
                        return (new b12).mulp(t, e, r);
                    }
                    function b12(t, e) {
                        this.x = t, this.y = e;
                    }
                    Math.imul || (y12 = p15), s48.prototype.mulTo = function(t397, e236) {
                        var r180 = this.length + t397.length;
                        return 10 === this.length && 10 === t397.length ? y12(this, t397, e236) : r180 < 63 ? p15(this, t397, e236) : r180 < 1024 ? (function(t, e, r) {
                            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                            for(var n = 0, i = 0, o = 0; o < r.length - 1; o++){
                                var s = i;
                                i = 0;
                                for(var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++){
                                    var f = o - h, c = (0 | t.words[f]) * (0 | e.words[h]), l = 67108863 & c;
                                    a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
                                }
                                r.words[o] = a, n = s, s = i;
                            }
                            return 0 !== n ? r.words[o] = n : r.length--, r.strip();
                        })(this, t397, e236) : m13(this, t397, e236);
                    }, b12.prototype.makeRBT = function(t) {
                        for(var e = new Array(t), r = s48.prototype._countBits(t) - 1, n = 0; n < t; n++)e[n] = this.revBin(n, r, t);
                        return e;
                    }, b12.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for(var n = 0, i = 0; i < e; i++)n |= (1 & t) << e - i - 1, t >>= 1;
                        return n;
                    }, b12.prototype.permute = function(t, e, r, n, i, o) {
                        for(var s = 0; s < o; s++)n[s] = e[t[s]], i[s] = r[t[s]];
                    }, b12.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for(var s = 1; s < i; s <<= 1)for(var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a)for(var c = u, l = h, d = 0; d < s; d++){
                            var p = r[f + d], y = n[f + d], m = r[f + d + s], b = n[f + d + s], v = c * m - l * b;
                            b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
                        }
                    }, b12.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t), n = 1 & r, i = 0;
                        for(r = r / 2 | 0; r; r >>>= 1)i++;
                        return 1 << i + 1 + n;
                    }, b12.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1)) for(var n = 0; n < r / 2; n++){
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
                        }
                    }, b12.prototype.normalize13b = function(t, e) {
                        for(var r = 0, n = 0; n < e / 2; n++){
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
                        }
                        return t;
                    }, b12.prototype.convert13b = function(t, e, r, n) {
                        for(var o = 0, s = 0; s < e; s++)o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                        for(s = 2 * e; s < n; ++s)r[s] = 0;
                        i82(0 === o), i82(0 == (-8192 & o));
                    }, b12.prototype.stub = function(t) {
                        for(var e = new Array(t), r = 0; r < t; r++)e[r] = 0;
                        return e;
                    }, b12.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length), i = this.makeRBT(n), o = this.stub(n), s = new Array(n), a = new Array(n), u = new Array(n), h = new Array(n), f = new Array(n), c = new Array(n), l = r.words;
                        l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);
                        for(var d = 0; d < n; d++){
                            var p = a[d] * f[d] - u[d] * c[d];
                            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip();
                    }, s48.prototype.mul = function(t) {
                        var e = new s48(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e);
                    }, s48.prototype.mulf = function(t) {
                        var e = new s48(null);
                        return e.words = new Array(this.length + t.length), m13(this, t, e);
                    }, s48.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this);
                    }, s48.prototype.imuln = function(t) {
                        i82("number" == typeof t), i82(t < 67108864);
                        for(var e = 0, r = 0; r < this.length; r++){
                            var n = (0 | this.words[r]) * t, o = (67108863 & n) + (67108863 & e);
                            e >>= 26, e += n / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o;
                        }
                        return 0 !== e && (this.words[r] = e, this.length++), this;
                    }, s48.prototype.muln = function(t) {
                        return this.clone().imuln(t);
                    }, s48.prototype.sqr = function() {
                        return this.mul(this);
                    }, s48.prototype.isqr = function() {
                        return this.imul(this.clone());
                    }, s48.prototype.pow = function(t398) {
                        var e237 = function(t) {
                            for(var e = new Array(t.bitLength()), r = 0; r < e.length; r++){
                                var n = r / 26 | 0, i = r % 26;
                                e[r] = (t.words[n] & 1 << i) >>> i;
                            }
                            return e;
                        }(t398);
                        if (0 === e237.length) return new s48(1);
                        for(var r181 = this, n = 0; n < e237.length && 0 === e237[n]; n++, r181 = r181.sqr());
                        if (++n < e237.length) for(var i83 = r181.sqr(); n < e237.length; n++, i83 = i83.sqr())0 !== e237[n] && (r181 = r181.mul(i83));
                        return r181;
                    }, s48.prototype.iushln = function(t) {
                        i82("number" == typeof t && t >= 0);
                        var e, r = t % 26, n = (t - r) / 26, o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var s = 0;
                            for(e = 0; e < this.length; e++){
                                var a = this.words[e] & o, u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | s, s = a >>> 26 - r;
                            }
                            s && (this.words[e] = s, this.length++);
                        }
                        if (0 !== n) {
                            for(e = this.length - 1; e >= 0; e--)this.words[e + n] = this.words[e];
                            for(e = 0; e < n; e++)this.words[e] = 0;
                            this.length += n;
                        }
                        return this.strip();
                    }, s48.prototype.ishln = function(t) {
                        return i82(0 === this.negative), this.iushln(t);
                    }, s48.prototype.iushrn = function(t, e, r) {
                        var n;
                        i82("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26, s = Math.min((t - o) / 26, this.length), a = 67108863 ^ 67108863 >>> o << o, u = r;
                        if (n -= s, n = Math.max(0, n), u) {
                            for(var h = 0; h < s; h++)u.words[h] = this.words[h];
                            u.length = s;
                        }
                        if (0 === s) ;
                        else if (this.length > s) for(this.length -= s, h = 0; h < this.length; h++)this.words[h] = this.words[h + s];
                        else this.words[0] = 0, this.length = 1;
                        var f = 0;
                        for(h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--){
                            var c = 0 | this.words[h];
                            this.words[h] = f << 26 - o | c >>> o, f = c & a;
                        }
                        return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
                    }, s48.prototype.ishrn = function(t, e, r) {
                        return i82(0 === this.negative), this.iushrn(t, e, r);
                    }, s48.prototype.shln = function(t) {
                        return this.clone().ishln(t);
                    }, s48.prototype.ushln = function(t) {
                        return this.clone().iushln(t);
                    }, s48.prototype.shrn = function(t) {
                        return this.clone().ishrn(t);
                    }, s48.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t);
                    }, s48.prototype.testn = function(t) {
                        i82("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        return !(this.length <= r) && !!(this.words[r] & n);
                    }, s48.prototype.imaskn = function(t) {
                        i82("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26;
                        if (i82(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var n = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= n;
                        }
                        return this.strip();
                    }, s48.prototype.maskn = function(t) {
                        return this.clone().imaskn(t);
                    }, s48.prototype.iaddn = function(t) {
                        return i82("number" == typeof t), i82(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
                    }, s48.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for(var e = 0; e < this.length && this.words[e] >= 67108864; e++)this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this;
                    }, s48.prototype.isubn = function(t) {
                        if (i82("number" == typeof t), i82(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else for(var e = 0; e < this.length && this.words[e] < 0; e++)this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this.strip();
                    }, s48.prototype.addn = function(t) {
                        return this.clone().iaddn(t);
                    }, s48.prototype.subn = function(t) {
                        return this.clone().isubn(t);
                    }, s48.prototype.iabs = function() {
                        return this.negative = 0, this;
                    }, s48.prototype.abs = function() {
                        return this.clone().iabs();
                    }, s48.prototype._ishlnsubmul = function(t, e, r) {
                        var n, o, s = t.length + r;
                        this._expand(s);
                        var a = 0;
                        for(n = 0; n < t.length; n++){
                            o = (0 | this.words[n + r]) + a;
                            var u = (0 | t.words[n]) * e;
                            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
                        }
                        for(; n < this.length - r; n++)a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
                        if (0 === a) return this.strip();
                        for(i82(-1 === a), a = 0, n = 0; n < this.length; n++)a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
                        return this.negative = 1, this.strip();
                    }, s48.prototype._wordDiv = function(t, e) {
                        var r = (this.length, t.length), n = this.clone(), i = t, o = 0 | i.words[i.length - 1];
                        0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                        var a, u = n.length - i.length;
                        if ("mod" !== e) {
                            (a = new s48(null)).length = u + 1, a.words = new Array(a.length);
                            for(var h = 0; h < a.length; h++)a.words[h] = 0;
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, u);
                        0 === f.negative && (n = f, a && (a.words[u] = 1));
                        for(var c = u - 1; c >= 0; c--){
                            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);
                            for(l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;)l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
                            a && (a.words[c] = l);
                        }
                        return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: a || null,
                            mod: n
                        };
                    }, s48.prototype.divmod = function(t, e, r) {
                        var n, o, a;
                        return i82(!t.isZero()), this.isZero() ? {
                            div: new s48(0),
                            mod: new s48(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
                            div: n,
                            mod: o
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
                            div: n,
                            mod: a.mod
                        }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
                            div: a.div,
                            mod: o
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new s48(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new s48(this.modn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new s48(this.modn(t.words[0]))
                        } : this._wordDiv(t, e);
                    }, s48.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div;
                    }, s48.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod;
                    }, s48.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod;
                    }, s48.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod, n = t.ushrn(1), i = t.andln(1), o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
                    }, s48.prototype.modn = function(t) {
                        i82(t <= 67108863);
                        for(var e = 67108864 % t, r = 0, n = this.length - 1; n >= 0; n--)r = (e * r + (0 | this.words[n])) % t;
                        return r;
                    }, s48.prototype.idivn = function(t) {
                        i82(t <= 67108863);
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = (0 | this.words[r]) + 67108864 * e;
                            this.words[r] = n / t | 0, e = n % t;
                        }
                        return this.strip();
                    }, s48.prototype.divn = function(t) {
                        return this.clone().idivn(t);
                    }, s48.prototype.egcd = function(t) {
                        i82(0 === t.negative), i82(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n = new s48(1), o = new s48(0), a = new s48(0), u = new s48(1), h = 0; e.isEven() && r.isEven();)e.iushrn(1), r.iushrn(1), ++h;
                        for(var f = r.clone(), c = e.clone(); !e.isZero();){
                            for(var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1);
                            if (l > 0) for(e.iushrn(l); l-- > 0;)(n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
                            for(var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1);
                            if (p > 0) for(r.iushrn(p); p-- > 0;)(a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(h)
                        };
                    }, s48.prototype._invmp = function(t) {
                        i82(0 === t.negative), i82(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n, o = new s48(1), a = new s48(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;){
                            for(var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1);
                            if (h > 0) for(e.iushrn(h); h-- > 0;)o.isOdd() && o.iadd(u), o.iushrn(1);
                            for(var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                            if (c > 0) for(r.iushrn(c); c-- > 0;)a.isOdd() && a.iadd(u), a.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
                        }
                        return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
                    }, s48.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(), r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for(var n = 0; e.isEven() && r.isEven(); n++)e.iushrn(1), r.iushrn(1);
                        for(;;){
                            for(; e.isEven();)e.iushrn(1);
                            for(; r.isEven();)r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o;
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r);
                        }
                        return r.iushln(n);
                    }, s48.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t);
                    }, s48.prototype.isEven = function() {
                        return 0 == (1 & this.words[0]);
                    }, s48.prototype.isOdd = function() {
                        return 1 == (1 & this.words[0]);
                    }, s48.prototype.andln = function(t) {
                        return this.words[0] & t;
                    }, s48.prototype.bincn = function(t) {
                        i82("number" == typeof t);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                        for(var o = n, s = r; 0 !== o && s < this.length; s++){
                            var a = 0 | this.words[s];
                            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
                        }
                        return 0 !== o && (this.words[s] = o, this.length++), this;
                    }, s48.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0];
                    }, s48.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), i82(t <= 67108863, "Number is too big");
                            var n = 0 | this.words[0];
                            e = n === t ? 0 : n < t ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s48.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s48.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = 0 | this.words[r], i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break;
                            }
                        }
                        return e;
                    }, s48.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t);
                    }, s48.prototype.gt = function(t) {
                        return 1 === this.cmp(t);
                    }, s48.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0;
                    }, s48.prototype.gte = function(t) {
                        return this.cmp(t) >= 0;
                    }, s48.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t);
                    }, s48.prototype.lt = function(t) {
                        return -1 === this.cmp(t);
                    }, s48.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0;
                    }, s48.prototype.lte = function(t) {
                        return this.cmp(t) <= 0;
                    }, s48.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t);
                    }, s48.prototype.eq = function(t) {
                        return 0 === this.cmp(t);
                    }, s48.red = function(t) {
                        return new O8(t);
                    }, s48.prototype.toRed = function(t) {
                        return i82(!this.red, "Already a number in reduction context"), i82(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
                    }, s48.prototype.fromRed = function() {
                        return i82(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }, s48.prototype._forceRed = function(t) {
                        return this.red = t, this;
                    }, s48.prototype.forceRed = function(t) {
                        return i82(!this.red, "Already a number in reduction context"), this._forceRed(t);
                    }, s48.prototype.redAdd = function(t) {
                        return i82(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
                    }, s48.prototype.redIAdd = function(t) {
                        return i82(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
                    }, s48.prototype.redSub = function(t) {
                        return i82(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
                    }, s48.prototype.redISub = function(t) {
                        return i82(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
                    }, s48.prototype.redShl = function(t) {
                        return i82(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
                    }, s48.prototype.redMul = function(t) {
                        return i82(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
                    }, s48.prototype.redIMul = function(t) {
                        return i82(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
                    }, s48.prototype.redSqr = function() {
                        return i82(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }, s48.prototype.redISqr = function() {
                        return i82(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }, s48.prototype.redSqrt = function() {
                        return i82(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }, s48.prototype.redInvm = function() {
                        return i82(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }, s48.prototype.redNeg = function() {
                        return i82(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }, s48.prototype.redPow = function(t) {
                        return i82(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
                    };
                    var v12 = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };
                    function g10(t, e) {
                        this.name = t, this.p = new s48(e, 16), this.n = this.p.bitLength(), this.k = new s48(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
                    }
                    function w9() {
                        g10.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                    }
                    function _10() {
                        g10.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                    }
                    function M7() {
                        g10.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                    }
                    function S8() {
                        g10.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                    }
                    function O8(t) {
                        if ("string" == typeof t) {
                            var e = s48._prime(t);
                            this.m = e.p, this.prime = e;
                        } else i82(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
                    }
                    function A8(t) {
                        O8.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s48(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
                    }
                    g10.prototype._tmp = function() {
                        var t = new s48(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t;
                    }, g10.prototype.ireduce = function(t) {
                        var e, r = t;
                        do this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                        while (e > this.n)
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }, g10.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e);
                    }, g10.prototype.imulK = function(t) {
                        return t.imul(this.k);
                    }, o57(w9, g10), w9.prototype.split = function(t, e) {
                        for(var r = Math.min(t.length, 9), n = 0; n < r; n++)e.words[n] = t.words[n];
                        if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
                        var i = t.words[9];
                        for(e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++){
                            var o = 0 | t.words[n];
                            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
                        }
                        i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
                    }, w9.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
                    }, o57(_10, g10), o57(M7, g10), o57(S8, g10), S8.prototype.imulK = function(t) {
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 19 * (0 | t.words[r]) + e, i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n;
                        }
                        return 0 !== e && (t.words[t.length++] = e), t;
                    }, s48._prime = function(t) {
                        if (v12[t]) return v12[t];
                        var e;
                        if ("k256" === t) e = new w9;
                        else if ("p224" === t) e = new _10;
                        else if ("p192" === t) e = new M7;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new S8;
                        }
                        return v12[t] = e, e;
                    }, O8.prototype._verify1 = function(t) {
                        i82(0 === t.negative, "red works only with positives"), i82(t.red, "red works only with red numbers");
                    }, O8.prototype._verify2 = function(t, e) {
                        i82(0 == (t.negative | e.negative), "red works only with positives"), i82(t.red && t.red === e.red, "red works only with red numbers");
                    }, O8.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
                    }, O8.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
                    }, O8.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
                    }, O8.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                    }, O8.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
                    }, O8.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r;
                    }, O8.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e));
                    }, O8.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e));
                    }, O8.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e));
                    }, O8.prototype.isqr = function(t) {
                        return this.imul(t, t.clone());
                    }, O8.prototype.sqr = function(t) {
                        return this.mul(t, t);
                    }, O8.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (i82(e % 2 == 1), 3 === e) {
                            var r = this.m.add(new s48(1)).iushrn(2);
                            return this.pow(t, r);
                        }
                        for(var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);)o++, n.iushrn(1);
                        i82(!n.isZero());
                        var a = new s48(1).toRed(this), u = a.redNeg(), h = this.m.subn(1).iushrn(1), f = this.m.bitLength();
                        for(f = new s48(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);)f.redIAdd(u);
                        for(var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);){
                            for(var y = d, m = 0; 0 !== y.cmp(a); m++)y = y.redSqr();
                            i82(m < p);
                            var b = this.pow(c, new s48(1).iushln(p - m - 1));
                            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
                        }
                        return l;
                    }, O8.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
                    }, O8.prototype.pow = function(t, e) {
                        if (e.isZero()) return new s48(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = new Array(16);
                        r[0] = new s48(1).toRed(this), r[1] = t;
                        for(var n = 2; n < r.length; n++)r[n] = this.mul(r[n - 1], t);
                        var i = r[0], o = 0, a = 0, u = e.bitLength() % 26;
                        for(0 === u && (u = 26), n = e.length - 1; n >= 0; n--){
                            for(var h = e.words[n], f = u - 1; f >= 0; f--){
                                var c = h >> f & 1;
                                i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
                            }
                            u = 26;
                        }
                        return i;
                    }, O8.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e;
                    }, O8.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e;
                    }, s48.mont = function(t) {
                        return new A8(t);
                    }, o57(A8, O8), A8.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift));
                    }, A8.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e;
                    }, A8.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A8.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new s48(0)._forceRed(this);
                        var r = t.mul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A8.prototype.invm = function(t) {
                        return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
                    };
                }(t393, this);
            }).call(this, r179(24)(t392));
        },
        function(t, e, r) {
            "use strict";
            var n = e;
            n.der = r(136), n.pem = r(255);
        },
        function(t399, e238, r182) {
            "use strict";
            var n102 = r182(0), i84 = r182(76).Buffer, o58 = r182(77), s49 = r182(79);
            function a46(t) {
                this.enc = "der", this.name = t.name, this.entity = t, this.tree = new u42, this.tree._init(t.body);
            }
            function u42(t) {
                o58.call(this, "der", t);
            }
            function h31(t) {
                return t < 10 ? "0" + t : t;
            }
            t399.exports = a46, a46.prototype.encode = function(t, e) {
                return this.tree._encode(t, e).join();
            }, n102(u42, o58), u42.prototype._encodeComposite = function(t400, e239, r, n103) {
                var o = function(t, e, r, n) {
                    var i;
                    "seqof" === t ? t = "seq" : "setof" === t && (t = "set");
                    if (s49.tagByName.hasOwnProperty(t)) i = s49.tagByName[t];
                    else {
                        if ("number" != typeof t || (0 | t) !== t) return n.error("Unknown tag: " + t);
                        i = t;
                    }
                    if (i >= 31) return n.error("Multi-octet tag encoding unsupported");
                    e || (i |= 32);
                    return i |= s49.tagClassByName[r || "universal"] << 6;
                }(t400, e239, r, this.reporter);
                if (n103.length < 128) {
                    var a = i84.alloc(2);
                    return a[0] = o, a[1] = n103.length, this._createEncoderBuffer([
                        a,
                        n103
                    ]);
                }
                for(var u = 1, h = n103.length; h >= 256; h >>= 8)u++;
                var f = i84.alloc(2 + u);
                f[0] = o, f[1] = 128 | u;
                for(var c = 1 + u, l = n103.length; l > 0; c--, l >>= 8)f[c] = 255 & l;
                return this._createEncoderBuffer([
                    f,
                    n103
                ]);
            }, u42.prototype._encodeStr = function(t, e) {
                if ("bitstr" === e) return this._createEncoderBuffer([
                    0 | t.unused,
                    t.data
                ]);
                if ("bmpstr" === e) {
                    for(var r = i84.alloc(2 * t.length), n = 0; n < t.length; n++)r.writeUInt16BE(t.charCodeAt(n), 2 * n);
                    return this._createEncoderBuffer(r);
                }
                return "numstr" === e ? this._isNumstr(t) ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : "printstr" === e ? this._isPrintstr(t) ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(e) || "objDesc" === e ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: " + e + " unsupported");
            }, u42.prototype._encodeObjid = function(t, e, r) {
                if ("string" == typeof t) {
                    if (!e) return this.reporter.error("string objid given, but no values map found");
                    if (!e.hasOwnProperty(t)) return this.reporter.error("objid not found in values map");
                    t = e[t].split(/[\s.]+/g);
                    for(var n = 0; n < t.length; n++)t[n] |= 0;
                } else if (Array.isArray(t)) {
                    t = t.slice();
                    for(var o = 0; o < t.length; o++)t[o] |= 0;
                }
                if (!Array.isArray(t)) return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(t));
                if (!r) {
                    if (t[1] >= 40) return this.reporter.error("Second objid identifier OOB");
                    t.splice(0, 2, 40 * t[0] + t[1]);
                }
                for(var s = 0, a = 0; a < t.length; a++){
                    var u = t[a];
                    for(s++; u >= 128; u >>= 7)s++;
                }
                for(var h = i84.alloc(s), f = h.length - 1, c = t.length - 1; c >= 0; c--){
                    var l = t[c];
                    for(h[f--] = 127 & l; (l >>= 7) > 0;)h[f--] = 128 | 127 & l;
                }
                return this._createEncoderBuffer(h);
            }, u42.prototype._encodeTime = function(t, e) {
                var r, n = new Date(t);
                return "gentime" === e ? r = [
                    h31(n.getUTCFullYear()),
                    h31(n.getUTCMonth() + 1),
                    h31(n.getUTCDate()),
                    h31(n.getUTCHours()),
                    h31(n.getUTCMinutes()),
                    h31(n.getUTCSeconds()),
                    "Z"
                ].join("") : "utctime" === e ? r = [
                    h31(n.getUTCFullYear() % 100),
                    h31(n.getUTCMonth() + 1),
                    h31(n.getUTCDate()),
                    h31(n.getUTCHours()),
                    h31(n.getUTCMinutes()),
                    h31(n.getUTCSeconds()),
                    "Z"
                ].join("") : this.reporter.error("Encoding " + e + " time is not supported yet"), this._encodeStr(r, "octstr");
            }, u42.prototype._encodeNull = function() {
                return this._createEncoderBuffer("");
            }, u42.prototype._encodeInt = function(t, e) {
                if ("string" == typeof t) {
                    if (!e) return this.reporter.error("String int or enum given, but no values map");
                    if (!e.hasOwnProperty(t)) return this.reporter.error("Values map doesn't contain: " + JSON.stringify(t));
                    t = e[t];
                }
                if ("number" != typeof t && !i84.isBuffer(t)) {
                    var r = t.toArray();
                    !t.sign && 128 & r[0] && r.unshift(0), t = i84.from(r);
                }
                if (i84.isBuffer(t)) {
                    var n = t.length;
                    0 === t.length && n++;
                    var o = i84.alloc(n);
                    return t.copy(o), 0 === t.length && (o[0] = 0), this._createEncoderBuffer(o);
                }
                if (t < 128) return this._createEncoderBuffer(t);
                if (t < 256) return this._createEncoderBuffer([
                    0,
                    t
                ]);
                for(var s = 1, a = t; a >= 256; a >>= 8)s++;
                for(var u = new Array(s), h = u.length - 1; h >= 0; h--)u[h] = 255 & t, t >>= 8;
                return 128 & u[0] && u.unshift(0), this._createEncoderBuffer(i84.from(u));
            }, u42.prototype._encodeBool = function(t) {
                return this._createEncoderBuffer(t ? 255 : 0);
            }, u42.prototype._use = function(t, e) {
                return "function" == typeof t && (t = t(e)), t._getEncoder("der").tree;
            }, u42.prototype._skipDefault = function(t, e, r) {
                var n, i = this._baseState;
                if (null === i.default) return !1;
                var o = t.join();
                if (void 0 === i.defaultBuffer && (i.defaultBuffer = this._encodeValue(i.default, e, r).join()), o.length !== i.defaultBuffer.length) return !1;
                for(n = 0; n < o.length; n++)if (o[n] !== i.defaultBuffer[n]) return !1;
                return !0;
            };
        },
        function(t, e, r) {
            "use strict";
            var n = e;
            n.der = r(138), n.pem = r(256);
        },
        function(t401, e240, r183) {
            "use strict";
            var n104 = r183(0), i85 = r183(134), o59 = r183(40).DecoderBuffer, s50 = r183(77), a47 = r183(79);
            function u43(t) {
                this.enc = "der", this.name = t.name, this.entity = t, this.tree = new h32, this.tree._init(t.body);
            }
            function h32(t) {
                s50.call(this, "der", t);
            }
            function f(t, e) {
                var r = t.readUInt8(e);
                if (t.isError(r)) return r;
                var n = a47.tagClass[r >> 6], i = 0 == (32 & r);
                if (31 == (31 & r)) {
                    var o = r;
                    for(r = 0; 128 == (128 & o);){
                        if (o = t.readUInt8(e), t.isError(o)) return o;
                        r <<= 7, r |= 127 & o;
                    }
                } else r &= 31;
                return {
                    cls: n,
                    primitive: i,
                    tag: r,
                    tagStr: a47.tag[r]
                };
            }
            function c(t, e, r) {
                var n = t.readUInt8(r);
                if (t.isError(n)) return n;
                if (!e && 128 === n) return null;
                if (0 == (128 & n)) return n;
                var i = 127 & n;
                if (i > 4) return t.error("length octect is too long");
                n = 0;
                for(var o = 0; o < i; o++){
                    n <<= 8;
                    var s = t.readUInt8(r);
                    if (t.isError(s)) return s;
                    n |= s;
                }
                return n;
            }
            t401.exports = u43, u43.prototype.decode = function(t, e) {
                return o59.isDecoderBuffer(t) || (t = new o59(t, e)), this.tree._decode(t, e);
            }, n104(h32, s50), h32.prototype._peekTag = function(t, e, r) {
                if (t.isEmpty()) return !1;
                var n = t.save(), i = f(t, 'Failed to peek tag: "' + e + '"');
                return t.isError(i) ? i : (t.restore(n), i.tag === e || i.tagStr === e || i.tagStr + "of" === e || r);
            }, h32.prototype._decodeTag = function(t, e, r) {
                var n = f(t, 'Failed to decode tag of "' + e + '"');
                if (t.isError(n)) return n;
                var i = c(t, n.primitive, 'Failed to get length of "' + e + '"');
                if (t.isError(i)) return i;
                if (!r && n.tag !== e && n.tagStr !== e && n.tagStr + "of" !== e) return t.error('Failed to match tag: "' + e + '"');
                if (n.primitive || null !== i) return t.skip(i, 'Failed to match body of: "' + e + '"');
                var o = t.save(), s = this._skipUntilEnd(t, 'Failed to skip indefinite length body: "' + this.tag + '"');
                return t.isError(s) ? s : (i = t.offset - o.offset, t.restore(o), t.skip(i, 'Failed to match body of: "' + e + '"'));
            }, h32.prototype._skipUntilEnd = function(t, e) {
                for(;;){
                    var r = f(t, e);
                    if (t.isError(r)) return r;
                    var n = c(t, r.primitive, e);
                    if (t.isError(n)) return n;
                    var i = void 0;
                    if (i = r.primitive || null !== n ? t.skip(n) : this._skipUntilEnd(t, e), t.isError(i)) return i;
                    if ("end" === r.tagStr) break;
                }
            }, h32.prototype._decodeList = function(t, e, r, n) {
                for(var i = []; !t.isEmpty();){
                    var o = this._peekTag(t, "end");
                    if (t.isError(o)) return o;
                    var s = r.decode(t, "der", n);
                    if (t.isError(s) && o) break;
                    i.push(s);
                }
                return i;
            }, h32.prototype._decodeStr = function(t, e) {
                if ("bitstr" === e) {
                    var r = t.readUInt8();
                    return t.isError(r) ? r : {
                        unused: r,
                        data: t.raw()
                    };
                }
                if ("bmpstr" === e) {
                    var n = t.raw();
                    if (n.length % 2 == 1) return t.error("Decoding of string type: bmpstr length mismatch");
                    for(var i = "", o = 0; o < n.length / 2; o++)i += String.fromCharCode(n.readUInt16BE(2 * o));
                    return i;
                }
                if ("numstr" === e) {
                    var s = t.raw().toString("ascii");
                    return this._isNumstr(s) ? s : t.error("Decoding of string type: numstr unsupported characters");
                }
                if ("octstr" === e) return t.raw();
                if ("objDesc" === e) return t.raw();
                if ("printstr" === e) {
                    var a = t.raw().toString("ascii");
                    return this._isPrintstr(a) ? a : t.error("Decoding of string type: printstr unsupported characters");
                }
                return /str$/.test(e) ? t.raw().toString() : t.error("Decoding of string type: " + e + " unsupported");
            }, h32.prototype._decodeObjid = function(t, e, r) {
                for(var n, i = [], o = 0, s = 0; !t.isEmpty();)o <<= 7, o |= 127 & (s = t.readUInt8()), 0 == (128 & s) && (i.push(o), o = 0);
                128 & s && i.push(o);
                var a = i[0] / 40 | 0, u = i[0] % 40;
                if (n = r ? i : [
                    a,
                    u
                ].concat(i.slice(1)), e) {
                    var h = e[n.join(" ")];
                    void 0 === h && (h = e[n.join(".")]), void 0 !== h && (n = h);
                }
                return n;
            }, h32.prototype._decodeTime = function(t, e) {
                var r, n, i, o, s, a, u = t.raw().toString();
                if ("gentime" === e) r = 0 | u.slice(0, 4), n = 0 | u.slice(4, 6), i = 0 | u.slice(6, 8), o = 0 | u.slice(8, 10), s = 0 | u.slice(10, 12), a = 0 | u.slice(12, 14);
                else {
                    if ("utctime" !== e) return t.error("Decoding " + e + " time is not supported yet");
                    r = 0 | u.slice(0, 2), n = 0 | u.slice(2, 4), i = 0 | u.slice(4, 6), o = 0 | u.slice(6, 8), s = 0 | u.slice(8, 10), a = 0 | u.slice(10, 12), r = r < 70 ? 2000 + r : 1900 + r;
                }
                return Date.UTC(r, n - 1, i, o, s, a, 0);
            }, h32.prototype._decodeNull = function() {
                return null;
            }, h32.prototype._decodeBool = function(t) {
                var e = t.readUInt8();
                return t.isError(e) ? e : 0 !== e;
            }, h32.prototype._decodeInt = function(t, e) {
                var r = t.raw(), n = new i85(r);
                return e && (n = e[n.toString(10)] || n), n;
            }, h32.prototype._use = function(t, e) {
                return "function" == typeof t && (t = t(e)), t._getDecoder("der").tree;
            };
        },
        function(t) {
            t.exports = JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}');
        },
        function(t402, e241, r184) {
            var n = r184(35), i = r184(2).Buffer;
            function o(t) {
                var e = i.allocUnsafe(4);
                return e.writeUInt32BE(t, 0), e;
            }
            t402.exports = function(t, e) {
                for(var r, s = i.alloc(0), a = 0; s.length < e;)r = o(a++), s = i.concat([
                    s,
                    n("sha1").update(t).update(r).digest()
                ]);
                return s.slice(0, e);
            };
        },
        function(t403, e242) {
            t403.exports = function(t, e) {
                for(var r = t.length, n = -1; ++n < r;)t[n] ^= e[n];
                return t;
            };
        },
        function(t404, e243, r) {
            var n = r(80), i = r(2).Buffer;
            t404.exports = function(t, e) {
                return i.from(t.toRed(n.mont(e.modulus)).redPow(new n(e.publicExponent)).fromRed().toArray());
            };
        },
        function(t405, e244) {
            function r185(t406) {
                return (r185 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t406);
            }
            var n105 = 1000, i86 = 60000, o = 60 * i86, s = 24 * o;
            function a(t, e, r, n) {
                var i = e >= 1.5 * r;
                return Math.round(t / r) + " " + n + (i ? "s" : "");
            }
            t405.exports = function(t407, e245) {
                e245 = e245 || {
                };
                var u = r185(t407);
                if ("string" === u && t407.length > 0) return (function(t) {
                    if ((t = String(t)).length > 100) return;
                    var e = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);
                    if (!e) return;
                    var r = parseFloat(e[1]);
                    switch((e[2] || "ms").toLowerCase()){
                        case "years":
                        case "year":
                        case "yrs":
                        case "yr":
                        case "y":
                            return 31557600000 * r;
                        case "weeks":
                        case "week":
                        case "w":
                            return 604800000 * r;
                        case "days":
                        case "day":
                        case "d":
                            return r * s;
                        case "hours":
                        case "hour":
                        case "hrs":
                        case "hr":
                        case "h":
                            return r * o;
                        case "minutes":
                        case "minute":
                        case "mins":
                        case "min":
                        case "m":
                            return r * i86;
                        case "seconds":
                        case "second":
                        case "secs":
                        case "sec":
                        case "s":
                            return r * n105;
                        case "milliseconds":
                        case "millisecond":
                        case "msecs":
                        case "msec":
                        case "ms":
                            return r;
                        default:
                            return;
                    }
                })(t407);
                if ("number" === u && isFinite(t407)) return e245.long ? (function(t) {
                    var e = Math.abs(t);
                    if (e >= s) return a(t, e, s, "day");
                    if (e >= o) return a(t, e, o, "hour");
                    if (e >= i86) return a(t, e, i86, "minute");
                    if (e >= n105) return a(t, e, n105, "second");
                    return t + " ms";
                })(t407) : (function(t) {
                    var e = Math.abs(t);
                    if (e >= s) return Math.round(t / s) + "d";
                    if (e >= o) return Math.round(t / o) + "h";
                    if (e >= i86) return Math.round(t / i86) + "m";
                    if (e >= n105) return Math.round(t / n105) + "s";
                    return t + "ms";
                })(t407);
                throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t407));
            };
        },
        function(t408, e, r) {
            "use strict";
            e.isMongooseArray = function(t) {
                return Array.isArray(t) && t.isMongooseArray;
            };
        },
        function(t409, e, r) {
            "use strict";
            var n = /^function\s*([^\s(]+)/;
            t409.exports = function(t) {
                return t.name || (t.toString().trim().match(n) || [])[1];
            };
        },
        function(t410, e246, r) {
            "use strict";
            var n = r(14);
            /*!
 * Get the bson type, if it exists
 */ t410.exports = function(t, e) {
                return n(t, "_bsontype", void 0) === e;
            };
        },
        function(t411, e, r) {
            "use strict";
            function n(t412) {
                return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t412);
            }
            var i = Symbol("mongoose#trustedSymbol");
            e.trustedSymbol = i, e.trusted = function(t) {
                return null == t || "object" !== n(t) || (t[i] = !0), t;
            };
        },
        function(t413, e247, r) {
            "use strict";
            (function(e) {
                /*!
 * ignore
 */ var n = r(43), i = r(284), o = {
                    _promise: null,
                    get: function() {
                        return o._promise;
                    },
                    set: function(t) {
                        n.ok("function" == typeof t, "mongoose.Promise must be a function, got ".concat(t)), o._promise = t, i.Promise = t;
                    }
                };
                /*!
 * Use native promises by default
 */ o.set(e.Promise), t413.exports = o;
            }).call(this, r(6));
        },
        function(t414, e, r186) {
            "use strict";
            (function(t415, r, n, i) {
                function o(t416) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t416);
                }
                e.isNode = void 0 !== t415 && "object" == o(r) && "object" == (void 0 === n ? "undefined" : o(n)) && "function" == typeof i && t415.argv, e.isMongo = !e.isNode && "function" == typeof printjson && "function" == typeof ObjectId && "function" == typeof rs && "function" == typeof sh, e.isBrowser = !e.isNode && !e.isMongo && "undefined" != typeof window, e.type = e.isNode ? "node" : e.isMongo ? "mongo" : e.isBrowser ? "browser" : "unknown";
            }).call(this, r186(5), r186(24)(t414), r186(6), r186(3).Buffer);
        },
        function(t417, e248, r187) {
            "use strict";
            t417.exports = function(t, e, r) {
                for(var n = {
                }, i = 0, o = Object.keys(e.tree); i < o.length; i++){
                    var s = o[i];
                    r && (t.paths[s] || t.nested[s] || t.singleNestedPaths[s]) || (n[s] = e.tree[s]);
                }
                for(var a in t.add(n), t.callQueue = t.callQueue.concat(e.callQueue), t.method(e.methods), t.static(e.statics), e.query)t.query[a] = e.query[a];
                for(var u in e.virtuals)t.virtuals[u] = e.virtuals[u].clone();
                t.s.hooks.merge(e.s.hooks, !1);
            };
        },
        function(t418, e249, r188) {
            "use strict";
            /*!
 * Module requirements
 */ function n106(t419) {
                return (n106 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t419);
            }
            function i87(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o60(t420, e250) {
                return (o60 = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t420, e250);
            }
            function s(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u44(t);
                    if (e) {
                        var i = u44(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a48(this, r);
                };
            }
            function a48(t421, e) {
                if (e && ("object" === n106(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t421);
            }
            function u44(t422) {
                return (u44 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t422);
            }
            var h = r188(19), f = r188(22), c = r188(8), l = function(t423) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o60(t, e);
                }(u, t423);
                var e251, r189, n, a = s(u);
                function u(t424) {
                    var e252, r;
                    return (function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    })(this, u), r = "model" === f(t424) ? t424.constructor.modelName + " validation failed" : "Validation failed", (e252 = a.call(this, r)).errors = {
                    }, e252._message = r, t424 && (t424.$errors = e252.errors), e252;
                }
                return e251 = u, r189 = [
                    {
                        key: "toString",
                        value: function() {
                            return this.name + ": " + d(this);
                        }
                    },
                    {
                        key: "inspect",
                        value: function() {
                            return Object.assign(new Error(this.message), this);
                        }
                    },
                    {
                        key: "addError",
                        value: function(t, e) {
                            this.errors[t] = e, this.message = this._message + ": " + d(this);
                        }
                    }
                ], i87(e251.prototype, r189), n && i87(e251, n), Object.defineProperty(e251, "prototype", {
                    writable: !1
                }), u;
            }(h);
            /*!
 * ignore
 */ function d(t) {
                for(var e, r = Object.keys(t.errors || {
                }), n = r.length, i = [], o = 0; o < n; ++o)e = r[o], t !== t.errors[e] && i.push(e + ": " + t.errors[e].message);
                return i.join(", ");
            }
            /*!
 * Module exports
 */ c.inspect.custom && /*!
  * Avoid Node deprecation warning DEP0079
  */ (l.prototype[c.inspect.custom] = l.prototype.inspect), Object.defineProperty(l.prototype, "toJSON", {
                enumerable: !1,
                writable: !1,
                configurable: !0,
                value: function() {
                    return Object.assign({
                    }, this, {
                        name: this.name,
                        message: this.message
                    });
                }
            }), Object.defineProperty(l.prototype, "name", {
                value: "ValidationError"
            }), t418.exports = l;
        },
        function(t425, e253, r190) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n107(t426) {
                return (n107 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t426);
            }
            function i88(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t427, e254) {
                return (o = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t427, e254);
            }
            function s(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u45(t);
                    if (e) {
                        var i = u45(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a49(this, r);
                };
            }
            function a49(t428, e) {
                if (e && ("object" === n107(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t428);
            }
            function u45(t429) {
                return (u45 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t429);
            }
            var h = r190(7), f = function(t430) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o(t, e);
                }(u, t430);
                var e255, r191, n108, a = s(u);
                function u(t431) {
                    var e256;
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, u);
                    var r = t431.message;
                    r || (r = h.messages.general.default);
                    var n = c(r, t431);
                    return e256 = a.call(this, n), t431 = Object.assign({
                    }, t431, {
                        message: n
                    }), e256.properties = t431, e256.kind = t431.type, e256.path = t431.path, e256.value = t431.value, e256.reason = t431.reason, e256;
                }
                /*!
   * toString helper
   * TODO remove? This defaults to `${this.name}: ${this.message}`
   */ return e255 = u, r191 = [
                    {
                        key: "toString",
                        value: function() {
                            return this.message;
                        }
                    },
                    {
                        key: "toJSON",
                        value: function() {
                            return Object.assign({
                                name: this.name,
                                message: this.message
                            }, this);
                        }
                    }
                ], i88(e255.prototype, r191), n108 && i88(e255, n108), Object.defineProperty(e255, "prototype", {
                    writable: !1
                }), u;
            }(h);
            /*!
 * Formats error messages
 */ function c(t, e) {
                if ("function" == typeof t) return t(e);
                for(var r = 0, n = Object.keys(e); r < n.length; r++){
                    var i = n[r];
                    "message" !== i && (t = t.replace("{" + i.toUpperCase() + "}", e[i]));
                }
                return t;
            }
            /*!
 * exports
 */ Object.defineProperty(f.prototype, "name", {
                value: "ValidatorError"
            }), /*!
 * The object used to define this validator. Not enumerable to hide
 * it from `require('util').inspect()` output re: gh-3925
 */ Object.defineProperty(f.prototype, "properties", {
                enumerable: !1,
                writable: !0,
                value: null
            }), f.prototype.formatMessage = c, t425.exports = f;
        },
        function(t432, e, r) {
            "use strict";
            /*!
 * ignore
 */ t432.exports = function(t433) {
                if (Array.isArray(t433)) {
                    if (!t433.every(function(t) {
                        return "number" == typeof t || "string" == typeof t;
                    })) throw new Error("$type array values must be strings or numbers");
                    return t433;
                }
                if ("number" != typeof t433 && "string" != typeof t433) throw new Error("$type parameter must be number, string, or array of numbers and strings");
                return t433;
            };
        },
        function(t434, e257, r192) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n109(t435) {
                return (n109 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t435);
            }
            function i89(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t436, e258) {
                return (o = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t436, e258);
            }
            function s(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u46(t);
                    if (e) {
                        var i = u46(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a50(this, r);
                };
            }
            function a50(t437, e) {
                if (e && ("object" === n109(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t437);
            }
            function u46(t438) {
                return (u46 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t438);
            }
            var h = function(t439) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o(t, e);
                }(u, t439);
                var e259, r193, n110, a = s(u);
                function u(t440, e260) {
                    var r;
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, u);
                    var n = Array.isArray(e260) ? "array" : "primitive value";
                    return (r = a.call(this, "Tried to set nested object field `" + t440 + "` to ".concat(n, " `") + e260 + "`")).path = t440, r;
                }
                return e259 = u, r193 && i89(e259.prototype, r193), n110 && i89(e259, n110), Object.defineProperty(e259, "prototype", {
                    writable: !1
                }), e259;
            }(r192(7));
            Object.defineProperty(h.prototype, "name", {
                value: "ObjectExpectedError"
            }), t434.exports = h;
        },
        function(t441, e261, r) {
            "use strict";
            t441.exports = function(t) {
                var e = {
                    _id: {
                        auto: !0
                    }
                };
                e._id[t.options.typeKey] = "ObjectId", t.add(e);
            };
        },
        function(t442, e262, r) {
            "use strict";
            t442.exports = /*!
 * ignore
 */ function(t, e) {
                if (null == t) return null;
                if ("boolean" == typeof t) return e;
                if ("boolean" == typeof t[e]) return t[e] ? e : null;
                if (!(e in t)) return e;
                return t[e];
            };
        },
        function(t443, e263, r194) {
            "use strict";
            var n111 = r194(55), i = r194(53);
            /*!
 * Register hooks for this model
 *
 * @param {Model} model
 * @param {Schema} schema
 */ function o61(t444, e264, r195) {
                var s51 = {
                    useErrorHandlers: !0,
                    numCallbackParams: 1,
                    nullResultByDefault: !0,
                    contextParameter: !0
                }, a = (r195 = r195 || {
                }).decorateDoc ? t444 : t444.prototype;
                t444.$appliedHooks = !0;
                for(var u = 0, h = Object.keys(e264.paths); u < h.length; u++){
                    var f = h[u], c = e264.paths[f], l = null;
                    if (c.$isSingleNested) l = c.caster;
                    else {
                        if (!c.$isMongooseDocumentArray) continue;
                        l = c.Constructor;
                    }
                    if (!l.$appliedHooks && (o61(l, c.schema, r195), null != l.discriminators)) for(var d = 0, p = Object.keys(l.discriminators); d < p.length; d++){
                        var y = p[d];
                        o61(l.discriminators[y], l.discriminators[y].schema, r195);
                    }
                }
                var m = e264.s.hooks.filter(function(t) {
                    return "updateOne" === t.name || "deleteOne" === t.name ? !!t.document : "remove" === t.name || "init" === t.name ? null == t.document || !!t.document : null == t.query && null == t.document || !1 !== t.document;
                }).filter(function(t) {
                    return !e264.methods[t.name] || !t.fn[n111.builtInMiddleware];
                });
                t444._middleware = m, a.$__originalValidate = a.$__originalValidate || a.$__validate;
                for(var b = 0, v = [
                    "save",
                    "validate",
                    "remove",
                    "deleteOne"
                ]; b < v.length; b++){
                    var g = v[b], w = "validate" === g ? "$__originalValidate" : "$__".concat(g), _ = m.createWrapper(g, a[w], null, s51);
                    a["$__".concat(g)] = _;
                }
                a.$__init = m.createWrapperSync("init", a.$__init, null, s51);
                for(var M = Object.keys(e264.methods), S = Object.assign({
                }, s51, {
                    checkForPromise: !0
                }), O = function() {
                    var e = E[A];
                    if (!m.hasHooks(e)) return "continue";
                    var r196 = a[e];
                    a[e] = function() {
                        var r = this, n = Array.prototype.slice.call(arguments), o = n.slice(-1).pop(), s = "function" == typeof o ? n.slice(0, n.length - 1) : n;
                        return i(o, function(t) {
                            return r["$__".concat(e)].apply(r, s.concat([
                                t
                            ]));
                        }, t444.events);
                    }, a["$__".concat(e)] = m.createWrapper(e, r196, null, S);
                }, A = 0, E = M; A < E.length; A++)O();
            }
            /*!
 * ignore
 */ t443.exports = o61, /*!
 * ignore
 */ o61.middlewareFunctions = [
                "deleteOne",
                "save",
                "validate",
                "remove",
                "updateOne",
                "init"
            ];
        },
        function(t445, e265, r) {
            "use strict";
            var n = r(20);
            /*!
 * Given a value, cast it to a string, or throw a `CastError` if the value
 * cannot be casted. `null` and `undefined` are considered valid.
 *
 * @param {Any} value
 * @param {String} [path] optional the path to set on the CastError
 * @return {string|null|undefined}
 * @throws {CastError}
 * @api private
 */ t445.exports = function(t, e) {
                if (null == t) return t;
                if (t._id && "string" == typeof t._id) return t._id;
                if (t.toString && t.toString !== Object.prototype.toString && !Array.isArray(t)) return t.toString();
                throw new n("string", t, e);
            };
        },
        function(t446, e266, r197) {
            "use strict";
            /*!
 * Module requirements.
 */ var n112 = r197(7), i90 = r197(320), o = r197(9), s = r197(160), a = r197(161), u = r197(4), h = o.CastError;
            function f(t, e) {
                o.call(this, t, e, "Number");
            }
            /*!
 * ignore
 */ function c(t) {
                return this.cast(t);
            }
            f.get = o.get, f.set = o.set, /*!
 * ignore
 */ f._cast = s, f.cast = function(t) {
                return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
            }, /*!
 * ignore
 */ f._defaultCaster = function(t) {
                if ("number" != typeof t) throw new Error;
                return t;
            }, f.schemaName = "Number", f.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ f.prototype = Object.create(o.prototype), f.prototype.constructor = f, f.prototype.OptionsConstructor = i90, /*!
 * ignore
 */ f._checkRequired = function(t) {
                return "number" == typeof t || t instanceof Number;
            }, f.checkRequired = o.checkRequired, f.prototype.checkRequired = function(t, e) {
                return o._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : f.checkRequired())(t);
            }, f.prototype.min = function(t447, e267) {
                if (this.minValidator && (this.validators = this.validators.filter(function(t) {
                    return t.validator !== this.minValidator;
                }, this)), null != t447) {
                    var r = e267 || n112.messages.Number.min;
                    r = r.replace(/{MIN}/, t447), this.validators.push({
                        validator: this.minValidator = function(e) {
                            return null == e || e >= t447;
                        },
                        message: r,
                        type: "min",
                        min: t447
                    });
                }
                return this;
            }, f.prototype.max = function(t448, e268) {
                if (this.maxValidator && (this.validators = this.validators.filter(function(t) {
                    return t.validator !== this.maxValidator;
                }, this)), null != t448) {
                    var r = e268 || n112.messages.Number.max;
                    r = r.replace(/{MAX}/, t448), this.validators.push({
                        validator: this.maxValidator = function(e) {
                            return null == e || e <= t448;
                        },
                        message: r,
                        type: "max",
                        max: t448
                    });
                }
                return this;
            }, f.prototype.enum = function(t449, e269) {
                if (this.enumValidator && (this.validators = this.validators.filter(function(t) {
                    return t.validator !== this.enumValidator;
                }, this)), !Array.isArray(t449)) {
                    var r = u.isPOJO(t449) && null != t449.values;
                    r ? (e269 = t449.message, t449 = t449.values) : "number" == typeof t449 && (t449 = Array.prototype.slice.call(arguments), e269 = null), u.isPOJO(t449) && (t449 = Object.values(t449)), e269 = e269 || n112.messages.Number.enum;
                }
                return e269 = null == e269 ? n112.messages.Number.enum : e269, this.enumValidator = function(e) {
                    return null == e || -1 !== t449.indexOf(e);
                }, this.validators.push({
                    validator: this.enumValidator,
                    message: e269,
                    type: "enum",
                    enumValues: t449
                }), this;
            }, f.prototype.cast = function(t, e, r) {
                if (o._isRef(this, t, e, r)) {
                    if ("number" == typeof t) return t;
                    if (null == t || u.isNonBuiltinObject(t)) return this._castRef(t, e, r);
                }
                var n, i = t && void 0 !== t._id ? t._id : t;
                n = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : f.cast();
                try {
                    return n(i);
                } catch (t450) {
                    throw new h("Number", i, this.path, t450, this);
                }
            }, f.prototype.$conditionalHandlers = u.options(o.prototype.$conditionalHandlers, {
                $bitsAllClear: a,
                $bitsAnyClear: a,
                $bitsAllSet: a,
                $bitsAnySet: a,
                $gt: c,
                $gte: c,
                $lt: c,
                $lte: c,
                $mod: function(t451) {
                    var e = this;
                    return Array.isArray(t451) ? t451.map(function(t) {
                        return e.cast(t);
                    }) : [
                        this.cast(t451)
                    ];
                }
            }), f.prototype.castForQuery = function(t, e) {
                var r;
                if (2 === arguments.length) {
                    if (!(r = this.$conditionalHandlers[t])) throw new h("number", e, this.path, null, this);
                    return r.call(this, e);
                }
                return e = this._castForQuery(t);
            }, /*!
 * Module exports.
 */ t446.exports = f;
        },
        function(t452, e, r) {
            "use strict";
            var n = r(43);
            /*!
 * Given a value, cast it to a number, or throw an `Error` if the value
 * cannot be casted. `null` and `undefined` are considered valid.
 *
 * @param {Any} value
 * @return {Number}
 * @throws {Error} if `value` is not one of the allowed values
 * @api private
 */ t452.exports = function(t) {
                return null == t ? t : "" === t ? null : ("string" != typeof t && "boolean" != typeof t || (t = Number(t)), n.ok(!isNaN(t)), t instanceof Number ? t.valueOf() : "number" == typeof t ? t : Array.isArray(t) || "function" != typeof t.valueOf ? t.toString && !Array.isArray(t) && t.toString() == Number(t) ? Number(t) : void n.ok(!1) : Number(t.valueOf()));
            };
        },
        function(t453, e270, r198) {
            "use strict";
            (function(e271) {
                /*!
 * Module requirements.
 */ var n = r198(20);
                /*!
 * ignore
 */ /*!
 * ignore
 */ function i(t, e) {
                    var r = Number(e);
                    if (isNaN(r)) throw new n("number", e, t);
                    return r;
                }
                t453.exports = function(t454) {
                    var r = this;
                    return Array.isArray(t454) ? t454.map(function(t) {
                        return i(r.path, t);
                    }) : e271.isBuffer(t454) ? t454 : i(r.path, t454);
                };
            }).call(this, r198(3).Buffer);
        },
        function(t455, e272, r199) {
            "use strict";
            var n = r199(163);
            /*!
* returns discriminator by discriminatorMapping.value
*
* @param {Schema} schema
* @param {string} value
*/ t455.exports = function(t, e) {
                if (null == t || null == t.discriminators) return null;
                for(var r = 0, i = Object.keys(t.discriminators); r < i.length; r++){
                    var o = i[r], s = t.discriminators[o];
                    if (null != s.discriminatorMapping && n(s.discriminatorMapping.value, e)) return s;
                }
                return null;
            };
        },
        function(t456, e273, r) {
            "use strict";
            var n = r(18);
            t456.exports = function(t, e) {
                return "string" == typeof t && "string" == typeof e || "number" == typeof t && "number" == typeof e ? t === e : t instanceof n && e instanceof n && t.toString() === e.toString();
            };
        },
        function(t457, e, r) {
            "use strict";
            var n = new Set([
                "$ref",
                "$id",
                "$db"
            ]);
            t457.exports = function(t) {
                return "$" === t[0] && !n.has(t);
            };
        },
        function(t458, e274, r200) {
            "use strict";
            /*!
 * Module requirements.
 */ var n = r200(56).castArraysOfNumbers, i = r200(56).castToNumber;
            function o(t, e) {
                switch(t.$geometry.type){
                    case "Polygon":
                    case "LineString":
                    case "Point":
                        n(t.$geometry.coordinates, e);
                }
                return s(e, t), t;
            }
            function s(t, e) {
                e.$maxDistance && (e.$maxDistance = i.call(t, e.$maxDistance)), e.$minDistance && (e.$minDistance = i.call(t, e.$minDistance));
            }
            /*!
 * ignore
 */ e274.cast$geoIntersects = function(t) {
                if (!t.$geometry) return;
                return o(t, this), t;
            }, e274.cast$near = function(t) {
                var e = r200(88);
                if (Array.isArray(t)) return n(t, this), t;
                if (s(this, t), t && t.$geometry) return o(t, this);
                if (!Array.isArray(t)) throw new TypeError("$near must be either an array or an object with a $geometry property");
                return e.prototype.castForQuery.call(this, t);
            }, e274.cast$within = function(t459) {
                var e = this;
                if (s(this, t459), t459.$box || t459.$polygon) {
                    var r201 = t459.$box ? "$box" : "$polygon";
                    t459[r201].forEach(function(t) {
                        if (!Array.isArray(t)) throw new TypeError("Invalid $within $box argument. Expected an array, received " + t);
                        t.forEach(function(r, n) {
                            t[n] = i.call(e, r);
                        });
                    });
                } else if (t459.$center || t459.$centerSphere) {
                    var n = t459.$center ? "$center" : "$centerSphere";
                    t459[n].forEach(function(r, o) {
                        Array.isArray(r) ? r.forEach(function(t, n) {
                            r[n] = i.call(e, t);
                        }) : t459[n][o] = i.call(e, r);
                    });
                } else t459.$geometry && o(t459, this);
                return t459;
            };
        },
        function(t460, e275, r203) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n(t, e, r) {
                return e in t ? Object.defineProperty(t, e, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = r, t;
            }
            var i = r203(13), o = r203(89), s = r203(1).arrayAtomicsSymbol, a = r203(1).arrayAtomicsBackupSymbol, u = r203(1).arrayParentSymbol, h = r203(1).arrayPathSymbol, f = r203(1).arraySchemaSymbol, c = Array.prototype.push, l = /^\d+$/;
            /*!
 * Module exports.
 */ t460.exports = function(t, e276, r204, d) {
                var p, y;
                if (Array.isArray(t)) {
                    var m = t.length;
                    if (0 === m) y = new Array;
                    else if (1 === m) (y = new Array(1))[0] = t[0];
                    else if (m < 10000) y = new Array, c.apply(y, t);
                    else {
                        y = new Array;
                        for(var b = 0; b < m; ++b)c.call(y, t[b]);
                    }
                } else y = [];
                var v = (n(p = {
                }, s, {
                }), n(p, a, void 0), n(p, h, e276), n(p, f, d), n(p, u, void 0), n(p, "isMongooseArray", !0), n(p, "isMongooseArrayProxy", !0), n(p, "__array", y), p);
                t && null != t[s] && (v[s] = t[s]), null != r204 && r204 instanceof i && (v[u] = r204, v[f] = d || r204.schema.path(e276));
                var g = new Proxy(y, {
                    get: function(t, e) {
                        return v.hasOwnProperty(e) ? v[e] : o.hasOwnProperty(e) ? o[e] : y[e];
                    },
                    set: function(t, e, r) {
                        return "string" == typeof e && l.test(e) ? o.set.call(g, e, r, !1) : v.hasOwnProperty(e) ? v[e] = r : y[e] = r, !0;
                    }
                });
                return g;
            };
        },
        function(t461, e277, r205) {
            "use strict";
            /*!
 * ignore
 */ t461.exports = function(t, e, r) {
                var n = (r = r || {
                }).skipDocArrays, i = 0;
                if (!t) return i;
                for(var o = 0, s = Object.keys(t.$__.activePaths.states.modify); o < s.length; o++){
                    var a = s[o];
                    if (n) {
                        var u = t.$__schema.path(a);
                        if (u && u.$isMongooseDocumentArray) continue;
                    }
                    if (a.startsWith(e + ".") && (delete t.$__.activePaths.states.modify[a], ++i, t.$isSubdocument)) {
                        var h = t.ownerDocument(), f = t.$__fullPath(a);
                        delete h.$__.activePaths.states.modify[f];
                    }
                }
                return i;
            };
        },
        function(t462, e278, r206) {
            "use strict";
            (function(e) {
                /*!
 * Module dependencies.
 */ var n113 = r206(25).get().Binary, i = r206(4);
                function o(t, r, n) {
                    var s, u, h, f, c = t;
                    return null == t && (c = 0), Array.isArray(r) ? (u = r[0], h = r[1]) : s = r, f = "number" == typeof c || c instanceof Number ? e.alloc(c) : e.from(c, s, n), i.decorate(f, o.mixin), f.isMongooseBuffer = !0, f[o.pathSymbol] = u, f[a] = h, f._subtype = 0, f;
                }
                var s52 = Symbol.for("mongoose#Buffer#_path"), a = Symbol.for("mongoose#Buffer#_parent");
                o.pathSymbol = s52, /*!
 * Inherit from Buffer.
 */ o.mixin = {
                    _subtype: void 0,
                    _markModified: function() {
                        var t = this[a];
                        return t && t.markModified(this[o.pathSymbol]), this;
                    },
                    write: function() {
                        var t = e.prototype.write.apply(this, arguments);
                        return t > 0 && this._markModified(), t;
                    },
                    copy: function(t) {
                        var r = e.prototype.copy.apply(this, arguments);
                        return t && t.isMongooseBuffer && t._markModified(), r;
                    }
                }, /*!
 * Compile other Buffer methods marking this buffer as modified.
 */ "writeUInt8 writeUInt16 writeUInt32 writeInt8 writeInt16 writeInt32 writeFloat writeDouble fill utf8Write binaryWrite asciiWrite set writeUInt16LE writeUInt16BE writeUInt32LE writeUInt32BE writeInt16LE writeInt16BE writeInt32LE writeInt32BE writeFloatLE writeFloatBE writeDoubleLE writeDoubleBE".split(" ").forEach(function(t) {
                    e.prototype[t] && (o.mixin[t] = function() {
                        var r = e.prototype[t].apply(this, arguments);
                        return this._markModified(), r;
                    });
                }), o.mixin.toObject = function(t) {
                    var r = "number" == typeof t ? t : this._subtype || 0;
                    return new n113(e.from(this), r);
                }, o.mixin.$toObject = o.mixin.toObject, o.mixin.toBSON = function() {
                    return new n113(this, this._subtype || 0);
                }, o.mixin.equals = function(t) {
                    if (!e.isBuffer(t)) return !1;
                    if (this.length !== t.length) return !1;
                    for(var r = 0; r < this.length; ++r)if (this[r] !== t[r]) return !1;
                    return !0;
                }, o.mixin.subtype = function(t) {
                    if ("number" != typeof t) throw new TypeError("Invalid subtype. Expected a number");
                    this._subtype !== t && this._markModified(), this._subtype = t;
                }, /*!
 * Module exports.
 */ o.Binary = n113, t462.exports = o;
            }).call(this, r206(3).Buffer);
        },
        function(t463, e, r) {
            "use strict";
            var n = r(25).get().ObjectId;
            t463.exports = function(t) {
                if (null == t) return t;
                if (t instanceof n) return t;
                if (t._id) {
                    if (t._id instanceof n) return t._id;
                    if (t._id.toString instanceof Function) return new n(t._id.toString());
                }
                return t.toString instanceof Function ? new n(t.toString()) : new n(t);
            };
        },
        function(t464, e279, r207) {
            "use strict";
            function n114(t465) {
                return (n114 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t465);
            }
            function i91(t466, e280) {
                var r208 = "undefined" != typeof Symbol && t466[Symbol.iterator] || t466["@@iterator"];
                if (!r208) {
                    if (Array.isArray(t466) || (r208 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return o62(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return o62(t, e);
                    })(t466)) || e280 && t466 && "number" == typeof t466.length) {
                        r208 && (t466 = r208);
                        var n = 0, i = function() {
                        };
                        return {
                            s: i,
                            n: function() {
                                return n >= t466.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t466[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: i
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r208 = r208.call(t466);
                    },
                    n: function() {
                        var t = r208.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r208.return || r208.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function o62(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            function s53(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function a51() {
                return (a51 = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(t, e, r) {
                    var n = u47(t, e);
                    if (n) {
                        var i = Object.getOwnPropertyDescriptor(n, e);
                        return i.get ? i.get.call(arguments.length < 3 ? t : r) : i.value;
                    }
                }).apply(this, arguments);
            }
            function u47(t, e) {
                for(; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = p(t)););
                return t;
            }
            function h(t467, e) {
                if (e && ("object" === n114(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t467);
            }
            function f34(t468) {
                var e = "function" == typeof Map ? new Map : void 0;
                return (f34 = function(t) {
                    if (null === t || (r = t, -1 === Function.toString.call(r).indexOf("[native code]"))) return t;
                    var r;
                    if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
                    if (void 0 !== e) {
                        if (e.has(t)) return e.get(t);
                        e.set(t, n);
                    }
                    function n() {
                        return c27(t, arguments, p(this).constructor);
                    }
                    return n.prototype = Object.create(t.prototype, {
                        constructor: {
                            value: n,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), d(n, t);
                })(t468);
            }
            function c27(t469, e281, r209) {
                return (c27 = l() ? Reflect.construct : function(t, e, r) {
                    var n = [
                        null
                    ];
                    n.push.apply(n, e);
                    var i = new (Function.bind.apply(t, n));
                    return r && d(i, r.prototype), i;
                }).apply(null, arguments);
            }
            function l() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                    })), !0;
                } catch (t) {
                    return !1;
                }
            }
            function d(t470, e282) {
                return (d = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t470, e282);
            }
            function p(t471) {
                return (p = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t471);
            }
            var y = r207(45), m = r207(18), b = r207(41), v = r207(4).deepEqual, g = r207(22), w = r207(171), _ = r207(8), M = r207(82), S = r207(1).populateModelSymbol, O = function(t472) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && d(t, e);
                }(c, t472);
                var e283, r210, n115, o63, u, f = (e283 = c, r210 = l(), function() {
                    var t, n = p(e283);
                    if (r210) {
                        var i = p(this).constructor;
                        t = Reflect.construct(n, arguments, i);
                    } else t = n.apply(this, arguments);
                    return h(this, t);
                });
                function c(t473, e284, r211, n) {
                    var i;
                    return (function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    })(this, c), "Object" === g(t473) && (t473 = Object.keys(t473).reduce(function(e, r) {
                        return e.concat([
                            [
                                r,
                                t473[r]
                            ]
                        ]);
                    }, [])), (i = f.call(this, t473)).$__parent = null != r211 && null != r211.$__ ? r211 : null, i.$__path = e284, i.$__schemaType = null == n ? new y(e284) : n, i.$__runDeferred(), i;
                }
                return n115 = c, o63 = [
                    {
                        key: "$init",
                        value: function(t, e) {
                            A(t), a51(p(c.prototype), "set", this).call(this, t, e), null != e && e.$isSingleNested && (e.$basePath = this.$__path + "." + t);
                        }
                    },
                    {
                        key: "$__set",
                        value: function(t, e) {
                            a51(p(c.prototype), "set", this).call(this, t, e);
                        }
                    },
                    {
                        key: "get",
                        value: function(t, e) {
                            return t instanceof m && (t = t.toString()), !1 === (e = e || {
                            }).getters ? a51(p(c.prototype), "get", this).call(this, t) : this.$__schemaType.applyGetters(a51(p(c.prototype), "get", this).call(this, t), this.$__parent);
                        }
                    },
                    {
                        key: "set",
                        value: function(t, e) {
                            if (t instanceof m && (t = t.toString()), A(t), e = w(e), null == this.$__schemaType) return this.$__deferred = this.$__deferred || [], void this.$__deferred.push({
                                key: t,
                                value: e
                            });
                            var r = this.$__path + "." + t, n = null != this.$__parent && this.$__parent.$__ ? this.$__parent.$populated(r) || this.$__parent.$populated(this.$__path) : null, i = this.get(t);
                            if (null != n) null == e.$__ && (e = new n.options[S](e)), e.$__.wasPopulated = {
                                value: n.value
                            };
                            else try {
                                e = this.$__schemaType.applySetters(e, this.$__parent, !1, this.get(t), {
                                    path: r
                                });
                            } catch (t474) {
                                if (null != this.$__parent && null != this.$__parent.$__) return void this.$__parent.invalidate(r, t474);
                                throw t474;
                            }
                            a51(p(c.prototype), "set", this).call(this, t, e), null != e && e.$isSingleNested && (e.$basePath = this.$__path + "." + t);
                            var o = this.$__parent;
                            null == o || null == o.$__ || v(e, i) || o.markModified(this.$__path + "." + t);
                        }
                    },
                    {
                        key: "clear",
                        value: function() {
                            a51(p(c.prototype), "clear", this).call(this);
                            var t = this.$__parent;
                            null != t && t.markModified(this.$__path);
                        }
                    },
                    {
                        key: "delete",
                        value: function(t) {
                            t instanceof m && (t = t.toString()), this.set(t, void 0), a51(p(c.prototype), "delete", this).call(this, t);
                        }
                    },
                    {
                        key: "toBSON",
                        value: function() {
                            return new Map(this);
                        }
                    },
                    {
                        key: "toObject",
                        value: function(t) {
                            if (t && t.flattenMaps) {
                                var e, r = {
                                }, n = i91(this.keys());
                                try {
                                    for(n.s(); !(e = n.n()).done;){
                                        var o = e.value;
                                        r[o] = b(this.get(o), t);
                                    }
                                } catch (t) {
                                    n.e(t);
                                } finally{
                                    n.f();
                                }
                                return r;
                            }
                            return new Map(this);
                        }
                    },
                    {
                        key: "$toObject",
                        value: function() {
                            return this.constructor.prototype.toObject.apply(this, arguments);
                        }
                    },
                    {
                        key: "toJSON",
                        value: function(t) {
                            if ("boolean" != typeof (t && t.flattenMaps) || t.flattenMaps) {
                                var e, r = {
                                }, n = i91(this.keys());
                                try {
                                    for(n.s(); !(e = n.n()).done;){
                                        var o = e.value;
                                        r[o] = b(this.get(o), t);
                                    }
                                } catch (t) {
                                    n.e(t);
                                } finally{
                                    n.f();
                                }
                                return r;
                            }
                            return new Map(this);
                        }
                    },
                    {
                        key: "inspect",
                        value: function() {
                            return new Map(this);
                        }
                    },
                    {
                        key: "$__runDeferred",
                        value: function() {
                            if (this.$__deferred) {
                                var t, e = i91(this.$__deferred);
                                try {
                                    for(e.s(); !(t = e.n()).done;){
                                        var r = t.value;
                                        this.set(r.key, r.value);
                                    }
                                } catch (t475) {
                                    e.e(t475);
                                } finally{
                                    e.f();
                                }
                                this.$__deferred = null;
                            }
                        }
                    }
                ], s53(n115.prototype, o63), u && s53(n115, u), Object.defineProperty(n115, "prototype", {
                    writable: !1
                }), c;
            }(f34(Map));
            /*!
 * Since maps are stored as objects under the hood, keys must be strings
 * and can't contain any invalid characters
 */ function A(t) {
                var e = n114(t);
                if ("string" !== e) throw new TypeError("Mongoose maps only support string keys, got ".concat(e));
                if (t.startsWith("$")) throw new Error('Mongoose maps do not support keys that start with "$", got "'.concat(t, '"'));
                if (t.includes(".")) throw new Error('Mongoose maps do not support keys that contain ".", got "'.concat(t, '"'));
                if (M.has(t)) throw new Error('Mongoose maps do not support reserved key name "'.concat(t, '"'));
            }
            _.inspect.custom && Object.defineProperty(O.prototype, _.inspect.custom, {
                enumerable: !1,
                writable: !1,
                configurable: !1,
                value: O.prototype.inspect
            }), Object.defineProperty(O.prototype, "$__set", {
                enumerable: !1,
                writable: !0,
                configurable: !1
            }), Object.defineProperty(O.prototype, "$__parent", {
                enumerable: !1,
                writable: !0,
                configurable: !1
            }), Object.defineProperty(O.prototype, "$__path", {
                enumerable: !1,
                writable: !0,
                configurable: !1
            }), Object.defineProperty(O.prototype, "$__schemaType", {
                enumerable: !1,
                writable: !0,
                configurable: !1
            }), Object.defineProperty(O.prototype, "$isMongooseMap", {
                enumerable: !1,
                writable: !1,
                configurable: !1,
                value: !0
            }), Object.defineProperty(O.prototype, "$__deferredCalls", {
                enumerable: !1,
                writable: !1,
                configurable: !1,
                value: !0
            }), t464.exports = O;
        },
        function(t476, e, r) {
            "use strict";
            var n = r(4);
            t476.exports = function(t) {
                return n.isPOJO(t) && null != t.$__ && null != t._doc ? t._doc : t;
            };
        },
        function(t477, e285, r212) {
            "use strict";
            function n116(t478, e286) {
                var r213 = "undefined" != typeof Symbol && t478[Symbol.iterator] || t478["@@iterator"];
                if (!r213) {
                    if (Array.isArray(t478) || (r213 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return i92(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i92(t, e);
                    })(t478)) || e286 && t478 && "number" == typeof t478.length) {
                        r213 && (t478 = r213);
                        var n = 0, o = function() {
                        };
                        return {
                            s: o,
                            n: function() {
                                return n >= t478.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t478[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: o
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r213 = r213.call(t478);
                    },
                    n: function() {
                        var t = r213.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r213.return || r213.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function i92(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            var o64 = r212(45), s54 = r212(91).defineKey, a52 = r212(14), u48 = r212(4), h = {
                toJSON: !0,
                toObject: !0,
                _id: !0,
                id: !0
            };
            /*!
 * ignore
 */ t477.exports = function(t479, e287, r214, i93, f35) {
                if (!r214 || !r214.instanceOfSchema) throw new Error("You must pass a valid discriminator Schema");
                if (t479.schema.discriminatorMapping && !t479.schema.discriminatorMapping.isRoot) throw new Error('Discriminator "' + e287 + '" can only be a discriminator of the root model');
                if (f35) {
                    var c = a52(t479.base, "options.applyPluginsToDiscriminators", !1);
                    t479.base._applyPlugins(r214, {
                        skipTopLevel: !c
                    });
                }
                var l = t479.schema.options.discriminatorKey, d = t479.schema.path(l);
                if (null != d) u48.hasUserDefinedProperty(d.options, "select") || (d.options.select = !0), d.options.$skipDiscriminatorCheck = !0;
                else {
                    var p = {
                    };
                    p[l] = {
                        default: void 0,
                        select: !0,
                        $skipDiscriminatorCheck: !0
                    }, p[l][t479.schema.options.typeKey] = String, t479.schema.add(p), s54({
                        prop: l,
                        prototype: t479.prototype,
                        options: t479.schema.options
                    });
                }
                if (r214.path(l) && !0 !== r214.path(l).options.$skipDiscriminatorCheck) throw new Error('Discriminator "' + e287 + '" cannot have field with name "' + l + '"');
                var y = e287;
                if (("string" == typeof i93 && i93.length || null != i93) && (y = i93), (function(e, r) {
                    e._baseSchema = r, r.paths._id && r.paths._id.options && !r.paths._id.options.auto && e.remove("_id");
                    for(var i = [], s = 0, a = Object.keys(r.paths); s < a.length; s++){
                        var f = a[s];
                        if (e.nested[f]) i.push(f);
                        else if (-1 !== f.indexOf(".")) {
                            var c, p = "", m = n116(f.split(".").slice(0, -1));
                            try {
                                for(m.s(); !(c = m.n()).done;){
                                    var b = c.value;
                                    p += (p.length ? "." : "") + b, (e.paths[p] instanceof o64 || e.singleNestedPaths[p] instanceof o64) && i.push(f);
                                }
                            } catch (t) {
                                m.e(t);
                            } finally{
                                m.f();
                            }
                        }
                    }
                    u48.merge(e, r, {
                        isDiscriminatorSchemaMerge: !0,
                        omit: {
                            discriminators: !0,
                            base: !0
                        },
                        omitNested: i.reduce(function(t, e) {
                            return t["tree." + e] = !0, t;
                        }, {
                        })
                    });
                    for(var v = 0, g = i; v < g.length; v++){
                        var w = g[v];
                        delete e.paths[w];
                    }
                    e.childSchemas.forEach(function(t) {
                        t.model.prototype.$__setSchema(t.schema);
                    });
                    var _ = {
                    };
                    _[l] = {
                        default: y,
                        select: !0,
                        set: function(t) {
                            if (t === y || Array.isArray(y) && u48.deepEqual(t, y)) return y;
                            throw new Error("Can't set discriminator key \"" + l + '"');
                        },
                        $skipDiscriminatorCheck: !0
                    }, _[l][e.options.typeKey] = d ? d.options[e.options.typeKey] : String, e.add(_), e.discriminatorMapping = {
                        key: l,
                        value: y,
                        isRoot: !1
                    }, r.options.collection && (e.options.collection = r.options.collection);
                    var M = e.options.toJSON, S = e.options.toObject, O = e.options._id, A = e.options.id, E = Object.keys(e.options);
                    e.options.discriminatorKey = r.options.discriminatorKey;
                    for(var x = 0, k = E; x < k.length; x++){
                        var j = k[x];
                        if (!h[j]) {
                            if ("pluralization" === j && 1 == e.options[j] && null == r.options[j]) continue;
                            if (!u48.deepEqual(e.options[j], r.options[j])) throw new Error("Can't customize discriminator option " + j + " (can only modify " + Object.keys(h).join(", ") + ")");
                        }
                    }
                    e.options = u48.clone(r.options), M && (e.options.toJSON = M), S && (e.options.toObject = S), void 0 !== O && (e.options._id = O), e.options.id = A, e.s.hooks = t479.schema.s.hooks.merge(e.s.hooks), e.plugins = Array.prototype.slice.call(r.plugins), e.callQueue = r.callQueue.concat(e.callQueue), delete e._requiredpaths;
                })(r214, t479.schema), t479.discriminators || (t479.discriminators = {
                }), t479.schema.discriminatorMapping || (t479.schema.discriminatorMapping = {
                    key: l,
                    value: null,
                    isRoot: !0
                }), t479.schema.discriminators || (t479.schema.discriminators = {
                }), t479.schema.discriminators[e287] = r214, t479.discriminators[e287] && !r214.options.overwriteModels) throw new Error('Discriminator with name "' + e287 + '" already exists');
                return r214;
            };
        },
        function(t480, e288, r) {
            "use strict";
            var n = r(155);
            t480.exports = function(t, e) {
                return null == e || null == e._id || (t = t.clone(), e._id ? t.paths._id || (n(t), t.options._id = !0) : (t.remove("_id"), t.options._id = !1)), t;
            };
        },
        function(t481, e289, r) {
            "use strict";
            var n = r(57);
            /*!
 * Find the correct constructor, taking into account discriminators
 */ t481.exports = function(t, e) {
                var r = t.schema.options.discriminatorKey;
                if (null != e && t.discriminators && null != e[r]) {
                    if (t.discriminators[e[r]]) t = t.discriminators[e[r]];
                    else {
                        var i = n(t.discriminators, e[r]);
                        i && (t = i);
                    }
                }
                return t;
            };
        },
        function(t, e, r) {
            "use strict";
            t.exports = r(176);
        },
        function(t482, e290, r215) {
            "use strict";
            (function(n117) {
                function i94(t483) {
                    return (i94 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t483);
                }
                function o(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                function s(t484, e291) {
                    return (s = Object.setPrototypeOf || function(t, e) {
                        return t.__proto__ = e, t;
                    })(t484, e291);
                }
                function a(t) {
                    var e = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                        if (Reflect.construct.sham) return !1;
                        if ("function" == typeof Proxy) return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                            })), !0;
                        } catch (t) {
                            return !1;
                        }
                    }();
                    return function() {
                        var r, n = h33(t);
                        if (e) {
                            var i = h33(this).constructor;
                            r = Reflect.construct(n, arguments, i);
                        } else r = n.apply(this, arguments);
                        return u49(this, r);
                    };
                }
                function u49(t485, e) {
                    if (e && ("object" === i94(e) || "function" == typeof e)) return e;
                    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                    return (function(t) {
                        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return t;
                    })(t485);
                }
                function h33(t486) {
                    return (h33 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    })(t486);
                }
                r215(25).set(r215(179));
                var f = r215(274), c = r215(148);
                f.setBrowser(!0), Object.defineProperty(e290, "Promise", {
                    get: function() {
                        return c.get();
                    },
                    set: function(t) {
                        c.set(t);
                    }
                }), e290.PromiseProvider = c, e290.Error = r215(7), e290.Schema = r215(85), e290.Types = r215(58), e290.VirtualType = r215(86), e290.SchemaType = r215(9), e290.utils = r215(4), e290.Document = f(), e290.model = function(t487, r) {
                    var n118 = function(t488) {
                        !function(t, e) {
                            if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                            t.prototype = Object.create(e && e.prototype, {
                                constructor: {
                                    value: t,
                                    writable: !0,
                                    configurable: !0
                                }
                            }), Object.defineProperty(t, "prototype", {
                                writable: !1
                            }), e && s(t, e);
                        }(h, t488);
                        var e292, n, i, u = a(h);
                        function h(t489, e293) {
                            return (function(t, e) {
                                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                            })(this, h), u.call(this, t489, r, e293);
                        }
                        return e292 = h, n && o(e292.prototype, n), i && o(e292, i), Object.defineProperty(e292, "prototype", {
                            writable: !1
                        }), e292;
                    }(e290.Document);
                    return n118.modelName = t487, n118;
                }, /*!
 * Module exports.
 */ "undefined" != typeof window && (window.mongoose = t482.exports, window.Buffer = n117);
            }).call(this, r215(3).Buffer);
        },
        function(t490, e294, r216) {
            "use strict";
            e294.byteLength = function(t) {
                var e = h(t), r = e[0], n = e[1];
                return 3 * (r + n) / 4 - n;
            }, e294.toByteArray = function(t) {
                var e295, r217, n = h(t), s = n[0], a = n[1], u = new o65(function(t, e, r) {
                    return 3 * (e + r) / 4 - r;
                }(0, s, a)), f = 0, c = a > 0 ? s - 4 : s;
                for(r217 = 0; r217 < c; r217 += 4)e295 = i95[t.charCodeAt(r217)] << 18 | i95[t.charCodeAt(r217 + 1)] << 12 | i95[t.charCodeAt(r217 + 2)] << 6 | i95[t.charCodeAt(r217 + 3)], u[f++] = e295 >> 16 & 255, u[f++] = e295 >> 8 & 255, u[f++] = 255 & e295;
                2 === a && (e295 = i95[t.charCodeAt(r217)] << 2 | i95[t.charCodeAt(r217 + 1)] >> 4, u[f++] = 255 & e295);
                1 === a && (e295 = i95[t.charCodeAt(r217)] << 10 | i95[t.charCodeAt(r217 + 1)] << 4 | i95[t.charCodeAt(r217 + 2)] >> 2, u[f++] = e295 >> 8 & 255, u[f++] = 255 & e295);
                return u;
            }, e294.fromByteArray = function(t) {
                for(var e, r = t.length, i = r % 3, o = [], s = 0, a = r - i; s < a; s += 16383)o.push(f(t, s, s + 16383 > a ? a : s + 16383));
                1 === i ? (e = t[r - 1], o.push(n119[e >> 2] + n119[e << 4 & 63] + "==")) : 2 === i && (e = (t[r - 2] << 8) + t[r - 1], o.push(n119[e >> 10] + n119[e >> 4 & 63] + n119[e << 2 & 63] + "="));
                return o.join("");
            };
            for(var n119 = [], i95 = [], o65 = "undefined" != typeof Uint8Array ? Uint8Array : Array, s55 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a53 = 0, u50 = s55.length; a53 < u50; ++a53)n119[a53] = s55[a53], i95[s55.charCodeAt(a53)] = a53;
            function h(t) {
                var e = t.length;
                if (e % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                var r = t.indexOf("=");
                return -1 === r && (r = e), [
                    r,
                    r === e ? 0 : 4 - r % 4
                ];
            }
            function f(t, e, r) {
                for(var i, o, s = [], a = e; a < r; a += 3)i = (t[a] << 16 & 16711680) + (t[a + 1] << 8 & 65280) + (255 & t[a + 2]), s.push(n119[(o = i) >> 18 & 63] + n119[o >> 12 & 63] + n119[o >> 6 & 63] + n119[63 & o]);
                return s.join("");
            }
            i95["-".charCodeAt(0)] = 62, i95["_".charCodeAt(0)] = 63;
        },
        function(t491, e296) {
            /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ e296.read = function(t, e, r, n, i) {
                var o, s, a = 8 * i - n - 1, u = (1 << a) - 1, h = u >> 1, f = -7, c = r ? i - 1 : 0, l = r ? -1 : 1, d = t[e + c];
                for(c += l, o = d & (1 << -f) - 1, d >>= -f, f += a; f > 0; o = 256 * o + t[e + c], c += l, f -= 8);
                for(s = o & (1 << -f) - 1, o >>= -f, f += n; f > 0; s = 256 * s + t[e + c], c += l, f -= 8);
                if (0 === o) o = 1 - h;
                else {
                    if (o === u) return s ? NaN : 1 / 0 * (d ? -1 : 1);
                    s += Math.pow(2, n), o -= h;
                }
                return (d ? -1 : 1) * s * Math.pow(2, o - n);
            }, e296.write = function(t, e, r, n, i, o) {
                var s, a, u, h = 8 * o - i - 1, f = (1 << h) - 1, c = f >> 1, l = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = n ? 0 : o - 1, p = n ? 1 : -1, y = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;
                for(e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (a = isNaN(e) ? 1 : 0, s = f) : (s = Math.floor(Math.log(e) / Math.LN2), e * (u = Math.pow(2, -s)) < 1 && (s--, u *= 2), (e += s + c >= 1 ? l / u : l * Math.pow(2, 1 - c)) * u >= 2 && (s++, u /= 2), s + c >= f ? (a = 0, s = f) : s + c >= 1 ? (a = (e * u - 1) * Math.pow(2, i), s += c) : (a = e * Math.pow(2, c - 1) * Math.pow(2, i), s = 0)); i >= 8; t[r + d] = 255 & a, d += p, a /= 256, i -= 8);
                for(s = s << i | a, h += i; h > 0; t[r + d] = 255 & s, d += p, s /= 256, h -= 8);
                t[r + d - p] |= 128 * y;
            };
        },
        function(t, e, r) {
            "use strict";
            /*!
 * Module exports.
 */ e.Binary = r(180), e.Collection = function() {
                throw new Error("Cannot create a collection from browser library");
            }, e.getConnection = function() {
                return function() {
                    throw new Error("Cannot create a connection from browser library");
                };
            }, e.Decimal128 = r(271), e.ObjectId = r(272), e.ReadPreference = r(273);
        },
        function(t, e, r) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n = r(59).Binary;
            /*!
 * Module exports.
 */ t.exports = n;
        },
        function(t, e, r) {
            "use strict";
            e.randomBytes = e.rng = e.pseudoRandomBytes = e.prng = r(28), e.createHash = e.Hash = r(35), e.createHmac = e.Hmac = r(110);
            var n = r(206), i = Object.keys(n), o = [
                "sha1",
                "sha224",
                "sha256",
                "sha384",
                "sha512",
                "md5",
                "rmd160"
            ].concat(i);
            e.getHashes = function() {
                return o;
            };
            var s = r(113);
            e.pbkdf2 = s.pbkdf2, e.pbkdf2Sync = s.pbkdf2Sync;
            var a = r(208);
            e.Cipher = a.Cipher, e.createCipher = a.createCipher, e.Cipheriv = a.Cipheriv, e.createCipheriv = a.createCipheriv, e.Decipher = a.Decipher, e.createDecipher = a.createDecipher, e.Decipheriv = a.Decipheriv, e.createDecipheriv = a.createDecipheriv, e.getCiphers = a.getCiphers, e.listCiphers = a.listCiphers;
            var u = r(223);
            e.DiffieHellmanGroup = u.DiffieHellmanGroup, e.createDiffieHellmanGroup = u.createDiffieHellmanGroup, e.getDiffieHellman = u.getDiffieHellman, e.createDiffieHellman = u.createDiffieHellman, e.DiffieHellman = u.DiffieHellman;
            var h = r(230);
            e.createSign = h.createSign, e.Sign = h.Sign, e.createVerify = h.createVerify, e.Verify = h.Verify, e.createECDH = r(263);
            var f = r(266);
            e.publicEncrypt = f.publicEncrypt, e.privateEncrypt = f.privateEncrypt, e.publicDecrypt = f.publicDecrypt, e.privateDecrypt = f.privateDecrypt;
            var c = r(270);
            e.randomFill = c.randomFill, e.randomFillSync = c.randomFillSync, e.createCredentials = function() {
                throw new Error([
                    "sorry, createCredentials is not implemented yet",
                    "we accept pull requests",
                    "https://github.com/crypto-browserify/crypto-browserify"
                ].join("\n"));
            }, e.constants = {
                DH_CHECK_P_NOT_SAFE_PRIME: 2,
                DH_CHECK_P_NOT_PRIME: 1,
                DH_UNABLE_TO_CHECK_GENERATOR: 4,
                DH_NOT_SUITABLE_GENERATOR: 8,
                NPN_ENABLED: 1,
                ALPN_ENABLED: 1,
                RSA_PKCS1_PADDING: 1,
                RSA_SSLV23_PADDING: 2,
                RSA_NO_PADDING: 3,
                RSA_PKCS1_OAEP_PADDING: 4,
                RSA_X931_PADDING: 5,
                RSA_PKCS1_PSS_PADDING: 6,
                POINT_CONVERSION_COMPRESSED: 2,
                POINT_CONVERSION_UNCOMPRESSED: 4,
                POINT_CONVERSION_HYBRID: 6
            };
        },
        function(t492, e297, r218) {
            /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */ var n120 = r218(3), i = n120.Buffer;
            function o(t, e) {
                for(var r in t)e[r] = t[r];
            }
            function s(t, e, r) {
                return i(t, e, r);
            }
            i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t492.exports = n120 : (o(n120, e297), e297.Buffer = s), s.prototype = Object.create(i.prototype), o(i, s), s.from = function(t, e, r) {
                if ("number" == typeof t) throw new TypeError("Argument must not be a number");
                return i(t, e, r);
            }, s.alloc = function(t, e, r) {
                if ("number" != typeof t) throw new TypeError("Argument must be a number");
                var n = i(t);
                return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n;
            }, s.allocUnsafe = function(t) {
                if ("number" != typeof t) throw new TypeError("Argument must be a number");
                return i(t);
            }, s.allocUnsafeSlow = function(t) {
                if ("number" != typeof t) throw new TypeError("Argument must be a number");
                return n120.SlowBuffer(t);
            };
        },
        function(t, e) {
        },
        function(t493, e298, r219) {
            "use strict";
            function n121(t, e299) {
                var r = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(t);
                    e299 && (n = n.filter(function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable;
                    })), r.push.apply(r, n);
                }
                return r;
            }
            function i96(t, e, r) {
                return e in t ? Object.defineProperty(t, e, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = r, t;
            }
            function o66(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            var s = r219(3).Buffer, a54 = r219(185).inspect, u = a54 && a54.custom || "inspect";
            t493.exports = (function() {
                function t494() {
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, t494), this.head = null, this.tail = null, this.length = 0;
                }
                var e300, r220, h;
                return e300 = t494, r220 = [
                    {
                        key: "push",
                        value: function(t) {
                            var e = {
                                data: t,
                                next: null
                            };
                            this.length > 0 ? this.tail.next = e : this.head = e, this.tail = e, ++this.length;
                        }
                    },
                    {
                        key: "unshift",
                        value: function(t) {
                            var e = {
                                data: t,
                                next: this.head
                            };
                            0 === this.length && (this.tail = e), this.head = e, ++this.length;
                        }
                    },
                    {
                        key: "shift",
                        value: function() {
                            if (0 !== this.length) {
                                var t = this.head.data;
                                return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t;
                            }
                        }
                    },
                    {
                        key: "clear",
                        value: function() {
                            this.head = this.tail = null, this.length = 0;
                        }
                    },
                    {
                        key: "join",
                        value: function(t) {
                            if (0 === this.length) return "";
                            for(var e = this.head, r = "" + e.data; e = e.next;)r += t + e.data;
                            return r;
                        }
                    },
                    {
                        key: "concat",
                        value: function(t) {
                            if (0 === this.length) return s.alloc(0);
                            for(var e, r, n, i = s.allocUnsafe(t >>> 0), o = this.head, a = 0; o;)e = o.data, r = i, n = a, s.prototype.copy.call(e, r, n), a += o.data.length, o = o.next;
                            return i;
                        }
                    },
                    {
                        key: "consume",
                        value: function(t, e) {
                            var r;
                            return t < this.head.data.length ? (r = this.head.data.slice(0, t), this.head.data = this.head.data.slice(t)) : r = t === this.head.data.length ? this.shift() : e ? this._getString(t) : this._getBuffer(t), r;
                        }
                    },
                    {
                        key: "first",
                        value: function() {
                            return this.head.data;
                        }
                    },
                    {
                        key: "_getString",
                        value: function(t) {
                            var e = this.head, r = 1, n = e.data;
                            for(t -= n.length; e = e.next;){
                                var i = e.data, o = t > i.length ? i.length : t;
                                if (o === i.length ? n += i : n += i.slice(0, t), 0 == (t -= o)) {
                                    o === i.length ? (++r, e.next ? this.head = e.next : this.head = this.tail = null) : (this.head = e, e.data = i.slice(o));
                                    break;
                                }
                                ++r;
                            }
                            return this.length -= r, n;
                        }
                    },
                    {
                        key: "_getBuffer",
                        value: function(t) {
                            var e = s.allocUnsafe(t), r = this.head, n = 1;
                            for(r.data.copy(e), t -= r.data.length; r = r.next;){
                                var i = r.data, o = t > i.length ? i.length : t;
                                if (i.copy(e, e.length - t, 0, o), 0 == (t -= o)) {
                                    o === i.length ? (++n, r.next ? this.head = r.next : this.head = this.tail = null) : (this.head = r, r.data = i.slice(o));
                                    break;
                                }
                                ++n;
                            }
                            return this.length -= n, e;
                        }
                    },
                    {
                        key: u,
                        value: function(t495, e301) {
                            return a54(this, function(t) {
                                for(var e302 = 1; e302 < arguments.length; e302++){
                                    var r = null != arguments[e302] ? arguments[e302] : {
                                    };
                                    e302 % 2 ? n121(Object(r), !0).forEach(function(e) {
                                        i96(t, e, r[e]);
                                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : n121(Object(r)).forEach(function(e) {
                                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                                    });
                                }
                                return t;
                            }({
                            }, e301, {
                                depth: 0,
                                customInspect: !1
                            }));
                        }
                    }
                ], o66(e300.prototype, r220), h && o66(e300, h), t494;
            })();
        },
        function(t, e) {
        },
        function(t496, e303, r221) {
            /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */ var n122 = r221(3), i = n122.Buffer;
            function o(t, e) {
                for(var r in t)e[r] = t[r];
            }
            function s(t, e, r) {
                return i(t, e, r);
            }
            i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t496.exports = n122 : (o(n122, e303), e303.Buffer = s), s.prototype = Object.create(i.prototype), o(i, s), s.from = function(t, e, r) {
                if ("number" == typeof t) throw new TypeError("Argument must not be a number");
                return i(t, e, r);
            }, s.alloc = function(t, e, r) {
                if ("number" != typeof t) throw new TypeError("Argument must be a number");
                var n = i(t);
                return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n;
            }, s.allocUnsafe = function(t) {
                if ("number" != typeof t) throw new TypeError("Argument must be a number");
                return i(t);
            }, s.allocUnsafeSlow = function(t) {
                if ("number" != typeof t) throw new TypeError("Argument must be a number");
                return n122.SlowBuffer(t);
            };
        },
        function(t497, e304, r222) {
            "use strict";
            (function(e305) {
                var n123;
                function i97(t, e, r) {
                    return e in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var o67 = r222(61), s = Symbol("lastResolve"), a = Symbol("lastReject"), u = Symbol("error"), h = Symbol("ended"), f = Symbol("lastPromise"), c = Symbol("handlePromise"), l = Symbol("stream");
                function d(t, e) {
                    return {
                        value: t,
                        done: e
                    };
                }
                function p(t) {
                    var e = t[s];
                    if (null !== e) {
                        var r = t[l].read();
                        null !== r && (t[f] = null, t[s] = null, t[a] = null, e(d(r, !1)));
                    }
                }
                function y(t) {
                    e305.nextTick(p, t);
                }
                var m = Object.getPrototypeOf(function() {
                }), b = Object.setPrototypeOf((i97(n123 = {
                    get stream () {
                        return this[l];
                    },
                    next: function() {
                        var t498 = this, r223 = this[u];
                        if (null !== r223) return Promise.reject(r223);
                        if (this[h]) return Promise.resolve(d(void 0, !0));
                        if (this[l].destroyed) return new Promise(function(r, n) {
                            e305.nextTick(function() {
                                t498[u] ? n(t498[u]) : r(d(void 0, !0));
                            });
                        });
                        var n124, i = this[f];
                        if (i) n124 = new Promise(function(t, e) {
                            return function(r, n) {
                                t.then(function() {
                                    e[h] ? r(d(void 0, !0)) : e[c](r, n);
                                }, n);
                            };
                        }(i, this));
                        else {
                            var o = this[l].read();
                            if (null !== o) return Promise.resolve(d(o, !1));
                            n124 = new Promise(this[c]);
                        }
                        return this[f] = n124, n124;
                    }
                }, Symbol.asyncIterator, function() {
                    return this;
                }), i97(n123, "return", function() {
                    var t499 = this;
                    return new Promise(function(e, r) {
                        t499[l].destroy(null, function(t) {
                            t ? r(t) : e(d(void 0, !0));
                        });
                    });
                }), n123), m);
                t497.exports = function(t500) {
                    var e306, r = Object.create(b, (i97(e306 = {
                    }, l, {
                        value: t500,
                        writable: !0
                    }), i97(e306, s, {
                        value: null,
                        writable: !0
                    }), i97(e306, a, {
                        value: null,
                        writable: !0
                    }), i97(e306, u, {
                        value: null,
                        writable: !0
                    }), i97(e306, h, {
                        value: t500._readableState.endEmitted,
                        writable: !0
                    }), i97(e306, c, {
                        value: function(t, e) {
                            var n = r[l].read();
                            n ? (r[f] = null, r[s] = null, r[a] = null, t(d(n, !1))) : (r[s] = t, r[a] = e);
                        },
                        writable: !0
                    }), e306));
                    return r[f] = null, o67(t500, function(t) {
                        if (t && "ERR_STREAM_PREMATURE_CLOSE" !== t.code) {
                            var e = r[a];
                            return null !== e && (r[f] = null, r[s] = null, r[a] = null, e(t)), void (r[u] = t);
                        }
                        var n = r[s];
                        null !== n && (r[f] = null, r[s] = null, r[a] = null, n(d(void 0, !0))), r[h] = !0;
                    }), t500.on("readable", y.bind(null, r)), r;
                };
            }).call(this, r222(5));
        },
        function(t, e) {
            t.exports = function() {
                throw new Error("Readable.from is not available in the browser");
            };
        },
        function(t501, e, r224) {
            "use strict";
            t501.exports = i;
            var n = r224(102);
            function i(t) {
                if (!(this instanceof i)) return new i(t);
                n.call(this, t);
            }
            r224(0)(i, n), i.prototype._transform = function(t, e, r) {
                r(null, t);
            };
        },
        function(t502, e307, r225) {
            "use strict";
            var n125;
            var i98 = r225(29).codes, o68 = i98.ERR_MISSING_ARGS, s56 = i98.ERR_STREAM_DESTROYED;
            function a55(t) {
                if (t) throw t;
            }
            function u51(t503, e308, i, o) {
                o = (function(t) {
                    var e = !1;
                    return function() {
                        e || (e = !0, t.apply(void 0, arguments));
                    };
                })(o);
                var a = !1;
                t503.on("close", function() {
                    a = !0;
                }), void 0 === n125 && (n125 = r225(61)), n125(t503, {
                    readable: e308,
                    writable: i
                }, function(t) {
                    if (t) return o(t);
                    a = !0, o();
                });
                var u = !1;
                return function(e) {
                    if (!a && !u) return u = !0, (function(t) {
                        return t.setHeader && "function" == typeof t.abort;
                    })(t503) ? t503.abort() : "function" == typeof t503.destroy ? t503.destroy() : void o(e || new s56("pipe"));
                };
            }
            function h(t) {
                t();
            }
            function f(t, e) {
                return t.pipe(e);
            }
            function c(t) {
                return t.length ? "function" != typeof t[t.length - 1] ? a55 : t.pop() : a55;
            }
            t502.exports = function() {
                for(var t504 = arguments.length, e = new Array(t504), r226 = 0; r226 < t504; r226++)e[r226] = arguments[r226];
                var n, i = c(e);
                if (Array.isArray(e[0]) && (e = e[0]), e.length < 2) throw new o68("streams");
                var s = e.map(function(t505, r) {
                    var o = r < e.length - 1;
                    return u51(t505, o, r > 0, function(t) {
                        n || (n = t), t && s.forEach(h), o || (s.forEach(h), i(n));
                    });
                });
                return e.reduce(f);
            };
        },
        function(t506, e309, r227) {
            var n126 = r227(0), i99 = r227(31), o69 = r227(2).Buffer, s = [
                1518500249,
                1859775393,
                -1894007588,
                -899497514
            ], a56 = new Array(80);
            function u52() {
                this.init(), this._w = a56, i99.call(this, 64, 56);
            }
            function h(t) {
                return t << 30 | t >>> 2;
            }
            function f(t, e, r, n) {
                return 0 === t ? e & r | ~e & n : 2 === t ? e & r | e & n | r & n : e ^ r ^ n;
            }
            n126(u52, i99), u52.prototype.init = function() {
                return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
            }, u52.prototype._update = function(t) {
                for(var e, r = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, a = 0 | this._d, u = 0 | this._e, c = 0; c < 16; ++c)r[c] = t.readInt32BE(4 * c);
                for(; c < 80; ++c)r[c] = r[c - 3] ^ r[c - 8] ^ r[c - 14] ^ r[c - 16];
                for(var l = 0; l < 80; ++l){
                    var d = ~~(l / 20), p = 0 | ((e = n) << 5 | e >>> 27) + f(d, i, o, a) + u + r[l] + s[d];
                    u = a, a = o, o = h(i), i = n, n = p;
                }
                this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = a + this._d | 0, this._e = u + this._e | 0;
            }, u52.prototype._hash = function() {
                var t = o69.allocUnsafe(20);
                return t.writeInt32BE(0 | this._a, 0), t.writeInt32BE(0 | this._b, 4), t.writeInt32BE(0 | this._c, 8), t.writeInt32BE(0 | this._d, 12), t.writeInt32BE(0 | this._e, 16), t;
            }, t506.exports = u52;
        },
        function(t507, e310, r228) {
            var n127 = r228(0), i100 = r228(31), o70 = r228(2).Buffer, s = [
                1518500249,
                1859775393,
                -1894007588,
                -899497514
            ], a57 = new Array(80);
            function u53() {
                this.init(), this._w = a57, i100.call(this, 64, 56);
            }
            function h(t) {
                return t << 5 | t >>> 27;
            }
            function f(t) {
                return t << 30 | t >>> 2;
            }
            function c(t, e, r, n) {
                return 0 === t ? e & r | ~e & n : 2 === t ? e & r | e & n | r & n : e ^ r ^ n;
            }
            n127(u53, i100), u53.prototype.init = function() {
                return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
            }, u53.prototype._update = function(t) {
                for(var e, r = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, a = 0 | this._d, u = 0 | this._e, l = 0; l < 16; ++l)r[l] = t.readInt32BE(4 * l);
                for(; l < 80; ++l)r[l] = (e = r[l - 3] ^ r[l - 8] ^ r[l - 14] ^ r[l - 16]) << 1 | e >>> 31;
                for(var d = 0; d < 80; ++d){
                    var p = ~~(d / 20), y = h(n) + c(p, i, o, a) + u + r[d] + s[p] | 0;
                    u = a, a = o, o = f(i), i = n, n = y;
                }
                this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = a + this._d | 0, this._e = u + this._e | 0;
            }, u53.prototype._hash = function() {
                var t = o70.allocUnsafe(20);
                return t.writeInt32BE(0 | this._a, 0), t.writeInt32BE(0 | this._b, 4), t.writeInt32BE(0 | this._c, 8), t.writeInt32BE(0 | this._d, 12), t.writeInt32BE(0 | this._e, 16), t;
            }, t507.exports = u53;
        },
        function(t508, e, r) {
            var n = r(0), i = r(103), o = r(31), s = r(2).Buffer, a = new Array(64);
            function u() {
                this.init(), this._w = a, o.call(this, 64, 56);
            }
            n(u, i), u.prototype.init = function() {
                return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
            }, u.prototype._hash = function() {
                var t = s.allocUnsafe(28);
                return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t;
            }, t508.exports = u;
        },
        function(t509, e311, r229) {
            var n128 = r229(0), i = r229(104), o = r229(31), s = r229(2).Buffer, a = new Array(160);
            function u() {
                this.init(), this._w = a, o.call(this, 128, 112);
            }
            n128(u, i), u.prototype.init = function() {
                return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
            }, u.prototype._hash = function() {
                var t = s.allocUnsafe(48);
                function e312(e, r, n) {
                    t.writeInt32BE(e, n), t.writeInt32BE(r, n + 4);
                }
                return e312(this._ah, this._al, 0), e312(this._bh, this._bl, 8), e312(this._ch, this._cl, 16), e312(this._dh, this._dl, 24), e312(this._eh, this._el, 32), e312(this._fh, this._fl, 40), t;
            }, t509.exports = u;
        },
        function(t510, e313, r230) {
            t510.exports = i101;
            var n = r230(12).EventEmitter;
            function i101() {
                n.call(this);
            }
            r230(0)(i101, n), i101.Readable = r230(64), i101.Writable = r230(201), i101.Duplex = r230(202), i101.Transform = r230(203), i101.PassThrough = r230(204), i101.Stream = i101, i101.prototype.pipe = function(t511, e314) {
                var r = this;
                function i(e) {
                    t511.writable && !1 === t511.write(e) && r.pause && r.pause();
                }
                function o() {
                    r.readable && r.resume && r.resume();
                }
                r.on("data", i), t511.on("drain", o), t511._isStdio || e314 && !1 === e314.end || (r.on("end", a), r.on("close", u));
                var s = !1;
                function a() {
                    s || (s = !0, t511.end());
                }
                function u() {
                    s || (s = !0, "function" == typeof t511.destroy && t511.destroy());
                }
                function h(t) {
                    if (f(), 0 === n.listenerCount(this, "error")) throw t;
                }
                function f() {
                    r.removeListener("data", i), t511.removeListener("drain", o), r.removeListener("end", a), r.removeListener("close", u), r.removeListener("error", h), t511.removeListener("error", h), r.removeListener("end", f), r.removeListener("close", f), t511.removeListener("close", f);
                }
                return r.on("error", h), t511.on("error", h), r.on("end", f), r.on("close", f), t511.on("close", f), t511.emit("pipe", r), t511;
            };
        },
        function(t, e) {
        },
        function(t512, e315, r231) {
            "use strict";
            var n = r231(2).Buffer, i102 = r231(198);
            t512.exports = (function() {
                function t513() {
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, t513), this.head = null, this.tail = null, this.length = 0;
                }
                return t513.prototype.push = function(t) {
                    var e = {
                        data: t,
                        next: null
                    };
                    this.length > 0 ? this.tail.next = e : this.head = e, this.tail = e, ++this.length;
                }, t513.prototype.unshift = function(t) {
                    var e = {
                        data: t,
                        next: this.head
                    };
                    0 === this.length && (this.tail = e), this.head = e, ++this.length;
                }, t513.prototype.shift = function() {
                    if (0 !== this.length) {
                        var t = this.head.data;
                        return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t;
                    }
                }, t513.prototype.clear = function() {
                    this.head = this.tail = null, this.length = 0;
                }, t513.prototype.join = function(t) {
                    if (0 === this.length) return "";
                    for(var e = this.head, r = "" + e.data; e = e.next;)r += t + e.data;
                    return r;
                }, t513.prototype.concat = function(t) {
                    if (0 === this.length) return n.alloc(0);
                    if (1 === this.length) return this.head.data;
                    for(var e, r, i, o = n.allocUnsafe(t >>> 0), s = this.head, a = 0; s;)e = s.data, r = o, i = a, e.copy(r, i), a += s.data.length, s = s.next;
                    return o;
                }, t513;
            })(), i102 && i102.inspect && i102.inspect.custom && (t512.exports.prototype[i102.inspect.custom] = function() {
                var t = i102.inspect({
                    length: this.length
                });
                return this.constructor.name + " " + t;
            });
        },
        function(t, e) {
        },
        function(t514, e316, r232) {
            (function(t515, e317) {
                !function(t516, r233) {
                    if (!t516.setImmediate) {
                        var n, i103, o, s, a, u = 1, h = {
                        }, f = !1, c = t516.document, l = Object.getPrototypeOf && Object.getPrototypeOf(t516);
                        l = l && l.setTimeout ? l : t516, "[object process]" === ({
                        }).toString.call(t516.process) ? n = function(t) {
                            e317.nextTick(function() {
                                p(t);
                            });
                        } : !function() {
                            if (t516.postMessage && !t516.importScripts) {
                                var e = !0, r = t516.onmessage;
                                return t516.onmessage = function() {
                                    e = !1;
                                }, t516.postMessage("", "*"), t516.onmessage = r, e;
                            }
                        }() ? t516.MessageChannel ? ((o = new MessageChannel).port1.onmessage = function(t) {
                            p(t.data);
                        }, n = function(t) {
                            o.port2.postMessage(t);
                        }) : c && "onreadystatechange" in c.createElement("script") ? (i103 = c.documentElement, n = function(t) {
                            var e = c.createElement("script");
                            e.onreadystatechange = function() {
                                p(t), e.onreadystatechange = null, i103.removeChild(e), e = null;
                            }, i103.appendChild(e);
                        }) : n = function(t) {
                            setTimeout(p, 0, t);
                        } : (s = "setImmediate$" + Math.random() + "$", a = function(e) {
                            e.source === t516 && "string" == typeof e.data && 0 === e.data.indexOf(s) && p(+e.data.slice(s.length));
                        }, t516.addEventListener ? t516.addEventListener("message", a, !1) : t516.attachEvent("onmessage", a), n = function(e) {
                            t516.postMessage(s + e, "*");
                        }), l.setImmediate = function(t) {
                            "function" != typeof t && (t = new Function("" + t));
                            for(var e = new Array(arguments.length - 1), r = 0; r < e.length; r++)e[r] = arguments[r + 1];
                            var i = {
                                callback: t,
                                args: e
                            };
                            return h[u] = i, n(u), u++;
                        }, l.clearImmediate = d;
                    }
                    function d(t) {
                        delete h[t];
                    }
                    function p(t517) {
                        if (f) setTimeout(p, 0, t517);
                        else {
                            var e318 = h[t517];
                            if (e318) {
                                f = !0;
                                try {
                                    !function(t) {
                                        var e = t.callback, r = t.args;
                                        switch(r.length){
                                            case 0:
                                                e();
                                                break;
                                            case 1:
                                                e(r[0]);
                                                break;
                                            case 2:
                                                e(r[0], r[1]);
                                                break;
                                            case 3:
                                                e(r[0], r[1], r[2]);
                                                break;
                                            default:
                                                e.apply(void 0, r);
                                        }
                                    }(e318);
                                } finally{
                                    d(t517), f = !1;
                                }
                            }
                        }
                    }
                }("undefined" == typeof self ? void 0 === t515 ? this : t515 : self);
            }).call(this, r232(6), r232(5));
        },
        function(t518, e, r234) {
            "use strict";
            t518.exports = o;
            var n = r234(109), i = Object.create(r234(37));
            function o(t) {
                if (!(this instanceof o)) return new o(t);
                n.call(this, t);
            }
            i.inherits = r234(0), i.inherits(o, n), o.prototype._transform = function(t, e, r) {
                r(null, t);
            };
        },
        function(t, e, r) {
            t.exports = r(65);
        },
        function(t, e, r) {
            t.exports = r(26);
        },
        function(t, e, r) {
            t.exports = r(64).Transform;
        },
        function(t, e, r) {
            t.exports = r(64).PassThrough;
        },
        function(t519, e320, r235) {
            "use strict";
            var n129 = r235(0), i = r235(2).Buffer, o = r235(23), s = i.alloc(128);
            function a58(t, e) {
                o.call(this, "digest"), "string" == typeof e && (e = i.from(e)), this._alg = t, this._key = e, e.length > 64 ? e = t(e) : e.length < 64 && (e = i.concat([
                    e,
                    s
                ], 64));
                for(var r = this._ipad = i.allocUnsafe(64), n = this._opad = i.allocUnsafe(64), a = 0; a < 64; a++)r[a] = 54 ^ e[a], n[a] = 92 ^ e[a];
                this._hash = [
                    r
                ];
            }
            n129(a58, o), a58.prototype._update = function(t) {
                this._hash.push(t);
            }, a58.prototype._final = function() {
                var t = this._alg(i.concat(this._hash));
                return this._alg(i.concat([
                    this._opad,
                    t
                ]));
            }, t519.exports = a58;
        },
        function(t, e, r) {
            t.exports = r(112);
        },
        function(t520, e321, r236) {
            (function(e322) {
                var n130, i105, o = r236(2).Buffer, s = r236(114), a = r236(115), u = r236(116), h = r236(117), f = e322.crypto && e322.crypto.subtle, c = {
                    sha: "SHA-1",
                    "sha-1": "SHA-1",
                    sha1: "SHA-1",
                    sha256: "SHA-256",
                    "sha-256": "SHA-256",
                    sha384: "SHA-384",
                    "sha-384": "SHA-384",
                    "sha-512": "SHA-512",
                    sha512: "SHA-512"
                }, l = [];
                function d() {
                    return i105 || (i105 = e322.process && e322.process.nextTick ? e322.process.nextTick : e322.queueMicrotask ? e322.queueMicrotask : e322.setImmediate ? e322.setImmediate : e322.setTimeout);
                }
                function p(t521, e, r, n, i) {
                    return f.importKey("raw", t521, {
                        name: "PBKDF2"
                    }, !1, [
                        "deriveBits"
                    ]).then(function(t) {
                        return f.deriveBits({
                            name: "PBKDF2",
                            salt: e,
                            iterations: r,
                            hash: {
                                name: i
                            }
                        }, t, n << 3);
                    }).then(function(t) {
                        return o.from(t);
                    });
                }
                t520.exports = function(t522, r237, i, y, m, b) {
                    "function" == typeof m && (b = m, m = void 0);
                    var v = c[(m = m || "sha1").toLowerCase()];
                    if (v && "function" == typeof e322.Promise) {
                        if (s(i, y), t522 = h(t522, a, "Password"), r237 = h(r237, a, "Salt"), "function" != typeof b) throw new Error("No callback provided to pbkdf2");
                        !function(t523, e) {
                            t523.then(function(t) {
                                d()(function() {
                                    e(null, t);
                                });
                            }, function(t) {
                                d()(function() {
                                    e(t);
                                });
                            });
                        }((function(t) {
                            if (e322.process && !e322.process.browser) return Promise.resolve(!1);
                            if (!f || !f.importKey || !f.deriveBits) return Promise.resolve(!1);
                            if (void 0 !== l[t]) return l[t];
                            var r = p(n130 = n130 || o.alloc(8), n130, 10, 128, t).then(function() {
                                return !0;
                            }).catch(function() {
                                return !1;
                            });
                            return l[t] = r, r;
                        })(v).then(function(e) {
                            return e ? p(t522, r237, i, y, v) : u(t522, r237, i, y, m);
                        }), b);
                    } else d()(function() {
                        var e;
                        try {
                            e = u(t522, r237, i, y, m);
                        } catch (t) {
                            return b(t);
                        }
                        b(null, e);
                    });
                };
            }).call(this, r236(6));
        },
        function(t524, e323, r238) {
            var n131 = r238(209), i106 = r238(67), o = r238(68), s = r238(222), a = r238(49);
            function u(t, e, r) {
                if (t = t.toLowerCase(), o[t]) return i106.createCipheriv(t, e, r);
                if (s[t]) return new n131({
                    key: e,
                    iv: r,
                    mode: t
                });
                throw new TypeError("invalid suite type");
            }
            function h(t, e, r) {
                if (t = t.toLowerCase(), o[t]) return i106.createDecipheriv(t, e, r);
                if (s[t]) return new n131({
                    key: e,
                    iv: r,
                    mode: t,
                    decrypt: !0
                });
                throw new TypeError("invalid suite type");
            }
            e323.createCipher = e323.Cipher = function(t, e) {
                var r, n;
                if (t = t.toLowerCase(), o[t]) r = o[t].key, n = o[t].iv;
                else {
                    if (!s[t]) throw new TypeError("invalid suite type");
                    r = 8 * s[t].key, n = s[t].iv;
                }
                var i = a(e, !1, r, n);
                return u(t, i.key, i.iv);
            }, e323.createCipheriv = e323.Cipheriv = u, e323.createDecipher = e323.Decipher = function(t, e) {
                var r, n;
                if (t = t.toLowerCase(), o[t]) r = o[t].key, n = o[t].iv;
                else {
                    if (!s[t]) throw new TypeError("invalid suite type");
                    r = 8 * s[t].key, n = s[t].iv;
                }
                var i = a(e, !1, r, n);
                return h(t, i.key, i.iv);
            }, e323.createDecipheriv = e323.Decipheriv = h, e323.listCiphers = e323.getCiphers = function() {
                return Object.keys(s).concat(i106.getCiphers());
            };
        },
        function(t525, e324, r239) {
            var n = r239(23), i107 = r239(210), o71 = r239(0), s = r239(2).Buffer, a = {
                "des-ede3-cbc": i107.CBC.instantiate(i107.EDE),
                "des-ede3": i107.EDE,
                "des-ede-cbc": i107.CBC.instantiate(i107.EDE),
                "des-ede": i107.EDE,
                "des-cbc": i107.CBC.instantiate(i107.DES),
                "des-ecb": i107.DES
            };
            function u54(t) {
                n.call(this);
                var e, r = t.mode.toLowerCase(), i = a[r];
                e = t.decrypt ? "decrypt" : "encrypt";
                var o = t.key;
                s.isBuffer(o) || (o = s.from(o)), "des-ede" !== r && "des-ede-cbc" !== r || (o = s.concat([
                    o,
                    o.slice(0, 8)
                ]));
                var u = t.iv;
                s.isBuffer(u) || (u = s.from(u)), this._des = i.create({
                    key: o,
                    iv: u,
                    type: e
                });
            }
            a.des = a["des-cbc"], a.des3 = a["des-ede3-cbc"], t525.exports = u54, o71(u54, n), u54.prototype._update = function(t) {
                return s.from(this._des.update(t));
            }, u54.prototype._final = function() {
                return s.from(this._des.final());
            };
        },
        function(t, e, r) {
            "use strict";
            e.utils = r(118), e.Cipher = r(66), e.DES = r(119), e.CBC = r(211), e.EDE = r(212);
        },
        function(t526, e325, r240) {
            "use strict";
            var n132 = r240(10), i108 = r240(0), o72 = {
            };
            function s57(t) {
                n132.equal(t.length, 8, "Invalid IV length"), this.iv = new Array(8);
                for(var e = 0; e < this.iv.length; e++)this.iv[e] = t[e];
            }
            e325.instantiate = function(t527) {
                function e326(e) {
                    t527.call(this, e), this._cbcInit();
                }
                i108(e326, t527);
                for(var r = Object.keys(o72), n = 0; n < r.length; n++){
                    var s = r[n];
                    e326.prototype[s] = o72[s];
                }
                return e326.create = function(t) {
                    return new e326(t);
                }, e326;
            }, o72._cbcInit = function() {
                var t = new s57(this.options.iv);
                this._cbcState = t;
            }, o72._update = function(t, e, r, n) {
                var i = this._cbcState, o = this.constructor.super_.prototype, s = i.iv;
                if ("encrypt" === this.type) {
                    for(var a = 0; a < this.blockSize; a++)s[a] ^= t[e + a];
                    o._update.call(this, s, 0, r, n);
                    for(a = 0; a < this.blockSize; a++)s[a] = r[n + a];
                } else {
                    o._update.call(this, t, e, r, n);
                    for(a = 0; a < this.blockSize; a++)r[n + a] ^= s[a];
                    for(a = 0; a < this.blockSize; a++)s[a] = t[e + a];
                }
            };
        },
        function(t528, e327, r241) {
            "use strict";
            var n133 = r241(10), i109 = r241(0), o73 = r241(66), s = r241(119);
            function a(t, e) {
                n133.equal(e.length, 24, "Invalid key length");
                var r = e.slice(0, 8), i = e.slice(8, 16), o = e.slice(16, 24);
                this.ciphers = "encrypt" === t ? [
                    s.create({
                        type: "encrypt",
                        key: r
                    }),
                    s.create({
                        type: "decrypt",
                        key: i
                    }),
                    s.create({
                        type: "encrypt",
                        key: o
                    })
                ] : [
                    s.create({
                        type: "decrypt",
                        key: o
                    }),
                    s.create({
                        type: "encrypt",
                        key: i
                    }),
                    s.create({
                        type: "decrypt",
                        key: r
                    })
                ];
            }
            function u(t) {
                o73.call(this, t);
                var e = new a(this.type, this.options.key);
                this._edeState = e;
            }
            i109(u, o73), t528.exports = u, u.create = function(t) {
                return new u(t);
            }, u.prototype._update = function(t, e, r, n) {
                var i = this._edeState;
                i.ciphers[0]._update(t, e, r, n), i.ciphers[1]._update(r, n, r, n), i.ciphers[2]._update(r, n, r, n);
            }, u.prototype._pad = s.prototype._pad, u.prototype._unpad = s.prototype._unpad;
        },
        function(t529, e328, r242) {
            var n134 = r242(68), i110 = r242(123), o = r242(2).Buffer, s = r242(124), a59 = r242(23), u = r242(48), h = r242(49);
            function f(t, e, r) {
                a59.call(this), this._cache = new l, this._cipher = new u.AES(e), this._prev = o.from(r), this._mode = t, this._autopadding = !0;
            }
            r242(0)(f, a59), f.prototype._update = function(t) {
                var e, r;
                this._cache.add(t);
                for(var n = []; e = this._cache.get();)r = this._mode.encrypt(this, e), n.push(r);
                return o.concat(n);
            };
            var c = o.alloc(16, 16);
            function l() {
                this.cache = o.allocUnsafe(0);
            }
            function d(t, e, r) {
                var a = n134[t.toLowerCase()];
                if (!a) throw new TypeError("invalid suite type");
                if ("string" == typeof e && (e = o.from(e)), e.length !== a.key / 8) throw new TypeError("invalid key length " + e.length);
                if ("string" == typeof r && (r = o.from(r)), "GCM" !== a.mode && r.length !== a.iv) throw new TypeError("invalid iv length " + r.length);
                return "stream" === a.type ? new s(a.module, e, r) : "auth" === a.type ? new i110(a.module, e, r) : new f(a.module, e, r);
            }
            f.prototype._final = function() {
                var t = this._cache.flush();
                if (this._autopadding) return t = this._mode.encrypt(this, t), this._cipher.scrub(), t;
                if (!t.equals(c)) throw this._cipher.scrub(), new Error("data not multiple of block length");
            }, f.prototype.setAutoPadding = function(t) {
                return this._autopadding = !!t, this;
            }, l.prototype.add = function(t) {
                this.cache = o.concat([
                    this.cache,
                    t
                ]);
            }, l.prototype.get = function() {
                if (this.cache.length > 15) {
                    var t = this.cache.slice(0, 16);
                    return this.cache = this.cache.slice(16), t;
                }
                return null;
            }, l.prototype.flush = function() {
                for(var t = 16 - this.cache.length, e = o.allocUnsafe(t), r = -1; ++r < t;)e.writeUInt8(t, r);
                return o.concat([
                    this.cache,
                    e
                ]);
            }, e328.createCipheriv = d, e328.createCipher = function(t, e) {
                var r = n134[t.toLowerCase()];
                if (!r) throw new TypeError("invalid suite type");
                var i = h(e, !1, r.key, r.iv);
                return d(t, i.key, i.iv);
            };
        },
        function(t530, e329) {
            e329.encrypt = function(t, e) {
                return t._cipher.encryptBlock(e);
            }, e329.decrypt = function(t, e) {
                return t._cipher.decryptBlock(e);
            };
        },
        function(t531, e330, r243) {
            var n = r243(38);
            e330.encrypt = function(t, e) {
                var r = n(e, t._prev);
                return t._prev = t._cipher.encryptBlock(r), t._prev;
            }, e330.decrypt = function(t, e) {
                var r = t._prev;
                t._prev = e;
                var i = t._cipher.decryptBlock(e);
                return n(i, r);
            };
        },
        function(t532, e331, r244) {
            var n = r244(2).Buffer, i111 = r244(38);
            function o74(t, e, r) {
                var o = e.length, s = i111(e, t._cache);
                return t._cache = t._cache.slice(o), t._prev = n.concat([
                    t._prev,
                    r ? e : s
                ]), s;
            }
            e331.encrypt = function(t, e, r) {
                for(var i, s = n.allocUnsafe(0); e.length;){
                    if (0 === t._cache.length && (t._cache = t._cipher.encryptBlock(t._prev), t._prev = n.allocUnsafe(0)), !(t._cache.length <= e.length)) {
                        s = n.concat([
                            s,
                            o74(t, e, r)
                        ]);
                        break;
                    }
                    i = t._cache.length, s = n.concat([
                        s,
                        o74(t, e.slice(0, i), r)
                    ]), e = e.slice(i);
                }
                return s;
            };
        },
        function(t533, e332, r245) {
            var n = r245(2).Buffer;
            function i112(t, e, r) {
                var i = t._cipher.encryptBlock(t._prev)[0] ^ e;
                return t._prev = n.concat([
                    t._prev.slice(1),
                    n.from([
                        r ? e : i
                    ])
                ]), i;
            }
            e332.encrypt = function(t, e, r) {
                for(var o = e.length, s = n.allocUnsafe(o), a = -1; ++a < o;)s[a] = i112(t, e[a], r);
                return s;
            };
        },
        function(t534, e333, r246) {
            var n135 = r246(2).Buffer;
            function i113(t, e, r) {
                for(var n, i, s = -1, a = 0; ++s < 8;)n = e & 1 << 7 - s ? 128 : 0, a += (128 & (i = t._cipher.encryptBlock(t._prev)[0] ^ n)) >> s % 8, t._prev = o75(t._prev, r ? n : i);
                return a;
            }
            function o75(t, e) {
                var r = t.length, i = -1, o = n135.allocUnsafe(t.length);
                for(t = n135.concat([
                    t,
                    n135.from([
                        e
                    ])
                ]); ++i < r;)o[i] = t[i] << 1 | t[i + 1] >> 7;
                return o;
            }
            e333.encrypt = function(t, e, r) {
                for(var o = e.length, s = n135.allocUnsafe(o), a = -1; ++a < o;)s[a] = i113(t, e[a], r);
                return s;
            };
        },
        function(t535, e334, r247) {
            (function(t536) {
                var n = r247(38);
                function i(t) {
                    return t._prev = t._cipher.encryptBlock(t._prev), t._prev;
                }
                e334.encrypt = function(e, r) {
                    for(; e._cache.length < r.length;)e._cache = t536.concat([
                        e._cache,
                        i(e)
                    ]);
                    var o = e._cache.slice(0, r.length);
                    return e._cache = e._cache.slice(r.length), n(r, o);
                };
            }).call(this, r247(3).Buffer);
        },
        function(t537, e335, r248) {
            var n136 = r248(2).Buffer, i114 = n136.alloc(16, 0);
            function o(t) {
                var e = n136.allocUnsafe(16);
                return e.writeUInt32BE(t[0] >>> 0, 0), e.writeUInt32BE(t[1] >>> 0, 4), e.writeUInt32BE(t[2] >>> 0, 8), e.writeUInt32BE(t[3] >>> 0, 12), e;
            }
            function s58(t) {
                this.h = t, this.state = n136.alloc(16, 0), this.cache = n136.allocUnsafe(0);
            }
            s58.prototype.ghash = function(t) {
                for(var e = -1; ++e < t.length;)this.state[e] ^= t[e];
                this._multiply();
            }, s58.prototype._multiply = function() {
                for(var t, e, r, n = [
                    (t = this.h).readUInt32BE(0),
                    t.readUInt32BE(4),
                    t.readUInt32BE(8),
                    t.readUInt32BE(12)
                ], i = [
                    0,
                    0,
                    0,
                    0
                ], s = -1; ++s < 128;){
                    for(0 != (this.state[~~(s / 8)] & 1 << 7 - s % 8) && (i[0] ^= n[0], i[1] ^= n[1], i[2] ^= n[2], i[3] ^= n[3]), r = 0 != (1 & n[3]), e = 3; e > 0; e--)n[e] = n[e] >>> 1 | (1 & n[e - 1]) << 31;
                    n[0] = n[0] >>> 1, r && (n[0] = n[0] ^ -520093696);
                }
                this.state = o(i);
            }, s58.prototype.update = function(t) {
                var e;
                for(this.cache = n136.concat([
                    this.cache,
                    t
                ]); this.cache.length >= 16;)e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(e);
            }, s58.prototype.final = function(t, e) {
                return this.cache.length && this.ghash(n136.concat([
                    this.cache,
                    i114
                ], 16)), this.ghash(o([
                    0,
                    t,
                    0,
                    e
                ])), this.state;
            }, t537.exports = s58;
        },
        function(t538, e336, r249) {
            var n137 = r249(123), i = r249(2).Buffer, o = r249(68), s = r249(124), a60 = r249(23), u = r249(48), h = r249(49);
            function f(t, e, r) {
                a60.call(this), this._cache = new c, this._last = void 0, this._cipher = new u.AES(e), this._prev = i.from(r), this._mode = t, this._autopadding = !0;
            }
            function c() {
                this.cache = i.allocUnsafe(0);
            }
            function l(t, e, r) {
                var a = o[t.toLowerCase()];
                if (!a) throw new TypeError("invalid suite type");
                if ("string" == typeof r && (r = i.from(r)), "GCM" !== a.mode && r.length !== a.iv) throw new TypeError("invalid iv length " + r.length);
                if ("string" == typeof e && (e = i.from(e)), e.length !== a.key / 8) throw new TypeError("invalid key length " + e.length);
                return "stream" === a.type ? new s(a.module, e, r, !0) : "auth" === a.type ? new n137(a.module, e, r, !0) : new f(a.module, e, r);
            }
            r249(0)(f, a60), f.prototype._update = function(t) {
                var e, r;
                this._cache.add(t);
                for(var n = []; e = this._cache.get(this._autopadding);)r = this._mode.decrypt(this, e), n.push(r);
                return i.concat(n);
            }, f.prototype._final = function() {
                var t539 = this._cache.flush();
                if (this._autopadding) return (function(t) {
                    var e = t[15];
                    if (e < 1 || e > 16) throw new Error("unable to decrypt data");
                    var r = -1;
                    for(; ++r < e;)if (t[r + (16 - e)] !== e) throw new Error("unable to decrypt data");
                    if (16 === e) return;
                    return t.slice(0, 16 - e);
                })(this._mode.decrypt(this, t539));
                if (t539) throw new Error("data not multiple of block length");
            }, f.prototype.setAutoPadding = function(t) {
                return this._autopadding = !!t, this;
            }, c.prototype.add = function(t) {
                this.cache = i.concat([
                    this.cache,
                    t
                ]);
            }, c.prototype.get = function(t) {
                var e;
                if (t) {
                    if (this.cache.length > 16) return e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e;
                } else if (this.cache.length >= 16) return e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e;
                return null;
            }, c.prototype.flush = function() {
                if (this.cache.length) return this.cache;
            }, e336.createDecipher = function(t, e) {
                var r = o[t.toLowerCase()];
                if (!r) throw new TypeError("invalid suite type");
                var n = h(e, !1, r.key, r.iv);
                return l(t, n.key, n.iv);
            }, e336.createDecipheriv = l;
        },
        function(t, e) {
            e["des-ecb"] = {
                key: 8,
                iv: 0
            }, e["des-cbc"] = e.des = {
                key: 8,
                iv: 8
            }, e["des-ede3-cbc"] = e.des3 = {
                key: 24,
                iv: 8
            }, e["des-ede3"] = {
                key: 24,
                iv: 0
            }, e["des-ede-cbc"] = {
                key: 16,
                iv: 8
            }, e["des-ede"] = {
                key: 16,
                iv: 0
            };
        },
        function(t540, e337, r250) {
            (function(t) {
                var n138 = r250(125), i115 = r250(228), o = r250(229);
                var s = {
                    binary: !0,
                    hex: !0,
                    base64: !0
                };
                e337.DiffieHellmanGroup = e337.createDiffieHellmanGroup = e337.getDiffieHellman = function(e) {
                    var r = new t(i115[e].prime, "hex"), n = new t(i115[e].gen, "hex");
                    return new o(r, n);
                }, e337.createDiffieHellman = e337.DiffieHellman = function e(r, i, a, u) {
                    return t.isBuffer(i) || void 0 === s[i] ? e(r, "binary", i, a) : (i = i || "binary", u = u || "binary", a = a || new t([
                        2
                    ]), t.isBuffer(a) || (a = new t(a, u)), "number" == typeof r ? new o(n138(r, a), a, !0) : (t.isBuffer(r) || (r = new t(r, i)), new o(r, a, !0)));
                };
            }).call(this, r250(3).Buffer);
        },
        function(t, e) {
        },
        function(t541, e338, r251) {
            (function(t542) {
                function e339(t543) {
                    return (e339 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t543);
                }
                !function(t544, n139) {
                    function i116(t, e) {
                        if (!t) throw new Error(e || "Assertion failed");
                    }
                    function o76(t, e) {
                        t.super_ = e;
                        var r = function() {
                        };
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t;
                    }
                    function s59(t, e, r) {
                        if (s59.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
                    }
                    var a61;
                    "object" === e339(t544) ? t544.exports = s59 : n139.BN = s59, s59.BN = s59, s59.wordSize = 26;
                    try {
                        a61 = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r251(226).Buffer;
                    } catch (t545) {
                    }
                    function u55(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
                    }
                    function h34(t, e, r) {
                        var n = u55(t, r);
                        return r - 1 >= e && (n |= u55(t, r - 1) << 4), n;
                    }
                    function f36(t, e, r, n) {
                        for(var i = 0, o = Math.min(t.length, r), s = e; s < o; s++){
                            var a = t.charCodeAt(s) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
                        }
                        return i;
                    }
                    s59.isBN = function(t) {
                        return t instanceof s59 || null !== t && "object" === e339(t) && t.constructor.wordSize === s59.wordSize && Array.isArray(t.words);
                    }, s59.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e;
                    }, s59.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e;
                    }, s59.prototype._init = function(t, r, n) {
                        if ("number" == typeof t) return this._initNumber(t, r, n);
                        if ("object" === e339(t)) return this._initArray(t, r, n);
                        "hex" === r && (r = 16), i116(r === (0 | r) && r >= 2 && r <= 36);
                        var o = 0;
                        "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
                    }, s59.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [
                            67108863 & t
                        ], this.length = 1) : t < 4503599627370496 ? (this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863
                        ], this.length = 2) : (i116(t < 9007199254740992), this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863,
                            1
                        ], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
                    }, s59.prototype._initArray = function(t, e, r) {
                        if (i116("number" == typeof t.length), t.length <= 0) return this.words = [
                            0
                        ], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var o, s, a = 0;
                        if ("be" === r) for(n = t.length - 1, o = 0; n >= 0; n -= 3)s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        else if ("le" === r) for(n = 0, o = 0; n < t.length; n += 3)s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        return this.strip();
                    }, s59.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var i, o = 0, s = 0;
                        if ("be" === r) for(n = t.length - 1; n >= e; n -= 2)i = h34(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        else for(n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2)i = h34(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        this.strip();
                    }, s59.prototype._parseBase = function(t, e, r) {
                        this.words = [
                            0
                        ], this.length = 1;
                        for(var n = 0, i = 1; i <= 67108863; i *= e)n++;
                        n--, i = i / e | 0;
                        for(var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n)u = f36(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var c = 1;
                            for(u = f36(t, h, t.length, e), h = 0; h < s; h++)c *= e;
                            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        }
                        this.strip();
                    }, s59.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for(var e = 0; e < this.length; e++)t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red;
                    }, s59.prototype.clone = function() {
                        var t = new s59(null);
                        return this.copy(t), t;
                    }, s59.prototype._expand = function(t) {
                        for(; this.length < t;)this.words[this.length++] = 0;
                        return this;
                    }, s59.prototype.strip = function() {
                        for(; this.length > 1 && 0 === this.words[this.length - 1];)this.length--;
                        return this._normSign();
                    }, s59.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }, s59.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    };
                    var c28 = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000"
                    ], l23 = [
                        0,
                        0,
                        25,
                        16,
                        12,
                        11,
                        10,
                        9,
                        8,
                        8,
                        7,
                        7,
                        7,
                        7,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5
                    ], d15 = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        10000000,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64000000,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        24300000,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176
                    ];
                    function p16(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0], o = 0 | e.words[0], s = i * o, a = 67108863 & s, u = s / 67108864 | 0;
                        r.words[0] = a;
                        for(var h = 1; h < n; h++){
                            for(var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++){
                                var p = h - d | 0;
                                f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
                            }
                            r.words[h] = 0 | c, u = 0 | f;
                        }
                        return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip();
                    }
                    s59.prototype.toString = function(t, e) {
                        var r;
                        if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                            r = "";
                            for(var n = 0, o = 0, s = 0; s < this.length; s++){
                                var a = this.words[s], u = (16777215 & (a << n | o)).toString(16);
                                r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? c28[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
                            }
                            for(0 !== o && (r = o.toString(16) + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var h = l23[t], f = d15[t];
                            r = "";
                            var p = this.clone();
                            for(p.negative = 0; !p.isZero();){
                                var y = p.modn(f).toString(t);
                                r = (p = p.idivn(f)).isZero() ? y + r : c28[h - y.length] + y + r;
                            }
                            for(this.isZero() && (r = "0" + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        i116(!1, "Base should be between 2 and 36");
                    }, s59.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i116(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
                    }, s59.prototype.toJSON = function() {
                        return this.toString(16);
                    }, s59.prototype.toBuffer = function(t, e) {
                        return i116(void 0 !== a61), this.toArrayLike(a61, t, e);
                    }, s59.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e);
                    }, s59.prototype.toArrayLike = function(t, e, r) {
                        var n = this.byteLength(), o = r || Math.max(1, n);
                        i116(n <= o, "byte array longer than desired length"), i116(o > 0, "Requested array length <= 0"), this.strip();
                        var s, a, u = "le" === e, h = new t(o), f = this.clone();
                        if (u) {
                            for(a = 0; !f.isZero(); a++)s = f.andln(255), f.iushrn(8), h[a] = s;
                            for(; a < o; a++)h[a] = 0;
                        } else {
                            for(a = 0; a < o - n; a++)h[a] = 0;
                            for(a = 0; !f.isZero(); a++)s = f.andln(255), f.iushrn(8), h[o - a - 1] = s;
                        }
                        return h;
                    }, Math.clz32 ? s59.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t);
                    } : s59.prototype._countBits = function(t) {
                        var e = t, r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
                    }, s59.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t, r = 0;
                        return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
                    }, s59.prototype.bitLength = function() {
                        var t = this.words[this.length - 1], e = this._countBits(t);
                        return 26 * (this.length - 1) + e;
                    }, s59.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for(var t = 0, e = 0; e < this.length; e++){
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break;
                        }
                        return t;
                    }, s59.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8);
                    }, s59.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
                    }, s59.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
                    }, s59.prototype.isNeg = function() {
                        return 0 !== this.negative;
                    }, s59.prototype.neg = function() {
                        return this.clone().ineg();
                    }, s59.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this;
                    }, s59.prototype.iuor = function(t) {
                        for(; this.length < t.length;)this.words[this.length++] = 0;
                        for(var e = 0; e < t.length; e++)this.words[e] = this.words[e] | t.words[e];
                        return this.strip();
                    }, s59.prototype.ior = function(t) {
                        return i116(0 == (this.negative | t.negative)), this.iuor(t);
                    }, s59.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
                    }, s59.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
                    }, s59.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for(var r = 0; r < e.length; r++)this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this.strip();
                    }, s59.prototype.iand = function(t) {
                        return i116(0 == (this.negative | t.negative)), this.iuand(t);
                    }, s59.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
                    }, s59.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
                    }, s59.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for(var n = 0; n < r.length; n++)this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e) for(; n < e.length; n++)this.words[n] = e.words[n];
                        return this.length = e.length, this.strip();
                    }, s59.prototype.ixor = function(t) {
                        return i116(0 == (this.negative | t.negative)), this.iuxor(t);
                    }, s59.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
                    }, s59.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
                    }, s59.prototype.inotn = function(t) {
                        i116("number" == typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26), r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for(var n = 0; n < e; n++)this.words[n] = 67108863 & ~this.words[n];
                        return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip();
                    }, s59.prototype.notn = function(t) {
                        return this.clone().inotn(t);
                    }, s59.prototype.setn = function(t, e) {
                        i116("number" == typeof t && t >= 0);
                        var r = t / 26 | 0, n = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip();
                    }, s59.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for(var i = 0, o = 0; o < n.length; o++)e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for(; 0 !== i && o < r.length; o++)e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this) for(; o < r.length; o++)this.words[o] = r.words[o];
                        return this;
                    }, s59.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
                    }, s59.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign();
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for(var o = 0, s = 0; s < n.length; s++)o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        for(; 0 !== o && s < r.length; s++)o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        if (0 === o && s < r.length && r !== this) for(; s < r.length; s++)this.words[s] = r.words[s];
                        return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip();
                    }, s59.prototype.sub = function(t) {
                        return this.clone().isub(t);
                    };
                    var y13 = function(t, e, r) {
                        var n, i, o, s = t.words, a = e.words, u = r.words, h = 0, f = 0 | s[0], c = 8191 & f, l = f >>> 13, d = 0 | s[1], p = 8191 & d, y = d >>> 13, m = 0 | s[2], b = 8191 & m, v = m >>> 13, g = 0 | s[3], w = 8191 & g, _ = g >>> 13, M = 0 | s[4], S = 8191 & M, O = M >>> 13, A = 0 | s[5], E = 8191 & A, x = A >>> 13, k = 0 | s[6], j = 8191 & k, $ = k >>> 13, P = 0 | s[7], R = 8191 & P, B = P >>> 13, T = 0 | s[8], I = 8191 & T, N = T >>> 13, D = 0 | s[9], C = 8191 & D, L = D >>> 13, q = 0 | a[0], U = 8191 & q, F = q >>> 13, z = 0 | a[1], V = 8191 & z, K = z >>> 13, H = 0 | a[2], Z = 8191 & H, W = H >>> 13, J = 0 | a[3], Y = 8191 & J, Q = J >>> 13, G = 0 | a[4], X = 8191 & G, tt = G >>> 13, et = 0 | a[5], rt = 8191 & et, nt = et >>> 13, it = 0 | a[6], ot = 8191 & it, st = it >>> 13, at = 0 | a[7], ut = 8191 & at, ht = at >>> 13, ft = 0 | a[8], ct = 8191 & ft, lt = ft >>> 13, dt = 0 | a[9], pt = 8191 & dt, yt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19;
                        var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
                        h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
                        var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
                        var vt = (h + (n = n + Math.imul(c, Z) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, W) | 0) + Math.imul(l, Z) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, W) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, Z) | 0, i = (i = i + Math.imul(p, W) | 0) + Math.imul(y, Z) | 0, o = o + Math.imul(y, W) | 0;
                        var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Q) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, Q) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, Z) | 0, i = (i = i + Math.imul(b, W) | 0) + Math.imul(v, Z) | 0, o = o + Math.imul(v, W) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, Q) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, Q) | 0;
                        var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, Z) | 0, i = (i = i + Math.imul(w, W) | 0) + Math.imul(_, Z) | 0, o = o + Math.imul(_, W) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, Q) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, Q) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;
                        var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, Z) | 0, i = (i = i + Math.imul(S, W) | 0) + Math.imul(O, Z) | 0, o = o + Math.imul(O, W) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, Q) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, Q) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                        var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, Z) | 0, i = (i = i + Math.imul(E, W) | 0) + Math.imul(x, Z) | 0, o = o + Math.imul(x, W) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, Q) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, Q) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                        var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, Z) | 0, i = (i = i + Math.imul(j, W) | 0) + Math.imul($, Z) | 0, o = o + Math.imul($, W) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, Q) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, Q) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
                        var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, Z) | 0, i = (i = i + Math.imul(R, W) | 0) + Math.imul(B, Z) | 0, o = o + Math.imul(B, W) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, Q) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, Q) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
                        var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, Z) | 0, i = (i = i + Math.imul(I, W) | 0) + Math.imul(N, Z) | 0, o = o + Math.imul(N, W) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, Q) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, Q) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
                        var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, Z), i = (i = Math.imul(C, W)) + Math.imul(L, Z) | 0, o = Math.imul(L, W), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, Q) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, Q) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
                        var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, Q)) + Math.imul(L, Y) | 0, o = Math.imul(L, Q), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
                        var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
                        var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
                        var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
                        var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
                        var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
                        var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
                        var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
                        return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
                    };
                    function m14(t, e, r) {
                        return (new b13).mulp(t, e, r);
                    }
                    function b13(t, e) {
                        this.x = t, this.y = e;
                    }
                    Math.imul || (y13 = p16), s59.prototype.mulTo = function(t546, e340) {
                        var r252 = this.length + t546.length;
                        return 10 === this.length && 10 === t546.length ? y13(this, t546, e340) : r252 < 63 ? p16(this, t546, e340) : r252 < 1024 ? (function(t, e, r) {
                            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                            for(var n = 0, i = 0, o = 0; o < r.length - 1; o++){
                                var s = i;
                                i = 0;
                                for(var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++){
                                    var f = o - h, c = (0 | t.words[f]) * (0 | e.words[h]), l = 67108863 & c;
                                    a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
                                }
                                r.words[o] = a, n = s, s = i;
                            }
                            return 0 !== n ? r.words[o] = n : r.length--, r.strip();
                        })(this, t546, e340) : m14(this, t546, e340);
                    }, b13.prototype.makeRBT = function(t) {
                        for(var e = new Array(t), r = s59.prototype._countBits(t) - 1, n = 0; n < t; n++)e[n] = this.revBin(n, r, t);
                        return e;
                    }, b13.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for(var n = 0, i = 0; i < e; i++)n |= (1 & t) << e - i - 1, t >>= 1;
                        return n;
                    }, b13.prototype.permute = function(t, e, r, n, i, o) {
                        for(var s = 0; s < o; s++)n[s] = e[t[s]], i[s] = r[t[s]];
                    }, b13.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for(var s = 1; s < i; s <<= 1)for(var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a)for(var c = u, l = h, d = 0; d < s; d++){
                            var p = r[f + d], y = n[f + d], m = r[f + d + s], b = n[f + d + s], v = c * m - l * b;
                            b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
                        }
                    }, b13.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t), n = 1 & r, i = 0;
                        for(r = r / 2 | 0; r; r >>>= 1)i++;
                        return 1 << i + 1 + n;
                    }, b13.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1)) for(var n = 0; n < r / 2; n++){
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
                        }
                    }, b13.prototype.normalize13b = function(t, e) {
                        for(var r = 0, n = 0; n < e / 2; n++){
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
                        }
                        return t;
                    }, b13.prototype.convert13b = function(t, e, r, n) {
                        for(var o = 0, s = 0; s < e; s++)o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                        for(s = 2 * e; s < n; ++s)r[s] = 0;
                        i116(0 === o), i116(0 == (-8192 & o));
                    }, b13.prototype.stub = function(t) {
                        for(var e = new Array(t), r = 0; r < t; r++)e[r] = 0;
                        return e;
                    }, b13.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length), i = this.makeRBT(n), o = this.stub(n), s = new Array(n), a = new Array(n), u = new Array(n), h = new Array(n), f = new Array(n), c = new Array(n), l = r.words;
                        l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);
                        for(var d = 0; d < n; d++){
                            var p = a[d] * f[d] - u[d] * c[d];
                            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip();
                    }, s59.prototype.mul = function(t) {
                        var e = new s59(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e);
                    }, s59.prototype.mulf = function(t) {
                        var e = new s59(null);
                        return e.words = new Array(this.length + t.length), m14(this, t, e);
                    }, s59.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this);
                    }, s59.prototype.imuln = function(t) {
                        i116("number" == typeof t), i116(t < 67108864);
                        for(var e = 0, r = 0; r < this.length; r++){
                            var n = (0 | this.words[r]) * t, o = (67108863 & n) + (67108863 & e);
                            e >>= 26, e += n / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o;
                        }
                        return 0 !== e && (this.words[r] = e, this.length++), this;
                    }, s59.prototype.muln = function(t) {
                        return this.clone().imuln(t);
                    }, s59.prototype.sqr = function() {
                        return this.mul(this);
                    }, s59.prototype.isqr = function() {
                        return this.imul(this.clone());
                    }, s59.prototype.pow = function(t547) {
                        var e341 = function(t) {
                            for(var e = new Array(t.bitLength()), r = 0; r < e.length; r++){
                                var n = r / 26 | 0, i = r % 26;
                                e[r] = (t.words[n] & 1 << i) >>> i;
                            }
                            return e;
                        }(t547);
                        if (0 === e341.length) return new s59(1);
                        for(var r253 = this, n = 0; n < e341.length && 0 === e341[n]; n++, r253 = r253.sqr());
                        if (++n < e341.length) for(var i117 = r253.sqr(); n < e341.length; n++, i117 = i117.sqr())0 !== e341[n] && (r253 = r253.mul(i117));
                        return r253;
                    }, s59.prototype.iushln = function(t) {
                        i116("number" == typeof t && t >= 0);
                        var e, r = t % 26, n = (t - r) / 26, o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var s = 0;
                            for(e = 0; e < this.length; e++){
                                var a = this.words[e] & o, u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | s, s = a >>> 26 - r;
                            }
                            s && (this.words[e] = s, this.length++);
                        }
                        if (0 !== n) {
                            for(e = this.length - 1; e >= 0; e--)this.words[e + n] = this.words[e];
                            for(e = 0; e < n; e++)this.words[e] = 0;
                            this.length += n;
                        }
                        return this.strip();
                    }, s59.prototype.ishln = function(t) {
                        return i116(0 === this.negative), this.iushln(t);
                    }, s59.prototype.iushrn = function(t, e, r) {
                        var n;
                        i116("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26, s = Math.min((t - o) / 26, this.length), a = 67108863 ^ 67108863 >>> o << o, u = r;
                        if (n -= s, n = Math.max(0, n), u) {
                            for(var h = 0; h < s; h++)u.words[h] = this.words[h];
                            u.length = s;
                        }
                        if (0 === s) ;
                        else if (this.length > s) for(this.length -= s, h = 0; h < this.length; h++)this.words[h] = this.words[h + s];
                        else this.words[0] = 0, this.length = 1;
                        var f = 0;
                        for(h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--){
                            var c = 0 | this.words[h];
                            this.words[h] = f << 26 - o | c >>> o, f = c & a;
                        }
                        return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
                    }, s59.prototype.ishrn = function(t, e, r) {
                        return i116(0 === this.negative), this.iushrn(t, e, r);
                    }, s59.prototype.shln = function(t) {
                        return this.clone().ishln(t);
                    }, s59.prototype.ushln = function(t) {
                        return this.clone().iushln(t);
                    }, s59.prototype.shrn = function(t) {
                        return this.clone().ishrn(t);
                    }, s59.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t);
                    }, s59.prototype.testn = function(t) {
                        i116("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        return !(this.length <= r) && !!(this.words[r] & n);
                    }, s59.prototype.imaskn = function(t) {
                        i116("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26;
                        if (i116(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var n = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= n;
                        }
                        return this.strip();
                    }, s59.prototype.maskn = function(t) {
                        return this.clone().imaskn(t);
                    }, s59.prototype.iaddn = function(t) {
                        return i116("number" == typeof t), i116(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
                    }, s59.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for(var e = 0; e < this.length && this.words[e] >= 67108864; e++)this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this;
                    }, s59.prototype.isubn = function(t) {
                        if (i116("number" == typeof t), i116(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else for(var e = 0; e < this.length && this.words[e] < 0; e++)this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this.strip();
                    }, s59.prototype.addn = function(t) {
                        return this.clone().iaddn(t);
                    }, s59.prototype.subn = function(t) {
                        return this.clone().isubn(t);
                    }, s59.prototype.iabs = function() {
                        return this.negative = 0, this;
                    }, s59.prototype.abs = function() {
                        return this.clone().iabs();
                    }, s59.prototype._ishlnsubmul = function(t, e, r) {
                        var n, o, s = t.length + r;
                        this._expand(s);
                        var a = 0;
                        for(n = 0; n < t.length; n++){
                            o = (0 | this.words[n + r]) + a;
                            var u = (0 | t.words[n]) * e;
                            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
                        }
                        for(; n < this.length - r; n++)a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
                        if (0 === a) return this.strip();
                        for(i116(-1 === a), a = 0, n = 0; n < this.length; n++)a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
                        return this.negative = 1, this.strip();
                    }, s59.prototype._wordDiv = function(t, e) {
                        var r = (this.length, t.length), n = this.clone(), i = t, o = 0 | i.words[i.length - 1];
                        0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                        var a, u = n.length - i.length;
                        if ("mod" !== e) {
                            (a = new s59(null)).length = u + 1, a.words = new Array(a.length);
                            for(var h = 0; h < a.length; h++)a.words[h] = 0;
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, u);
                        0 === f.negative && (n = f, a && (a.words[u] = 1));
                        for(var c = u - 1; c >= 0; c--){
                            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);
                            for(l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;)l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
                            a && (a.words[c] = l);
                        }
                        return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: a || null,
                            mod: n
                        };
                    }, s59.prototype.divmod = function(t, e, r) {
                        var n, o, a;
                        return i116(!t.isZero()), this.isZero() ? {
                            div: new s59(0),
                            mod: new s59(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
                            div: n,
                            mod: o
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
                            div: n,
                            mod: a.mod
                        }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
                            div: a.div,
                            mod: o
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new s59(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new s59(this.modn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new s59(this.modn(t.words[0]))
                        } : this._wordDiv(t, e);
                    }, s59.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div;
                    }, s59.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod;
                    }, s59.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod;
                    }, s59.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod, n = t.ushrn(1), i = t.andln(1), o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
                    }, s59.prototype.modn = function(t) {
                        i116(t <= 67108863);
                        for(var e = 67108864 % t, r = 0, n = this.length - 1; n >= 0; n--)r = (e * r + (0 | this.words[n])) % t;
                        return r;
                    }, s59.prototype.idivn = function(t) {
                        i116(t <= 67108863);
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = (0 | this.words[r]) + 67108864 * e;
                            this.words[r] = n / t | 0, e = n % t;
                        }
                        return this.strip();
                    }, s59.prototype.divn = function(t) {
                        return this.clone().idivn(t);
                    }, s59.prototype.egcd = function(t) {
                        i116(0 === t.negative), i116(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n = new s59(1), o = new s59(0), a = new s59(0), u = new s59(1), h = 0; e.isEven() && r.isEven();)e.iushrn(1), r.iushrn(1), ++h;
                        for(var f = r.clone(), c = e.clone(); !e.isZero();){
                            for(var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1);
                            if (l > 0) for(e.iushrn(l); l-- > 0;)(n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
                            for(var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1);
                            if (p > 0) for(r.iushrn(p); p-- > 0;)(a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(h)
                        };
                    }, s59.prototype._invmp = function(t) {
                        i116(0 === t.negative), i116(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n, o = new s59(1), a = new s59(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;){
                            for(var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1);
                            if (h > 0) for(e.iushrn(h); h-- > 0;)o.isOdd() && o.iadd(u), o.iushrn(1);
                            for(var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                            if (c > 0) for(r.iushrn(c); c-- > 0;)a.isOdd() && a.iadd(u), a.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
                        }
                        return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
                    }, s59.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(), r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for(var n = 0; e.isEven() && r.isEven(); n++)e.iushrn(1), r.iushrn(1);
                        for(;;){
                            for(; e.isEven();)e.iushrn(1);
                            for(; r.isEven();)r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o;
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r);
                        }
                        return r.iushln(n);
                    }, s59.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t);
                    }, s59.prototype.isEven = function() {
                        return 0 == (1 & this.words[0]);
                    }, s59.prototype.isOdd = function() {
                        return 1 == (1 & this.words[0]);
                    }, s59.prototype.andln = function(t) {
                        return this.words[0] & t;
                    }, s59.prototype.bincn = function(t) {
                        i116("number" == typeof t);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                        for(var o = n, s = r; 0 !== o && s < this.length; s++){
                            var a = 0 | this.words[s];
                            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
                        }
                        return 0 !== o && (this.words[s] = o, this.length++), this;
                    }, s59.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0];
                    }, s59.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), i116(t <= 67108863, "Number is too big");
                            var n = 0 | this.words[0];
                            e = n === t ? 0 : n < t ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s59.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s59.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = 0 | this.words[r], i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break;
                            }
                        }
                        return e;
                    }, s59.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t);
                    }, s59.prototype.gt = function(t) {
                        return 1 === this.cmp(t);
                    }, s59.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0;
                    }, s59.prototype.gte = function(t) {
                        return this.cmp(t) >= 0;
                    }, s59.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t);
                    }, s59.prototype.lt = function(t) {
                        return -1 === this.cmp(t);
                    }, s59.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0;
                    }, s59.prototype.lte = function(t) {
                        return this.cmp(t) <= 0;
                    }, s59.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t);
                    }, s59.prototype.eq = function(t) {
                        return 0 === this.cmp(t);
                    }, s59.red = function(t) {
                        return new O9(t);
                    }, s59.prototype.toRed = function(t) {
                        return i116(!this.red, "Already a number in reduction context"), i116(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
                    }, s59.prototype.fromRed = function() {
                        return i116(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }, s59.prototype._forceRed = function(t) {
                        return this.red = t, this;
                    }, s59.prototype.forceRed = function(t) {
                        return i116(!this.red, "Already a number in reduction context"), this._forceRed(t);
                    }, s59.prototype.redAdd = function(t) {
                        return i116(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
                    }, s59.prototype.redIAdd = function(t) {
                        return i116(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
                    }, s59.prototype.redSub = function(t) {
                        return i116(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
                    }, s59.prototype.redISub = function(t) {
                        return i116(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
                    }, s59.prototype.redShl = function(t) {
                        return i116(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
                    }, s59.prototype.redMul = function(t) {
                        return i116(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
                    }, s59.prototype.redIMul = function(t) {
                        return i116(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
                    }, s59.prototype.redSqr = function() {
                        return i116(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }, s59.prototype.redISqr = function() {
                        return i116(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }, s59.prototype.redSqrt = function() {
                        return i116(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }, s59.prototype.redInvm = function() {
                        return i116(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }, s59.prototype.redNeg = function() {
                        return i116(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }, s59.prototype.redPow = function(t) {
                        return i116(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
                    };
                    var v13 = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };
                    function g11(t, e) {
                        this.name = t, this.p = new s59(e, 16), this.n = this.p.bitLength(), this.k = new s59(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
                    }
                    function w10() {
                        g11.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                    }
                    function _11() {
                        g11.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                    }
                    function M8() {
                        g11.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                    }
                    function S9() {
                        g11.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                    }
                    function O9(t) {
                        if ("string" == typeof t) {
                            var e = s59._prime(t);
                            this.m = e.p, this.prime = e;
                        } else i116(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
                    }
                    function A9(t) {
                        O9.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s59(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
                    }
                    g11.prototype._tmp = function() {
                        var t = new s59(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t;
                    }, g11.prototype.ireduce = function(t) {
                        var e, r = t;
                        do this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                        while (e > this.n)
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }, g11.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e);
                    }, g11.prototype.imulK = function(t) {
                        return t.imul(this.k);
                    }, o76(w10, g11), w10.prototype.split = function(t, e) {
                        for(var r = Math.min(t.length, 9), n = 0; n < r; n++)e.words[n] = t.words[n];
                        if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
                        var i = t.words[9];
                        for(e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++){
                            var o = 0 | t.words[n];
                            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
                        }
                        i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
                    }, w10.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
                    }, o76(_11, g11), o76(M8, g11), o76(S9, g11), S9.prototype.imulK = function(t) {
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 19 * (0 | t.words[r]) + e, i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n;
                        }
                        return 0 !== e && (t.words[t.length++] = e), t;
                    }, s59._prime = function(t) {
                        if (v13[t]) return v13[t];
                        var e;
                        if ("k256" === t) e = new w10;
                        else if ("p224" === t) e = new _11;
                        else if ("p192" === t) e = new M8;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new S9;
                        }
                        return v13[t] = e, e;
                    }, O9.prototype._verify1 = function(t) {
                        i116(0 === t.negative, "red works only with positives"), i116(t.red, "red works only with red numbers");
                    }, O9.prototype._verify2 = function(t, e) {
                        i116(0 == (t.negative | e.negative), "red works only with positives"), i116(t.red && t.red === e.red, "red works only with red numbers");
                    }, O9.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
                    }, O9.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
                    }, O9.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
                    }, O9.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                    }, O9.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
                    }, O9.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r;
                    }, O9.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e));
                    }, O9.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e));
                    }, O9.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e));
                    }, O9.prototype.isqr = function(t) {
                        return this.imul(t, t.clone());
                    }, O9.prototype.sqr = function(t) {
                        return this.mul(t, t);
                    }, O9.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (i116(e % 2 == 1), 3 === e) {
                            var r = this.m.add(new s59(1)).iushrn(2);
                            return this.pow(t, r);
                        }
                        for(var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);)o++, n.iushrn(1);
                        i116(!n.isZero());
                        var a = new s59(1).toRed(this), u = a.redNeg(), h = this.m.subn(1).iushrn(1), f = this.m.bitLength();
                        for(f = new s59(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);)f.redIAdd(u);
                        for(var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);){
                            for(var y = d, m = 0; 0 !== y.cmp(a); m++)y = y.redSqr();
                            i116(m < p);
                            var b = this.pow(c, new s59(1).iushln(p - m - 1));
                            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
                        }
                        return l;
                    }, O9.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
                    }, O9.prototype.pow = function(t, e) {
                        if (e.isZero()) return new s59(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = new Array(16);
                        r[0] = new s59(1).toRed(this), r[1] = t;
                        for(var n = 2; n < r.length; n++)r[n] = this.mul(r[n - 1], t);
                        var i = r[0], o = 0, a = 0, u = e.bitLength() % 26;
                        for(0 === u && (u = 26), n = e.length - 1; n >= 0; n--){
                            for(var h = e.words[n], f = u - 1; f >= 0; f--){
                                var c = h >> f & 1;
                                i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
                            }
                            u = 26;
                        }
                        return i;
                    }, O9.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e;
                    }, O9.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e;
                    }, s59.mont = function(t) {
                        return new A9(t);
                    }, o76(A9, O9), A9.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift));
                    }, A9.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e;
                    }, A9.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A9.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new s59(0)._forceRed(this);
                        var r = t.mul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A9.prototype.invm = function(t) {
                        return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
                    };
                }(t542, this);
            }).call(this, r251(24)(t541));
        },
        function(t, e) {
        },
        function(t, e) {
        },
        function(t) {
            t.exports = JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}');
        },
        function(t548, e342, r254) {
            (function(e343) {
                var n140 = r254(126), i118 = new (r254(127)), o77 = new n140(24), s60 = new n140(11), a = new n140(10), u = new n140(3), h = new n140(7), f = r254(125), c29 = r254(28);
                function l24(t, r) {
                    return r = r || "utf8", e343.isBuffer(t) || (t = new e343(t, r)), this._pub = new n140(t), this;
                }
                function d(t, r) {
                    return r = r || "utf8", e343.isBuffer(t) || (t = new e343(t, r)), this._priv = new n140(t), this;
                }
                t548.exports = y;
                var p = {
                };
                function y(t, e, r) {
                    this.setGenerator(e), this.__prime = new n140(t), this._prime = n140.mont(this.__prime), this._primeLen = t.length, this._pub = void 0, this._priv = void 0, this._primeCode = void 0, r ? (this.setPublicKey = l24, this.setPrivateKey = d) : this._primeCode = 8;
                }
                function m(t, r) {
                    var n = new e343(t.toArray());
                    return r ? n.toString(r) : n;
                }
                Object.defineProperty(y.prototype, "verifyError", {
                    enumerable: !0,
                    get: function() {
                        return "number" != typeof this._primeCode && (this._primeCode = (function(t, e) {
                            var r = e.toString("hex"), n = [
                                r,
                                t.toString(16)
                            ].join("_");
                            if (n in p) return p[n];
                            var c, l = 0;
                            if (t.isEven() || !f.simpleSieve || !f.fermatTest(t) || !i118.test(t)) return l += 1, l += "02" === r || "05" === r ? 8 : 4, p[n] = l, l;
                            switch(i118.test(t.shrn(1)) || (l += 2), r){
                                case "02":
                                    t.mod(o77).cmp(s60) && (l += 8);
                                    break;
                                case "05":
                                    (c = t.mod(a)).cmp(u) && c.cmp(h) && (l += 8);
                                    break;
                                default:
                                    l += 4;
                            }
                            return p[n] = l, l;
                        })(this.__prime, this.__gen)), this._primeCode;
                    }
                }), y.prototype.generateKeys = function() {
                    return this._priv || (this._priv = new n140(c29(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
                }, y.prototype.computeSecret = function(t) {
                    var r = (t = (t = new n140(t)).toRed(this._prime)).redPow(this._priv).fromRed(), i = new e343(r.toArray()), o = this.getPrime();
                    if (i.length < o.length) {
                        var s = new e343(o.length - i.length);
                        s.fill(0), i = e343.concat([
                            s,
                            i
                        ]);
                    }
                    return i;
                }, y.prototype.getPublicKey = function(t) {
                    return m(this._pub, t);
                }, y.prototype.getPrivateKey = function(t) {
                    return m(this._priv, t);
                }, y.prototype.getPrime = function(t) {
                    return m(this.__prime, t);
                }, y.prototype.getGenerator = function(t) {
                    return m(this._gen, t);
                }, y.prototype.setGenerator = function(t, r) {
                    return r = r || "utf8", e343.isBuffer(t) || (t = new e343(t, r)), this.__gen = t, this._gen = new n140(t), this;
                };
            }).call(this, r254(3).Buffer);
        },
        function(t549, e344, r255) {
            var n141 = r255(70).Buffer, i119 = r255(35), o = r255(95), s = r255(0), a = r255(231), u = r255(262), h = r255(112);
            function f(t) {
                o.Writable.call(this);
                var e = h[t];
                if (!e) throw new Error("Unknown message digest");
                this._hashType = e.hash, this._hash = i119(e.hash), this._tag = e.id, this._signType = e.sign;
            }
            function c(t) {
                o.Writable.call(this);
                var e = h[t];
                if (!e) throw new Error("Unknown message digest");
                this._hash = i119(e.hash), this._tag = e.id, this._signType = e.sign;
            }
            function l(t) {
                return new f(t);
            }
            function d(t) {
                return new c(t);
            }
            Object.keys(h).forEach(function(t) {
                h[t].id = n141.from(h[t].id, "hex"), h[t.toLowerCase()] = h[t];
            }), s(f, o.Writable), f.prototype._write = function(t, e, r) {
                this._hash.update(t), r();
            }, f.prototype.update = function(t, e) {
                return "string" == typeof t && (t = n141.from(t, e)), this._hash.update(t), this;
            }, f.prototype.sign = function(t, e) {
                this.end();
                var r = this._hash.digest(), n = a(r, t, this._hashType, this._signType, this._tag);
                return e ? n.toString(e) : n;
            }, s(c, o.Writable), c.prototype._write = function(t, e, r) {
                this._hash.update(t), r();
            }, c.prototype.update = function(t, e) {
                return "string" == typeof t && (t = n141.from(t, e)), this._hash.update(t), this;
            }, c.prototype.verify = function(t, e, r) {
                "string" == typeof e && (e = n141.from(e, r)), this.end();
                var i = this._hash.digest();
                return u(e, i, t, this._signType, this._tag);
            }, t549.exports = {
                Sign: l,
                Verify: d,
                createSign: l,
                createVerify: d
            };
        },
        function(t550, e345, r256) {
            var n142 = r256(70).Buffer, i120 = r256(110), o78 = r256(71), s61 = r256(73).ec, a62 = r256(72), u56 = r256(51), h35 = r256(139);
            function f37(t551, e346, r257, o) {
                if ((t551 = n142.from(t551.toArray())).length < e346.byteLength()) {
                    var s = n142.alloc(e346.byteLength() - t551.length);
                    t551 = n142.concat([
                        s,
                        t551
                    ]);
                }
                var a = r257.length, u = function(t, e) {
                    t = (t = c(t, e)).mod(e);
                    var r = n142.from(t.toArray());
                    if (r.length < e.byteLength()) {
                        var i = n142.alloc(e.byteLength() - r.length);
                        r = n142.concat([
                            i,
                            r
                        ]);
                    }
                    return r;
                }(r257, e346), h = n142.alloc(a);
                h.fill(1);
                var f = n142.alloc(a);
                return f = i120(o, f).update(h).update(n142.from([
                    0
                ])).update(t551).update(u).digest(), h = i120(o, f).update(h).digest(), {
                    k: f = i120(o, f).update(h).update(n142.from([
                        1
                    ])).update(t551).update(u).digest(),
                    v: h = i120(o, f).update(h).digest()
                };
            }
            function c(t, e) {
                var r = new a62(t), n = (t.length << 3) - e.bitLength();
                return n > 0 && r.ishrn(n), r;
            }
            function l(t, e, r) {
                var o, s;
                do {
                    for(o = n142.alloc(0); 8 * o.length < t.bitLength();)e.v = i120(r, e.k).update(e.v).digest(), o = n142.concat([
                        o,
                        e.v
                    ]);
                    s = c(o, t), e.k = i120(r, e.k).update(e.v).update(n142.from([
                        0
                    ])).digest(), e.v = i120(r, e.k).update(e.v).digest();
                }while (-1 !== s.cmp(t))
                return s;
            }
            function d(t, e, r, n) {
                return t.toRed(a62.mont(r)).redPow(e).fromRed().mod(n);
            }
            t550.exports = function(t552, e347, r258, i121, p17) {
                var y14 = u56(e347);
                if (y14.curve) {
                    if ("ecdsa" !== i121 && "ecdsa/rsa" !== i121) throw new Error("wrong private key type");
                    return (function(t, e) {
                        var r = h35[e.curve.join(".")];
                        if (!r) throw new Error("unknown curve " + e.curve.join("."));
                        var i = new s61(r).keyFromPrivate(e.privateKey).sign(t);
                        return n142.from(i.toDER());
                    })(t552, y14);
                }
                if ("dsa" === y14.type) {
                    if ("dsa" !== i121) throw new Error("wrong private key type");
                    return (function(t553, e348, r259) {
                        var i, o = e348.params.priv_key, s = e348.params.p, u = e348.params.q, h = e348.params.g, p = new a62(0), y = c(t553, u).mod(u), m = !1, b = f37(o, u, t553, r259);
                        for(; !1 === m;)i = l(u, b, r259), p = d(h, i, s, u), 0 === (m = i.invm(u).imul(y.add(o.mul(p))).mod(u)).cmpn(0) && (m = !1, p = new a62(0));
                        return (function(t, e) {
                            t = t.toArray(), e = e.toArray(), 128 & t[0] && (t = [
                                0
                            ].concat(t));
                            128 & e[0] && (e = [
                                0
                            ].concat(e));
                            var r = [
                                48,
                                t.length + e.length + 4,
                                2,
                                t.length
                            ];
                            return r = r.concat(t, [
                                2,
                                e.length
                            ], e), n142.from(r);
                        })(p, m);
                    })(t552, y14, r258);
                }
                if ("rsa" !== i121 && "ecdsa/rsa" !== i121) throw new Error("wrong private key type");
                t552 = n142.concat([
                    p17,
                    t552
                ]);
                for(var m15 = y14.modulus.byteLength(), b14 = [
                    0,
                    1
                ]; t552.length + b14.length + 1 < m15;)b14.push(255);
                b14.push(0);
                for(var v = -1; ++v < t552.length;)b14.push(t552[v]);
                return o78(b14, y14);
            }, t550.exports.getKey = f37, t550.exports.makeKey = l;
        },
        function(t, e) {
        },
        function(t) {
            t.exports = JSON.parse('{"_from":"elliptic@^6.5.3","_id":"elliptic@6.5.4","_inBundle":false,"_integrity":"sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==","_location":"/elliptic","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"elliptic@^6.5.3","name":"elliptic","escapedName":"elliptic","rawSpec":"^6.5.3","saveSpec":null,"fetchSpec":"^6.5.3"},"_requiredBy":["/browserify-sign","/create-ecdh"],"_resolved":"https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz","_shasum":"da37cebd31e79a1367e941b592ed1fbebd58abbb","_spec":"elliptic@^6.5.3","_where":"/home/val/Workspace/MongoDB/mongoose/node_modules/browserify-sign","author":{"name":"Fedor Indutny","email":"fedor@indutny.com"},"bugs":{"url":"https://github.com/indutny/elliptic/issues"},"bundleDependencies":false,"dependencies":{"bn.js":"^4.11.9","brorand":"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1","inherits":"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"},"deprecated":false,"description":"EC cryptography","devDependencies":{"brfs":"^2.0.2","coveralls":"^3.1.0","eslint":"^7.6.0","grunt":"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.5","mocha":"^8.0.1"},"files":["lib"],"homepage":"https://github.com/indutny/elliptic","keywords":["EC","Elliptic","curve","Cryptography"],"license":"MIT","main":"lib/elliptic.js","name":"elliptic","repository":{"type":"git","url":"git+ssh://git@github.com/indutny/elliptic.git"},"scripts":{"lint":"eslint lib test","lint:fix":"npm run lint -- --fix","test":"npm run lint && npm run unit","unit":"istanbul test _mocha --reporter=spec test/index.js","version":"grunt dist && git add dist/"},"version":"6.5.4"}');
        },
        function(t, e) {
        },
        function(t554, e349, r260) {
            "use strict";
            var n143 = r260(11), i122 = r260(21), o79 = r260(0), s62 = r260(50), a63 = n143.assert;
            function u57(t) {
                s62.call(this, "short", t), this.a = new i122(t.a, 16).toRed(this.red), this.b = new i122(t.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(t), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
            }
            function h36(t, e, r, n) {
                s62.BasePoint.call(this, t, "affine"), null === e && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new i122(e, 16), this.y = new i122(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);
            }
            function f38(t, e, r, n) {
                s62.BasePoint.call(this, t, "jacobian"), null === e && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i122(0)) : (this.x = new i122(e, 16), this.y = new i122(r, 16), this.z = new i122(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
            }
            o79(u57, s62), t554.exports = u57, u57.prototype._getEndomorphism = function(t555) {
                if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                    var e, r;
                    if (t555.beta) e = new i122(t555.beta, 16).toRed(this.red);
                    else {
                        var n = this._getEndoRoots(this.p);
                        e = (e = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red);
                    }
                    if (t555.lambda) r = new i122(t555.lambda, 16);
                    else {
                        var o = this._getEndoRoots(this.n);
                        0 === this.g.mul(o[0]).x.cmp(this.g.x.redMul(e)) ? r = o[0] : (r = o[1], a63(0 === this.g.mul(r).x.cmp(this.g.x.redMul(e))));
                    }
                    return {
                        beta: e,
                        lambda: r,
                        basis: t555.basis ? t555.basis.map(function(t) {
                            return {
                                a: new i122(t.a, 16),
                                b: new i122(t.b, 16)
                            };
                        }) : this._getEndoBasis(r)
                    };
                }
            }, u57.prototype._getEndoRoots = function(t) {
                var e = t === this.p ? this.red : i122.mont(t), r = new i122(2).toRed(e).redInvm(), n = r.redNeg(), o = new i122(3).toRed(e).redNeg().redSqrt().redMul(r);
                return [
                    n.redAdd(o).fromRed(),
                    n.redSub(o).fromRed()
                ];
            }, u57.prototype._getEndoBasis = function(t) {
                for(var e, r, n, o, s, a, u, h, f, c = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), l = t, d = this.n.clone(), p = new i122(1), y = new i122(0), m = new i122(0), b = new i122(1), v = 0; 0 !== l.cmpn(0);){
                    var g = d.div(l);
                    h = d.sub(g.mul(l)), f = m.sub(g.mul(p));
                    var w = b.sub(g.mul(y));
                    if (!n && h.cmp(c) < 0) e = u.neg(), r = p, n = h.neg(), o = f;
                    else if (n && 2 == ++v) break;
                    u = h, d = l, l = h, m = p, p = f, b = y, y = w;
                }
                s = h.neg(), a = f;
                var _ = n.sqr().add(o.sqr());
                return s.sqr().add(a.sqr()).cmp(_) >= 0 && (s = e, a = r), n.negative && (n = n.neg(), o = o.neg()), s.negative && (s = s.neg(), a = a.neg()), [
                    {
                        a: n,
                        b: o
                    },
                    {
                        a: s,
                        b: a
                    }
                ];
            }, u57.prototype._endoSplit = function(t) {
                var e = this.endo.basis, r = e[0], n = e[1], i = n.b.mul(t).divRound(this.n), o = r.b.neg().mul(t).divRound(this.n), s = i.mul(r.a), a = o.mul(n.a), u = i.mul(r.b), h = o.mul(n.b);
                return {
                    k1: t.sub(s).sub(a),
                    k2: u.add(h).neg()
                };
            }, u57.prototype.pointFromX = function(t, e) {
                (t = new i122(t, 16)).red || (t = t.toRed(this.red));
                var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b), n = r.redSqrt();
                if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw new Error("invalid point");
                var o = n.fromRed().isOdd();
                return (e && !o || !e && o) && (n = n.redNeg()), this.point(t, n);
            }, u57.prototype.validate = function(t) {
                if (t.inf) return !0;
                var e = t.x, r = t.y, n = this.a.redMul(e), i = e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);
                return 0 === r.redSqr().redISub(i).cmpn(0);
            }, u57.prototype._endoWnafMulAdd = function(t, e, r) {
                for(var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < t.length; o++){
                    var s = this._endoSplit(e[o]), a = t[o], u = a._getBeta();
                    s.k1.negative && (s.k1.ineg(), a = a.neg(!0)), s.k2.negative && (s.k2.ineg(), u = u.neg(!0)), n[2 * o] = a, n[2 * o + 1] = u, i[2 * o] = s.k1, i[2 * o + 1] = s.k2;
                }
                for(var h = this._wnafMulAdd(1, n, i, 2 * o, r), f = 0; f < 2 * o; f++)n[f] = null, i[f] = null;
                return h;
            }, o79(h36, s62.BasePoint), u57.prototype.point = function(t, e, r) {
                return new h36(this, t, e, r);
            }, u57.prototype.pointFromJSON = function(t, e) {
                return h36.fromJSON(this, t, e);
            }, h36.prototype._getBeta = function() {
                if (this.curve.endo) {
                    var t556 = this.precomputed;
                    if (t556 && t556.beta) return t556.beta;
                    var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                    if (t556) {
                        var r = this.curve, n = function(t) {
                            return r.point(t.x.redMul(r.endo.beta), t.y);
                        };
                        t556.beta = e, e.precomputed = {
                            beta: null,
                            naf: t556.naf && {
                                wnd: t556.naf.wnd,
                                points: t556.naf.points.map(n)
                            },
                            doubles: t556.doubles && {
                                step: t556.doubles.step,
                                points: t556.doubles.points.map(n)
                            }
                        };
                    }
                    return e;
                }
            }, h36.prototype.toJSON = function() {
                return this.precomputed ? [
                    this.x,
                    this.y,
                    this.precomputed && {
                        doubles: this.precomputed.doubles && {
                            step: this.precomputed.doubles.step,
                            points: this.precomputed.doubles.points.slice(1)
                        },
                        naf: this.precomputed.naf && {
                            wnd: this.precomputed.naf.wnd,
                            points: this.precomputed.naf.points.slice(1)
                        }
                    }
                ] : [
                    this.x,
                    this.y
                ];
            }, h36.fromJSON = function(t, e350, r) {
                "string" == typeof e350 && (e350 = JSON.parse(e350));
                var n = t.point(e350[0], e350[1], r);
                if (!e350[2]) return n;
                function i(e) {
                    return t.point(e[0], e[1], r);
                }
                var o = e350[2];
                return n.precomputed = {
                    beta: null,
                    doubles: o.doubles && {
                        step: o.doubles.step,
                        points: [
                            n
                        ].concat(o.doubles.points.map(i))
                    },
                    naf: o.naf && {
                        wnd: o.naf.wnd,
                        points: [
                            n
                        ].concat(o.naf.points.map(i))
                    }
                }, n;
            }, h36.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
            }, h36.prototype.isInfinity = function() {
                return this.inf;
            }, h36.prototype.add = function(t) {
                if (this.inf) return t;
                if (t.inf) return this;
                if (this.eq(t)) return this.dbl();
                if (this.neg().eq(t)) return this.curve.point(null, null);
                if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);
                var e = this.y.redSub(t.y);
                0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
                var r = e.redSqr().redISub(this.x).redISub(t.x), n = e.redMul(this.x.redSub(r)).redISub(this.y);
                return this.curve.point(r, n);
            }, h36.prototype.dbl = function() {
                if (this.inf) return this;
                var t = this.y.redAdd(this.y);
                if (0 === t.cmpn(0)) return this.curve.point(null, null);
                var e = this.curve.a, r = this.x.redSqr(), n = t.redInvm(), i = r.redAdd(r).redIAdd(r).redIAdd(e).redMul(n), o = i.redSqr().redISub(this.x.redAdd(this.x)), s = i.redMul(this.x.redSub(o)).redISub(this.y);
                return this.curve.point(o, s);
            }, h36.prototype.getX = function() {
                return this.x.fromRed();
            }, h36.prototype.getY = function() {
                return this.y.fromRed();
            }, h36.prototype.mul = function(t) {
                return t = new i122(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([
                    this
                ], [
                    t
                ]) : this.curve._wnafMul(this, t);
            }, h36.prototype.mulAdd = function(t, e, r) {
                var n = [
                    this,
                    e
                ], i = [
                    t,
                    r
                ];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2);
            }, h36.prototype.jmulAdd = function(t, e, r) {
                var n = [
                    this,
                    e
                ], i = [
                    t,
                    r
                ];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0);
            }, h36.prototype.eq = function(t) {
                return this === t || this.inf === t.inf && (this.inf || 0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y));
            }, h36.prototype.neg = function(t558) {
                if (this.inf) return this;
                var e = this.curve.point(this.x, this.y.redNeg());
                if (t558 && this.precomputed) {
                    var r = this.precomputed, n = function(t) {
                        return t.neg();
                    };
                    e.precomputed = {
                        naf: r.naf && {
                            wnd: r.naf.wnd,
                            points: r.naf.points.map(n)
                        },
                        doubles: r.doubles && {
                            step: r.doubles.step,
                            points: r.doubles.points.map(n)
                        }
                    };
                }
                return e;
            }, h36.prototype.toJ = function() {
                return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
            }, o79(f38, s62.BasePoint), u57.prototype.jpoint = function(t, e, r) {
                return new f38(this, t, e, r);
            }, f38.prototype.toP = function() {
                if (this.isInfinity()) return this.curve.point(null, null);
                var t = this.z.redInvm(), e = t.redSqr(), r = this.x.redMul(e), n = this.y.redMul(e).redMul(t);
                return this.curve.point(r, n);
            }, f38.prototype.neg = function() {
                return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
            }, f38.prototype.add = function(t) {
                if (this.isInfinity()) return t;
                if (t.isInfinity()) return this;
                var e = t.z.redSqr(), r = this.z.redSqr(), n = this.x.redMul(e), i = t.x.redMul(r), o = this.y.redMul(e.redMul(t.z)), s = t.y.redMul(r.redMul(this.z)), a = n.redSub(i), u = o.redSub(s);
                if (0 === a.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var h = a.redSqr(), f = h.redMul(a), c = n.redMul(h), l = u.redSqr().redIAdd(f).redISub(c).redISub(c), d = u.redMul(c.redISub(l)).redISub(o.redMul(f)), p = this.z.redMul(t.z).redMul(a);
                return this.curve.jpoint(l, d, p);
            }, f38.prototype.mixedAdd = function(t) {
                if (this.isInfinity()) return t.toJ();
                if (t.isInfinity()) return this;
                var e = this.z.redSqr(), r = this.x, n = t.x.redMul(e), i = this.y, o = t.y.redMul(e).redMul(this.z), s = r.redSub(n), a = i.redSub(o);
                if (0 === s.cmpn(0)) return 0 !== a.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var u = s.redSqr(), h = u.redMul(s), f = r.redMul(u), c = a.redSqr().redIAdd(h).redISub(f).redISub(f), l = a.redMul(f.redISub(c)).redISub(i.redMul(h)), d = this.z.redMul(s);
                return this.curve.jpoint(c, l, d);
            }, f38.prototype.dblp = function(t) {
                if (0 === t) return this;
                if (this.isInfinity()) return this;
                if (!t) return this.dbl();
                var e;
                if (this.curve.zeroA || this.curve.threeA) {
                    var r = this;
                    for(e = 0; e < t; e++)r = r.dbl();
                    return r;
                }
                var n = this.curve.a, i = this.curve.tinv, o = this.x, s = this.y, a = this.z, u = a.redSqr().redSqr(), h = s.redAdd(s);
                for(e = 0; e < t; e++){
                    var f = o.redSqr(), c = h.redSqr(), l = c.redSqr(), d = f.redAdd(f).redIAdd(f).redIAdd(n.redMul(u)), p = o.redMul(c), y = d.redSqr().redISub(p.redAdd(p)), m = p.redISub(y), b = d.redMul(m);
                    b = b.redIAdd(b).redISub(l);
                    var v = h.redMul(a);
                    e + 1 < t && (u = u.redMul(l)), o = y, a = v, h = b;
                }
                return this.curve.jpoint(o, h.redMul(i), a);
            }, f38.prototype.dbl = function() {
                return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
            }, f38.prototype._zeroDbl = function() {
                var t, e, r;
                if (this.zOne) {
                    var n = this.x.redSqr(), i = this.y.redSqr(), o = i.redSqr(), s = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    s = s.redIAdd(s);
                    var a = n.redAdd(n).redIAdd(n), u = a.redSqr().redISub(s).redISub(s), h = o.redIAdd(o);
                    h = (h = h.redIAdd(h)).redIAdd(h), t = u, e = a.redMul(s.redISub(u)).redISub(h), r = this.y.redAdd(this.y);
                } else {
                    var f = this.x.redSqr(), c = this.y.redSqr(), l = c.redSqr(), d = this.x.redAdd(c).redSqr().redISub(f).redISub(l);
                    d = d.redIAdd(d);
                    var p = f.redAdd(f).redIAdd(f), y = p.redSqr(), m = l.redIAdd(l);
                    m = (m = m.redIAdd(m)).redIAdd(m), t = y.redISub(d).redISub(d), e = p.redMul(d.redISub(t)).redISub(m), r = (r = this.y.redMul(this.z)).redIAdd(r);
                }
                return this.curve.jpoint(t, e, r);
            }, f38.prototype._threeDbl = function() {
                var t, e, r;
                if (this.zOne) {
                    var n = this.x.redSqr(), i = this.y.redSqr(), o = i.redSqr(), s = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    s = s.redIAdd(s);
                    var a = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a), u = a.redSqr().redISub(s).redISub(s);
                    t = u;
                    var h = o.redIAdd(o);
                    h = (h = h.redIAdd(h)).redIAdd(h), e = a.redMul(s.redISub(u)).redISub(h), r = this.y.redAdd(this.y);
                } else {
                    var f = this.z.redSqr(), c = this.y.redSqr(), l = this.x.redMul(c), d = this.x.redSub(f).redMul(this.x.redAdd(f));
                    d = d.redAdd(d).redIAdd(d);
                    var p = l.redIAdd(l), y = (p = p.redIAdd(p)).redAdd(p);
                    t = d.redSqr().redISub(y), r = this.y.redAdd(this.z).redSqr().redISub(c).redISub(f);
                    var m = c.redSqr();
                    m = (m = (m = m.redIAdd(m)).redIAdd(m)).redIAdd(m), e = d.redMul(p.redISub(t)).redISub(m);
                }
                return this.curve.jpoint(t, e, r);
            }, f38.prototype._dbl = function() {
                var t = this.curve.a, e = this.x, r = this.y, n = this.z, i = n.redSqr().redSqr(), o = e.redSqr(), s = r.redSqr(), a = o.redAdd(o).redIAdd(o).redIAdd(t.redMul(i)), u = e.redAdd(e), h = (u = u.redIAdd(u)).redMul(s), f = a.redSqr().redISub(h.redAdd(h)), c = h.redISub(f), l = s.redSqr();
                l = (l = (l = l.redIAdd(l)).redIAdd(l)).redIAdd(l);
                var d = a.redMul(c).redISub(l), p = r.redAdd(r).redMul(n);
                return this.curve.jpoint(f, d, p);
            }, f38.prototype.trpl = function() {
                if (!this.curve.zeroA) return this.dbl().add(this);
                var t = this.x.redSqr(), e = this.y.redSqr(), r = this.z.redSqr(), n = e.redSqr(), i = t.redAdd(t).redIAdd(t), o = i.redSqr(), s = this.x.redAdd(e).redSqr().redISub(t).redISub(n), a = (s = (s = (s = s.redIAdd(s)).redAdd(s).redIAdd(s)).redISub(o)).redSqr(), u = n.redIAdd(n);
                u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
                var h = i.redIAdd(s).redSqr().redISub(o).redISub(a).redISub(u), f = e.redMul(h);
                f = (f = f.redIAdd(f)).redIAdd(f);
                var c = this.x.redMul(a).redISub(f);
                c = (c = c.redIAdd(c)).redIAdd(c);
                var l = this.y.redMul(h.redMul(u.redISub(h)).redISub(s.redMul(a)));
                l = (l = (l = l.redIAdd(l)).redIAdd(l)).redIAdd(l);
                var d = this.z.redAdd(s).redSqr().redISub(r).redISub(a);
                return this.curve.jpoint(c, l, d);
            }, f38.prototype.mul = function(t, e) {
                return t = new i122(t, e), this.curve._wnafMul(this, t);
            }, f38.prototype.eq = function(t) {
                if ("affine" === t.type) return this.eq(t.toJ());
                if (this === t) return !0;
                var e = this.z.redSqr(), r = t.z.redSqr();
                if (0 !== this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0)) return !1;
                var n = e.redMul(this.z), i = r.redMul(t.z);
                return 0 === this.y.redMul(i).redISub(t.y.redMul(n)).cmpn(0);
            }, f38.prototype.eqXToP = function(t) {
                var e = this.z.redSqr(), r = t.toRed(this.curve.red).redMul(e);
                if (0 === this.x.cmp(r)) return !0;
                for(var n = t.clone(), i = this.curve.redN.redMul(e);;){
                    if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                    if (r.redIAdd(i), 0 === this.x.cmp(r)) return !0;
                }
            }, f38.prototype.inspect = function() {
                return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
            }, f38.prototype.isInfinity = function() {
                return 0 === this.z.cmpn(0);
            };
        },
        function(t559, e351, r261) {
            "use strict";
            var n144 = r261(21), i123 = r261(0), o80 = r261(50), s63 = r261(11);
            function a64(t) {
                o80.call(this, "mont", t), this.a = new n144(t.a, 16).toRed(this.red), this.b = new n144(t.b, 16).toRed(this.red), this.i4 = new n144(4).toRed(this.red).redInvm(), this.two = new n144(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
            }
            function u58(t, e, r) {
                o80.BasePoint.call(this, t, "projective"), null === e && null === r ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new n144(e, 16), this.z = new n144(r, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
            }
            i123(a64, o80), t559.exports = a64, a64.prototype.validate = function(t) {
                var e = t.normalize().x, r = e.redSqr(), n = r.redMul(e).redAdd(r.redMul(this.a)).redAdd(e);
                return 0 === n.redSqrt().redSqr().cmp(n);
            }, i123(u58, o80.BasePoint), a64.prototype.decodePoint = function(t, e) {
                return this.point(s63.toArray(t, e), 1);
            }, a64.prototype.point = function(t, e) {
                return new u58(this, t, e);
            }, a64.prototype.pointFromJSON = function(t) {
                return u58.fromJSON(this, t);
            }, u58.prototype.precompute = function() {
            }, u58.prototype._encode = function() {
                return this.getX().toArray("be", this.curve.p.byteLength());
            }, u58.fromJSON = function(t, e) {
                return new u58(t, e[0], e[1] || t.one);
            }, u58.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
            }, u58.prototype.isInfinity = function() {
                return 0 === this.z.cmpn(0);
            }, u58.prototype.dbl = function() {
                var t = this.x.redAdd(this.z).redSqr(), e = this.x.redSub(this.z).redSqr(), r = t.redSub(e), n = t.redMul(e), i = r.redMul(e.redAdd(this.curve.a24.redMul(r)));
                return this.curve.point(n, i);
            }, u58.prototype.add = function() {
                throw new Error("Not supported on Montgomery curve");
            }, u58.prototype.diffAdd = function(t, e) {
                var r = this.x.redAdd(this.z), n = this.x.redSub(this.z), i = t.x.redAdd(t.z), o = t.x.redSub(t.z).redMul(r), s = i.redMul(n), a = e.z.redMul(o.redAdd(s).redSqr()), u = e.x.redMul(o.redISub(s).redSqr());
                return this.curve.point(a, u);
            }, u58.prototype.mul = function(t) {
                for(var e = t.clone(), r = this, n = this.curve.point(null, null), i = []; 0 !== e.cmpn(0); e.iushrn(1))i.push(e.andln(1));
                for(var o = i.length - 1; o >= 0; o--)0 === i[o] ? (r = r.diffAdd(n, this), n = n.dbl()) : (n = r.diffAdd(n, this), r = r.dbl());
                return n;
            }, u58.prototype.mulAdd = function() {
                throw new Error("Not supported on Montgomery curve");
            }, u58.prototype.jumlAdd = function() {
                throw new Error("Not supported on Montgomery curve");
            }, u58.prototype.eq = function(t) {
                return 0 === this.getX().cmp(t.getX());
            }, u58.prototype.normalize = function() {
                return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
            }, u58.prototype.getX = function() {
                return this.normalize(), this.x.fromRed();
            };
        },
        function(t560, e352, r262) {
            "use strict";
            var n145 = r262(11), i124 = r262(21), o81 = r262(0), s64 = r262(50), a65 = n145.assert;
            function u59(t) {
                this.twisted = 1 != (0 | t.a), this.mOneA = this.twisted && -1 == (0 | t.a), this.extended = this.mOneA, s64.call(this, "edwards", t), this.a = new i124(t.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new i124(t.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new i124(t.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), a65(!this.twisted || 0 === this.c.fromRed().cmpn(1)), this.oneC = 1 == (0 | t.c);
            }
            function h37(t, e, r, n, o) {
                s64.BasePoint.call(this, t, "projective"), null === e && null === r && null === n ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = !0) : (this.x = new i124(e, 16), this.y = new i124(r, 16), this.z = n ? new i124(n, 16) : this.curve.one, this.t = o && new i124(o, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
            }
            o81(u59, s64), t560.exports = u59, u59.prototype._mulA = function(t) {
                return this.mOneA ? t.redNeg() : this.a.redMul(t);
            }, u59.prototype._mulC = function(t) {
                return this.oneC ? t : this.c.redMul(t);
            }, u59.prototype.jpoint = function(t, e, r, n) {
                return this.point(t, e, r, n);
            }, u59.prototype.pointFromX = function(t, e) {
                (t = new i124(t, 16)).red || (t = t.toRed(this.red));
                var r = t.redSqr(), n = this.c2.redSub(this.a.redMul(r)), o = this.one.redSub(this.c2.redMul(this.d).redMul(r)), s = n.redMul(o.redInvm()), a = s.redSqrt();
                if (0 !== a.redSqr().redSub(s).cmp(this.zero)) throw new Error("invalid point");
                var u = a.fromRed().isOdd();
                return (e && !u || !e && u) && (a = a.redNeg()), this.point(t, a);
            }, u59.prototype.pointFromY = function(t, e) {
                (t = new i124(t, 16)).red || (t = t.toRed(this.red));
                var r = t.redSqr(), n = r.redSub(this.c2), o = r.redMul(this.d).redMul(this.c2).redSub(this.a), s = n.redMul(o.redInvm());
                if (0 === s.cmp(this.zero)) {
                    if (e) throw new Error("invalid point");
                    return this.point(this.zero, t);
                }
                var a = s.redSqrt();
                if (0 !== a.redSqr().redSub(s).cmp(this.zero)) throw new Error("invalid point");
                return a.fromRed().isOdd() !== e && (a = a.redNeg()), this.point(a, t);
            }, u59.prototype.validate = function(t) {
                if (t.isInfinity()) return !0;
                t.normalize();
                var e = t.x.redSqr(), r = t.y.redSqr(), n = e.redMul(this.a).redAdd(r), i = this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(r)));
                return 0 === n.cmp(i);
            }, o81(h37, s64.BasePoint), u59.prototype.pointFromJSON = function(t) {
                return h37.fromJSON(this, t);
            }, u59.prototype.point = function(t, e, r, n) {
                return new h37(this, t, e, r, n);
            }, h37.fromJSON = function(t, e) {
                return new h37(t, e[0], e[1], e[2]);
            }, h37.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
            }, h37.prototype.isInfinity = function() {
                return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || this.zOne && 0 === this.y.cmp(this.curve.c));
            }, h37.prototype._extDbl = function() {
                var t = this.x.redSqr(), e = this.y.redSqr(), r = this.z.redSqr();
                r = r.redIAdd(r);
                var n = this.curve._mulA(t), i = this.x.redAdd(this.y).redSqr().redISub(t).redISub(e), o = n.redAdd(e), s = o.redSub(r), a = n.redSub(e), u = i.redMul(s), h = o.redMul(a), f = i.redMul(a), c = s.redMul(o);
                return this.curve.point(u, h, c, f);
            }, h37.prototype._projDbl = function() {
                var t, e, r, n, i, o, s = this.x.redAdd(this.y).redSqr(), a = this.x.redSqr(), u = this.y.redSqr();
                if (this.curve.twisted) {
                    var h = (n = this.curve._mulA(a)).redAdd(u);
                    this.zOne ? (t = s.redSub(a).redSub(u).redMul(h.redSub(this.curve.two)), e = h.redMul(n.redSub(u)), r = h.redSqr().redSub(h).redSub(h)) : (i = this.z.redSqr(), o = h.redSub(i).redISub(i), t = s.redSub(a).redISub(u).redMul(o), e = h.redMul(n.redSub(u)), r = h.redMul(o));
                } else n = a.redAdd(u), i = this.curve._mulC(this.z).redSqr(), o = n.redSub(i).redSub(i), t = this.curve._mulC(s.redISub(n)).redMul(o), e = this.curve._mulC(n).redMul(a.redISub(u)), r = n.redMul(o);
                return this.curve.point(t, e, r);
            }, h37.prototype.dbl = function() {
                return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
            }, h37.prototype._extAdd = function(t) {
                var e = this.y.redSub(this.x).redMul(t.y.redSub(t.x)), r = this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)), n = this.t.redMul(this.curve.dd).redMul(t.t), i = this.z.redMul(t.z.redAdd(t.z)), o = r.redSub(e), s = i.redSub(n), a = i.redAdd(n), u = r.redAdd(e), h = o.redMul(s), f = a.redMul(u), c = o.redMul(u), l = s.redMul(a);
                return this.curve.point(h, f, l, c);
            }, h37.prototype._projAdd = function(t) {
                var e, r, n = this.z.redMul(t.z), i = n.redSqr(), o = this.x.redMul(t.x), s = this.y.redMul(t.y), a = this.curve.d.redMul(o).redMul(s), u = i.redSub(a), h = i.redAdd(a), f = this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(o).redISub(s), c = n.redMul(u).redMul(f);
                return this.curve.twisted ? (e = n.redMul(h).redMul(s.redSub(this.curve._mulA(o))), r = u.redMul(h)) : (e = n.redMul(h).redMul(s.redSub(o)), r = this.curve._mulC(u).redMul(h)), this.curve.point(c, e, r);
            }, h37.prototype.add = function(t) {
                return this.isInfinity() ? t : t.isInfinity() ? this : this.curve.extended ? this._extAdd(t) : this._projAdd(t);
            }, h37.prototype.mul = function(t) {
                return this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve._wnafMul(this, t);
            }, h37.prototype.mulAdd = function(t, e, r) {
                return this.curve._wnafMulAdd(1, [
                    this,
                    e
                ], [
                    t,
                    r
                ], 2, !1);
            }, h37.prototype.jmulAdd = function(t, e, r) {
                return this.curve._wnafMulAdd(1, [
                    this,
                    e
                ], [
                    t,
                    r
                ], 2, !0);
            }, h37.prototype.normalize = function() {
                if (this.zOne) return this;
                var t = this.z.redInvm();
                return this.x = this.x.redMul(t), this.y = this.y.redMul(t), this.t && (this.t = this.t.redMul(t)), this.z = this.curve.one, this.zOne = !0, this;
            }, h37.prototype.neg = function() {
                return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
            }, h37.prototype.getX = function() {
                return this.normalize(), this.x.fromRed();
            }, h37.prototype.getY = function() {
                return this.normalize(), this.y.fromRed();
            }, h37.prototype.eq = function(t) {
                return this === t || 0 === this.getX().cmp(t.getX()) && 0 === this.getY().cmp(t.getY());
            }, h37.prototype.eqXToP = function(t) {
                var e = t.toRed(this.curve.red).redMul(this.z);
                if (0 === this.x.cmp(e)) return !0;
                for(var r = t.clone(), n = this.curve.redN.redMul(this.z);;){
                    if (r.iadd(this.curve.n), r.cmp(this.curve.p) >= 0) return !1;
                    if (e.redIAdd(n), 0 === this.x.cmp(e)) return !0;
                }
            }, h37.prototype.toP = h37.prototype.normalize, h37.prototype.mixedAdd = h37.prototype.add;
        },
        function(t, e, r) {
            "use strict";
            e.sha1 = r(239), e.sha224 = r(240), e.sha256 = r(131), e.sha384 = r(241), e.sha512 = r(132);
        },
        function(t561, e, r263) {
            "use strict";
            var n146 = r263(17), i125 = r263(39), o82 = r263(130), s = n146.rotl32, a = n146.sum32, u = n146.sum32_5, h = o82.ft_1, f39 = i125.BlockHash, c = [
                1518500249,
                1859775393,
                2400959708,
                3395469782
            ];
            function l25() {
                if (!(this instanceof l25)) return new l25;
                f39.call(this), this.h = [
                    1732584193,
                    4023233417,
                    2562383102,
                    271733878,
                    3285377520
                ], this.W = new Array(80);
            }
            n146.inherits(l25, f39), t561.exports = l25, l25.blockSize = 512, l25.outSize = 160, l25.hmacStrength = 80, l25.padLength = 64, l25.prototype._update = function(t, e) {
                for(var r = this.W, n = 0; n < 16; n++)r[n] = t[e + n];
                for(; n < r.length; n++)r[n] = s(r[n - 3] ^ r[n - 8] ^ r[n - 14] ^ r[n - 16], 1);
                var i = this.h[0], o = this.h[1], f = this.h[2], l = this.h[3], d = this.h[4];
                for(n = 0; n < r.length; n++){
                    var p = ~~(n / 20), y = u(s(i, 5), h(p, o, f, l), d, r[n], c[p]);
                    d = l, l = f, f = s(o, 30), o = i, i = y;
                }
                this.h[0] = a(this.h[0], i), this.h[1] = a(this.h[1], o), this.h[2] = a(this.h[2], f), this.h[3] = a(this.h[3], l), this.h[4] = a(this.h[4], d);
            }, l25.prototype._digest = function(t) {
                return "hex" === t ? n146.toHex32(this.h, "big") : n146.split32(this.h, "big");
            };
        },
        function(t562, e, r) {
            "use strict";
            var n = r(17), i = r(131);
            function o() {
                if (!(this instanceof o)) return new o;
                i.call(this), this.h = [
                    3238371032,
                    914150663,
                    812702999,
                    4144912697,
                    4290775857,
                    1750603025,
                    1694076839,
                    3204075428
                ];
            }
            n.inherits(o, i), t562.exports = o, o.blockSize = 512, o.outSize = 224, o.hmacStrength = 192, o.padLength = 64, o.prototype._digest = function(t) {
                return "hex" === t ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big");
            };
        },
        function(t563, e, r) {
            "use strict";
            var n = r(17), i = r(132);
            function o() {
                if (!(this instanceof o)) return new o;
                i.call(this), this.h = [
                    3418070365,
                    3238371032,
                    1654270250,
                    914150663,
                    2438529370,
                    812702999,
                    355462360,
                    4144912697,
                    1731405415,
                    4290775857,
                    2394180231,
                    1750603025,
                    3675008525,
                    1694076839,
                    1203062813,
                    3204075428
                ];
            }
            n.inherits(o, i), t563.exports = o, o.blockSize = 1024, o.outSize = 384, o.hmacStrength = 192, o.padLength = 128, o.prototype._digest = function(t) {
                return "hex" === t ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big");
            };
        },
        function(t564, e353, r264) {
            "use strict";
            var n147 = r264(17), i126 = r264(39), o = n147.rotl32, s = n147.sum32, a = n147.sum32_3, u = n147.sum32_4, h38 = i126.BlockHash;
            function f40() {
                if (!(this instanceof f40)) return new f40;
                h38.call(this), this.h = [
                    1732584193,
                    4023233417,
                    2562383102,
                    271733878,
                    3285377520
                ], this.endian = "little";
            }
            function c(t, e, r, n) {
                return t <= 15 ? e ^ r ^ n : t <= 31 ? e & r | ~e & n : t <= 47 ? (e | ~r) ^ n : t <= 63 ? e & n | r & ~n : e ^ (r | ~n);
            }
            function l(t) {
                return t <= 15 ? 0 : t <= 31 ? 1518500249 : t <= 47 ? 1859775393 : t <= 63 ? 2400959708 : 2840853838;
            }
            function d(t) {
                return t <= 15 ? 1352829926 : t <= 31 ? 1548603684 : t <= 47 ? 1836072691 : t <= 63 ? 2053994217 : 0;
            }
            n147.inherits(f40, h38), e353.ripemd160 = f40, f40.blockSize = 512, f40.outSize = 160, f40.hmacStrength = 192, f40.padLength = 64, f40.prototype._update = function(t, e) {
                for(var r = this.h[0], n = this.h[1], i = this.h[2], h = this.h[3], f = this.h[4], v = r, g = n, w = i, _ = h, M = f, S = 0; S < 80; S++){
                    var O = s(o(u(r, c(S, n, i, h), t[p[S] + e], l(S)), m[S]), f);
                    r = f, f = h, h = o(i, 10), i = n, n = O, O = s(o(u(v, c(79 - S, g, w, _), t[y[S] + e], d(S)), b[S]), M), v = M, M = _, _ = o(w, 10), w = g, g = O;
                }
                O = a(this.h[1], i, _), this.h[1] = a(this.h[2], h, M), this.h[2] = a(this.h[3], f, v), this.h[3] = a(this.h[4], r, g), this.h[4] = a(this.h[0], n, w), this.h[0] = O;
            }, f40.prototype._digest = function(t) {
                return "hex" === t ? n147.toHex32(this.h, "little") : n147.split32(this.h, "little");
            };
            var p = [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                7,
                4,
                13,
                1,
                10,
                6,
                15,
                3,
                12,
                0,
                9,
                5,
                2,
                14,
                11,
                8,
                3,
                10,
                14,
                4,
                9,
                15,
                8,
                1,
                2,
                7,
                0,
                6,
                13,
                11,
                5,
                12,
                1,
                9,
                11,
                10,
                0,
                8,
                12,
                4,
                13,
                3,
                7,
                15,
                14,
                5,
                6,
                2,
                4,
                0,
                5,
                9,
                7,
                12,
                2,
                10,
                14,
                1,
                3,
                8,
                11,
                6,
                15,
                13
            ], y = [
                5,
                14,
                7,
                0,
                9,
                2,
                11,
                4,
                13,
                6,
                15,
                8,
                1,
                10,
                3,
                12,
                6,
                11,
                3,
                7,
                0,
                13,
                5,
                10,
                14,
                15,
                8,
                12,
                4,
                9,
                1,
                2,
                15,
                5,
                1,
                3,
                7,
                14,
                6,
                9,
                11,
                8,
                12,
                2,
                10,
                0,
                4,
                13,
                8,
                6,
                4,
                1,
                3,
                11,
                15,
                0,
                5,
                12,
                2,
                13,
                9,
                7,
                10,
                14,
                12,
                15,
                10,
                4,
                1,
                5,
                8,
                7,
                6,
                2,
                13,
                14,
                0,
                3,
                9,
                11
            ], m = [
                11,
                14,
                15,
                12,
                5,
                8,
                7,
                9,
                11,
                13,
                14,
                15,
                6,
                7,
                9,
                8,
                7,
                6,
                8,
                13,
                11,
                9,
                7,
                15,
                7,
                12,
                15,
                9,
                11,
                7,
                13,
                12,
                11,
                13,
                6,
                7,
                14,
                9,
                13,
                15,
                14,
                8,
                13,
                6,
                5,
                12,
                7,
                5,
                11,
                12,
                14,
                15,
                14,
                15,
                9,
                8,
                9,
                14,
                5,
                6,
                8,
                6,
                5,
                12,
                9,
                15,
                5,
                11,
                6,
                8,
                13,
                12,
                5,
                12,
                13,
                14,
                11,
                8,
                5,
                6
            ], b = [
                8,
                9,
                9,
                11,
                13,
                15,
                15,
                5,
                7,
                7,
                8,
                11,
                14,
                14,
                12,
                6,
                9,
                13,
                15,
                7,
                12,
                8,
                9,
                11,
                7,
                7,
                12,
                7,
                6,
                15,
                13,
                11,
                9,
                7,
                15,
                11,
                8,
                6,
                6,
                14,
                12,
                13,
                5,
                14,
                13,
                13,
                7,
                5,
                15,
                5,
                8,
                11,
                14,
                14,
                6,
                14,
                6,
                9,
                12,
                9,
                12,
                5,
                15,
                8,
                8,
                5,
                12,
                9,
                12,
                5,
                14,
                6,
                8,
                13,
                6,
                5,
                15,
                13,
                11,
                11
            ];
        },
        function(t565, e354, r265) {
            "use strict";
            var n = r265(17), i = r265(10);
            function o(t, e, r) {
                if (!(this instanceof o)) return new o(t, e, r);
                this.Hash = t, this.blockSize = t.blockSize / 8, this.outSize = t.outSize / 8, this.inner = null, this.outer = null, this._init(n.toArray(e, r));
            }
            t565.exports = o, o.prototype._init = function(t) {
                t.length > this.blockSize && (t = (new this.Hash).update(t).digest()), i(t.length <= this.blockSize);
                for(var e = t.length; e < this.blockSize; e++)t.push(0);
                for(e = 0; e < t.length; e++)t[e] ^= 54;
                for(this.inner = (new this.Hash).update(t), e = 0; e < t.length; e++)t[e] ^= 106;
                this.outer = (new this.Hash).update(t);
            }, o.prototype.update = function(t, e) {
                return this.inner.update(t, e), this;
            }, o.prototype.digest = function(t) {
                return this.outer.update(this.inner.digest()), this.outer.digest(t);
            };
        },
        function(t, e) {
            t.exports = {
                doubles: {
                    step: 4,
                    points: [
                        [
                            "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
                            "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"
                        ],
                        [
                            "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
                            "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"
                        ],
                        [
                            "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
                            "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"
                        ],
                        [
                            "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
                            "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"
                        ],
                        [
                            "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
                            "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"
                        ],
                        [
                            "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
                            "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"
                        ],
                        [
                            "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
                            "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"
                        ],
                        [
                            "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
                            "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"
                        ],
                        [
                            "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
                            "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"
                        ],
                        [
                            "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
                            "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"
                        ],
                        [
                            "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
                            "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"
                        ],
                        [
                            "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
                            "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"
                        ],
                        [
                            "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
                            "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"
                        ],
                        [
                            "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
                            "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"
                        ],
                        [
                            "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
                            "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"
                        ],
                        [
                            "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
                            "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"
                        ],
                        [
                            "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
                            "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"
                        ],
                        [
                            "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
                            "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"
                        ],
                        [
                            "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
                            "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"
                        ],
                        [
                            "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
                            "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"
                        ],
                        [
                            "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
                            "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"
                        ],
                        [
                            "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
                            "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"
                        ],
                        [
                            "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
                            "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"
                        ],
                        [
                            "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
                            "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"
                        ],
                        [
                            "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
                            "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"
                        ],
                        [
                            "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
                            "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"
                        ],
                        [
                            "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
                            "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"
                        ],
                        [
                            "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
                            "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"
                        ],
                        [
                            "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
                            "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"
                        ],
                        [
                            "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
                            "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"
                        ],
                        [
                            "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
                            "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"
                        ],
                        [
                            "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
                            "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"
                        ],
                        [
                            "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
                            "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"
                        ],
                        [
                            "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
                            "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"
                        ],
                        [
                            "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
                            "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"
                        ],
                        [
                            "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
                            "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"
                        ],
                        [
                            "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
                            "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"
                        ],
                        [
                            "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
                            "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"
                        ],
                        [
                            "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
                            "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"
                        ],
                        [
                            "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
                            "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"
                        ],
                        [
                            "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
                            "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"
                        ],
                        [
                            "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
                            "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"
                        ],
                        [
                            "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
                            "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"
                        ],
                        [
                            "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
                            "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"
                        ],
                        [
                            "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
                            "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"
                        ],
                        [
                            "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
                            "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"
                        ],
                        [
                            "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
                            "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"
                        ],
                        [
                            "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
                            "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"
                        ],
                        [
                            "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
                            "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"
                        ],
                        [
                            "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
                            "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"
                        ],
                        [
                            "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
                            "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"
                        ],
                        [
                            "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
                            "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"
                        ],
                        [
                            "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
                            "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"
                        ],
                        [
                            "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
                            "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"
                        ],
                        [
                            "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
                            "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"
                        ],
                        [
                            "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
                            "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"
                        ],
                        [
                            "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
                            "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"
                        ],
                        [
                            "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
                            "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"
                        ],
                        [
                            "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
                            "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"
                        ],
                        [
                            "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
                            "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"
                        ],
                        [
                            "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
                            "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"
                        ],
                        [
                            "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
                            "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"
                        ],
                        [
                            "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
                            "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"
                        ],
                        [
                            "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
                            "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"
                        ],
                        [
                            "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
                            "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"
                        ]
                    ]
                },
                naf: {
                    wnd: 7,
                    points: [
                        [
                            "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
                            "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"
                        ],
                        [
                            "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
                            "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"
                        ],
                        [
                            "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
                            "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"
                        ],
                        [
                            "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
                            "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"
                        ],
                        [
                            "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
                            "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"
                        ],
                        [
                            "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
                            "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"
                        ],
                        [
                            "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
                            "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"
                        ],
                        [
                            "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
                            "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"
                        ],
                        [
                            "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
                            "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"
                        ],
                        [
                            "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
                            "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"
                        ],
                        [
                            "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
                            "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"
                        ],
                        [
                            "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
                            "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"
                        ],
                        [
                            "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
                            "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"
                        ],
                        [
                            "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
                            "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"
                        ],
                        [
                            "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
                            "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"
                        ],
                        [
                            "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
                            "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"
                        ],
                        [
                            "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
                            "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"
                        ],
                        [
                            "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
                            "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"
                        ],
                        [
                            "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
                            "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"
                        ],
                        [
                            "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
                            "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"
                        ],
                        [
                            "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
                            "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"
                        ],
                        [
                            "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
                            "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"
                        ],
                        [
                            "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
                            "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"
                        ],
                        [
                            "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
                            "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"
                        ],
                        [
                            "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
                            "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"
                        ],
                        [
                            "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
                            "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"
                        ],
                        [
                            "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
                            "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"
                        ],
                        [
                            "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
                            "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"
                        ],
                        [
                            "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
                            "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"
                        ],
                        [
                            "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
                            "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"
                        ],
                        [
                            "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
                            "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"
                        ],
                        [
                            "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
                            "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"
                        ],
                        [
                            "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
                            "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"
                        ],
                        [
                            "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
                            "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"
                        ],
                        [
                            "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
                            "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"
                        ],
                        [
                            "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
                            "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"
                        ],
                        [
                            "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
                            "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"
                        ],
                        [
                            "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
                            "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"
                        ],
                        [
                            "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
                            "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"
                        ],
                        [
                            "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
                            "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"
                        ],
                        [
                            "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
                            "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"
                        ],
                        [
                            "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
                            "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"
                        ],
                        [
                            "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
                            "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"
                        ],
                        [
                            "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
                            "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"
                        ],
                        [
                            "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
                            "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"
                        ],
                        [
                            "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
                            "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"
                        ],
                        [
                            "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
                            "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"
                        ],
                        [
                            "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
                            "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"
                        ],
                        [
                            "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
                            "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"
                        ],
                        [
                            "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
                            "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"
                        ],
                        [
                            "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
                            "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"
                        ],
                        [
                            "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
                            "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"
                        ],
                        [
                            "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
                            "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"
                        ],
                        [
                            "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
                            "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"
                        ],
                        [
                            "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
                            "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"
                        ],
                        [
                            "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
                            "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"
                        ],
                        [
                            "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
                            "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"
                        ],
                        [
                            "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
                            "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"
                        ],
                        [
                            "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
                            "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"
                        ],
                        [
                            "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
                            "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"
                        ],
                        [
                            "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
                            "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"
                        ],
                        [
                            "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
                            "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"
                        ],
                        [
                            "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
                            "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"
                        ],
                        [
                            "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
                            "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"
                        ],
                        [
                            "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
                            "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"
                        ],
                        [
                            "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
                            "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"
                        ],
                        [
                            "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
                            "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"
                        ],
                        [
                            "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
                            "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"
                        ],
                        [
                            "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
                            "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"
                        ],
                        [
                            "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
                            "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"
                        ],
                        [
                            "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
                            "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"
                        ],
                        [
                            "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
                            "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"
                        ],
                        [
                            "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
                            "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"
                        ],
                        [
                            "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
                            "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"
                        ],
                        [
                            "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
                            "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"
                        ],
                        [
                            "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
                            "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"
                        ],
                        [
                            "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
                            "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"
                        ],
                        [
                            "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
                            "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"
                        ],
                        [
                            "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
                            "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"
                        ],
                        [
                            "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
                            "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"
                        ],
                        [
                            "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
                            "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"
                        ],
                        [
                            "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
                            "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"
                        ],
                        [
                            "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
                            "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"
                        ],
                        [
                            "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
                            "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"
                        ],
                        [
                            "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
                            "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"
                        ],
                        [
                            "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
                            "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"
                        ],
                        [
                            "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
                            "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"
                        ],
                        [
                            "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
                            "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"
                        ],
                        [
                            "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
                            "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"
                        ],
                        [
                            "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
                            "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"
                        ],
                        [
                            "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
                            "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"
                        ],
                        [
                            "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
                            "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"
                        ],
                        [
                            "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
                            "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"
                        ],
                        [
                            "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
                            "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"
                        ],
                        [
                            "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
                            "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"
                        ],
                        [
                            "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
                            "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"
                        ],
                        [
                            "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
                            "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"
                        ],
                        [
                            "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
                            "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"
                        ],
                        [
                            "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
                            "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"
                        ],
                        [
                            "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
                            "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"
                        ],
                        [
                            "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
                            "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"
                        ],
                        [
                            "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
                            "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"
                        ],
                        [
                            "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
                            "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"
                        ],
                        [
                            "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
                            "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"
                        ],
                        [
                            "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
                            "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"
                        ],
                        [
                            "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
                            "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"
                        ],
                        [
                            "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
                            "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"
                        ],
                        [
                            "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
                            "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"
                        ],
                        [
                            "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
                            "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"
                        ],
                        [
                            "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
                            "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"
                        ],
                        [
                            "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
                            "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"
                        ],
                        [
                            "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
                            "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"
                        ],
                        [
                            "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
                            "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"
                        ],
                        [
                            "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
                            "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"
                        ],
                        [
                            "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
                            "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"
                        ],
                        [
                            "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
                            "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"
                        ],
                        [
                            "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
                            "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"
                        ],
                        [
                            "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
                            "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"
                        ],
                        [
                            "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
                            "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"
                        ],
                        [
                            "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
                            "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"
                        ],
                        [
                            "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
                            "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"
                        ],
                        [
                            "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
                            "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"
                        ],
                        [
                            "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
                            "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"
                        ],
                        [
                            "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
                            "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"
                        ],
                        [
                            "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
                            "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"
                        ],
                        [
                            "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
                            "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"
                        ],
                        [
                            "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
                            "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"
                        ]
                    ]
                }
            };
        },
        function(t566, e355, r266) {
            "use strict";
            function n148(t567) {
                return (n148 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t567);
            }
            var i127 = r266(21), o83 = r266(246), s65 = r266(11), a66 = r266(74), u60 = r266(69), h39 = s65.assert, f41 = r266(247), c = r266(248);
            function l26(t) {
                if (!(this instanceof l26)) return new l26(t);
                "string" == typeof t && (h39(Object.prototype.hasOwnProperty.call(a66, t), "Unknown curve " + t), t = a66[t]), t instanceof a66.PresetCurve && (t = {
                    curve: t
                }), this.curve = t.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t.curve.g, this.g.precompute(t.curve.n.bitLength() + 1), this.hash = t.hash || t.curve.hash;
            }
            t566.exports = l26, l26.prototype.keyPair = function(t) {
                return new f41(this, t);
            }, l26.prototype.keyFromPrivate = function(t, e) {
                return f41.fromPrivate(this, t, e);
            }, l26.prototype.keyFromPublic = function(t, e) {
                return f41.fromPublic(this, t, e);
            }, l26.prototype.genKeyPair = function(t) {
                t || (t = {
                });
                for(var e = new o83({
                    hash: this.hash,
                    pers: t.pers,
                    persEnc: t.persEnc || "utf8",
                    entropy: t.entropy || u60(this.hash.hmacStrength),
                    entropyEnc: t.entropy && t.entropyEnc || "utf8",
                    nonce: this.n.toArray()
                }), r = this.n.byteLength(), n = this.n.sub(new i127(2));;){
                    var s = new i127(e.generate(r));
                    if (!(s.cmp(n) > 0)) return s.iaddn(1), this.keyFromPrivate(s);
                }
            }, l26.prototype._truncateToN = function(t, e) {
                var r = 8 * t.byteLength() - this.n.bitLength();
                return r > 0 && (t = t.ushrn(r)), !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t;
            }, l26.prototype.sign = function(t, e, r, s) {
                "object" === n148(r) && (s = r, r = null), s || (s = {
                }), e = this.keyFromPrivate(e, r), t = this._truncateToN(new i127(t, 16));
                for(var a = this.n.byteLength(), u = e.getPrivate().toArray("be", a), h = t.toArray("be", a), f = new o83({
                    hash: this.hash,
                    entropy: u,
                    nonce: h,
                    pers: s.pers,
                    persEnc: s.persEnc || "utf8"
                }), l = this.n.sub(new i127(1)), d = 0;; d++){
                    var p = s.k ? s.k(d) : new i127(f.generate(this.n.byteLength()));
                    if (!((p = this._truncateToN(p, !0)).cmpn(1) <= 0 || p.cmp(l) >= 0)) {
                        var y = this.g.mul(p);
                        if (!y.isInfinity()) {
                            var m = y.getX(), b = m.umod(this.n);
                            if (0 !== b.cmpn(0)) {
                                var v = p.invm(this.n).mul(b.mul(e.getPrivate()).iadd(t));
                                if (0 !== (v = v.umod(this.n)).cmpn(0)) {
                                    var g = (y.getY().isOdd() ? 1 : 0) | (0 !== m.cmp(b) ? 2 : 0);
                                    return s.canonical && v.cmp(this.nh) > 0 && (v = this.n.sub(v), g ^= 1), new c({
                                        r: b,
                                        s: v,
                                        recoveryParam: g
                                    });
                                }
                            }
                        }
                    }
                }
            }, l26.prototype.verify = function(t, e, r, n) {
                t = this._truncateToN(new i127(t, 16)), r = this.keyFromPublic(r, n);
                var o = (e = new c(e, "hex")).r, s = e.s;
                if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
                if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return !1;
                var a, u = s.invm(this.n), h = u.mul(t).umod(this.n), f = u.mul(o).umod(this.n);
                return this.curve._maxwellTrick ? !(a = this.g.jmulAdd(h, r.getPublic(), f)).isInfinity() && a.eqXToP(o) : !(a = this.g.mulAdd(h, r.getPublic(), f)).isInfinity() && 0 === a.getX().umod(this.n).cmp(o);
            }, l26.prototype.recoverPubKey = function(t, e, r, n) {
                h39((3 & r) === r, "The recovery param is more than two bits"), e = new c(e, n);
                var o = this.n, s = new i127(t), a = e.r, u = e.s, f = 1 & r, l = r >> 1;
                if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && l) throw new Error("Unable to find sencond key candinate");
                a = l ? this.curve.pointFromX(a.add(this.curve.n), f) : this.curve.pointFromX(a, f);
                var d = e.r.invm(o), p = o.sub(s).mul(d).umod(o), y = u.mul(d).umod(o);
                return this.g.mulAdd(p, a, y);
            }, l26.prototype.getKeyRecoveryParam = function(t, e, r, n) {
                if (null !== (e = new c(e, n)).recoveryParam) return e.recoveryParam;
                for(var i = 0; i < 4; i++){
                    var o;
                    try {
                        o = this.recoverPubKey(t, e, i);
                    } catch (t) {
                        continue;
                    }
                    if (o.eq(r)) return i;
                }
                throw new Error("Unable to find valid recovery factor");
            };
        },
        function(t568, e356, r267) {
            "use strict";
            var n149 = r267(75), i128 = r267(128), o84 = r267(10);
            function s66(t) {
                if (!(this instanceof s66)) return new s66(t);
                this.hash = t.hash, this.predResist = !!t.predResist, this.outLen = this.hash.outSize, this.minEntropy = t.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                var e = i128.toArray(t.entropy, t.entropyEnc || "hex"), r = i128.toArray(t.nonce, t.nonceEnc || "hex"), n = i128.toArray(t.pers, t.persEnc || "hex");
                o84(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e, r, n);
            }
            t568.exports = s66, s66.prototype._init = function(t, e, r) {
                var n = t.concat(e).concat(r);
                this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                for(var i = 0; i < this.V.length; i++)this.K[i] = 0, this.V[i] = 1;
                this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656;
            }, s66.prototype._hmac = function() {
                return new n149.hmac(this.hash, this.K);
            }, s66.prototype._update = function(t) {
                var e = this._hmac().update(this.V).update([
                    0
                ]);
                t && (e = e.update(t)), this.K = e.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([
                    1
                ]).update(t).digest(), this.V = this._hmac().update(this.V).digest());
            }, s66.prototype.reseed = function(t, e, r, n) {
                "string" != typeof e && (n = r, r = e, e = null), t = i128.toArray(t, e), r = i128.toArray(r, n), o84(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t.concat(r || [])), this._reseed = 1;
            }, s66.prototype.generate = function(t, e, r, n) {
                if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                "string" != typeof e && (n = r, r = e, e = null), r && (r = i128.toArray(r, n || "hex"), this._update(r));
                for(var o = []; o.length < t;)this.V = this._hmac().update(this.V).digest(), o = o.concat(this.V);
                var s = o.slice(0, t);
                return this._update(r), this._reseed++, i128.encode(s, e);
            };
        },
        function(t569, e357, r268) {
            "use strict";
            var n = r268(21), i = r268(11).assert;
            function o(t, e) {
                this.ec = t, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc);
            }
            t569.exports = o, o.fromPublic = function(t, e, r) {
                return e instanceof o ? e : new o(t, {
                    pub: e,
                    pubEnc: r
                });
            }, o.fromPrivate = function(t, e, r) {
                return e instanceof o ? e : new o(t, {
                    priv: e,
                    privEnc: r
                });
            }, o.prototype.validate = function() {
                var t = this.getPublic();
                return t.isInfinity() ? {
                    result: !1,
                    reason: "Invalid public key"
                } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {
                    result: !0,
                    reason: null
                } : {
                    result: !1,
                    reason: "Public key * N != O"
                } : {
                    result: !1,
                    reason: "Public key is not a point"
                };
            }, o.prototype.getPublic = function(t, e) {
                return "string" == typeof t && (e = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), e ? this.pub.encode(e, t) : this.pub;
            }, o.prototype.getPrivate = function(t) {
                return "hex" === t ? this.priv.toString(16, 2) : this.priv;
            }, o.prototype._importPrivate = function(t, e) {
                this.priv = new n(t, e || 16), this.priv = this.priv.umod(this.ec.curve.n);
            }, o.prototype._importPublic = function(t, e) {
                if (t.x || t.y) return "mont" === this.ec.curve.type ? i(t.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || i(t.x && t.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(t.x, t.y));
                this.pub = this.ec.curve.decodePoint(t, e);
            }, o.prototype.derive = function(t) {
                return t.validate() || i(t.validate(), "public point not validated"), t.mul(this.priv).getX();
            }, o.prototype.sign = function(t, e, r) {
                return this.ec.sign(t, this, e, r);
            }, o.prototype.verify = function(t, e) {
                return this.ec.verify(t, e, this);
            }, o.prototype.inspect = function() {
                return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
            };
        },
        function(t570, e358, r269) {
            "use strict";
            var n150 = r269(21), i129 = r269(11), o85 = i129.assert;
            function s67(t, e) {
                if (t instanceof s67) return t;
                this._importDER(t, e) || (o85(t.r && t.s, "Signature without r or s"), this.r = new n150(t.r, 16), this.s = new n150(t.s, 16), void 0 === t.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam);
            }
            function a() {
                this.place = 0;
            }
            function u(t, e) {
                var r = t[e.place++];
                if (!(128 & r)) return r;
                var n = 15 & r;
                if (0 === n || n > 4) return !1;
                for(var i = 0, o = 0, s = e.place; o < n; o++, s++)i <<= 8, i |= t[s], i >>>= 0;
                return !(i <= 127) && (e.place = s, i);
            }
            function h40(t) {
                for(var e = 0, r = t.length - 1; !t[e] && !(128 & t[e + 1]) && e < r;)e++;
                return 0 === e ? t : t.slice(e);
            }
            function f42(t, e) {
                if (e < 128) t.push(e);
                else {
                    var r = 1 + (Math.log(e) / Math.LN2 >>> 3);
                    for(t.push(128 | r); --r;)t.push(e >>> (r << 3) & 255);
                    t.push(e);
                }
            }
            t570.exports = s67, s67.prototype._importDER = function(t, e) {
                t = i129.toArray(t, e);
                var r = new a;
                if (48 !== t[r.place++]) return !1;
                var o = u(t, r);
                if (!1 === o) return !1;
                if (o + r.place !== t.length) return !1;
                if (2 !== t[r.place++]) return !1;
                var s = u(t, r);
                if (!1 === s) return !1;
                var h = t.slice(r.place, s + r.place);
                if (r.place += s, 2 !== t[r.place++]) return !1;
                var f = u(t, r);
                if (!1 === f) return !1;
                if (t.length !== f + r.place) return !1;
                var c = t.slice(r.place, f + r.place);
                if (0 === h[0]) {
                    if (!(128 & h[1])) return !1;
                    h = h.slice(1);
                }
                if (0 === c[0]) {
                    if (!(128 & c[1])) return !1;
                    c = c.slice(1);
                }
                return this.r = new n150(h), this.s = new n150(c), this.recoveryParam = null, !0;
            }, s67.prototype.toDER = function(t) {
                var e = this.r.toArray(), r = this.s.toArray();
                for(128 & e[0] && (e = [
                    0
                ].concat(e)), 128 & r[0] && (r = [
                    0
                ].concat(r)), e = h40(e), r = h40(r); !(r[0] || 128 & r[1]);)r = r.slice(1);
                var n = [
                    2
                ];
                f42(n, e.length), (n = n.concat(e)).push(2), f42(n, r.length);
                var o = n.concat(r), s = [
                    48
                ];
                return f42(s, o.length), s = s.concat(o), i129.encode(s, t);
            };
        },
        function(t571, e359, r270) {
            "use strict";
            var n151 = r270(75), i130 = r270(74), o86 = r270(11), s68 = o86.assert, a = o86.parseBytes, u61 = r270(250), h = r270(251);
            function f(t) {
                if (s68("ed25519" === t, "only tested with ed25519 so far"), !(this instanceof f)) return new f(t);
                t = i130[t].curve, this.curve = t, this.g = t.g, this.g.precompute(t.n.bitLength() + 1), this.pointClass = t.point().constructor, this.encodingLength = Math.ceil(t.n.bitLength() / 8), this.hash = n151.sha512;
            }
            t571.exports = f, f.prototype.sign = function(t, e) {
                t = a(t);
                var r = this.keyFromSecret(e), n = this.hashInt(r.messagePrefix(), t), i = this.g.mul(n), o = this.encodePoint(i), s = this.hashInt(o, r.pubBytes(), t).mul(r.priv()), u = n.add(s).umod(this.curve.n);
                return this.makeSignature({
                    R: i,
                    S: u,
                    Rencoded: o
                });
            }, f.prototype.verify = function(t, e, r) {
                t = a(t), e = this.makeSignature(e);
                var n = this.keyFromPublic(r), i = this.hashInt(e.Rencoded(), n.pubBytes(), t), o = this.g.mul(e.S());
                return e.R().add(n.pub().mul(i)).eq(o);
            }, f.prototype.hashInt = function() {
                for(var t = this.hash(), e = 0; e < arguments.length; e++)t.update(arguments[e]);
                return o86.intFromLE(t.digest()).umod(this.curve.n);
            }, f.prototype.keyFromPublic = function(t) {
                return u61.fromPublic(this, t);
            }, f.prototype.keyFromSecret = function(t) {
                return u61.fromSecret(this, t);
            }, f.prototype.makeSignature = function(t) {
                return t instanceof h ? t : new h(this, t);
            }, f.prototype.encodePoint = function(t) {
                var e = t.getY().toArray("le", this.encodingLength);
                return e[this.encodingLength - 1] |= t.getX().isOdd() ? 128 : 0, e;
            }, f.prototype.decodePoint = function(t) {
                var e = (t = o86.parseBytes(t)).length - 1, r = t.slice(0, e).concat(-129 & t[e]), n = 0 != (128 & t[e]), i = o86.intFromLE(r);
                return this.curve.pointFromY(i, n);
            }, f.prototype.encodeInt = function(t) {
                return t.toArray("le", this.encodingLength);
            }, f.prototype.decodeInt = function(t) {
                return o86.intFromLE(t);
            }, f.prototype.isPoint = function(t) {
                return t instanceof this.pointClass;
            };
        },
        function(t572, e360, r) {
            "use strict";
            var n152 = r(11), i = n152.assert, o = n152.parseBytes, s = n152.cachedProperty;
            function a(t, e) {
                this.eddsa = t, this._secret = o(e.secret), t.isPoint(e.pub) ? this._pub = e.pub : this._pubBytes = o(e.pub);
            }
            a.fromPublic = function(t, e) {
                return e instanceof a ? e : new a(t, {
                    pub: e
                });
            }, a.fromSecret = function(t, e) {
                return e instanceof a ? e : new a(t, {
                    secret: e
                });
            }, a.prototype.secret = function() {
                return this._secret;
            }, s(a, "pubBytes", function() {
                return this.eddsa.encodePoint(this.pub());
            }), s(a, "pub", function() {
                return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
            }), s(a, "privBytes", function() {
                var t = this.eddsa, e = this.hash(), r = t.encodingLength - 1, n = e.slice(0, t.encodingLength);
                return n[0] &= 248, n[r] &= 127, n[r] |= 64, n;
            }), s(a, "priv", function() {
                return this.eddsa.decodeInt(this.privBytes());
            }), s(a, "hash", function() {
                return this.eddsa.hash().update(this.secret()).digest();
            }), s(a, "messagePrefix", function() {
                return this.hash().slice(this.eddsa.encodingLength);
            }), a.prototype.sign = function(t) {
                return i(this._secret, "KeyPair can only verify"), this.eddsa.sign(t, this);
            }, a.prototype.verify = function(t, e) {
                return this.eddsa.verify(t, e, this);
            }, a.prototype.getSecret = function(t) {
                return i(this._secret, "KeyPair is public only"), n152.encode(this.secret(), t);
            }, a.prototype.getPublic = function(t) {
                return n152.encode(this.pubBytes(), t);
            }, t572.exports = a;
        },
        function(t573, e361, r) {
            "use strict";
            function n(t574) {
                return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t574);
            }
            var i = r(21), o = r(11), s = o.assert, a = o.cachedProperty, u = o.parseBytes;
            function h(t, e) {
                this.eddsa = t, "object" !== n(e) && (e = u(e)), Array.isArray(e) && (e = {
                    R: e.slice(0, t.encodingLength),
                    S: e.slice(t.encodingLength)
                }), s(e.R && e.S, "Signature without R or S"), t.isPoint(e.R) && (this._R = e.R), e.S instanceof i && (this._S = e.S), this._Rencoded = Array.isArray(e.R) ? e.R : e.Rencoded, this._Sencoded = Array.isArray(e.S) ? e.S : e.Sencoded;
            }
            a(h, "S", function() {
                return this.eddsa.decodeInt(this.Sencoded());
            }), a(h, "R", function() {
                return this.eddsa.decodePoint(this.Rencoded());
            }), a(h, "Rencoded", function() {
                return this.eddsa.encodePoint(this.R());
            }), a(h, "Sencoded", function() {
                return this.eddsa.encodeInt(this.S());
            }), h.prototype.toBytes = function() {
                return this.Rencoded().concat(this.Sencoded());
            }, h.prototype.toHex = function() {
                return o.encode(this.toBytes(), "hex").toUpperCase();
            }, t573.exports = h;
        },
        function(t, e, r) {
            "use strict";
            var n = r(133);
            e.certificate = r(259);
            var i = n.define("RSAPrivateKey", function() {
                this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
            });
            e.RSAPrivateKey = i;
            var o = n.define("RSAPublicKey", function() {
                this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
            });
            e.RSAPublicKey = o;
            var s = n.define("SubjectPublicKeyInfo", function() {
                this.seq().obj(this.key("algorithm").use(a), this.key("subjectPublicKey").bitstr());
            });
            e.PublicKey = s;
            var a = n.define("AlgorithmIdentifier", function() {
                this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
            }), u = n.define("PrivateKeyInfo", function() {
                this.seq().obj(this.key("version").int(), this.key("algorithm").use(a), this.key("subjectPrivateKey").octstr());
            });
            e.PrivateKey = u;
            var h = n.define("EncryptedPrivateKeyInfo", function() {
                this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
            });
            e.EncryptedPrivateKey = h;
            var f = n.define("DSAPrivateKey", function() {
                this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
            });
            e.DSAPrivateKey = f, e.DSAparam = n.define("DSAparam", function() {
                this.int();
            });
            var c = n.define("ECPrivateKey", function() {
                this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(l), this.key("publicKey").optional().explicit(1).bitstr());
            });
            e.ECPrivateKey = c;
            var l = n.define("ECParameters", function() {
                this.choice({
                    namedCurve: this.objid()
                });
            });
            e.signature = n.define("signature", function() {
                this.seq().obj(this.key("r").int(), this.key("s").int());
            });
        },
        function(t, e) {
        },
        function(t575, e362, r271) {
            "use strict";
            var n = r271(135), i = r271(137), o = r271(0);
            function s(t, e) {
                this.name = t, this.body = e, this.decoders = {
                }, this.encoders = {
                };
            }
            e362.define = function(t, e) {
                return new s(t, e);
            }, s.prototype._createNamed = function(t576) {
                var e363 = this.name;
                function r272(t) {
                    this._initNamed(t, e363);
                }
                return o(r272, t576), r272.prototype._initNamed = function(e, r) {
                    t576.call(this, e, r);
                }, new r272(this);
            }, s.prototype._getDecoder = function(t) {
                return t = t || "der", this.decoders.hasOwnProperty(t) || (this.decoders[t] = this._createNamed(i[t])), this.decoders[t];
            }, s.prototype.decode = function(t, e, r) {
                return this._getDecoder(e).decode(t, r);
            }, s.prototype._getEncoder = function(t) {
                return t = t || "der", this.encoders.hasOwnProperty(t) || (this.encoders[t] = this._createNamed(n[t])), this.encoders[t];
            }, s.prototype.encode = function(t, e, r) {
                return this._getEncoder(e).encode(t, r);
            };
        },
        function(t577, e364, r273) {
            "use strict";
            var n153 = r273(0), i = r273(136);
            function o87(t) {
                i.call(this, t), this.enc = "pem";
            }
            n153(o87, i), t577.exports = o87, o87.prototype.encode = function(t, e) {
                for(var r = i.prototype.encode.call(this, t).toString("base64"), n = [
                    "-----BEGIN " + e.label + "-----"
                ], o = 0; o < r.length; o += 64)n.push(r.slice(o, o + 64));
                return n.push("-----END " + e.label + "-----"), n.join("\n");
            };
        },
        function(t578, e365, r274) {
            "use strict";
            var n154 = r274(0), i = r274(76).Buffer, o = r274(138);
            function s69(t) {
                o.call(this, t), this.enc = "pem";
            }
            n154(s69, o), t578.exports = s69, s69.prototype.decode = function(t, e) {
                for(var r = t.toString().split(/[\r\n]+/g), n = e.label.toUpperCase(), s = /^-----(BEGIN|END) ([^-]+)-----$/, a = -1, u = -1, h = 0; h < r.length; h++){
                    var f = r[h].match(s);
                    if (null !== f && f[2] === n) {
                        if (-1 !== a) {
                            if ("END" !== f[1]) break;
                            u = h;
                            break;
                        }
                        if ("BEGIN" !== f[1]) break;
                        a = h;
                    }
                }
                if (-1 === a || -1 === u) throw new Error("PEM section not found for: " + n);
                var c = r.slice(a + 1, u).join("");
                c.replace(/[^a-z0-9+/=]+/gi, "");
                var l = i.from(c, "base64");
                return o.prototype.decode.call(this, l, e);
            };
        },
        function(t, e, r) {
            "use strict";
            var n = e;
            n.Reporter = r(78).Reporter, n.DecoderBuffer = r(40).DecoderBuffer, n.EncoderBuffer = r(40).EncoderBuffer, n.Node = r(77);
        },
        function(t579, e366, r275) {
            "use strict";
            var n = e366;
            n._reverse = function(t) {
                var e = {
                };
                return Object.keys(t).forEach(function(r) {
                    (0 | r) == r && (r |= 0);
                    var n = t[r];
                    e[n] = r;
                }), e;
            }, n.der = r275(79);
        },
        function(t, e, r) {
            "use strict";
            var n = r(133), i = n.define("Time", function() {
                this.choice({
                    utcTime: this.utctime(),
                    generalTime: this.gentime()
                });
            }), o = n.define("AttributeTypeValue", function() {
                this.seq().obj(this.key("type").objid(), this.key("value").any());
            }), s = n.define("AlgorithmIdentifier", function() {
                this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
            }), a = n.define("SubjectPublicKeyInfo", function() {
                this.seq().obj(this.key("algorithm").use(s), this.key("subjectPublicKey").bitstr());
            }), u = n.define("RelativeDistinguishedName", function() {
                this.setof(o);
            }), h = n.define("RDNSequence", function() {
                this.seqof(u);
            }), f = n.define("Name", function() {
                this.choice({
                    rdnSequence: this.use(h)
                });
            }), c = n.define("Validity", function() {
                this.seq().obj(this.key("notBefore").use(i), this.key("notAfter").use(i));
            }), l = n.define("Extension", function() {
                this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(!1), this.key("extnValue").octstr());
            }), d = n.define("TBSCertificate", function() {
                this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(s), this.key("issuer").use(f), this.key("validity").use(c), this.key("subject").use(f), this.key("subjectPublicKeyInfo").use(a), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(l).optional());
            }), p = n.define("X509Certificate", function() {
                this.seq().obj(this.key("tbsCertificate").use(d), this.key("signatureAlgorithm").use(s), this.key("signatureValue").bitstr());
            });
            t.exports = p;
        },
        function(t) {
            t.exports = JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}');
        },
        function(t580, e367, r276) {
            var n = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m, i = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m, o = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m, s = r276(49), a = r276(67), u = r276(2).Buffer;
            t580.exports = function(t, e) {
                var r, h = t.toString(), f = h.match(n);
                if (f) {
                    var c = "aes" + f[1], l = u.from(f[2], "hex"), d = u.from(f[3].replace(/[\r\n]/g, ""), "base64"), p = s(e, l.slice(0, 8), parseInt(f[1], 10)).key, y = [], m = a.createDecipheriv(c, p, l);
                    y.push(m.update(d)), y.push(m.final()), r = u.concat(y);
                } else {
                    var b = h.match(o);
                    r = u.from(b[2].replace(/[\r\n]/g, ""), "base64");
                }
                return {
                    tag: h.match(i)[1],
                    data: r
                };
            };
        },
        function(t581, e368, r277) {
            var n155 = r277(70).Buffer, i131 = r277(72), o88 = r277(73).ec, s70 = r277(51), a67 = r277(139);
            function u(t, e) {
                if (t.cmpn(0) <= 0) throw new Error("invalid sig");
                if (t.cmp(e) >= e) throw new Error("invalid sig");
            }
            t581.exports = function(t582, e369, r278, h41, f43) {
                var c30 = s70(r278);
                if ("ec" === c30.type) {
                    if ("ecdsa" !== h41 && "ecdsa/rsa" !== h41) throw new Error("wrong public key type");
                    return (function(t, e, r) {
                        var n = a67[r.data.algorithm.curve.join(".")];
                        if (!n) throw new Error("unknown curve " + r.data.algorithm.curve.join("."));
                        var i = new o88(n), s = r.data.subjectPrivateKey.data;
                        return i.verify(e, t, s);
                    })(t582, e369, c30);
                }
                if ("dsa" === c30.type) {
                    if ("dsa" !== h41) throw new Error("wrong public key type");
                    return (function(t, e, r) {
                        var n = r.data.p, o = r.data.q, a = r.data.g, h = r.data.pub_key, f = s70.signature.decode(t, "der"), c = f.s, l = f.r;
                        u(c, o), u(l, o);
                        var d = i131.mont(n), p = c.invm(o);
                        return 0 === a.toRed(d).redPow(new i131(e).mul(p).mod(o)).fromRed().mul(h.toRed(d).redPow(l.mul(p).mod(o)).fromRed()).mod(n).mod(o).cmp(l);
                    })(t582, e369, c30);
                }
                if ("rsa" !== h41 && "ecdsa/rsa" !== h41) throw new Error("wrong public key type");
                e369 = n155.concat([
                    f43,
                    e369
                ]);
                for(var l27 = c30.modulus.byteLength(), d16 = [
                    1
                ], p18 = 0; e369.length + d16.length + 2 < l27;)d16.push(255), p18++;
                d16.push(0);
                for(var y = -1; ++y < e369.length;)d16.push(e369[y]);
                d16 = n155.from(d16);
                var m = i131.mont(c30.modulus);
                t582 = (t582 = new i131(t582).toRed(m)).redPow(new i131(c30.publicExponent)), t582 = n155.from(t582.fromRed().toArray());
                var b = p18 < 8 ? 1 : 0;
                for(l27 = Math.min(t582.length, d16.length), t582.length !== d16.length && (b = 1), y = -1; ++y < l27;)b |= t582[y] ^ d16[y];
                return 0 === b;
            };
        },
        function(t583, e370, r279) {
            (function(e371) {
                var n156 = r279(73), i132 = r279(264);
                t583.exports = function(t) {
                    return new s(t);
                };
                var o89 = {
                    secp256k1: {
                        name: "secp256k1",
                        byteLength: 32
                    },
                    secp224r1: {
                        name: "p224",
                        byteLength: 28
                    },
                    prime256v1: {
                        name: "p256",
                        byteLength: 32
                    },
                    prime192v1: {
                        name: "p192",
                        byteLength: 24
                    },
                    ed25519: {
                        name: "ed25519",
                        byteLength: 32
                    },
                    secp384r1: {
                        name: "p384",
                        byteLength: 48
                    },
                    secp521r1: {
                        name: "p521",
                        byteLength: 66
                    }
                };
                function s(t) {
                    this.curveType = o89[t], this.curveType || (this.curveType = {
                        name: t
                    }), this.curve = new n156.ec(this.curveType.name), this.keys = void 0;
                }
                function a(t, r, n) {
                    Array.isArray(t) || (t = t.toArray());
                    var i = new e371(t);
                    if (n && i.length < n) {
                        var o = new e371(n - i.length);
                        o.fill(0), i = e371.concat([
                            o,
                            i
                        ]);
                    }
                    return r ? i.toString(r) : i;
                }
                o89.p224 = o89.secp224r1, o89.p256 = o89.secp256r1 = o89.prime256v1, o89.p192 = o89.secp192r1 = o89.prime192v1, o89.p384 = o89.secp384r1, o89.p521 = o89.secp521r1, s.prototype.generateKeys = function(t, e) {
                    return this.keys = this.curve.genKeyPair(), this.getPublicKey(t, e);
                }, s.prototype.computeSecret = function(t, r, n) {
                    return r = r || "utf8", e371.isBuffer(t) || (t = new e371(t, r)), a(this.curve.keyFromPublic(t).getPublic().mul(this.keys.getPrivate()).getX(), n, this.curveType.byteLength);
                }, s.prototype.getPublicKey = function(t, e) {
                    var r = this.keys.getPublic("compressed" === e, !0);
                    return "hybrid" === e && (r[r.length - 1] % 2 ? r[0] = 7 : r[0] = 6), a(r, t);
                }, s.prototype.getPrivateKey = function(t) {
                    return a(this.keys.getPrivate(), t);
                }, s.prototype.setPublicKey = function(t, r) {
                    return r = r || "utf8", e371.isBuffer(t) || (t = new e371(t, r)), this.keys._importPublic(t), this;
                }, s.prototype.setPrivateKey = function(t, r) {
                    r = r || "utf8", e371.isBuffer(t) || (t = new e371(t, r));
                    var n = new i132(t);
                    return n = n.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(n), this;
                };
            }).call(this, r279(3).Buffer);
        },
        function(t584, e372, r280) {
            (function(t585) {
                function e373(t586) {
                    return (e373 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t586);
                }
                !function(t587, n157) {
                    function i133(t, e) {
                        if (!t) throw new Error(e || "Assertion failed");
                    }
                    function o90(t, e) {
                        t.super_ = e;
                        var r = function() {
                        };
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t;
                    }
                    function s71(t, e, r) {
                        if (s71.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
                    }
                    var a68;
                    "object" === e373(t587) ? t587.exports = s71 : n157.BN = s71, s71.BN = s71, s71.wordSize = 26;
                    try {
                        a68 = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r280(265).Buffer;
                    } catch (t588) {
                    }
                    function u62(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
                    }
                    function h42(t, e, r) {
                        var n = u62(t, r);
                        return r - 1 >= e && (n |= u62(t, r - 1) << 4), n;
                    }
                    function f44(t, e, r, n) {
                        for(var i = 0, o = Math.min(t.length, r), s = e; s < o; s++){
                            var a = t.charCodeAt(s) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
                        }
                        return i;
                    }
                    s71.isBN = function(t) {
                        return t instanceof s71 || null !== t && "object" === e373(t) && t.constructor.wordSize === s71.wordSize && Array.isArray(t.words);
                    }, s71.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e;
                    }, s71.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e;
                    }, s71.prototype._init = function(t, r, n) {
                        if ("number" == typeof t) return this._initNumber(t, r, n);
                        if ("object" === e373(t)) return this._initArray(t, r, n);
                        "hex" === r && (r = 16), i133(r === (0 | r) && r >= 2 && r <= 36);
                        var o = 0;
                        "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
                    }, s71.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [
                            67108863 & t
                        ], this.length = 1) : t < 4503599627370496 ? (this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863
                        ], this.length = 2) : (i133(t < 9007199254740992), this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863,
                            1
                        ], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
                    }, s71.prototype._initArray = function(t, e, r) {
                        if (i133("number" == typeof t.length), t.length <= 0) return this.words = [
                            0
                        ], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var o, s, a = 0;
                        if ("be" === r) for(n = t.length - 1, o = 0; n >= 0; n -= 3)s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        else if ("le" === r) for(n = 0, o = 0; n < t.length; n += 3)s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
                        return this.strip();
                    }, s71.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var i, o = 0, s = 0;
                        if ("be" === r) for(n = t.length - 1; n >= e; n -= 2)i = h42(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        else for(n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2)i = h42(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        this.strip();
                    }, s71.prototype._parseBase = function(t, e, r) {
                        this.words = [
                            0
                        ], this.length = 1;
                        for(var n = 0, i = 1; i <= 67108863; i *= e)n++;
                        n--, i = i / e | 0;
                        for(var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n)u = f44(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var c = 1;
                            for(u = f44(t, h, t.length, e), h = 0; h < s; h++)c *= e;
                            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        }
                        this.strip();
                    }, s71.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for(var e = 0; e < this.length; e++)t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red;
                    }, s71.prototype.clone = function() {
                        var t = new s71(null);
                        return this.copy(t), t;
                    }, s71.prototype._expand = function(t) {
                        for(; this.length < t;)this.words[this.length++] = 0;
                        return this;
                    }, s71.prototype.strip = function() {
                        for(; this.length > 1 && 0 === this.words[this.length - 1];)this.length--;
                        return this._normSign();
                    }, s71.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }, s71.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    };
                    var c31 = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000"
                    ], l28 = [
                        0,
                        0,
                        25,
                        16,
                        12,
                        11,
                        10,
                        9,
                        8,
                        8,
                        7,
                        7,
                        7,
                        7,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5
                    ], d17 = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        10000000,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64000000,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        24300000,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176
                    ];
                    function p19(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0], o = 0 | e.words[0], s = i * o, a = 67108863 & s, u = s / 67108864 | 0;
                        r.words[0] = a;
                        for(var h = 1; h < n; h++){
                            for(var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++){
                                var p = h - d | 0;
                                f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
                            }
                            r.words[h] = 0 | c, u = 0 | f;
                        }
                        return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip();
                    }
                    s71.prototype.toString = function(t, e) {
                        var r;
                        if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                            r = "";
                            for(var n = 0, o = 0, s = 0; s < this.length; s++){
                                var a = this.words[s], u = (16777215 & (a << n | o)).toString(16);
                                r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? c31[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
                            }
                            for(0 !== o && (r = o.toString(16) + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var h = l28[t], f = d17[t];
                            r = "";
                            var p = this.clone();
                            for(p.negative = 0; !p.isZero();){
                                var y = p.modn(f).toString(t);
                                r = (p = p.idivn(f)).isZero() ? y + r : c31[h - y.length] + y + r;
                            }
                            for(this.isZero() && (r = "0" + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        i133(!1, "Base should be between 2 and 36");
                    }, s71.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i133(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
                    }, s71.prototype.toJSON = function() {
                        return this.toString(16);
                    }, s71.prototype.toBuffer = function(t, e) {
                        return i133(void 0 !== a68), this.toArrayLike(a68, t, e);
                    }, s71.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e);
                    }, s71.prototype.toArrayLike = function(t, e, r) {
                        var n = this.byteLength(), o = r || Math.max(1, n);
                        i133(n <= o, "byte array longer than desired length"), i133(o > 0, "Requested array length <= 0"), this.strip();
                        var s, a, u = "le" === e, h = new t(o), f = this.clone();
                        if (u) {
                            for(a = 0; !f.isZero(); a++)s = f.andln(255), f.iushrn(8), h[a] = s;
                            for(; a < o; a++)h[a] = 0;
                        } else {
                            for(a = 0; a < o - n; a++)h[a] = 0;
                            for(a = 0; !f.isZero(); a++)s = f.andln(255), f.iushrn(8), h[o - a - 1] = s;
                        }
                        return h;
                    }, Math.clz32 ? s71.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t);
                    } : s71.prototype._countBits = function(t) {
                        var e = t, r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
                    }, s71.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t, r = 0;
                        return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
                    }, s71.prototype.bitLength = function() {
                        var t = this.words[this.length - 1], e = this._countBits(t);
                        return 26 * (this.length - 1) + e;
                    }, s71.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for(var t = 0, e = 0; e < this.length; e++){
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break;
                        }
                        return t;
                    }, s71.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8);
                    }, s71.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
                    }, s71.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
                    }, s71.prototype.isNeg = function() {
                        return 0 !== this.negative;
                    }, s71.prototype.neg = function() {
                        return this.clone().ineg();
                    }, s71.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this;
                    }, s71.prototype.iuor = function(t) {
                        for(; this.length < t.length;)this.words[this.length++] = 0;
                        for(var e = 0; e < t.length; e++)this.words[e] = this.words[e] | t.words[e];
                        return this.strip();
                    }, s71.prototype.ior = function(t) {
                        return i133(0 == (this.negative | t.negative)), this.iuor(t);
                    }, s71.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
                    }, s71.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
                    }, s71.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for(var r = 0; r < e.length; r++)this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this.strip();
                    }, s71.prototype.iand = function(t) {
                        return i133(0 == (this.negative | t.negative)), this.iuand(t);
                    }, s71.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
                    }, s71.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
                    }, s71.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for(var n = 0; n < r.length; n++)this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e) for(; n < e.length; n++)this.words[n] = e.words[n];
                        return this.length = e.length, this.strip();
                    }, s71.prototype.ixor = function(t) {
                        return i133(0 == (this.negative | t.negative)), this.iuxor(t);
                    }, s71.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
                    }, s71.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
                    }, s71.prototype.inotn = function(t) {
                        i133("number" == typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26), r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for(var n = 0; n < e; n++)this.words[n] = 67108863 & ~this.words[n];
                        return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip();
                    }, s71.prototype.notn = function(t) {
                        return this.clone().inotn(t);
                    }, s71.prototype.setn = function(t, e) {
                        i133("number" == typeof t && t >= 0);
                        var r = t / 26 | 0, n = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip();
                    }, s71.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for(var i = 0, o = 0; o < n.length; o++)e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for(; 0 !== i && o < r.length; o++)e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this) for(; o < r.length; o++)this.words[o] = r.words[o];
                        return this;
                    }, s71.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
                    }, s71.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign();
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for(var o = 0, s = 0; s < n.length; s++)o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        for(; 0 !== o && s < r.length; s++)o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
                        if (0 === o && s < r.length && r !== this) for(; s < r.length; s++)this.words[s] = r.words[s];
                        return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip();
                    }, s71.prototype.sub = function(t) {
                        return this.clone().isub(t);
                    };
                    var y15 = function(t, e, r) {
                        var n, i, o, s = t.words, a = e.words, u = r.words, h = 0, f = 0 | s[0], c = 8191 & f, l = f >>> 13, d = 0 | s[1], p = 8191 & d, y = d >>> 13, m = 0 | s[2], b = 8191 & m, v = m >>> 13, g = 0 | s[3], w = 8191 & g, _ = g >>> 13, M = 0 | s[4], S = 8191 & M, O = M >>> 13, A = 0 | s[5], E = 8191 & A, x = A >>> 13, k = 0 | s[6], j = 8191 & k, $ = k >>> 13, P = 0 | s[7], R = 8191 & P, B = P >>> 13, T = 0 | s[8], I = 8191 & T, N = T >>> 13, D = 0 | s[9], C = 8191 & D, L = D >>> 13, q = 0 | a[0], U = 8191 & q, F = q >>> 13, z = 0 | a[1], V = 8191 & z, K = z >>> 13, H = 0 | a[2], Z = 8191 & H, W = H >>> 13, J = 0 | a[3], Y = 8191 & J, Q = J >>> 13, G = 0 | a[4], X = 8191 & G, tt = G >>> 13, et = 0 | a[5], rt = 8191 & et, nt = et >>> 13, it = 0 | a[6], ot = 8191 & it, st = it >>> 13, at = 0 | a[7], ut = 8191 & at, ht = at >>> 13, ft = 0 | a[8], ct = 8191 & ft, lt = ft >>> 13, dt = 0 | a[9], pt = 8191 & dt, yt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19;
                        var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
                        h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
                        var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
                        var vt = (h + (n = n + Math.imul(c, Z) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, W) | 0) + Math.imul(l, Z) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, W) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, Z) | 0, i = (i = i + Math.imul(p, W) | 0) + Math.imul(y, Z) | 0, o = o + Math.imul(y, W) | 0;
                        var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Q) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, Q) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, Z) | 0, i = (i = i + Math.imul(b, W) | 0) + Math.imul(v, Z) | 0, o = o + Math.imul(v, W) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, Q) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, Q) | 0;
                        var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, Z) | 0, i = (i = i + Math.imul(w, W) | 0) + Math.imul(_, Z) | 0, o = o + Math.imul(_, W) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, Q) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, Q) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;
                        var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, Z) | 0, i = (i = i + Math.imul(S, W) | 0) + Math.imul(O, Z) | 0, o = o + Math.imul(O, W) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, Q) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, Q) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                        var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, Z) | 0, i = (i = i + Math.imul(E, W) | 0) + Math.imul(x, Z) | 0, o = o + Math.imul(x, W) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, Q) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, Q) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                        var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, Z) | 0, i = (i = i + Math.imul(j, W) | 0) + Math.imul($, Z) | 0, o = o + Math.imul($, W) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, Q) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, Q) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
                        var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, Z) | 0, i = (i = i + Math.imul(R, W) | 0) + Math.imul(B, Z) | 0, o = o + Math.imul(B, W) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, Q) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, Q) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
                        var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, Z) | 0, i = (i = i + Math.imul(I, W) | 0) + Math.imul(N, Z) | 0, o = o + Math.imul(N, W) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, Q) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, Q) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
                        var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, Z), i = (i = Math.imul(C, W)) + Math.imul(L, Z) | 0, o = Math.imul(L, W), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, Q) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, Q) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
                        var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, Q)) + Math.imul(L, Y) | 0, o = Math.imul(L, Q), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
                        var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
                        var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
                        var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
                        var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
                        var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
                        var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
                        h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
                        var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
                        return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
                    };
                    function m16(t, e, r) {
                        return (new b15).mulp(t, e, r);
                    }
                    function b15(t, e) {
                        this.x = t, this.y = e;
                    }
                    Math.imul || (y15 = p19), s71.prototype.mulTo = function(t589, e374) {
                        var r281 = this.length + t589.length;
                        return 10 === this.length && 10 === t589.length ? y15(this, t589, e374) : r281 < 63 ? p19(this, t589, e374) : r281 < 1024 ? (function(t, e, r) {
                            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                            for(var n = 0, i = 0, o = 0; o < r.length - 1; o++){
                                var s = i;
                                i = 0;
                                for(var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++){
                                    var f = o - h, c = (0 | t.words[f]) * (0 | e.words[h]), l = 67108863 & c;
                                    a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
                                }
                                r.words[o] = a, n = s, s = i;
                            }
                            return 0 !== n ? r.words[o] = n : r.length--, r.strip();
                        })(this, t589, e374) : m16(this, t589, e374);
                    }, b15.prototype.makeRBT = function(t) {
                        for(var e = new Array(t), r = s71.prototype._countBits(t) - 1, n = 0; n < t; n++)e[n] = this.revBin(n, r, t);
                        return e;
                    }, b15.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for(var n = 0, i = 0; i < e; i++)n |= (1 & t) << e - i - 1, t >>= 1;
                        return n;
                    }, b15.prototype.permute = function(t, e, r, n, i, o) {
                        for(var s = 0; s < o; s++)n[s] = e[t[s]], i[s] = r[t[s]];
                    }, b15.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for(var s = 1; s < i; s <<= 1)for(var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a)for(var c = u, l = h, d = 0; d < s; d++){
                            var p = r[f + d], y = n[f + d], m = r[f + d + s], b = n[f + d + s], v = c * m - l * b;
                            b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
                        }
                    }, b15.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t), n = 1 & r, i = 0;
                        for(r = r / 2 | 0; r; r >>>= 1)i++;
                        return 1 << i + 1 + n;
                    }, b15.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1)) for(var n = 0; n < r / 2; n++){
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
                        }
                    }, b15.prototype.normalize13b = function(t, e) {
                        for(var r = 0, n = 0; n < e / 2; n++){
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
                        }
                        return t;
                    }, b15.prototype.convert13b = function(t, e, r, n) {
                        for(var o = 0, s = 0; s < e; s++)o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                        for(s = 2 * e; s < n; ++s)r[s] = 0;
                        i133(0 === o), i133(0 == (-8192 & o));
                    }, b15.prototype.stub = function(t) {
                        for(var e = new Array(t), r = 0; r < t; r++)e[r] = 0;
                        return e;
                    }, b15.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length), i = this.makeRBT(n), o = this.stub(n), s = new Array(n), a = new Array(n), u = new Array(n), h = new Array(n), f = new Array(n), c = new Array(n), l = r.words;
                        l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);
                        for(var d = 0; d < n; d++){
                            var p = a[d] * f[d] - u[d] * c[d];
                            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip();
                    }, s71.prototype.mul = function(t) {
                        var e = new s71(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e);
                    }, s71.prototype.mulf = function(t) {
                        var e = new s71(null);
                        return e.words = new Array(this.length + t.length), m16(this, t, e);
                    }, s71.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this);
                    }, s71.prototype.imuln = function(t) {
                        i133("number" == typeof t), i133(t < 67108864);
                        for(var e = 0, r = 0; r < this.length; r++){
                            var n = (0 | this.words[r]) * t, o = (67108863 & n) + (67108863 & e);
                            e >>= 26, e += n / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o;
                        }
                        return 0 !== e && (this.words[r] = e, this.length++), this;
                    }, s71.prototype.muln = function(t) {
                        return this.clone().imuln(t);
                    }, s71.prototype.sqr = function() {
                        return this.mul(this);
                    }, s71.prototype.isqr = function() {
                        return this.imul(this.clone());
                    }, s71.prototype.pow = function(t590) {
                        var e375 = function(t) {
                            for(var e = new Array(t.bitLength()), r = 0; r < e.length; r++){
                                var n = r / 26 | 0, i = r % 26;
                                e[r] = (t.words[n] & 1 << i) >>> i;
                            }
                            return e;
                        }(t590);
                        if (0 === e375.length) return new s71(1);
                        for(var r282 = this, n = 0; n < e375.length && 0 === e375[n]; n++, r282 = r282.sqr());
                        if (++n < e375.length) for(var i134 = r282.sqr(); n < e375.length; n++, i134 = i134.sqr())0 !== e375[n] && (r282 = r282.mul(i134));
                        return r282;
                    }, s71.prototype.iushln = function(t) {
                        i133("number" == typeof t && t >= 0);
                        var e, r = t % 26, n = (t - r) / 26, o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var s = 0;
                            for(e = 0; e < this.length; e++){
                                var a = this.words[e] & o, u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | s, s = a >>> 26 - r;
                            }
                            s && (this.words[e] = s, this.length++);
                        }
                        if (0 !== n) {
                            for(e = this.length - 1; e >= 0; e--)this.words[e + n] = this.words[e];
                            for(e = 0; e < n; e++)this.words[e] = 0;
                            this.length += n;
                        }
                        return this.strip();
                    }, s71.prototype.ishln = function(t) {
                        return i133(0 === this.negative), this.iushln(t);
                    }, s71.prototype.iushrn = function(t, e, r) {
                        var n;
                        i133("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26, s = Math.min((t - o) / 26, this.length), a = 67108863 ^ 67108863 >>> o << o, u = r;
                        if (n -= s, n = Math.max(0, n), u) {
                            for(var h = 0; h < s; h++)u.words[h] = this.words[h];
                            u.length = s;
                        }
                        if (0 === s) ;
                        else if (this.length > s) for(this.length -= s, h = 0; h < this.length; h++)this.words[h] = this.words[h + s];
                        else this.words[0] = 0, this.length = 1;
                        var f = 0;
                        for(h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--){
                            var c = 0 | this.words[h];
                            this.words[h] = f << 26 - o | c >>> o, f = c & a;
                        }
                        return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
                    }, s71.prototype.ishrn = function(t, e, r) {
                        return i133(0 === this.negative), this.iushrn(t, e, r);
                    }, s71.prototype.shln = function(t) {
                        return this.clone().ishln(t);
                    }, s71.prototype.ushln = function(t) {
                        return this.clone().iushln(t);
                    }, s71.prototype.shrn = function(t) {
                        return this.clone().ishrn(t);
                    }, s71.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t);
                    }, s71.prototype.testn = function(t) {
                        i133("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        return !(this.length <= r) && !!(this.words[r] & n);
                    }, s71.prototype.imaskn = function(t) {
                        i133("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26;
                        if (i133(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var n = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= n;
                        }
                        return this.strip();
                    }, s71.prototype.maskn = function(t) {
                        return this.clone().imaskn(t);
                    }, s71.prototype.iaddn = function(t) {
                        return i133("number" == typeof t), i133(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
                    }, s71.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for(var e = 0; e < this.length && this.words[e] >= 67108864; e++)this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this;
                    }, s71.prototype.isubn = function(t) {
                        if (i133("number" == typeof t), i133(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else for(var e = 0; e < this.length && this.words[e] < 0; e++)this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this.strip();
                    }, s71.prototype.addn = function(t) {
                        return this.clone().iaddn(t);
                    }, s71.prototype.subn = function(t) {
                        return this.clone().isubn(t);
                    }, s71.prototype.iabs = function() {
                        return this.negative = 0, this;
                    }, s71.prototype.abs = function() {
                        return this.clone().iabs();
                    }, s71.prototype._ishlnsubmul = function(t, e, r) {
                        var n, o, s = t.length + r;
                        this._expand(s);
                        var a = 0;
                        for(n = 0; n < t.length; n++){
                            o = (0 | this.words[n + r]) + a;
                            var u = (0 | t.words[n]) * e;
                            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
                        }
                        for(; n < this.length - r; n++)a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
                        if (0 === a) return this.strip();
                        for(i133(-1 === a), a = 0, n = 0; n < this.length; n++)a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
                        return this.negative = 1, this.strip();
                    }, s71.prototype._wordDiv = function(t, e) {
                        var r = (this.length, t.length), n = this.clone(), i = t, o = 0 | i.words[i.length - 1];
                        0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                        var a, u = n.length - i.length;
                        if ("mod" !== e) {
                            (a = new s71(null)).length = u + 1, a.words = new Array(a.length);
                            for(var h = 0; h < a.length; h++)a.words[h] = 0;
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, u);
                        0 === f.negative && (n = f, a && (a.words[u] = 1));
                        for(var c = u - 1; c >= 0; c--){
                            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);
                            for(l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;)l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
                            a && (a.words[c] = l);
                        }
                        return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: a || null,
                            mod: n
                        };
                    }, s71.prototype.divmod = function(t, e, r) {
                        var n, o, a;
                        return i133(!t.isZero()), this.isZero() ? {
                            div: new s71(0),
                            mod: new s71(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
                            div: n,
                            mod: o
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
                            div: n,
                            mod: a.mod
                        }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
                            div: a.div,
                            mod: o
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new s71(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new s71(this.modn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new s71(this.modn(t.words[0]))
                        } : this._wordDiv(t, e);
                    }, s71.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div;
                    }, s71.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod;
                    }, s71.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod;
                    }, s71.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod, n = t.ushrn(1), i = t.andln(1), o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
                    }, s71.prototype.modn = function(t) {
                        i133(t <= 67108863);
                        for(var e = 67108864 % t, r = 0, n = this.length - 1; n >= 0; n--)r = (e * r + (0 | this.words[n])) % t;
                        return r;
                    }, s71.prototype.idivn = function(t) {
                        i133(t <= 67108863);
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = (0 | this.words[r]) + 67108864 * e;
                            this.words[r] = n / t | 0, e = n % t;
                        }
                        return this.strip();
                    }, s71.prototype.divn = function(t) {
                        return this.clone().idivn(t);
                    }, s71.prototype.egcd = function(t) {
                        i133(0 === t.negative), i133(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n = new s71(1), o = new s71(0), a = new s71(0), u = new s71(1), h = 0; e.isEven() && r.isEven();)e.iushrn(1), r.iushrn(1), ++h;
                        for(var f = r.clone(), c = e.clone(); !e.isZero();){
                            for(var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1);
                            if (l > 0) for(e.iushrn(l); l-- > 0;)(n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
                            for(var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1);
                            if (p > 0) for(r.iushrn(p); p-- > 0;)(a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(h)
                        };
                    }, s71.prototype._invmp = function(t) {
                        i133(0 === t.negative), i133(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n, o = new s71(1), a = new s71(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;){
                            for(var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1);
                            if (h > 0) for(e.iushrn(h); h-- > 0;)o.isOdd() && o.iadd(u), o.iushrn(1);
                            for(var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                            if (c > 0) for(r.iushrn(c); c-- > 0;)a.isOdd() && a.iadd(u), a.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
                        }
                        return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
                    }, s71.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(), r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for(var n = 0; e.isEven() && r.isEven(); n++)e.iushrn(1), r.iushrn(1);
                        for(;;){
                            for(; e.isEven();)e.iushrn(1);
                            for(; r.isEven();)r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o;
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r);
                        }
                        return r.iushln(n);
                    }, s71.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t);
                    }, s71.prototype.isEven = function() {
                        return 0 == (1 & this.words[0]);
                    }, s71.prototype.isOdd = function() {
                        return 1 == (1 & this.words[0]);
                    }, s71.prototype.andln = function(t) {
                        return this.words[0] & t;
                    }, s71.prototype.bincn = function(t) {
                        i133("number" == typeof t);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                        for(var o = n, s = r; 0 !== o && s < this.length; s++){
                            var a = 0 | this.words[s];
                            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
                        }
                        return 0 !== o && (this.words[s] = o, this.length++), this;
                    }, s71.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0];
                    }, s71.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), i133(t <= 67108863, "Number is too big");
                            var n = 0 | this.words[0];
                            e = n === t ? 0 : n < t ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s71.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e;
                    }, s71.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = 0 | this.words[r], i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break;
                            }
                        }
                        return e;
                    }, s71.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t);
                    }, s71.prototype.gt = function(t) {
                        return 1 === this.cmp(t);
                    }, s71.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0;
                    }, s71.prototype.gte = function(t) {
                        return this.cmp(t) >= 0;
                    }, s71.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t);
                    }, s71.prototype.lt = function(t) {
                        return -1 === this.cmp(t);
                    }, s71.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0;
                    }, s71.prototype.lte = function(t) {
                        return this.cmp(t) <= 0;
                    }, s71.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t);
                    }, s71.prototype.eq = function(t) {
                        return 0 === this.cmp(t);
                    }, s71.red = function(t) {
                        return new O10(t);
                    }, s71.prototype.toRed = function(t) {
                        return i133(!this.red, "Already a number in reduction context"), i133(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
                    }, s71.prototype.fromRed = function() {
                        return i133(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }, s71.prototype._forceRed = function(t) {
                        return this.red = t, this;
                    }, s71.prototype.forceRed = function(t) {
                        return i133(!this.red, "Already a number in reduction context"), this._forceRed(t);
                    }, s71.prototype.redAdd = function(t) {
                        return i133(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
                    }, s71.prototype.redIAdd = function(t) {
                        return i133(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
                    }, s71.prototype.redSub = function(t) {
                        return i133(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
                    }, s71.prototype.redISub = function(t) {
                        return i133(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
                    }, s71.prototype.redShl = function(t) {
                        return i133(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
                    }, s71.prototype.redMul = function(t) {
                        return i133(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
                    }, s71.prototype.redIMul = function(t) {
                        return i133(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
                    }, s71.prototype.redSqr = function() {
                        return i133(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }, s71.prototype.redISqr = function() {
                        return i133(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }, s71.prototype.redSqrt = function() {
                        return i133(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }, s71.prototype.redInvm = function() {
                        return i133(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }, s71.prototype.redNeg = function() {
                        return i133(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }, s71.prototype.redPow = function(t) {
                        return i133(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
                    };
                    var v14 = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };
                    function g12(t, e) {
                        this.name = t, this.p = new s71(e, 16), this.n = this.p.bitLength(), this.k = new s71(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
                    }
                    function w11() {
                        g12.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                    }
                    function _12() {
                        g12.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                    }
                    function M9() {
                        g12.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                    }
                    function S10() {
                        g12.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                    }
                    function O10(t) {
                        if ("string" == typeof t) {
                            var e = s71._prime(t);
                            this.m = e.p, this.prime = e;
                        } else i133(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
                    }
                    function A10(t) {
                        O10.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s71(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
                    }
                    g12.prototype._tmp = function() {
                        var t = new s71(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t;
                    }, g12.prototype.ireduce = function(t) {
                        var e, r = t;
                        do this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                        while (e > this.n)
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }, g12.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e);
                    }, g12.prototype.imulK = function(t) {
                        return t.imul(this.k);
                    }, o90(w11, g12), w11.prototype.split = function(t, e) {
                        for(var r = Math.min(t.length, 9), n = 0; n < r; n++)e.words[n] = t.words[n];
                        if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
                        var i = t.words[9];
                        for(e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++){
                            var o = 0 | t.words[n];
                            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
                        }
                        i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
                    }, w11.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
                    }, o90(_12, g12), o90(M9, g12), o90(S10, g12), S10.prototype.imulK = function(t) {
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 19 * (0 | t.words[r]) + e, i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n;
                        }
                        return 0 !== e && (t.words[t.length++] = e), t;
                    }, s71._prime = function(t) {
                        if (v14[t]) return v14[t];
                        var e;
                        if ("k256" === t) e = new w11;
                        else if ("p224" === t) e = new _12;
                        else if ("p192" === t) e = new M9;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new S10;
                        }
                        return v14[t] = e, e;
                    }, O10.prototype._verify1 = function(t) {
                        i133(0 === t.negative, "red works only with positives"), i133(t.red, "red works only with red numbers");
                    }, O10.prototype._verify2 = function(t, e) {
                        i133(0 == (t.negative | e.negative), "red works only with positives"), i133(t.red && t.red === e.red, "red works only with red numbers");
                    }, O10.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
                    }, O10.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
                    }, O10.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
                    }, O10.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                    }, O10.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
                    }, O10.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r;
                    }, O10.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e));
                    }, O10.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e));
                    }, O10.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e));
                    }, O10.prototype.isqr = function(t) {
                        return this.imul(t, t.clone());
                    }, O10.prototype.sqr = function(t) {
                        return this.mul(t, t);
                    }, O10.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (i133(e % 2 == 1), 3 === e) {
                            var r = this.m.add(new s71(1)).iushrn(2);
                            return this.pow(t, r);
                        }
                        for(var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);)o++, n.iushrn(1);
                        i133(!n.isZero());
                        var a = new s71(1).toRed(this), u = a.redNeg(), h = this.m.subn(1).iushrn(1), f = this.m.bitLength();
                        for(f = new s71(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);)f.redIAdd(u);
                        for(var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);){
                            for(var y = d, m = 0; 0 !== y.cmp(a); m++)y = y.redSqr();
                            i133(m < p);
                            var b = this.pow(c, new s71(1).iushln(p - m - 1));
                            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
                        }
                        return l;
                    }, O10.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
                    }, O10.prototype.pow = function(t, e) {
                        if (e.isZero()) return new s71(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = new Array(16);
                        r[0] = new s71(1).toRed(this), r[1] = t;
                        for(var n = 2; n < r.length; n++)r[n] = this.mul(r[n - 1], t);
                        var i = r[0], o = 0, a = 0, u = e.bitLength() % 26;
                        for(0 === u && (u = 26), n = e.length - 1; n >= 0; n--){
                            for(var h = e.words[n], f = u - 1; f >= 0; f--){
                                var c = h >> f & 1;
                                i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
                            }
                            u = 26;
                        }
                        return i;
                    }, O10.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e;
                    }, O10.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e;
                    }, s71.mont = function(t) {
                        return new A10(t);
                    }, o90(A10, O10), A10.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift));
                    }, A10.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e;
                    }, A10.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A10.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new s71(0)._forceRed(this);
                        var r = t.mul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A10.prototype.invm = function(t) {
                        return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
                    };
                }(t585, this);
            }).call(this, r280(24)(t584));
        },
        function(t, e) {
        },
        function(t591, e, r283) {
            e.publicEncrypt = r283(267), e.privateDecrypt = r283(269), e.privateEncrypt = function(t, r) {
                return e.publicEncrypt(t, r, !0);
            }, e.publicDecrypt = function(t, r) {
                return e.privateDecrypt(t, r, !0);
            };
        },
        function(t592, e376, r284) {
            var n158 = r284(51), i = r284(28), o91 = r284(35), s72 = r284(140), a = r284(141), u = r284(80), h43 = r284(142), f45 = r284(71), c = r284(2).Buffer;
            t592.exports = function(t593, e377, r285) {
                var l29;
                l29 = t593.padding ? t593.padding : r285 ? 1 : 4;
                var d18, p20 = n158(t593);
                if (4 === l29) d18 = (function(t, e) {
                    var r = t.modulus.byteLength(), n = e.length, h = o91("sha1").update(c.alloc(0)).digest(), f = h.length, l = 2 * f;
                    if (n > r - l - 2) throw new Error("message too long");
                    var d = c.alloc(r - n - l - 2), p = r - f - 1, y = i(f), m = a(c.concat([
                        h,
                        d,
                        c.alloc(1, 1),
                        e
                    ], p), s72(y, p)), b = a(y, s72(m, f));
                    return new u(c.concat([
                        c.alloc(1),
                        b,
                        m
                    ], r));
                })(p20, e377);
                else if (1 === l29) d18 = (function(t594, e378, r286) {
                    var n159, o92 = e378.length, s73 = t594.modulus.byteLength();
                    if (o92 > s73 - 11) throw new Error("message too long");
                    n159 = r286 ? c.alloc(s73 - o92 - 3, 255) : (function(t) {
                        var e, r = c.allocUnsafe(t), n = 0, o = i(2 * t), s = 0;
                        for(; n < t;)s === o.length && (o = i(2 * t), s = 0), (e = o[s++]) && (r[n++] = e);
                        return r;
                    })(s73 - o92 - 3);
                    return new u(c.concat([
                        c.from([
                            0,
                            r286 ? 1 : 2
                        ]),
                        n159,
                        c.alloc(1),
                        e378
                    ], s73));
                })(p20, e377, r285);
                else {
                    if (3 !== l29) throw new Error("unknown padding");
                    if ((d18 = new u(e377)).cmp(p20.modulus) >= 0) throw new Error("data too long for modulus");
                }
                return r285 ? f45(d18, p20) : h43(d18, p20);
            };
        },
        function(t, e) {
        },
        function(t595, e379, r287) {
            var n160 = r287(51), i135 = r287(140), o93 = r287(141), s74 = r287(80), a69 = r287(71), u = r287(35), h44 = r287(142), f = r287(2).Buffer;
            t595.exports = function(t596, e380, r288) {
                var c32;
                c32 = t596.padding ? t596.padding : r288 ? 1 : 4;
                var l30, d19 = n160(t596), p = d19.modulus.byteLength();
                if (e380.length > p || new s74(e380).cmp(d19.modulus) >= 0) throw new Error("decryption error");
                l30 = r288 ? h44(new s74(e380), d19) : a69(e380, d19);
                var y = f.alloc(p - l30.length);
                if (l30 = f.concat([
                    y,
                    l30
                ], p), 4 === c32) return (function(t597, e381) {
                    var r289 = t597.modulus.byteLength(), n161 = u("sha1").update(f.alloc(0)).digest(), s = n161.length;
                    if (0 !== e381[0]) throw new Error("decryption error");
                    var a = e381.slice(1, s + 1), h = e381.slice(s + 1), c = o93(a, i135(h, s)), l = o93(h, i135(c, r289 - s - 1));
                    if ((function(t, e) {
                        t = f.from(t), e = f.from(e);
                        var r = 0, n = t.length;
                        t.length !== e.length && (r++, n = Math.min(t.length, e.length));
                        var i = -1;
                        for(; ++i < n;)r += t[i] ^ e[i];
                        return r;
                    })(n161, l.slice(0, s))) throw new Error("decryption error");
                    var d = s;
                    for(; 0 === l[d];)d++;
                    if (1 !== l[d++]) throw new Error("decryption error");
                    return l.slice(d);
                })(d19, l30);
                if (1 === c32) return (function(t, e, r) {
                    var n = e.slice(0, 2), i = 2, o = 0;
                    for(; 0 !== e[i++];)if (i >= e.length) {
                        o++;
                        break;
                    }
                    var s = e.slice(2, i - 1);
                    ("0002" !== n.toString("hex") && !r || "0001" !== n.toString("hex") && r) && o++;
                    s.length < 8 && o++;
                    if (o) throw new Error("decryption error");
                    return e.slice(i);
                })(0, l30, r288);
                if (3 === c32) return l30;
                throw new Error("unknown padding");
            };
        },
        function(t598, e382, r290) {
            "use strict";
            (function(t599, n162) {
                function i136() {
                    throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");
                }
                var o94 = r290(2), s = r290(28), a70 = o94.Buffer, u = o94.kMaxLength, h = t599.crypto || t599.msCrypto, f = Math.pow(2, 32) - 1;
                function c(t, e) {
                    if ("number" != typeof t || t != t) throw new TypeError("offset must be a number");
                    if (t > f || t < 0) throw new TypeError("offset must be a uint32");
                    if (t > u || t > e) throw new RangeError("offset out of range");
                }
                function l(t, e, r) {
                    if ("number" != typeof t || t != t) throw new TypeError("size must be a number");
                    if (t > f || t < 0) throw new TypeError("size must be a uint32");
                    if (t + e > r || t > u) throw new RangeError("buffer too small");
                }
                function d(t, e, r291, i) {
                    if (n162.browser) {
                        var o = t.buffer, a = new Uint8Array(o, e, r291);
                        return h.getRandomValues(a), i ? void n162.nextTick(function() {
                            i(null, t);
                        }) : t;
                    }
                    if (!i) return s(r291).copy(t, e), t;
                    s(r291, function(r, n) {
                        if (r) return i(r);
                        n.copy(t, e), i(null, t);
                    });
                }
                h && h.getRandomValues || !n162.browser ? (e382.randomFill = function(e, r, n, i) {
                    if (!(a70.isBuffer(e) || e instanceof t599.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                    if ("function" == typeof r) i = r, r = 0, n = e.length;
                    else if ("function" == typeof n) i = n, n = e.length - r;
                    else if ("function" != typeof i) throw new TypeError('"cb" argument must be a function');
                    return c(r, e.length), l(n, r, e.length), d(e, r, n, i);
                }, e382.randomFillSync = function(e, r, n) {
                    void 0 === r && (r = 0);
                    if (!(a70.isBuffer(e) || e instanceof t599.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                    c(r, e.length), void 0 === n && (n = e.length - r);
                    return l(n, r, e.length), d(e, r, n);
                }) : (e382.randomFill = i136, e382.randomFillSync = i136);
            }).call(this, r290(6), r290(5));
        },
        function(t, e, r) {
            "use strict";
            /*!
 * ignore
 */ t.exports = r(59).Decimal128;
        },
        function(t, e, r) {
            "use strict";
            /*!
 * [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) ObjectId
 * @constructor NodeMongoDbObjectId
 * @see ObjectId
 */ var n = r(59).ObjectID;
            /*!
 * Getter for convenience with populate, see gh-6115
 */ Object.defineProperty(n.prototype, "_id", {
                enumerable: !1,
                configurable: !0,
                get: function() {
                    return this;
                }
            }), /*!
 * ignore
 */ t.exports = n;
        },
        function(t, e, r) {
            "use strict";
            /*!
 * ignore
 */ t.exports = function() {
            };
        },
        function(t600, e, r) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n = r(13), i = r(355), o = !1;
            t600.exports = function() {
                return o ? i : n;
            }, /*!
 * ignore
 */ t600.exports.setBrowser = function(t) {
                o = t;
            };
        },
        function(t, e, r) {
            "use strict";
            /*!
 * Dependencies
 */ var n = r(276).ctor("require", "modify", "init", "default", "ignore");
            function i() {
                this.activePaths = new n, this.strictMode = void 0;
            }
            t.exports = i, i.prototype.fullPath = void 0, i.prototype.strictMode = void 0, i.prototype.selected = void 0, i.prototype.shardval = void 0, i.prototype.saveError = void 0, i.prototype.validationError = void 0, i.prototype.adhocPaths = void 0, i.prototype.removing = void 0, i.prototype.inserting = void 0, i.prototype.saving = void 0, i.prototype.version = void 0, i.prototype._id = void 0, i.prototype.ownerDocument = void 0, i.prototype.populate = void 0, i.prototype.populated = void 0, i.prototype.wasPopulated = !1, i.prototype.scope = void 0, i.prototype.session = null, i.prototype.pathsToScopes = null, i.prototype.cachedRequired = null;
        },
        function(t601, e383, r292) {
            "use strict";
            /*!
 * Module dependencies.
 */ r292(4);
            /*!
 * StateMachine represents a minimal `interface` for the
 * constructors it builds via StateMachine.ctor(...).
 *
 * @api private
 */ var n163 = t601.exports = function() {
            };
            /*!
 * StateMachine.ctor('state1', 'state2', ...)
 * A factory method for subclassing StateMachine.
 * The arguments are a list of states. For each state,
 * the constructor's prototype gets state transition
 * methods named after each state. These transition methods
 * place their path argument into the given state.
 *
 * @param {String} state
 * @param {String} [state]
 * @return {Function} subclass constructor
 * @private
 */ n163.ctor = function() {
                var t602 = Array.prototype.slice.call(arguments), e384 = function() {
                    n163.apply(this, arguments), this.paths = {
                    }, this.states = {
                    }, this.stateNames = t602;
                    for(var e, r = t602.length; r--;)e = t602[r], this.states[e] = {
                    };
                };
                return e384.prototype = new n163, t602.forEach(function(t) {
                    e384.prototype[t] = function(e) {
                        this._changeState(e, t);
                    };
                }), e384;
            }, /*!
 * This function is wrapped by the state change functions:
 *
 * - `require(path)`
 * - `modify(path)`
 * - `init(path)`
 *
 * @api private
 */ n163.prototype._changeState = function(t, e) {
                var r = this.states[this.paths[t]];
                r && delete r[t], this.paths[t] = e, this.states[e][t] = !0;
            }, /*!
 * ignore
 */ n163.prototype.clear = function(t) {
                for(var e, r = Object.keys(this.states[t]), n = r.length; n--;)e = r[n], delete this.states[t][e], delete this.paths[e];
            }, /*!
 * Checks to see if at least one path is in the states passed in via `arguments`
 * e.g., this.some('required', 'inited')
 *
 * @param {String} state that we want to check for.
 * @private
 */ n163.prototype.some = function() {
                var t = this, e = arguments.length ? arguments : this.stateNames;
                return Array.prototype.some.call(e, function(e) {
                    return Object.keys(t.states[e]).length;
                });
            }, /*!
 * This function builds the functions that get assigned to `forEach` and `map`,
 * since both of those methods share a lot of the same logic.
 *
 * @param {String} iterMethod is either 'forEach' or 'map'
 * @return {Function}
 * @api private
 */ n163.prototype._iter = function(t603) {
                return function() {
                    var e385 = Array.prototype.slice.call(arguments), r = e385.pop();
                    e385.length || (e385 = this.stateNames);
                    var n164 = this, i = e385.reduce(function(t, e) {
                        return t.concat(Object.keys(n164.states[e]));
                    }, []);
                    return i[t603](function(t, e, n) {
                        return r(t, e, n);
                    });
                };
            }, /*!
 * Iterates over the paths that belong to one of the parameter states.
 *
 * The function profile can look like:
 * this.forEach(state1, fn);         // iterates over all paths in state1
 * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2
 * this.forEach(fn);                 // iterates over all paths in all states
 *
 * @param {String} [state]
 * @param {String} [state]
 * @param {Function} callback
 * @private
 */ n163.prototype.forEach = function() {
                return this.forEach = this._iter("forEach"), this.forEach.apply(this, arguments);
            }, /*!
 * Maps over the paths that belong to one of the parameter states.
 *
 * The function profile can look like:
 * this.forEach(state1, fn);         // iterates over all paths in state1
 * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2
 * this.forEach(fn);                 // iterates over all paths in all states
 *
 * @param {String} [state]
 * @param {String} [state]
 * @param {Function} callback
 * @return {Array}
 * @private
 */ n163.prototype.map = function() {
                return this.map = this._iter("map"), this.map.apply(this, arguments);
            };
        },
        function(t604, e386, r293) {
            function n165(t605) {
                return (n165 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t605);
            }
            var i137 = r293(278), o95 = [
                "__proto__",
                "constructor",
                "prototype"
            ];
            /*!
 * Returns the value passed to it.
 */ function s75(t) {
                return t;
            }
            e386.get = function(t606, r, o, a) {
                var u;
                "function" == typeof o && (o.length < 2 ? (a = o, o = void 0) : (u = o, o = void 0)), a || (a = s75);
                var h = "string" == typeof t606 ? i137(t606) : t606;
                if (!Array.isArray(h)) throw new TypeError("Invalid `path`. Must be either string or array");
                for(var f, c = r, l = 0; l < h.length; ++l){
                    if (f = h[l], "string" != typeof h[l] && "number" != typeof h[l]) throw new TypeError("Each segment of path to `get()` must be a string or number, got " + n165(h[l]));
                    if (Array.isArray(c) && !/^\d+$/.test(f)) {
                        var d = h.slice(l);
                        return [].concat(c).map(function(t) {
                            return t ? e386.get(d, t, o || u, a) : a(void 0);
                        });
                    }
                    if (u) c = u(c, f);
                    else {
                        var p = o && c[o] ? c[o] : c;
                        c = p instanceof Map ? p.get(f) : p[f];
                    }
                    if (!c) return a(c);
                }
                return a(c);
            }, e386.has = function(t, e) {
                var r = "string" == typeof t ? i137(t) : t;
                if (!Array.isArray(r)) throw new TypeError("Invalid `path`. Must be either string or array");
                for(var o = r.length, s = e, a = 0; a < o; ++a){
                    if ("string" != typeof r[a] && "number" != typeof r[a]) throw new TypeError("Each segment of path to `has()` must be a string or number, got " + n165(r[a]));
                    if (null == s || "object" !== n165(s) || !(r[a] in s)) return !1;
                    s = s[r[a]];
                }
                return !0;
            }, e386.unset = function(t, e) {
                var r = "string" == typeof t ? i137(t) : t;
                if (!Array.isArray(r)) throw new TypeError("Invalid `path`. Must be either string or array");
                for(var s = r.length, a = e, u = 0; u < s; ++u){
                    if (null == a || "object" !== n165(a) || !(r[u] in a)) return !1;
                    if ("string" != typeof r[u] && "number" != typeof r[u]) throw new TypeError("Each segment of path to `unset()` must be a string or number, got " + n165(r[u]));
                    if (-1 !== o95.indexOf(r[u])) return !1;
                    if (u === s - 1) return delete a[r[u]], !0;
                    a = a instanceof Map ? a.get(r[u]) : a[r[u]];
                }
                return !0;
            }, e386.set = function(t607, r294, a71, u63, h, f) {
                var c;
                "function" == typeof u63 && (u63.length < 2 ? (h = u63, u63 = void 0) : (c = u63, u63 = void 0)), h || (h = s75);
                var l = "string" == typeof t607 ? i137(t607) : t607;
                if (!Array.isArray(l)) throw new TypeError("Invalid `path`. Must be either string or array");
                if (null != a71) {
                    for(var d = 0; d < l.length; ++d){
                        if ("string" != typeof l[d] && "number" != typeof l[d]) throw new TypeError("Each segment of path to `set()` must be a string or number, got " + n165(l[d]));
                        if (-1 !== o95.indexOf(l[d])) return;
                    }
                    for(var p, y = f || /\$/.test(t607) && !1 !== f, m = a71, b = (d = 0, l.length - 1); d < b; ++d)if ("$" != (p = l[d])) {
                        if (Array.isArray(m) && !/^\d+$/.test(p)) {
                            var v = l.slice(d);
                            if (!y && Array.isArray(r294)) for(var g = 0; g < m.length && g < r294.length; ++g)e386.set(v, r294[g], m[g], u63 || c, h, y);
                            else for(g = 0; g < m.length; ++g)e386.set(v, r294, m[g], u63 || c, h, y);
                            return;
                        }
                        if (c) m = c(m, p);
                        else {
                            var w = u63 && m[u63] ? m[u63] : m;
                            m = w instanceof Map ? w.get(p) : w[p];
                        }
                        if (!m) return;
                    } else if (d == b - 1) break;
                    if (p = l[b], u63 && m[u63] && (m = m[u63]), Array.isArray(m) && !/^\d+$/.test(p)) {
                        if (!y && Array.isArray(r294)) !/*!
 * Recursively set nested arrays
 */ function t(e, r, n, i, o, s) {
                            for(var a, u = 0; u < e.length && u < r.length; ++u)a = e[u], Array.isArray(a) && Array.isArray(r[u]) ? t(a, r[u], n, i, o, s) : a && (i ? i(a, n, s(r[u])) : (a[o] && (a = a[o]), a[n] = s(r[u])));
                        }(m, r294, p, c, u63, h);
                        else for(g = 0; g < m.length; ++g){
                            var _ = m[g];
                            _ && (c ? c(_, p, h(r294)) : (_[u63] && (_ = _[u63]), _[p] = h(r294)));
                        }
                    } else c ? c(m, p, h(r294)) : m instanceof Map ? m.set(p, h(r294)) : m[p] = h(r294);
                }
            };
        },
        function(t608, e387, r295) {
            "use strict";
            t608.exports = function(t) {
                for(var e = [], r = "", n = "DEFAULT", i = 0; i < t.length; ++i)"IN_SQUARE_BRACKETS" !== n || /\d/.test(t[i]) || "]" === t[i] || (n = "DEFAULT", r = e[e.length - 1] + "[" + r, e.splice(e.length - 1, 1)), "[" === t[i] ? ("IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n && (e.push(r), r = ""), n = "IN_SQUARE_BRACKETS") : "]" === t[i] ? "IN_SQUARE_BRACKETS" === n ? (n = "IMMEDIATELY_AFTER_SQUARE_BRACKETS", e.push(r), r = "") : (n = "DEFAULT", r += t[i]) : "." === t[i] ? ("IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n && (e.push(r), r = ""), n = "DEFAULT") : r += t[i];
                return "IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n && e.push(r), e;
            };
        },
        function(t609, e388, r296) {
            "use strict";
            function n166(t610) {
                return (n166 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t610);
            }
            function i(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t, e, r) {
                return e && i(t.prototype, e), r && i(t, r), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), t;
            }
            var s = r296(41), a = o(function t611(e389) {
                if ((function(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                })(this, t611), this._docs = {
                }, this._childDocs = [], null != e389 && (e389 = s(e389), Object.assign(this, e389), "object" === n166(e389.subPopulate) && (this.populate = e389.subPopulate), null != e389.perDocumentLimit && null != e389.limit)) throw new Error("Can not use `limit` and `perDocumentLimit` at the same time. Path: `" + e389.path + "`.");
            });
            t609.exports = a;
        },
        function(t612, e, r) {
            "use strict";
            e.isMongooseDocumentArray = function(t) {
                return Array.isArray(t) && t.isMongooseDocumentArray;
            };
        },
        function(t613, e390, r297) {
            "use strict";
            /*
object-assign
(c) Sindre Sorhus
@license MIT
*/ var n167 = Object.getOwnPropertySymbols, i = Object.prototype.hasOwnProperty, o = Object.prototype.propertyIsEnumerable;
            function s(t) {
                if (null == t) throw new TypeError("Object.assign cannot be called with null or undefined");
                return Object(t);
            }
            t613.exports = (function() {
                try {
                    if (!Object.assign) return !1;
                    var t614 = "abc";
                    if (t614[5] = "de", "5" === Object.getOwnPropertyNames(t614)[0]) return !1;
                    for(var e = {
                    }, r = 0; r < 10; r++)e["_" + String.fromCharCode(r)] = r;
                    if ("0123456789" !== Object.getOwnPropertyNames(e).map(function(t) {
                        return e[t];
                    }).join("")) return !1;
                    var n = {
                    };
                    return "abcdefghijklmnopqrst".split("").forEach(function(t) {
                        n[t] = t;
                    }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({
                    }, n)).join("");
                } catch (t) {
                    return !1;
                }
            })() ? Object.assign : function(t, e) {
                for(var r, a, u = s(t), h = 1; h < arguments.length; h++){
                    for(var f in r = Object(arguments[h]))i.call(r, f) && (u[f] = r[f]);
                    if (n167) {
                        a = n167(r);
                        for(var c = 0; c < a.length; c++)o.call(r, a[c]) && (u[a[c]] = r[a[c]]);
                    }
                }
                return u;
            };
        },
        function(t616, e) {
            function r(t617) {
                return (r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t617);
            }
            t616.exports = function(t) {
                return t && "object" === r(t) && "function" == typeof t.copy && "function" == typeof t.fill && "function" == typeof t.readUInt8;
            };
        },
        function(t618, e391) {
            "function" == typeof Object.create ? t618.exports = function(t, e) {
                t.super_ = e, t.prototype = Object.create(e.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                });
            } : t618.exports = function(t, e) {
                t.super_ = e;
                var r = function() {
                };
                r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t;
            };
        },
        function(t619, e392, r298) {
            "use strict";
            function n168(t620, e393) {
                var r299 = "undefined" != typeof Symbol && t620[Symbol.iterator] || t620["@@iterator"];
                if (!r299) {
                    if (Array.isArray(t620) || (r299 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return i138(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i138(t, e);
                    })(t620)) || e393 && t620 && "number" == typeof t620.length) {
                        r299 && (t620 = r299);
                        var n = 0, o = function() {
                        };
                        return {
                            s: o,
                            n: function() {
                                return n >= t620.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t620[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: o
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r299 = r299.call(t620);
                    },
                    n: function() {
                        var t = r299.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r299.return || r299.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function i138(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            function o96(t621) {
                return (o96 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t621);
            }
            var s76 = r298(43), a72 = r298(8), u64 = r298(285), h45 = r298(286)("mquery");
            function f(t, e) {
                if (!(this instanceof f)) return new f(t, e);
                var r = this.constructor.prototype;
                this.op = r.op || void 0, this.options = Object.assign({
                }, r.options), this._conditions = r._conditions ? u64.clone(r._conditions) : {
                }, this._fields = r._fields ? u64.clone(r._fields) : void 0, this._update = r._update ? u64.clone(r._update) : void 0, this._path = r._path || void 0, this._distinct = r._distinct || void 0, this._collection = r._collection || void 0, this._traceFunction = r._traceFunction || void 0, e && this.setOptions(e), t && (t.find && t.remove && t.update ? this.collection(t) : this.find(t));
            }
            var c = "$geoWithin";
            Object.defineProperty(f, "use$geoWithin", {
                get: function() {
                    return "$geoWithin" == c;
                },
                set: function(t) {
                    c = !0 === t ? "$geoWithin" : "$within";
                }
            }), f.prototype.toConstructor = function() {
                function t(e, r) {
                    if (!(this instanceof t)) return new t(e, r);
                    f.call(this, e, r);
                }
                u64.inherits(t, f);
                var e394 = t.prototype;
                return e394.options = {
                }, e394.setOptions(this.options), e394.op = this.op, e394._conditions = u64.clone(this._conditions), e394._fields = u64.clone(this._fields), e394._update = u64.clone(this._update), e394._path = this._path, e394._distinct = this._distinct, e394._collection = this._collection, e394._traceFunction = this._traceFunction, t;
            }, f.prototype.setOptions = function(t) {
                if (!t || !u64.isObject(t)) return this;
                for(var e, r = u64.keys(t), n = 0; n < r.length; ++n)if ("function" == typeof this[e = r[n]]) {
                    var i = Array.isArray(t[e]) ? t[e] : [
                        t[e]
                    ];
                    this[e].apply(this, i);
                } else this.options[e] = t[e];
                return this;
            }, f.prototype.collection = function(t) {
                return this._collection = new f.Collection(t), this;
            }, f.prototype.collation = function(t) {
                return this.options.collation = t, this;
            }, f.prototype.$where = function(t) {
                return this._conditions.$where = t, this;
            }, f.prototype.where = function() {
                if (!arguments.length) return this;
                this.op || (this.op = "find");
                var t = o96(arguments[0]);
                if ("string" == t) return this._path = arguments[0], 2 === arguments.length && (this._conditions[this._path] = arguments[1]), this;
                if ("object" == t && !Array.isArray(arguments[0])) return this.merge(arguments[0]);
                throw new TypeError("path must be a string or object");
            }, f.prototype.equals = function(t) {
                this._ensurePath("equals");
                var e = this._path;
                return this._conditions[e] = t, this;
            }, f.prototype.eq = function(t) {
                this._ensurePath("eq");
                var e = this._path;
                return this._conditions[e] = t, this;
            }, f.prototype.or = function(t) {
                var e = this._conditions.$or || (this._conditions.$or = []);
                return Array.isArray(t) || (t = [
                    t
                ]), e.push.apply(e, t), this;
            }, f.prototype.nor = function(t) {
                var e = this._conditions.$nor || (this._conditions.$nor = []);
                return Array.isArray(t) || (t = [
                    t
                ]), e.push.apply(e, t), this;
            }, f.prototype.and = function(t) {
                var e = this._conditions.$and || (this._conditions.$and = []);
                return Array.isArray(t) || (t = [
                    t
                ]), e.push.apply(e, t), this;
            }, /*!
 * gt, gte, lt, lte, ne, in, nin, all, regex, size, maxDistance
 *
 *     Thing.where('type').nin(array)
 */ "gt gte lt lte ne in nin all regex size maxDistance minDistance".split(" ").forEach(function(t) {
                f.prototype[t] = function() {
                    var e, r;
                    1 === arguments.length ? (this._ensurePath(t), r = arguments[0], e = this._path) : (r = arguments[1], e = arguments[0]);
                    var n = null === this._conditions[e] || "object" === o96(this._conditions[e]) ? this._conditions[e] : this._conditions[e] = {
                    };
                    return n["$" + t] = r, this;
                };
            }), f.prototype.mod = function() {
                var t, e;
                1 === arguments.length ? (this._ensurePath("mod"), t = arguments[0], e = this._path) : 2 !== arguments.length || Array.isArray(arguments[1]) ? 3 === arguments.length ? (t = [
                    arguments[1],
                    arguments[2]
                ], e = arguments[0]) : (t = arguments[1], e = arguments[0]) : (this._ensurePath("mod"), t = [
                    arguments[0],
                    arguments[1]
                ], e = this._path);
                var r = this._conditions[e] || (this._conditions[e] = {
                });
                return r.$mod = t, this;
            }, f.prototype.exists = function() {
                var t, e;
                0 === arguments.length ? (this._ensurePath("exists"), t = this._path, e = !0) : 1 === arguments.length ? "boolean" == typeof arguments[0] ? (this._ensurePath("exists"), t = this._path, e = arguments[0]) : (t = arguments[0], e = !0) : 2 === arguments.length && (t = arguments[0], e = arguments[1]);
                var r = this._conditions[t] || (this._conditions[t] = {
                });
                return r.$exists = e, this;
            }, f.prototype.elemMatch = function() {
                if (null == arguments[0]) throw new TypeError("Invalid argument");
                var t, e, r;
                if ("function" == typeof arguments[0]) this._ensurePath("elemMatch"), e = this._path, t = arguments[0];
                else if (u64.isObject(arguments[0])) this._ensurePath("elemMatch"), e = this._path, r = arguments[0];
                else if ("function" == typeof arguments[1]) e = arguments[0], t = arguments[1];
                else {
                    if (!arguments[1] || !u64.isObject(arguments[1])) throw new TypeError("Invalid argument");
                    e = arguments[0], r = arguments[1];
                }
                t && (t(r = new f), r = r._conditions);
                var n = this._conditions[e] || (this._conditions[e] = {
                });
                return n.$elemMatch = r, this;
            }, f.prototype.within = function() {
                if (this._ensurePath("within"), this._geoComparison = c, 0 === arguments.length) return this;
                if (2 === arguments.length) return this.box.apply(this, arguments);
                if (2 < arguments.length) return this.polygon.apply(this, arguments);
                var t = arguments[0];
                if (!t) throw new TypeError("Invalid argument");
                if (t.center) return this.circle(t);
                if (t.box) return this.box.apply(this, t.box);
                if (t.polygon) return this.polygon.apply(this, t.polygon);
                if (t.type && t.coordinates) return this.geometry(t);
                throw new TypeError("Invalid argument");
            }, f.prototype.box = function() {
                var t, e;
                if (3 === arguments.length) t = arguments[0], e = [
                    arguments[1],
                    arguments[2]
                ];
                else {
                    if (2 !== arguments.length) throw new TypeError("Invalid argument");
                    this._ensurePath("box"), t = this._path, e = [
                        arguments[0],
                        arguments[1]
                    ];
                }
                var r = this._conditions[t] || (this._conditions[t] = {
                });
                return r[this._geoComparison || c] = {
                    $box: e
                }, this;
            }, f.prototype.polygon = function() {
                var t, e;
                "string" == typeof arguments[0] ? e = (t = Array.from(arguments)).shift() : (this._ensurePath("polygon"), e = this._path, t = Array.from(arguments));
                var r = this._conditions[e] || (this._conditions[e] = {
                });
                return r[this._geoComparison || c] = {
                    $polygon: t
                }, this;
            }, f.prototype.circle = function() {
                var t, e;
                if (1 === arguments.length) this._ensurePath("circle"), t = this._path, e = arguments[0];
                else {
                    if (2 !== arguments.length) throw new TypeError("Invalid argument");
                    t = arguments[0], e = arguments[1];
                }
                if (!("radius" in e) || !e.center) throw new Error("center and radius are required");
                var r = this._conditions[t] || (this._conditions[t] = {
                }), n = e.spherical ? "$centerSphere" : "$center", i = this._geoComparison || c;
                return r[i] = {
                }, r[i][n] = [
                    e.center,
                    e.radius
                ], "unique" in e && (r[i].$uniqueDocs = !!e.unique), this;
            }, f.prototype.near = function() {
                var t, e;
                if (this._geoComparison = "$near", 0 === arguments.length) return this;
                if (1 === arguments.length) this._ensurePath("near"), t = this._path, e = arguments[0];
                else {
                    if (2 !== arguments.length) throw new TypeError("Invalid argument");
                    t = arguments[0], e = arguments[1];
                }
                if (!e.center) throw new Error("center is required");
                var r = this._conditions[t] || (this._conditions[t] = {
                }), n = e.spherical ? "$nearSphere" : "$near";
                if (Array.isArray(e.center)) {
                    r[n] = e.center;
                    var i = "maxDistance" in e ? e.maxDistance : null;
                    null != i && (r.$maxDistance = i), null != e.minDistance && (r.$minDistance = e.minDistance);
                } else {
                    if ("Point" != e.center.type || !Array.isArray(e.center.coordinates)) throw new Error(a72.format("Invalid GeoJSON specified for %s", n));
                    r[n] = {
                        $geometry: e.center
                    }, "maxDistance" in e && (r[n].$maxDistance = e.maxDistance), "minDistance" in e && (r[n].$minDistance = e.minDistance);
                }
                return this;
            }, f.prototype.intersects = function() {
                if (this._ensurePath("intersects"), this._geoComparison = "$geoIntersects", 0 === arguments.length) return this;
                var t = arguments[0];
                if (null != t && t.type && t.coordinates) return this.geometry(t);
                throw new TypeError("Invalid argument");
            }, f.prototype.geometry = function() {
                if ("$within" != this._geoComparison && "$geoWithin" != this._geoComparison && "$near" != this._geoComparison && "$geoIntersects" != this._geoComparison) throw new Error("geometry() must come after `within()`, `intersects()`, or `near()");
                var t, e;
                if (1 !== arguments.length) throw new TypeError("Invalid argument");
                if (this._ensurePath("geometry"), e = this._path, !(t = arguments[0]).type || !Array.isArray(t.coordinates)) throw new TypeError("Invalid argument");
                var r = this._conditions[e] || (this._conditions[e] = {
                });
                return r[this._geoComparison] = {
                    $geometry: t
                }, this;
            }, f.prototype.select = function() {
                var t = arguments[0];
                if (!t) return this;
                if (1 !== arguments.length) throw new Error("Invalid select: select only takes 1 argument");
                this._validate("select");
                var e, r, n = this._fields || (this._fields = {
                }), i = o96(t);
                if (("string" == i || u64.isArgumentsObject(t)) && "number" == typeof t.length || Array.isArray(t)) {
                    for("string" == i && (t = t.split(/\s+/)), e = 0, r = t.length; e < r; ++e){
                        var s = t[e];
                        if (s) {
                            var a = "-" == s[0] ? 0 : 1;
                            0 === a && (s = s.substring(1)), n[s] = a;
                        }
                    }
                    return this;
                }
                if (u64.isObject(t)) {
                    var h = u64.keys(t);
                    for(e = 0; e < h.length; ++e)n[h[e]] = t[h[e]];
                    return this;
                }
                throw new TypeError("Invalid select() argument. Must be string or object.");
            }, f.prototype.slice = function() {
                if (0 === arguments.length) return this;
                var t, e;
                if (this._validate("slice"), 1 === arguments.length) {
                    var r = arguments[0];
                    if ("object" === o96(r) && !Array.isArray(r)) {
                        for(var n = Object.keys(r), i = n.length, s = 0; s < i; ++s)this.slice(n[s], r[n[s]]);
                        return this;
                    }
                    this._ensurePath("slice"), t = this._path, e = arguments[0];
                } else 2 === arguments.length ? "number" == typeof arguments[0] ? (this._ensurePath("slice"), t = this._path, e = [
                    arguments[0],
                    arguments[1]
                ]) : (t = arguments[0], e = arguments[1]) : 3 === arguments.length && (t = arguments[0], e = [
                    arguments[1],
                    arguments[2]
                ]);
                var a = this._fields || (this._fields = {
                });
                return a[t] = {
                    $slice: e
                }, this;
            }, f.prototype.sort = function(t) {
                if (!t) return this;
                var e, r, n;
                this._validate("sort");
                var i = o96(t);
                if (Array.isArray(t)) {
                    for(r = t.length, e = 0; e < t.length; ++e){
                        if (!Array.isArray(t[e])) throw new Error("Invalid sort() argument, must be array of arrays");
                        p(this.options, t[e][0], t[e][1]);
                    }
                    return this;
                }
                if (1 === arguments.length && "string" == i) {
                    for(r = (t = t.split(/\s+/)).length, e = 0; e < r; ++e)if (n = t[e]) {
                        var s = "-" == n[0] ? -1 : 1;
                        -1 === s && (n = n.substring(1)), d(this.options, n, s);
                    }
                    return this;
                }
                if (u64.isObject(t)) {
                    var a = u64.keys(t);
                    for(e = 0; e < a.length; ++e)n = a[e], d(this.options, n, t[n]);
                    return this;
                }
                if ("undefined" != typeof Map && t instanceof Map) return y(this.options, t), this;
                throw new TypeError("Invalid sort() argument. Must be a string, object, or array.");
            };
            /*!
 * @ignore
 */ var l = {
                1: 1,
                "-1": -1,
                asc: 1,
                ascending: 1,
                desc: -1,
                descending: -1
            };
            function d(t, e, r) {
                if (Array.isArray(t.sort)) throw new TypeError("Can't mix sort syntaxes. Use either array or object:\n- `.sort([['field', 1], ['test', -1]])`\n- `.sort({ field: 1, test: -1 })`");
                var n;
                if (r && r.$meta) (n = t.sort || (t.sort = {
                }))[e] = {
                    $meta: r.$meta
                };
                else {
                    n = t.sort || (t.sort = {
                    });
                    var i = String(r || 1).toLowerCase();
                    if (!(i = l[i])) throw new TypeError("Invalid sort value: { " + e + ": " + r + " }");
                    n[e] = i;
                }
            }
            function p(t, e, r) {
                if (t.sort = t.sort || [], !Array.isArray(t.sort)) throw new TypeError("Can't mix sort syntaxes. Use either array or object:\n- `.sort([['field', 1], ['test', -1]])`\n- `.sort({ field: 1, test: -1 })`");
                var n = String(r || 1).toLowerCase();
                if (!(n = l[n])) throw new TypeError("Invalid sort value: [ " + e + ", " + r + " ]");
                t.sort.push([
                    e,
                    n
                ]);
            }
            function y(t, e395) {
                if (t.sort = t.sort || new Map, !(t.sort instanceof Map)) throw new TypeError("Can't mix sort syntaxes. Use either array or object or map consistently");
                e395.forEach(function(e, r) {
                    var n = String(e || 1).toLowerCase();
                    if (!(n = l[n])) throw new TypeError("Invalid sort value: < " + r + ": " + e + " >");
                    t.sort.set(r, n);
                });
            }
            /*!
 * limit, skip, maxScan, batchSize, comment
 *
 * Sets these associated options.
 *
 *     query.comment('feed query');
 */ /*!
 * Internal helper for update, updateMany, updateOne
 */ function m(t, e, r, n, i, o, s) {
                return t.op = e, f.canMerge(r) && t.merge(r), n && t._mergeUpdate(n), u64.isObject(i) && t.setOptions(i), o || s ? !t._update || !t.options.overwrite && 0 === u64.keys(t._update).length ? (s && u64.soon(s.bind(null, null, 0)), t) : (i = t._optionsForExec(), s || (i.safe = !1), r = t._conditions, n = t._updateForExec(), h45("update", t._collection.collectionName, r, n, i), s = t._wrapCallback(e, s, {
                    conditions: r,
                    doc: n,
                    options: i
                }), t._collection[e](r, n, i, u64.tick(s)), t) : t;
            }
            [
                "limit",
                "skip",
                "maxScan",
                "batchSize",
                "comment"
            ].forEach(function(t) {
                f.prototype[t] = function(e) {
                    return this._validate(t), this.options[t] = e, this;
                };
            }), f.prototype.maxTime = f.prototype.maxTimeMS = function(t) {
                return this._validate("maxTime"), this.options.maxTimeMS = t, this;
            }, f.prototype.snapshot = function() {
                return this._validate("snapshot"), this.options.snapshot = !arguments.length || !!arguments[0], this;
            }, f.prototype.hint = function() {
                if (0 === arguments.length) return this;
                this._validate("hint");
                var t = arguments[0];
                if (u64.isObject(t)) {
                    var e = this.options.hint || (this.options.hint = {
                    });
                    for(var r in t)e[r] = t[r];
                    return this;
                }
                if ("string" == typeof t) return this.options.hint = t, this;
                throw new TypeError("Invalid hint. " + t);
            }, f.prototype.j = function(t) {
                return this.options.j = t, this;
            }, f.prototype.slaveOk = function(t) {
                return this.options.slaveOk = !arguments.length || !!t, this;
            }, f.prototype.read = f.prototype.setReadPreference = function(t) {
                return arguments.length > 1 && !f.prototype.read.deprecationWarningIssued && (console.error("Deprecation warning: 'tags' argument is not supported anymore in Query.read() method. Please use mongodb.ReadPreference object instead."), f.prototype.read.deprecationWarningIssued = !0), this.options.readPreference = u64.readPref(t), this;
            }, f.prototype.readConcern = f.prototype.r = function(t) {
                return this.options.readConcern = u64.readConcern(t), this;
            }, f.prototype.tailable = function() {
                return this._validate("tailable"), this.options.tailable = !arguments.length || !!arguments[0], this;
            }, f.prototype.writeConcern = f.prototype.w = function(t) {
                return "object" === o96(t) ? (void 0 !== t.j && (this.options.j = t.j), void 0 !== t.w && (this.options.w = t.w), void 0 !== t.wtimeout && (this.options.wtimeout = t.wtimeout)) : this.options.w = "m" === t ? "majority" : t, this;
            }, f.prototype.wtimeout = f.prototype.wTimeout = function(t) {
                return this.options.wtimeout = t, this;
            }, f.prototype.merge = function(t) {
                if (!t) return this;
                if (!f.canMerge(t)) throw new TypeError("Invalid argument. Expected instanceof mquery or plain object");
                return t instanceof f ? (t._conditions && u64.merge(this._conditions, t._conditions), t._fields && (this._fields || (this._fields = {
                }), u64.merge(this._fields, t._fields)), t.options && (this.options || (this.options = {
                }), u64.merge(this.options, t.options)), t._update && (this._update || (this._update = {
                }), u64.mergeClone(this._update, t._update)), t._distinct && (this._distinct = t._distinct), this) : (u64.merge(this._conditions, t), this);
            }, f.prototype.find = function(t, e) {
                if (this.op = "find", "function" == typeof t ? (e = t, t = void 0) : f.canMerge(t) && this.merge(t), !e) return this;
                var r = this._conditions, n = this._optionsForExec();
                return this.$useProjection ? n.projection = this._fieldsForExec() : n.fields = this._fieldsForExec(), h45("find", this._collection.collectionName, r, n), e = this._wrapCallback("find", e, {
                    conditions: r,
                    options: n
                }), this._collection.find(r, n, u64.tick(e)), this;
            }, f.prototype.cursor = function(t) {
                if (this.op) {
                    if ("find" !== this.op) throw new TypeError(".cursor only support .find method");
                } else this.find(t);
                var e = this._conditions, r = this._optionsForExec();
                return this.$useProjection ? r.projection = this._fieldsForExec() : r.fields = this._fieldsForExec(), h45("findCursor", this._collection.collectionName, e, r), this._collection.findCursor(e, r);
            }, f.prototype.findOne = function(t, e) {
                if (this.op = "findOne", "function" == typeof t ? (e = t, t = void 0) : f.canMerge(t) && this.merge(t), !e) return this;
                var r = this._conditions, n = this._optionsForExec();
                return this.$useProjection ? n.projection = this._fieldsForExec() : n.fields = this._fieldsForExec(), h45("findOne", this._collection.collectionName, r, n), e = this._wrapCallback("findOne", e, {
                    conditions: r,
                    options: n
                }), this._collection.findOne(r, n, u64.tick(e)), this;
            }, f.prototype.count = function(t, e) {
                if (this.op = "count", this._validate(), "function" == typeof t ? (e = t, t = void 0) : f.canMerge(t) && this.merge(t), !e) return this;
                var r = this._conditions, n = this._optionsForExec();
                return h45("count", this._collection.collectionName, r, n), e = this._wrapCallback("count", e, {
                    conditions: r,
                    options: n
                }), this._collection.count(r, n, u64.tick(e)), this;
            }, f.prototype.distinct = function(t, e, r) {
                if (this.op = "distinct", this._validate(), !r) {
                    switch(o96(e)){
                        case "function":
                            r = e, "string" == typeof t && (e = t, t = void 0);
                            break;
                        case "undefined":
                        case "string":
                            break;
                        default:
                            throw new TypeError("Invalid `field` argument. Must be string or function");
                    }
                    switch(o96(t)){
                        case "function":
                            r = t, t = e = void 0;
                            break;
                        case "string":
                            e = t, t = void 0;
                    }
                }
                if ("string" == typeof e && (this._distinct = e), f.canMerge(t) && this.merge(t), !r) return this;
                if (!this._distinct) throw new Error("No value for `distinct` has been declared");
                var n = this._conditions, i = this._optionsForExec();
                return h45("distinct", this._collection.collectionName, n, i), r = this._wrapCallback("distinct", r, {
                    conditions: n,
                    options: i
                }), this._collection.distinct(this._distinct, n, i, u64.tick(r)), this;
            }, f.prototype.update = function(t, e, r, n) {
                var i;
                switch(arguments.length){
                    case 3:
                        "function" == typeof r && (n = r, r = void 0);
                        break;
                    case 2:
                        "function" == typeof e && (n = e, e = t, t = void 0);
                        break;
                    case 1:
                        switch(o96(t)){
                            case "function":
                                n = t, t = r = e = void 0;
                                break;
                            case "boolean":
                                i = t, t = void 0;
                                break;
                            default:
                                e = t, t = r = void 0;
                        }
                }
                return m(this, "update", t, e, r, i, n);
            }, f.prototype.updateMany = function(t, e, r, n) {
                var i;
                switch(arguments.length){
                    case 3:
                        "function" == typeof r && (n = r, r = void 0);
                        break;
                    case 2:
                        "function" == typeof e && (n = e, e = t, t = void 0);
                        break;
                    case 1:
                        switch(o96(t)){
                            case "function":
                                n = t, t = r = e = void 0;
                                break;
                            case "boolean":
                                i = t, t = void 0;
                                break;
                            default:
                                e = t, t = r = void 0;
                        }
                }
                return m(this, "updateMany", t, e, r, i, n);
            }, f.prototype.updateOne = function(t, e, r, n) {
                var i;
                switch(arguments.length){
                    case 3:
                        "function" == typeof r && (n = r, r = void 0);
                        break;
                    case 2:
                        "function" == typeof e && (n = e, e = t, t = void 0);
                        break;
                    case 1:
                        switch(o96(t)){
                            case "function":
                                n = t, t = r = e = void 0;
                                break;
                            case "boolean":
                                i = t, t = void 0;
                                break;
                            default:
                                e = t, t = r = void 0;
                        }
                }
                return m(this, "updateOne", t, e, r, i, n);
            }, f.prototype.replaceOne = function(t, e, r, n) {
                var i;
                switch(arguments.length){
                    case 3:
                        "function" == typeof r && (n = r, r = void 0);
                        break;
                    case 2:
                        "function" == typeof e && (n = e, e = t, t = void 0);
                        break;
                    case 1:
                        switch(o96(t)){
                            case "function":
                                n = t, t = r = e = void 0;
                                break;
                            case "boolean":
                                i = t, t = void 0;
                                break;
                            default:
                                e = t, t = r = void 0;
                        }
                }
                return this.setOptions({
                    overwrite: !0
                }), m(this, "replaceOne", t, e, r, i, n);
            }, f.prototype.remove = function(t, e) {
                var r;
                if (this.op = "remove", "function" == typeof t ? (e = t, t = void 0) : f.canMerge(t) ? this.merge(t) : !0 === t && (r = t, t = void 0), !r && !e) return this;
                var n = this._optionsForExec();
                e || (n.safe = !1);
                var i = this._conditions;
                return h45("remove", this._collection.collectionName, i, n), e = this._wrapCallback("remove", e, {
                    conditions: i,
                    options: n
                }), this._collection.remove(i, n, u64.tick(e)), this;
            }, f.prototype.deleteOne = function(t, e) {
                var r;
                if (this.op = "deleteOne", "function" == typeof t ? (e = t, t = void 0) : f.canMerge(t) ? this.merge(t) : !0 === t && (r = t, t = void 0), !r && !e) return this;
                var n = this._optionsForExec();
                e || (n.safe = !1), delete n.justOne;
                var i = this._conditions;
                return h45("deleteOne", this._collection.collectionName, i, n), e = this._wrapCallback("deleteOne", e, {
                    conditions: i,
                    options: n
                }), this._collection.deleteOne(i, n, u64.tick(e)), this;
            }, f.prototype.deleteMany = function(t, e) {
                var r;
                if (this.op = "deleteMany", "function" == typeof t ? (e = t, t = void 0) : f.canMerge(t) ? this.merge(t) : !0 === t && (r = t, t = void 0), !r && !e) return this;
                var n = this._optionsForExec();
                e || (n.safe = !1), delete n.justOne;
                var i = this._conditions;
                return h45("deleteOne", this._collection.collectionName, i, n), e = this._wrapCallback("deleteOne", e, {
                    conditions: i,
                    options: n
                }), this._collection.deleteMany(i, n, u64.tick(e)), this;
            }, f.prototype.findOneAndUpdate = function(t, e, r, n) {
                switch(this.op = "findOneAndUpdate", this._validate(), arguments.length){
                    case 3:
                        "function" == typeof r && (n = r, r = {
                        });
                        break;
                    case 2:
                        "function" == typeof e && (n = e, e = t, t = void 0), r = void 0;
                        break;
                    case 1:
                        "function" == typeof t ? (n = t, t = r = e = void 0) : (e = t, t = r = void 0);
                }
                if (f.canMerge(t) && this.merge(t), e && this._mergeUpdate(e), r && this.setOptions(r), !n) return this;
                var i = this._conditions, o = this._updateForExec();
                return r = this._optionsForExec(), this._collection.findOneAndUpdate(i, o, r, u64.tick(n));
            }, f.prototype.findOneAndRemove = f.prototype.findOneAndDelete = function(t, e, r) {
                if (this.op = "findOneAndRemove", this._validate(), "function" == typeof e ? (r = e, e = void 0) : "function" == typeof t && (r = t, t = void 0), f.canMerge(t) && this.merge(t), e && this.setOptions(e), !r) return this;
                e = this._optionsForExec();
                var n = this._conditions;
                return this._collection.findOneAndDelete(n, e, u64.tick(r));
            }, f.prototype._wrapCallback = function(t622, e, r300) {
                var n169 = this._traceFunction || f.traceFunction;
                if (n169) {
                    r300.collectionName = this._collection.collectionName;
                    var i = n169 && n169.call(null, t622, r300, this), o = (new Date).getTime();
                    return function(t, r) {
                        if (i) {
                            var n = (new Date).getTime() - o;
                            i.call(null, t, r, n);
                        }
                        e && e.apply(null, arguments);
                    };
                }
                return e;
            }, f.prototype.setTraceFunction = function(t) {
                return this._traceFunction = t, this;
            }, f.prototype.exec = function(t623, e396) {
                switch(o96(t623)){
                    case "function":
                        e396 = t623, t623 = null;
                        break;
                    case "string":
                        this.op = t623;
                }
                s76.ok(this.op, "Missing query type: (find, update, etc)"), "update" != this.op && "remove" != this.op || e396 || (e396 = !0);
                var r301 = this;
                if ("function" != typeof e396) return new f.Promise(function(t, e) {
                    r301[r301.op](function(r, n) {
                        r ? e(r) : t(n), t = e = null;
                    });
                });
                this[this.op](e396);
            }, f.prototype.thunk = function() {
                var t = this;
                return function(e) {
                    t.exec(e);
                };
            }, f.prototype.then = function(t624, e397) {
                var r302 = this;
                return new f.Promise(function(t, e) {
                    r302.exec(function(r, n) {
                        r ? e(r) : t(n), t = e = null;
                    });
                }).then(t624, e397);
            }, f.prototype.cursor = function() {
                if ("find" != this.op) throw new Error("cursor() is only available for find");
                var t = this._conditions, e = this._optionsForExec();
                return this.$useProjection ? e.projection = this._fieldsForExec() : e.fields = this._fieldsForExec(), h45("cursor", this._collection.collectionName, t, e), this._collection.findCursor(t, e);
            }, f.prototype.selected = function() {
                return !!(this._fields && Object.keys(this._fields).length > 0);
            }, f.prototype.selectedInclusively = function() {
                if (!this._fields) return !1;
                var t = Object.keys(this._fields);
                if (0 === t.length) return !1;
                for(var e = 0; e < t.length; ++e){
                    var r = t[e];
                    if (0 === this._fields[r]) return !1;
                    if (this._fields[r] && "object" === o96(this._fields[r]) && this._fields[r].$meta) return !1;
                }
                return !0;
            }, f.prototype.selectedExclusively = function() {
                if (!this._fields) return !1;
                var t = Object.keys(this._fields);
                if (0 === t.length) return !1;
                for(var e = 0; e < t.length; ++e){
                    var r = t[e];
                    if (0 === this._fields[r]) return !0;
                }
                return !1;
            }, f.prototype._mergeUpdate = function(t) {
                this._update || (this._update = {
                }), t instanceof f ? t._update && u64.mergeClone(this._update, t._update) : u64.mergeClone(this._update, t);
            }, f.prototype._optionsForExec = function() {
                return u64.clone(this.options);
            }, f.prototype._fieldsForExec = function() {
                return u64.clone(this._fields);
            }, f.prototype._updateForExec = function() {
                var t, e = u64.clone(this._update), r = u64.keys(e), i = {
                }, o = n168(r);
                try {
                    for(o.s(); !(t = o.n()).done;){
                        var s = t.value;
                        this.options.overwrite ? i[s] = e[s] : "$" !== s[0] ? (i.$set || (e.$set ? i.$set = e.$set : i.$set = {
                        }), i.$set[s] = e[s], ~r.indexOf("$set") || r.push("$set")) : "$set" === s && i.$set || (i[s] = e[s]);
                    }
                } catch (t625) {
                    o.e(t625);
                } finally{
                    o.f();
                }
                return this._compiledUpdate = i, i;
            }, f.prototype._ensurePath = function(t) {
                if (!this._path) throw new Error(t + "() must be used after where() when called with these arguments");
            }, /*!
 * Permissions
 */ f.permissions = r298(288), f._isPermitted = function(t, e) {
                var r = f.permissions[e];
                return !r || !0 !== r[t];
            }, f.prototype._validate = function(t) {
                var e, r;
                if (void 0 === t) {
                    if ("function" != typeof (r = f.permissions[this.op])) return !0;
                    e = r(this);
                } else f._isPermitted(t, this.op) || (e = t);
                if (e) throw new Error(e + " cannot be used with " + this.op);
            }, f.canMerge = function(t) {
                return t instanceof f || u64.isObject(t);
            }, f.setGlobalTraceFunction = function(t) {
                f.traceFunction = t;
            }, /*!
 * Exports.
 */ f.utils = u64, f.env = r298(149), f.Collection = r298(289), f.BaseCollection = r298(54), f.Promise = Promise, t619.exports = f;
        },
        function(t626, e398, r303) {
            "use strict";
            (function(t627, r304, n170) {
                /*!
 * Module dependencies.
 */ var i139 = [
                    "__proto__",
                    "constructor",
                    "prototype"
                ], o97 = e398.clone = function r(n, i) {
                    if (null == n) return n;
                    if (Array.isArray(n)) return e398.cloneArray(n, i);
                    if (n.constructor) {
                        if (/ObjectI[dD]$/.test(n.constructor.name)) return "function" == typeof n.clone ? n.clone() : new n.constructor(n.id);
                        if ("ReadPreference" === n.constructor.name) return new n.constructor(n.mode, r(n.tags, i));
                        if ("Binary" == n._bsontype && n.buffer && n.value) return "function" == typeof n.clone ? n.clone() : new n.constructor(n.value(!0), n.sub_type);
                        if ("Date" === n.constructor.name || "Function" === n.constructor.name) return new n.constructor(+n);
                        if ("RegExp" === n.constructor.name) return new RegExp(n);
                        if ("Buffer" === n.constructor.name) return t627.from(n);
                    }
                    return a73(n) ? e398.cloneObject(n, i) : n.valueOf ? n.valueOf() : void 0;
                };
                /*!
 * ignore
 */ e398.cloneObject = function(t, e) {
                    var r, n = e && e.minimize, s = {
                    }, a = Object.keys(t), u = a.length, h = !1, f = "", c = 0;
                    for(c = 0; c < u; ++c)f = a[c], -1 === i139.indexOf(f) && (r = o97(t[f], e), n && void 0 === r || (h || (h = !0), s[f] = r));
                    return n ? h && s : s;
                }, e398.cloneArray = function(t, e) {
                    for(var r = [], n = t.length, i = 0; i < n; i++)r.push(o97(t[i], e));
                    return r;
                }, e398.tick = function(t) {
                    if ("function" == typeof t) return function() {
                        var e = arguments;
                        u65(function() {
                            t.apply(this, e);
                        });
                    };
                }, e398.merge = function t(r, n) {
                    for(var o = 0, s = Object.keys(n); o < s.length; o++){
                        var a = s[o];
                        -1 === i139.indexOf(a) && (void 0 === r[a] ? r[a] = n[a] : e398.isObject(n[a]) ? t(r[a], n[a]) : r[a] = n[a]);
                    }
                }, e398.mergeClone = function t(r, n) {
                    for(var s = 0, a = Object.keys(n); s < a.length; s++){
                        var u = a[s];
                        -1 === i139.indexOf(u) && (void 0 === r[u] ? r[u] = o97(n[u]) : e398.isObject(n[u]) ? t(r[u], n[u]) : r[u] = o97(n[u]));
                    }
                }, e398.readPref = function(t) {
                    switch(t){
                        case "p":
                            t = "primary";
                            break;
                        case "pp":
                            t = "primaryPreferred";
                            break;
                        case "s":
                            t = "secondary";
                            break;
                        case "sp":
                            t = "secondaryPreferred";
                            break;
                        case "n":
                            t = "nearest";
                    }
                    return t;
                }, e398.readConcern = function(t) {
                    if ("string" == typeof t) {
                        switch(t){
                            case "l":
                                t = "local";
                                break;
                            case "a":
                                t = "available";
                                break;
                            case "m":
                                t = "majority";
                                break;
                            case "lz":
                                t = "linearizable";
                                break;
                            case "s":
                                t = "snapshot";
                        }
                        t = {
                            level: t
                        };
                    }
                    return t;
                };
                var s77 = Object.prototype.toString;
                e398.toString = function(t) {
                    return s77.call(t);
                };
                var a73 = e398.isObject = function(t) {
                    return "[object Object]" == e398.toString(t);
                };
                e398.keys = Object.keys, e398.create = "function" == typeof Object.create ? Object.create : function(t) {
                    if (arguments.length > 1) throw new Error("Adding properties is not supported");
                    function e() {
                    }
                    return e.prototype = t, new e;
                }, e398.inherits = function(t, r) {
                    t.prototype = e398.create(r.prototype), t.prototype.constructor = t;
                };
                var u65 = e398.soon = "function" == typeof r304 ? r304 : n170.nextTick;
                e398.isArgumentsObject = function(t) {
                    return "[object Arguments]" === Object.prototype.toString.call(t);
                };
            }).call(this, r303(3).Buffer, r303(108).setImmediate, r303(5));
        },
        function(t628, e399, r305) {
            (function(n171) {
                var i140;
                e399.formatArgs = function(e) {
                    if (e[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + e[0] + (this.useColors ? "%c " : " ") + "+" + t628.exports.humanize(this.diff), !this.useColors) return;
                    var r = "color: " + this.color;
                    e.splice(1, 0, r, "color: inherit");
                    var n = 0, i = 0;
                    e[0].replace(/%[a-zA-Z%]/g, function(t) {
                        "%%" !== t && (n++, "%c" === t && (i = n));
                    }), e.splice(i, 0, r);
                }, e399.save = function(t) {
                    try {
                        t ? e399.storage.setItem("debug", t) : e399.storage.removeItem("debug");
                    } catch (t629) {
                    }
                }, e399.load = function() {
                    var t;
                    try {
                        t = e399.storage.getItem("debug");
                    } catch (t630) {
                    }
                    !t && void 0 !== n171 && "env" in n171 && (t = n171.env.DEBUG);
                    return t;
                }, e399.useColors = function() {
                    if ("undefined" != typeof window && window.process && ("renderer" === window.process.type || window.process.__nwjs)) return !0;
                    if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return !1;
                    return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
                }, e399.storage = (function() {
                    try {
                        return localStorage;
                    } catch (t) {
                    }
                })(), e399.destroy = (i140 = !1, function() {
                    i140 || (i140 = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
                }), e399.colors = [
                    "#0000CC",
                    "#0000FF",
                    "#0033CC",
                    "#0033FF",
                    "#0066CC",
                    "#0066FF",
                    "#0099CC",
                    "#0099FF",
                    "#00CC00",
                    "#00CC33",
                    "#00CC66",
                    "#00CC99",
                    "#00CCCC",
                    "#00CCFF",
                    "#3300CC",
                    "#3300FF",
                    "#3333CC",
                    "#3333FF",
                    "#3366CC",
                    "#3366FF",
                    "#3399CC",
                    "#3399FF",
                    "#33CC00",
                    "#33CC33",
                    "#33CC66",
                    "#33CC99",
                    "#33CCCC",
                    "#33CCFF",
                    "#6600CC",
                    "#6600FF",
                    "#6633CC",
                    "#6633FF",
                    "#66CC00",
                    "#66CC33",
                    "#9900CC",
                    "#9900FF",
                    "#9933CC",
                    "#9933FF",
                    "#99CC00",
                    "#99CC33",
                    "#CC0000",
                    "#CC0033",
                    "#CC0066",
                    "#CC0099",
                    "#CC00CC",
                    "#CC00FF",
                    "#CC3300",
                    "#CC3333",
                    "#CC3366",
                    "#CC3399",
                    "#CC33CC",
                    "#CC33FF",
                    "#CC6600",
                    "#CC6633",
                    "#CC9900",
                    "#CC9933",
                    "#CCCC00",
                    "#CCCC33",
                    "#FF0000",
                    "#FF0033",
                    "#FF0066",
                    "#FF0099",
                    "#FF00CC",
                    "#FF00FF",
                    "#FF3300",
                    "#FF3333",
                    "#FF3366",
                    "#FF3399",
                    "#FF33CC",
                    "#FF33FF",
                    "#FF6600",
                    "#FF6633",
                    "#FF9900",
                    "#FF9933",
                    "#FFCC00",
                    "#FFCC33"
                ], e399.log = console.debug || console.log || function() {
                }, t628.exports = r305(287)(e399), t628.exports.formatters.j = function(t) {
                    try {
                        return JSON.stringify(t);
                    } catch (t631) {
                        return "[UnexpectedJSONParseError]: " + t631.message;
                    }
                };
            }).call(this, r305(5));
        },
        function(t632, e400, r306) {
            function n172(t633) {
                return (function(t) {
                    if (Array.isArray(t)) return i141(t);
                })(t633) || (function(t) {
                    if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t);
                })(t633) || (function(t, e) {
                    if (!t) return;
                    if ("string" == typeof t) return i141(t, e);
                    var r = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === r && t.constructor && (r = t.constructor.name);
                    if ("Map" === r || "Set" === r) return Array.from(t);
                    if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i141(t, e);
                })(t633) || (function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                })();
            }
            function i141(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            t632.exports = function(t634) {
                function e(t635) {
                    var r, n173, o99, s78 = null;
                    function a() {
                        for(var t636 = arguments.length, n = new Array(t636), i143 = 0; i143 < t636; i143++)n[i143] = arguments[i143];
                        if (a.enabled) {
                            var o = a, s79 = Number(new Date), u = s79 - (r || s79);
                            o.diff = u, o.prev = r, o.curr = s79, r = s79, n[0] = e.coerce(n[0]), "string" != typeof n[0] && n.unshift("%O");
                            var h = 0;
                            n[0] = n[0].replace(/%([a-zA-Z%])/g, function(t, r) {
                                if ("%%" === t) return "%";
                                h++;
                                var i = e.formatters[r];
                                if ("function" == typeof i) {
                                    var s = n[h];
                                    t = i.call(o, s), n.splice(h, 1), h--;
                                }
                                return t;
                            }), e.formatArgs.call(o, n);
                            var f = o.log || e.log;
                            f.apply(o, n);
                        }
                    }
                    return a.namespace = t635, a.useColors = e.useColors(), a.color = e.selectColor(t635), a.extend = i142, a.destroy = e.destroy, Object.defineProperty(a, "enabled", {
                        enumerable: !0,
                        configurable: !1,
                        get: function() {
                            return null !== s78 ? s78 : (n173 !== e.namespaces && (n173 = e.namespaces, o99 = e.enabled(t635)), o99);
                        },
                        set: function(t) {
                            s78 = t;
                        }
                    }), "function" == typeof e.init && e.init(a), a;
                }
                function i142(t, r) {
                    var n = e(this.namespace + (void 0 === r ? ":" : r) + t);
                    return n.log = this.log, n;
                }
                function o98(t) {
                    return t.toString().substring(2, t.toString().length - 2).replace(/\.\*\?$/, "*");
                }
                return e.debug = e, e.default = e, e.coerce = function(t) {
                    if (t instanceof Error) return t.stack || t.message;
                    return t;
                }, e.disable = function() {
                    var t637 = [].concat(n172(e.names.map(o98)), n172(e.skips.map(o98).map(function(t) {
                        return "-" + t;
                    }))).join(",");
                    return e.enable(""), t637;
                }, e.enable = function(t) {
                    var r;
                    e.save(t), e.namespaces = t, e.names = [], e.skips = [];
                    var n = ("string" == typeof t ? t : "").split(/[\s,]+/), i = n.length;
                    for(r = 0; r < i; r++)n[r] && ("-" === (t = n[r].replace(/\*/g, ".*?"))[0] ? e.skips.push(new RegExp("^" + t.substr(1) + "$")) : e.names.push(new RegExp("^" + t + "$")));
                }, e.enabled = function(t) {
                    if ("*" === t[t.length - 1]) return !0;
                    var r, n;
                    for(r = 0, n = e.skips.length; r < n; r++)if (e.skips[r].test(t)) return !1;
                    for(r = 0, n = e.names.length; r < n; r++)if (e.names[r].test(t)) return !0;
                    return !1;
                }, e.humanize = r306(143), e.destroy = function() {
                    console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
                }, Object.keys(t634).forEach(function(r) {
                    e[r] = t634[r];
                }), e.names = [], e.skips = [], e.formatters = {
                }, e.selectColor = function(t) {
                    for(var r = 0, n = 0; n < t.length; n++)r = (r << 5) - r + t.charCodeAt(n), r |= 0;
                    return e.colors[Math.abs(r) % e.colors.length];
                }, e.enable(e.load()), e;
            };
        },
        function(t638, e401, r307) {
            "use strict";
            var n = e401;
            n.distinct = function(t) {
                var e;
                return t._fields && Object.keys(t._fields).length > 0 ? "field selection and slice" : (Object.keys(n.distinct).every(function(r) {
                    return !t.options[r] || (e = r, !1);
                }), e);
            }, n.distinct.select = n.distinct.slice = n.distinct.sort = n.distinct.limit = n.distinct.skip = n.distinct.batchSize = n.distinct.comment = n.distinct.maxScan = n.distinct.snapshot = n.distinct.hint = n.distinct.tailable = !0, n.findOneAndUpdate = n.findOneAndRemove = function(t) {
                var e;
                return Object.keys(n.findOneAndUpdate).every(function(r) {
                    return !t.options[r] || (e = r, !1);
                }), e;
            }, n.findOneAndUpdate.limit = n.findOneAndUpdate.skip = n.findOneAndUpdate.batchSize = n.findOneAndUpdate.maxScan = n.findOneAndUpdate.snapshot = n.findOneAndUpdate.hint = n.findOneAndUpdate.tailable = n.findOneAndUpdate.comment = !0, n.count = function(t) {
                var e;
                return t._fields && Object.keys(t._fields).length > 0 ? "field selection and slice" : (Object.keys(n.count).every(function(r) {
                    return !t.options[r] || (e = r, !1);
                }), e);
            }, n.count.slice = n.count.batchSize = n.count.comment = n.count.maxScan = n.count.snapshot = n.count.tailable = !0;
        },
        function(t, e, r) {
            "use strict";
            var n = r(149);
            if ("unknown" == n.type) throw new Error("Unknown environment");
            t.exports = n.isNode ? r(290) : (n.isMongo, r(54));
        },
        function(t639, e402, r308) {
            "use strict";
            function n174(t640) {
                return (n174 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t640);
            }
            function i144(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t641, e403) {
                return (o = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t641, e403);
            }
            function s(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u66(t);
                    if (e) {
                        var i = u66(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a74(this, r);
                };
            }
            function a74(t642, e) {
                if (e && ("object" === n174(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t642);
            }
            function u66(t643) {
                return (u66 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t643);
            }
            var h = function(t644) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o(t, e);
                }(u, t644);
                var e404, r309, n175, a = s(u);
                function u(t645) {
                    var e405;
                    return (function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    })(this, u), (e405 = a.call(this)).collection = t645, e405.collectionName = t645.collectionName, e405;
                }
                return e404 = u, r309 = [
                    {
                        key: "find",
                        value: function(t, e, r) {
                            var n = this.collection.find(t, e);
                            try {
                                n.toArray(r);
                            } catch (t646) {
                                r(t646);
                            }
                        }
                    },
                    {
                        key: "findOne",
                        value: function(t, e, r) {
                            this.collection.findOne(t, e, r);
                        }
                    },
                    {
                        key: "count",
                        value: function(t, e, r) {
                            this.collection.count(t, e, r);
                        }
                    },
                    {
                        key: "distinct",
                        value: function(t, e, r, n) {
                            this.collection.distinct(t, e, r, n);
                        }
                    },
                    {
                        key: "update",
                        value: function(t, e, r, n) {
                            this.collection.update(t, e, r, n);
                        }
                    },
                    {
                        key: "updateMany",
                        value: function(t, e, r, n) {
                            this.collection.updateMany(t, e, r, n);
                        }
                    },
                    {
                        key: "updateOne",
                        value: function(t, e, r, n) {
                            this.collection.updateOne(t, e, r, n);
                        }
                    },
                    {
                        key: "replaceOne",
                        value: function(t, e, r, n) {
                            this.collection.replaceOne(t, e, r, n);
                        }
                    },
                    {
                        key: "deleteOne",
                        value: function(t, e, r) {
                            this.collection.deleteOne(t, e, r);
                        }
                    },
                    {
                        key: "deleteMany",
                        value: function(t, e, r) {
                            this.collection.deleteMany(t, e, r);
                        }
                    },
                    {
                        key: "remove",
                        value: function(t, e, r) {
                            this.collection.remove(t, e, r);
                        }
                    },
                    {
                        key: "findOneAndDelete",
                        value: function(t, e, r) {
                            this.collection.findOneAndDelete(t, e, r);
                        }
                    },
                    {
                        key: "findOneAndUpdate",
                        value: function(t, e, r, n) {
                            this.collection.findOneAndUpdate(t, e, r, n);
                        }
                    },
                    {
                        key: "findCursor",
                        value: function(t, e) {
                            return this.collection.find(t, e);
                        }
                    }
                ], i144(e404.prototype, r309), n175 && i144(e404, n175), Object.defineProperty(e404, "prototype", {
                    writable: !1
                }), u;
            }(r308(54));
            t639.exports = h;
        },
        function(t, e, r) {
            "use strict";
            var n = t.exports = {
            };
            n.DocumentNotFoundError = null, n.general = {
            }, n.general.default = "Validator failed for path `{PATH}` with value `{VALUE}`", n.general.required = "Path `{PATH}` is required.", n.Number = {
            }, n.Number.min = "Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).", n.Number.max = "Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).", n.Number.enum = "`{VALUE}` is not a valid enum value for path `{PATH}`.", n.Date = {
            }, n.Date.min = "Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).", n.Date.max = "Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).", n.String = {
            }, n.String.enum = "`{VALUE}` is not a valid enum value for path `{PATH}`.", n.String.match = "Path `{PATH}` is invalid ({VALUE}).", n.String.minlength = "Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).", n.String.maxlength = "Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).";
        },
        function(t647, e406, r310) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n176(t648) {
                return (n176 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t648);
            }
            function i145(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o100(t649, e407) {
                return (o100 = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t649, e407);
            }
            function s81(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u67(t);
                    if (e) {
                        var i = u67(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a75(this, r);
                };
            }
            function a75(t650, e) {
                if (e && ("object" === n176(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t650);
            }
            function u67(t651) {
                return (u67 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t651);
            }
            var h = r310(7), f = r310(8), c = function(t652) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o100(t, e);
                }(u, t652);
                var e408, r311, n177, a = s81(u);
                /*!
   * OverwriteModel Error constructor.
   */ function u(t653, e409, r, n) {
                    var i, o;
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, u);
                    var s = h.messages;
                    return o = null != s.DocumentNotFoundError ? "function" == typeof s.DocumentNotFoundError ? s.DocumentNotFoundError(t653, e409) : s.DocumentNotFoundError : 'No document found for query "' + f.inspect(t653) + '" on model "' + e409 + '"', (i = a.call(this, o)).result = n, i.numAffected = r, i.filter = t653, i.query = t653, i;
                }
                return e408 = u, r311 && i145(e408.prototype, r311), n177 && i145(e408, n177), Object.defineProperty(e408, "prototype", {
                    writable: !1
                }), e408;
            }(h);
            Object.defineProperty(c.prototype, "name", {
                value: "DocumentNotFoundError"
            }), /*!
 * exports
 */ t647.exports = c;
        },
        function(t654, e410, r312) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n178(t655) {
                return (n178 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t655);
            }
            function i146(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t656, e411) {
                return (o = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t656, e411);
            }
            function s(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u68(t);
                    if (e) {
                        var i = u68(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a76(this, r);
                };
            }
            function a76(t657, e) {
                if (e && ("object" === n178(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t657);
            }
            function u68(t658) {
                return (u68 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t658);
            }
            var h = function(t659) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o(t, e);
                }(u, t659);
                var e412, r313, n179, a = s(u);
                function u(t660, e413, r) {
                    var n;
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, u);
                    var i = r.join(", ");
                    return (n = a.call(this, 'No matching document found for id "' + t660._id + '" version ' + e413 + ' modifiedPaths "' + i + '"')).version = e413, n.modifiedPaths = r, n;
                }
                return e412 = u, r313 && i146(e412.prototype, r313), n179 && i146(e412, n179), Object.defineProperty(e412, "prototype", {
                    writable: !1
                }), e412;
            }(r312(7));
            Object.defineProperty(h.prototype, "name", {
                value: "VersionError"
            }), /*!
 * exports
 */ t654.exports = h;
        },
        function(t661, e414, r314) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n180(t662) {
                return (n180 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t662);
            }
            function i147(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t663, e415) {
                return (o = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t663, e415);
            }
            function s(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u69(t);
                    if (e) {
                        var i = u69(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a77(this, r);
                };
            }
            function a77(t664, e) {
                if (e && ("object" === n180(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t664);
            }
            function u69(t665) {
                return (u69 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t665);
            }
            var h = function(t666) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o(t, e);
                }(u, t666);
                var e416, r, n, a = s(u);
                function u(t667) {
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, u);
                    return a.call(this, "Can't save() the same doc multiple times in parallel. Document: " + t667._id);
                }
                return e416 = u, r && i147(e416.prototype, r), n && i147(e416, n), Object.defineProperty(e416, "prototype", {
                    writable: !1
                }), e416;
            }(r314(7));
            Object.defineProperty(h.prototype, "name", {
                value: "ParallelSaveError"
            }), /*!
 * exports
 */ t661.exports = h;
        },
        function(t668, e417, r315) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n181(t669) {
                return (n181 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t669);
            }
            function i148(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t670, e418) {
                return (o = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t670, e418);
            }
            function s(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u70(t);
                    if (e) {
                        var i = u70(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a78(this, r);
                };
            }
            function a78(t671, e) {
                if (e && ("object" === n181(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t671);
            }
            function u70(t672) {
                return (u70 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t672);
            }
            var h = function(t673) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o(t, e);
                }(u, t673);
                var e419, r, n, a = s(u);
                /*!
   * OverwriteModel Error constructor.
   * @param {String} name
   */ function u(t674) {
                    return (function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    })(this, u), a.call(this, "Cannot overwrite `" + t674 + "` model once compiled.");
                }
                return e419 = u, r && i148(e419.prototype, r), n && i148(e419, n), Object.defineProperty(e419, "prototype", {
                    writable: !1
                }), e419;
            }(r315(7));
            Object.defineProperty(h.prototype, "name", {
                value: "OverwriteModelError"
            }), /*!
 * exports
 */ t668.exports = h;
        },
        function(t675, e420, r316) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n182(t676) {
                return (n182 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t676);
            }
            function i149(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t677, e421) {
                return (o = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t677, e421);
            }
            function s(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u71(t);
                    if (e) {
                        var i = u71(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a79(this, r);
                };
            }
            function a79(t678, e) {
                if (e && ("object" === n182(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t678);
            }
            function u71(t679) {
                return (u71 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t679);
            }
            var h = function(t680) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o(t, e);
                }(u, t680);
                var e422, r, n, a = s(u);
                /*!
   * MissingSchema Error constructor.
   * @param {String} name
   */ function u(t681) {
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, u);
                    var e423 = "Schema hasn't been registered for model \"" + t681 + '".\nUse mongoose.model(name, schema)';
                    return a.call(this, e423);
                }
                return e422 = u, r && i149(e422.prototype, r), n && i149(e422, n), Object.defineProperty(e422, "prototype", {
                    writable: !1
                }), e422;
            }(r316(7));
            Object.defineProperty(h.prototype, "name", {
                value: "MissingSchemaError"
            }), /*!
 * exports
 */ t675.exports = h;
        },
        function(t682, e424, r317) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n183(t683) {
                return (n183 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t683);
            }
            function i150(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function o(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function s(t684, e425) {
                return (s = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t684, e425);
            }
            function a(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = h46(t);
                    if (e) {
                        var i = h46(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return u72(this, r);
                };
            }
            function u72(t685, e) {
                if (e && ("object" === n183(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t685);
            }
            function h46(t686) {
                return (h46 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t686);
            }
            var f = r317(19), c = r317(298), l = r317(299), d = r317(300), p = function(t687) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && s(t, e);
                }(h, t687);
                var e426, r318, n184, u = a(h);
                function h() {
                    return i150(this, h), u.apply(this, arguments);
                }
                return e426 = h, r318 = [
                    {
                        key: "assimilateError",
                        value: function(t) {
                            var e = t.reason, r = l(e) && c(e) && -1 === t.message.indexOf("bad auth") && -1 === t.message.indexOf("Authentication failed");
                            for(var n in r ? this.message = "Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://docs.atlas.mongodb.com/security-whitelist/" : d(e) ? this.message = "Mongoose is connecting with SSL enabled, but the server is not accepting SSL connections. Please ensure that the MongoDB server you are connecting to is configured to accept SSL connections. Learn more: https://mongoosejs.com/docs/tutorials/ssl.html" : this.message = t.message, t)"name" !== n && (this[n] = t[n]);
                            return this;
                        }
                    }
                ], o(e426.prototype, r318), n184 && o(e426, n184), Object.defineProperty(e426, "prototype", {
                    writable: !1
                }), h;
            }(f);
            Object.defineProperty(p.prototype, "name", {
                value: "MongooseServerSelectionError"
            }), t682.exports = p;
        },
        function(t688, e427, r) {
            "use strict";
            var n = r(22);
            t688.exports = function(t689) {
                if ("TopologyDescription" !== n(t689)) return !1;
                var e = Array.from(t689.servers.values());
                return e.length > 0 && e.every(function(t) {
                    return "Unknown" === t.type;
                });
            };
        },
        function(t690, e428, r) {
            "use strict";
            var n = r(22);
            t690.exports = function(t691) {
                if ("TopologyDescription" !== n(t691)) return !1;
                var e = Array.from(t691.servers.keys());
                return e.length > 0 && e.every(function(t) {
                    return t.endsWith(".mongodb.net:27017");
                });
            };
        },
        function(t692, e429, r) {
            "use strict";
            var n = r(22);
            t692.exports = function(t693) {
                if ("TopologyDescription" !== n(t693)) return !1;
                var e = Array.from(t693.servers.values());
                return e.length > 0 && e.every(function(t) {
                    return t.error && -1 !== t.error.message.indexOf("Client network socket disconnected before secure TLS connection was established");
                });
            };
        },
        function(t694, e430, r319) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n185(t695) {
                return (n185 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t695);
            }
            function i151(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t696, e431) {
                return (o = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t696, e431);
            }
            function s(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u73(t);
                    if (e) {
                        var i = u73(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a80(this, r);
                };
            }
            function a80(t697, e) {
                if (e && ("object" === n185(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t697);
            }
            function u73(t698) {
                return (u73 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t698);
            }
            var h = function(t699) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o(t, e);
                }(u, t699);
                var e432, r, n, a = s(u);
                /*!
   * DivergentArrayError constructor.
   * @param {Array<String>} paths
   */ function u(t700) {
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, u);
                    var e433 = "For your own good, using `document.save()` to update an array which was selected using an $elemMatch projection OR populated using skip, limit, query conditions, or exclusion of the _id field when the operation results in a $pop or $set of the entire array is not supported. The following path(s) would have been modified unsafely:\n  " + t700.join("\n  ") + "\nUse Model.update() to update these arrays instead.";
                    return a.call(this, e433);
                }
                return e432 = u, r && i151(e432.prototype, r), n && i151(e432, n), Object.defineProperty(e432, "prototype", {
                    writable: !1
                }), e432;
            }(r319(7));
            Object.defineProperty(h.prototype, "name", {
                value: "DivergentArrayError"
            }), /*!
 * exports
 */ t694.exports = h;
        },
        function(t701, e434, r320) {
            "use strict";
            var n = r320(44);
            /*!
 * ignore
 */ t701.exports = function(t702) {
                var e435, r;
                t702.$immutable ? (t702.$immutableSetter = (e435 = t702.path, r = t702.options.immutable, function(t) {
                    if (null == this || null == this.$__) return t;
                    if (this.isNew) return t;
                    if (!("function" == typeof r ? r.call(this, this) : r)) return t;
                    var i = null != this.$__.priorDoc ? this.$__.priorDoc.$__getValue(e435) : this.$__getValue(e435);
                    if ("throw" === this.$__.strictMode && t !== i) throw new n(e435, "Path `" + e435 + "` is immutable and strict mode is set to throw.", !0);
                    return i;
                }), t702.set(t702.$immutableSetter)) : t702.$immutableSetter && (t702.setters = t702.setters.filter(function(e) {
                    return e !== t702.$immutableSetter;
                }), delete t702.$immutableSetter);
            };
        },
        function(t703, e, r) {
            "use strict";
            var n = r(8).inspect;
            t703.exports = function(t) {
                if ("function" == typeof t) return n(t).startsWith("[AsyncFunction:");
            };
        },
        function(t704, e436, r321) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n186(t705) {
                return (n186 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t705);
            }
            function i152(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t706, e437) {
                return (o = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t706, e437);
            }
            function s(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u74(t);
                    if (e) {
                        var i = u74(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a81(this, r);
                };
            }
            function a81(t707, e) {
                if (e && ("object" === n186(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t707);
            }
            function u74(t708) {
                return (u74 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t708);
            }
            var h = function(t709) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o(t, e);
                }(u, t709);
                var e438, r322, n, a = s(u);
                function u(t710, e439, r) {
                    return (function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    })(this, u), a.call(this, 'Parameter "' + e439 + '" to ' + r + "() must be an object, got " + t710.toString());
                }
                return e438 = u, r322 && i152(e438.prototype, r322), n && i152(e438, n), Object.defineProperty(e438, "prototype", {
                    writable: !1
                }), e438;
            }(r321(7));
            Object.defineProperty(h.prototype, "name", {
                value: "ObjectParameterError"
            }), t704.exports = h;
        },
        function(t711, e440, r323) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n187(t712) {
                return (n187 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t712);
            }
            function i153(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t713, e441) {
                return (o = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t713, e441);
            }
            function s(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = u75(t);
                    if (e) {
                        var i = u75(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return a82(this, r);
                };
            }
            function a82(t714, e) {
                if (e && ("object" === n187(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t714);
            }
            function u75(t715) {
                return (u75 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t715);
            }
            var h = function(t716) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && o(t, e);
                }(u, t716);
                var e442, r, n, a = s(u);
                function u(t717) {
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, u);
                    return a.call(this, "Can't validate() the same doc multiple times in parallel. Document: " + t717._id);
                }
                return e442 = u, r && i153(e442.prototype, r), n && i153(e442, n), Object.defineProperty(e442, "prototype", {
                    writable: !1
                }), e442;
            }(r323(19));
            Object.defineProperty(h.prototype, "name", {
                value: "ParallelValidateError"
            }), /*!
 * exports
 */ t711.exports = h;
        },
        function(t718, e443, r324) {
            "use strict";
            (function(e444) {
                function r325(t719, e445) {
                    var r326 = "undefined" != typeof Symbol && t719[Symbol.iterator] || t719["@@iterator"];
                    if (!r326) {
                        if (Array.isArray(t719) || (r326 = (function(t, e) {
                            if (!t) return;
                            if ("string" == typeof t) return n188(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === r && t.constructor && (r = t.constructor.name);
                            if ("Map" === r || "Set" === r) return Array.from(t);
                            if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return n188(t, e);
                        })(t719)) || e445 && t719 && "number" == typeof t719.length) {
                            r326 && (t719 = r326);
                            var i = 0, o = function() {
                            };
                            return {
                                s: o,
                                n: function() {
                                    return i >= t719.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t719[i++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: o
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var s, a = !0, u = !1;
                    return {
                        s: function() {
                            r326 = r326.call(t719);
                        },
                        n: function() {
                            var t = r326.next();
                            return a = t.done, t;
                        },
                        e: function(t) {
                            u = !0, s = t;
                        },
                        f: function() {
                            try {
                                a || null == r326.return || r326.return();
                            } finally{
                                if (u) throw s;
                            }
                        }
                    };
                }
                function n188(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function i154(t720) {
                    return (i154 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t720);
                }
                function o101() {
                    this._pres = new Map, this._posts = new Map;
                }
                function s82(t721, e, r, n, i, o, s) {
                    return o.useErrorHandlers ? t721.execPost(r, n, i, {
                        error: e
                    }, function(t) {
                        return "function" == typeof s && s(t);
                    }) : "function" == typeof s && s(e);
                }
                function a83(t723, e, r, n) {
                    var i;
                    try {
                        i = t723.apply(e, r);
                    } catch (t722) {
                        return n(t722);
                    }
                    u76(i) && i.then(function() {
                        return n();
                    }, function(t) {
                        return n(t);
                    });
                }
                function u76(t) {
                    return null != t && "function" == typeof t.then;
                }
                function h47(t) {
                    var r = !1, n = this;
                    return function() {
                        var i = arguments;
                        if (!r) return r = !0, e444.nextTick(function() {
                            return t.apply(n, i);
                        });
                    };
                }
                o101.prototype.execPre = function(t724, r, n189, i) {
                    3 === arguments.length && (i = n189, n189 = []);
                    var o = this._pres.get(t724) || [], s = o.length, f46 = o.numAsync || 0, c = 0, l = f46, d = !1, p = n189;
                    if (!s) return e444.nextTick(function() {
                        i(null);
                    });
                    var y16 = function t725() {
                        if (!(c >= s)) {
                            var n = o[c];
                            if (n.isAsync) {
                                var f = [
                                    h47(m),
                                    h47(function(t) {
                                        if (t) {
                                            if (d) return;
                                            return d = !0, i(t);
                                        }
                                        if (0 == --l && c >= s) return i(null);
                                    })
                                ];
                                a83(n.fn, r, f, f[0]);
                            } else if (n.fn.length > 0) {
                                f = [
                                    h47(m)
                                ];
                                for(var y = arguments.length >= 2 ? arguments : [
                                    null
                                ].concat(p), b = 1; b < y.length; ++b)f.push(y[b]);
                                a83(n.fn, r, f, f[0]);
                            } else {
                                var v = null;
                                try {
                                    v = n.fn.call(r);
                                } catch (t726) {
                                    if (null != t726) return i(t726);
                                }
                                if (u76(v)) v.then(function() {
                                    return m();
                                }, function(t) {
                                    return m(t);
                                });
                                else {
                                    if (++c >= s) return l > 0 ? void 0 : e444.nextTick(function() {
                                        i(null);
                                    });
                                    t725();
                                }
                            }
                        }
                    };
                    function m(t) {
                        if (t) {
                            if (d) return;
                            return d = !0, i(t);
                        }
                        if (++c >= s) return l > 0 ? void 0 : i(null);
                        y16.apply(r, arguments);
                    }
                    y16.apply(null, [
                        null
                    ].concat(n189));
                }, o101.prototype.execPreSync = function(t, e, r) {
                    for(var n = this._pres.get(t) || [], i = n.length, o = 0; o < i; ++o)n[o].fn.apply(e, r || []);
                }, o101.prototype.execPost = function(t729, r, n, i155, o) {
                    arguments.length < 5 && (o = i155, i155 = null);
                    var s = this._posts.get(t729) || [], f = s.length, c = 0, l = null;
                    if (i155 && i155.error && (l = i155.error), !f) return e444.nextTick(function() {
                        o.apply(null, [
                            l
                        ].concat(n));
                    });
                    var d20 = function t() {
                        for(var e446 = s[c].fn, i = 0, d = n.length, p = [], y = 0; y < d; ++y)i += n[y] && n[y]._kareemIgnore ? 0 : 1, n[y] && n[y]._kareemIgnore || p.push(n[y]);
                        if (l) {
                            if (e446.length === i + 2) {
                                var m = h47(function(e) {
                                    if (e && (l = e), ++c >= f) return o.call(null, l);
                                    t();
                                });
                                a83(e446, r, [
                                    l
                                ].concat(p).concat([
                                    m
                                ]), m);
                            } else {
                                if (++c >= f) return o.call(null, l);
                                t();
                            }
                        } else {
                            var b = h47(function(e) {
                                return e ? (l = e, t()) : ++c >= f ? o.apply(null, [
                                    null
                                ].concat(n)) : void t();
                            });
                            if (e446.length === i + 2) return ++c >= f ? o.apply(null, [
                                null
                            ].concat(n)) : t();
                            if (e446.length === i + 1) a83(e446, r, p.concat([
                                b
                            ]), b);
                            else {
                                var v, g;
                                try {
                                    g = e446.apply(r, p);
                                } catch (t730) {
                                    v = t730, l = t730;
                                }
                                if (u76(g)) return g.then(function() {
                                    return b();
                                }, function(t) {
                                    return b(t);
                                });
                                if (++c >= f) return o.apply(null, [
                                    v
                                ].concat(n));
                                t();
                            }
                        }
                    };
                    d20();
                }, o101.prototype.execPostSync = function(t, e, r) {
                    for(var n = this._posts.get(t) || [], i = n.length, o = 0; o < i; ++o)n[o].fn.apply(e, r || []);
                }, o101.prototype.createWrapperSync = function(t, e) {
                    var r = this;
                    return function() {
                        r.execPreSync(t, this, arguments);
                        var n = e.apply(this, arguments);
                        return r.execPostSync(t, this, [
                            n
                        ]), n;
                    };
                }, o101.prototype.wrap = function(t732, e447, r, n, i) {
                    var o = n.length > 0 ? n[n.length - 1] : null, a = ("function" == typeof o && n.slice(0, n.length - 1), this), u = (i = i || {
                    }).checkForPromise;
                    this.execPre(t732, r, n, function(h) {
                        if (h) {
                            for(var f = i.numCallbackParams || 0, c = i.contextParameter ? [
                                r
                            ] : [], l = c.length; l < f; ++l)c.push(null);
                            return s82(a, h, t732, r, c, i, o);
                        }
                        var d, p = "function" == typeof o ? n.length - 1 : n.length, y = e447.length;
                        try {
                            d = e447.apply(r, n.slice(0, p).concat(m));
                        } catch (t733) {
                            return m(t733);
                        }
                        if (u) {
                            if (null != d && "function" == typeof d.then) return d.then(function(t) {
                                return m(null, t);
                            }, function(t) {
                                return m(t);
                            });
                            if (y < p + 1) return m(null, d);
                        }
                        function m() {
                            var e = Array.from(arguments);
                            if (e.shift(), i.nullResultByDefault && 0 === e.length && e.push(null), arguments[0]) return s82(a, arguments[0], t732, r, e, i, o);
                            a.execPost(t732, r, e, function() {
                                return arguments[0] ? "function" == typeof o ? o(arguments[0]) : void 0 : "function" == typeof o ? o.apply(r, arguments) : void 0;
                            });
                        }
                    });
                }, o101.prototype.filter = function(t734) {
                    for(var e = this, r = this.clone(), n190 = Array.from(r._pres.keys()), i156 = function() {
                        var n = s[o], i = e._pres.get(n).map(function(t) {
                            return Object.assign({
                            }, t, {
                                name: n
                            });
                        }).filter(t734);
                        if (0 === i.length) return r._pres.delete(n), "continue";
                        i.numAsync = i.filter(function(t) {
                            return t.isAsync;
                        }).length, r._pres.set(n, i);
                    }, o = 0, s = n190; o < s.length; o++)i156();
                    for(var a = Array.from(r._posts.keys()), u = function() {
                        var n = f[h], i = e._posts.get(n).map(function(t) {
                            return Object.assign({
                            }, t, {
                                name: n
                            });
                        }).filter(t734);
                        if (0 === i.length) return r._posts.delete(n), "continue";
                        r._posts.set(n, i);
                    }, h = 0, f = a; h < f.length; h++)u();
                    return r;
                }, o101.prototype.hasHooks = function(t) {
                    return this._pres.has(t) || this._posts.has(t);
                }, o101.prototype.createWrapper = function(t735, r, n191, i) {
                    var o = this;
                    return this.hasHooks(t735) ? function() {
                        var e = n191 || this;
                        o.wrap(t735, r, e, Array.from(arguments), i);
                    } : function() {
                        var t = arguments, n = this;
                        e444.nextTick(function() {
                            return r.apply(n, t);
                        });
                    };
                }, o101.prototype.pre = function(t, e, r, n, o) {
                    var s = {
                    };
                    "object" === i154(e) && null !== e ? e = (s = e).isAsync : "boolean" != typeof arguments[1] && (r = e, e = !1);
                    var a = this._pres.get(t) || [];
                    if (this._pres.set(t, a), e && (a.numAsync = a.numAsync || 0, ++a.numAsync), "function" != typeof r) throw new Error('pre() requires a function, got "' + i154(r) + '"');
                    return o ? a.unshift(Object.assign({
                    }, s, {
                        fn: r,
                        isAsync: e
                    })) : a.push(Object.assign({
                    }, s, {
                        fn: r,
                        isAsync: e
                    })), this;
                }, o101.prototype.post = function(t, e, r, n) {
                    var o = this._posts.get(t) || [];
                    if ("function" == typeof e && (n = !!r, r = e, e = {
                    }), "function" != typeof r) throw new Error('post() requires a function, got "' + i154(r) + '"');
                    return n ? o.unshift(Object.assign({
                    }, e, {
                        fn: r
                    })) : o.push(Object.assign({
                    }, e, {
                        fn: r
                    })), this._posts.set(t, o), this;
                }, o101.prototype.clone = function() {
                    var t, e = new o101, n = r325(this._pres.keys());
                    try {
                        for(n.s(); !(t = n.n()).done;){
                            var i = t.value, s = this._pres.get(i).slice();
                            s.numAsync = this._pres.get(i).numAsync, e._pres.set(i, s);
                        }
                    } catch (t736) {
                        n.e(t736);
                    } finally{
                        n.f();
                    }
                    var a, u = r325(this._posts.keys());
                    try {
                        for(u.s(); !(a = u.n()).done;){
                            var h = a.value;
                            e._posts.set(h, this._posts.get(h).slice());
                        }
                    } catch (t737) {
                        u.e(t737);
                    } finally{
                        u.f();
                    }
                    return e;
                }, o101.prototype.merge = function(t738, e448) {
                    var n192, i = (e448 = 1 === arguments.length || e448) ? this.clone() : this, o102 = r325(t738._pres.keys());
                    try {
                        var s83 = function() {
                            var e = n192.value, r = i._pres.get(e) || [], o = t738._pres.get(e).filter(function(t739) {
                                return -1 === r.map(function(t) {
                                    return t.fn;
                                }).indexOf(t739.fn);
                            }), s = r.concat(o);
                            s.numAsync = r.numAsync || 0, s.numAsync += o.filter(function(t) {
                                return t.isAsync;
                            }).length, i._pres.set(e, s);
                        };
                        for(o102.s(); !(n192 = o102.n()).done;)s83();
                    } catch (t740) {
                        o102.e(t740);
                    } finally{
                        o102.f();
                    }
                    var a, u = r325(t738._posts.keys());
                    try {
                        var h = function() {
                            var e = a.value, r = i._posts.get(e) || [], n = t738._posts.get(e).filter(function(t) {
                                return -1 === r.indexOf(t);
                            });
                            i._posts.set(e, r.concat(n));
                        };
                        for(u.s(); !(a = u.n()).done;)h();
                    } catch (t) {
                        u.e(t);
                    } finally{
                        u.f();
                    }
                    return i;
                }, t718.exports = o101;
            }).call(this, r324(5));
        },
        function(t741, e449, r327) {
            "use strict";
            function n193(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function i(t, e, r) {
                return e && n193(t.prototype, e), r && n193(t, r), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), t;
            }
            var o = r327(16), s = i(function t742(e450) {
                !function(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                }(this, t742), Object.assign(this, e450), null != e450 && null != e450.options && (this.options = Object.assign({
                }, e450.options));
            });
            Object.defineProperty(s.prototype, "ref", o), Object.defineProperty(s.prototype, "refPath", o), Object.defineProperty(s.prototype, "localField", o), Object.defineProperty(s.prototype, "foreignField", o), Object.defineProperty(s.prototype, "justOne", o), Object.defineProperty(s.prototype, "count", o), Object.defineProperty(s.prototype, "match", o), Object.defineProperty(s.prototype, "options", o), Object.defineProperty(s.prototype, "skip", o), Object.defineProperty(s.prototype, "limit", o), Object.defineProperty(s.prototype, "perDocumentLimit", o), t741.exports = s;
        },
        function(t743, e451, r328) {
            "use strict";
            var n194 = r328(14), i157 = r328(33), o103 = r328(309);
            /*!
 * Gather all indexes defined in the schema, including single nested,
 * document arrays, and embedded discriminators.
 */ t743.exports = function(t744) {
                var e452 = [], r = new WeakMap, s85 = t744.constructor.indexTypes, a84 = new Map;
                return (function t745(u77, h48, f47) {
                    if (r.has(u77)) return;
                    r.set(u77, !0), h48 = h48 || "";
                    for(var c33 = Object.keys(u77.paths), l = 0, d21 = c33; l < d21.length; l++){
                        var p = d21[l], y = u77.paths[p];
                        if (null == f47 || !f47.paths[p]) {
                            if (y.$isMongooseDocumentArray || y.$isSingleNested) {
                                if (!0 !== n194(y, "options.excludeIndexes") && !0 !== n194(y, "schemaOptions.excludeIndexes") && !0 !== n194(y, "schema.options.excludeIndexes") && t745(y.schema, h48 + p + "."), null != y.schema.discriminators) for(var m = y.schema.discriminators, b = Object.keys(m), v = 0, g = b; v < g.length; v++){
                                    var w = g[v];
                                    t745(m[w], h48 + p + ".", y.schema);
                                }
                                if (y.$isMongooseDocumentArray) continue;
                            }
                            var _ = y._index || y.caster && y.caster._index;
                            if (!1 !== _ && null != _) {
                                var M = {
                                }, S = i157(_), O = S ? _ : {
                                }, A = "string" == typeof _ ? _ : !!S && _.type;
                                if (A && -1 !== s85.indexOf(A)) M[h48 + p] = A;
                                else if (O.text) M[h48 + p] = "text", delete O.text;
                                else {
                                    var E = -1 === Number(_);
                                    M[h48 + p] = E ? -1 : 1;
                                }
                                delete O.type, "background" in O || (O.background = !0), null != u77.options.autoIndex && (O._autoIndex = u77.options.autoIndex);
                                var x = O && O.name;
                                "string" == typeof x && a84.has(x) ? Object.assign(a84.get(x), M) : (e452.push([
                                    M,
                                    O
                                ]), a84.set(x, M));
                            }
                        }
                    }
                    r.delete(u77), h48 ? /*!
   * Checks for indexes added to subdocs using Schema.index().
   * These indexes need their paths prefixed properly.
   *
   * schema._indexes = [ [indexObj, options], [indexObj, options] ..]
   */ (function(t, r) {
                        for(var n = t._indexes, i = n.length, o = 0; o < i; ++o){
                            for(var s = n[o][0], a = n[o][1], u = Object.keys(s), h = u.length, f = {
                            }, c = 0; c < h; ++c){
                                var l = u[c];
                                f[r + l] = s[l];
                            }
                            var d = Object.assign({
                            }, a);
                            if (null != a && null != a.partialFilterExpression) {
                                d.partialFilterExpression = {
                                };
                                for(var p = a.partialFilterExpression, y = 0, m = Object.keys(p); y < m.length; y++){
                                    var b = m[y];
                                    d.partialFilterExpression[r + b] = p[b];
                                }
                            }
                            e452.push([
                                f,
                                d
                            ]);
                        }
                    })(u77, h48) : (u77._indexes.forEach(function(t) {
                        var e = t[1];
                        "background" in e || (e.background = !0), o103(u77, e);
                    }), e452 = e452.concat(u77._indexes));
                })(t744), e452;
            };
        },
        function(t746, e453, r329) {
            "use strict";
            t746.exports = function(t, e) {
                var r = t.discriminatorMapping && t.discriminatorMapping.value;
                if (r && !("sparse" in e)) {
                    var n = t.options.discriminatorKey;
                    e.partialFilterExpression = e.partialFilterExpression || {
                    }, e.partialFilterExpression[n] = r;
                }
                return e;
            };
        },
        function(t747, e, r) {
            "use strict";
            /*!
 * ignore
 */ /*!
 * Returns this documents _id cast to a string.
 */ function n() {
                return null != this._id ? String(this._id) : null;
            }
            t747.exports = function(t) {
                return !t.paths.id && t.paths._id && t.options.id ? (t.virtual("id").get(n), t) : t;
            };
        },
        function(t748, e454, r330) {
            "use strict";
            function n195(t, e, r) {
                return e in t ? Object.defineProperty(t, e, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = r, t;
            }
            var i158 = r330(312), o104 = r330(314), s = r330(14), a = r330(156), u = r330(55);
            t748.exports = function(t749, e455) {
                var r331 = t749.childSchemas.find(function(t) {
                    return !!t.schema.options.timestamps;
                });
                if (e455 || r331) {
                    var h, f = a(e455, "createdAt"), c = a(e455, "updatedAt"), l = null != e455 && e455.hasOwnProperty("currentTime") ? e455.currentTime : null, d = {
                    };
                    if (t749.$timestamps = {
                        createdAt: f,
                        updatedAt: c
                    }, c && !t749.paths[c] && (d[c] = Date), f && !t749.paths[f]) d[f] = (n195(h = {
                    }, t749.options.typeKey || "type", Date), n195(h, "immutable", !0), h);
                    t749.add(d), t749.pre("save", function(t) {
                        var e = s(this, "$__.saveOptions.timestamps");
                        if (!1 === e) return t();
                        var r = null != e && !1 === e.updatedAt, n = null != e && !1 === e.createdAt, i = null != l ? l() : this.ownerDocument().constructor.base.now();
                        if (!n && this.isNew && f && !this.$__getValue(f) && this.$__isSelected(f) && this.$set(f, i), !r && c && (this.isNew || this.$isModified())) {
                            var o = i;
                            this.isNew && null != f && (o = this.$__getValue(f)), this.$set(c, o);
                        }
                        t();
                    }), t749.methods.initializeTimestamps = function() {
                        var t = null != l ? l() : this.constructor.base.now();
                        return f && !this.get(f) && this.$set(f, t), c && !this.get(c) && this.$set(c, t), this;
                    }, y[u.builtInMiddleware] = !0;
                    var p = {
                        query: !0,
                        model: !1
                    };
                    t749.pre("findOneAndReplace", p, y), t749.pre("findOneAndUpdate", p, y), t749.pre("replaceOne", p, y), t749.pre("update", p, y), t749.pre("updateOne", p, y), t749.pre("updateMany", p, y);
                }
                function y(t) {
                    var e = null != l ? l() : this.model.base.now();
                    "findOneAndReplace" === this.op && null == this.getUpdate() && this.setUpdate({
                    }), o104(e, f, c, this.getUpdate(), this.options, this.schema), i158(e, this.getUpdate(), this.model.schema), t();
                }
            };
        },
        function(t750, e456, r332) {
            "use strict";
            function n196(t751, e457) {
                var r333 = "undefined" != typeof Symbol && t751[Symbol.iterator] || t751["@@iterator"];
                if (!r333) {
                    if (Array.isArray(t751) || (r333 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return i159(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i159(t, e);
                    })(t751)) || e457 && t751 && "number" == typeof t751.length) {
                        r333 && (t751 = r333);
                        var n = 0, o = function() {
                        };
                        return {
                            s: o,
                            n: function() {
                                return n >= t751.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t751[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: o
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r333 = r333.call(t751);
                    },
                    n: function() {
                        var t = r333.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r333.return || r333.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function i159(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            var o105 = r332(313), s86 = r332(156);
            /*!
 * ignore
 */ function a85(t752, e458, r334) {
                if (null != e458) {
                    if (Object.keys(e458).some(function(t) {
                        return t.startsWith("$");
                    })) {
                        if (e458.$push && y(e458.$push), e458.$addToSet && y(e458.$addToSet), null != e458.$set) for(var i = 0, o = Object.keys(e458.$set); i < o.length; i++){
                            var a = o[i];
                            u78(r334, a, e458.$set, t752);
                        }
                        if (null != e458.$setOnInsert) for(var h = 0, f = Object.keys(e458.$setOnInsert); h < f.length; h++){
                            var c = f[h];
                            u78(r334, c, e458.$setOnInsert, t752);
                        }
                    }
                    var l, d = n196(Object.keys(e458).filter(function(t) {
                        return !t.startsWith("$");
                    }));
                    try {
                        for(d.s(); !(l = d.n()).done;){
                            var p = l.value;
                            u78(r334, p, e458, t752);
                        }
                    } catch (t) {
                        d.e(t);
                    } finally{
                        d.f();
                    }
                }
                function y(e459) {
                    for(var n197 = 0, i160 = Object.keys(e459); n197 < i160.length; n197++){
                        var o = i160[n197], a = r334.path(o.replace(/\.\$\./i, ".").replace(/.\$$/, ""));
                        e459[o] && a && a.$isMongooseDocumentArray && a.schema.options.timestamps && (function() {
                            var r = a.schema.options.timestamps, n = s86(r, "createdAt"), i = s86(r, "updatedAt");
                            e459[o].$each ? e459[o].$each.forEach(function(e) {
                                null != i && (e[i] = t752), null != n && (e[n] = t752);
                            }) : (null != i && (e459[o][i] = t752), null != n && (e459[o][n] = t752));
                        })();
                    }
                }
            }
            function u78(t753, e460, r335, i161) {
                var u79 = o105(e460), h49 = t753.path(u79);
                if (h49) {
                    for(var f = [], c = u79.split("."), l = c.length - 1; l > 0; --l){
                        var d = t753.path(c.slice(0, l).join("."));
                        null != d && (d.$isMongooseDocumentArray || d.$isSingleNested) && f.push({
                            parentPath: e460.split(".").slice(0, l).join("."),
                            parentSchemaType: d
                        });
                    }
                    if (Array.isArray(r335[e460]) && h49.$isMongooseDocumentArray) !function(t, e, r) {
                        var n = e.schema.options.timestamps;
                        if (n) for(var i = t.length, o = s86(n, "createdAt"), u = s86(n, "updatedAt"), h = 0; h < i; ++h)null != u && (t[h][u] = r), null != o && (t[h][o] = r), a85(r, t[h], e.schema);
                    }(r335[e460], h49, i161);
                    else if (r335[e460] && h49.$isSingleNested) !function(t, e, r) {
                        var n = e.schema.options.timestamps;
                        if (n) {
                            var i = s86(n, "createdAt"), o = s86(n, "updatedAt");
                            null != o && (t[o] = r), null != i && (t[i] = r), a85(r, t, e.schema);
                        }
                    }(r335[e460], h49, i161);
                    else if (f.length > 0) {
                        var p, y = n196(f);
                        try {
                            for(y.s(); !(p = y.n()).done;){
                                var m = p.value, b = m.parentPath, v = m.parentSchemaType, g = v.schema.options.timestamps, w = s86(g, "updatedAt");
                                if (g && null != w) {
                                    if (v.$isSingleNested) r335[b + "." + w] = i161;
                                    else if (v.$isMongooseDocumentArray) {
                                        var _ = e460.substring(b.length + 1);
                                        if (/^\d+$/.test(_)) {
                                            r335[b + "." + _][w] = i161;
                                            continue;
                                        }
                                        var M = _.indexOf(".");
                                        r335[b + "." + (_ = -1 !== M ? _.substring(0, M) : _) + "." + w] = i161;
                                    }
                                }
                            }
                        } catch (t) {
                            y.e(t);
                        } finally{
                            y.f();
                        }
                    } else if (null != h49.schema && h49.schema != t753 && r335[e460]) {
                        var S = h49.schema.options.timestamps, O = s86(S, "createdAt"), A = s86(S, "updatedAt");
                        if (!S) return;
                        null != A && (r335[e460][A] = i161), null != O && (r335[e460][O] = i161);
                    }
                }
            }
            t750.exports = a85;
        },
        function(t754, e, r) {
            "use strict";
            t754.exports = function(t) {
                return t.replace(/\.\$(\[[^\]]*\])?(?=\.)/g, ".0").replace(/\.\$(\[[^\]]*\])?$/g, ".0");
            };
        },
        function(t755, e461, r336) {
            "use strict";
            /*!
 * ignore
 */ var n = r336(14);
            t755.exports = /*!
 * ignore
 */ function(t, e, r, i, o) {
                var s = i, a = s, u = n(o, "overwrite", !1), h = n(o, "timestamps", !0);
                if (!h || null == s) return i;
                var f = null != h && !1 === h.createdAt, c = null != h && !1 === h.updatedAt;
                if (u) return i && i.$set && (i = i.$set, s.$set = {
                }, a = s.$set), c || !r || i[r] || (a[r] = t), f || !e || i[e] || (a[e] = t), s;
                if (i = i || {
                }, Array.isArray(s)) return s.push({
                    $set: (l = {
                    }, d = r, p = t, d in l ? Object.defineProperty(l, d, {
                        value: p,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : l[d] = p, l)
                }), s;
                var l, d, p;
                if (s.$set = s.$set || {
                }, !c && r && (!i.$currentDate || !i.$currentDate[r])) {
                    var y = !1;
                    if (-1 !== r.indexOf(".")) for(var m = r.split("."), b = 1; b < m.length; ++b){
                        var v = m.slice(-b).join("."), g = m.slice(0, -b).join(".");
                        if (null != i[g]) {
                            i[g][v] = t, y = !0;
                            break;
                        }
                        if (i.$set && i.$set[g]) {
                            i.$set[g][v] = t, y = !0;
                            break;
                        }
                    }
                    y || (s.$set[r] = t), s.hasOwnProperty(r) && delete s[r];
                }
                if (!f && e) {
                    i[e] && delete i[e], i.$set && i.$set[e] && delete i.$set[e];
                    var w = !1;
                    if (-1 !== e.indexOf(".")) for(var _ = e.split("."), M = 1; M < _.length; ++M){
                        var S = _.slice(-M).join("."), O = _.slice(0, -M).join(".");
                        if (null != i[O]) {
                            i[O][S] = t, w = !0;
                            break;
                        }
                        if (i.$set && i.$set[O]) {
                            i.$set[O][S] = t, w = !0;
                            break;
                        }
                    }
                    w || (s.$setOnInsert = s.$setOnInsert || {
                    }, s.$setOnInsert[e] = t);
                }
                0 === Object.keys(s.$set).length && delete s.$set;
                return s;
            };
        },
        function(t756, e462, r) {
            "use strict";
            var n = r(19), i = r(8);
            t756.exports = function(t, e) {
                if ("string" == typeof t) return;
                if ("function" == typeof t) return;
                throw new n('Invalid ref at path "' + e + '". Got ' + i.inspect(t, {
                    depth: 0
                }));
            };
        },
        function(t757, e463, r337) {
            "use strict";
            /*!
 * ignore
 */ t757.exports = i;
            var n198 = r337(317);
            /*!
 * ignore
 */ /*!
 * Apply query middleware
 *
 * @param {Query} query constructor
 * @param {Model} model
 */ function i(t758, e464) {
                var r = {
                    useErrorHandlers: !0,
                    numCallbackParams: 1,
                    nullResultByDefault: !0
                }, n = e464.hooks.filter(function(t759) {
                    var e465 = function(t) {
                        var e = {
                        };
                        t.hasOwnProperty("query") && (e.query = t.query);
                        t.hasOwnProperty("document") && (e.document = t.document);
                        return e;
                    }(t759);
                    return "updateOne" === t759.name ? null == e465.query || !!e465.query : "deleteOne" === t759.name ? !!e465.query || 0 === Object.keys(e465).length : "validate" === t759.name || "remove" === t759.name ? !!e465.query : null == t759.query && null == t759.document || !!t759.query;
                });
                t758.prototype._execUpdate = n.createWrapper("update", t758.prototype._execUpdate, null, r), t758.prototype.__distinct = n.createWrapper("distinct", t758.prototype.__distinct, null, r), t758.prototype.validate = n.createWrapper("validate", t758.prototype.validate, null, r), i.middlewareFunctions.filter(function(t) {
                    return "update" !== t && "distinct" !== t && "validate" !== t;
                }).forEach(function(e) {
                    t758.prototype["_".concat(e)] = n.createWrapper(e, t758.prototype["_".concat(e)], null, r);
                });
            }
            i.middlewareFunctions = n198.concat([
                "validate"
            ]);
        },
        function(t, e, r) {
            "use strict";
            t.exports = Object.freeze([
                "count",
                "countDocuments",
                "distinct",
                "estimatedDocumentCount",
                "find",
                "findOne",
                "findOneAndReplace",
                "findOneAndUpdate",
                "replaceOne",
                "update",
                "updateMany",
                "updateOne",
                "deleteMany",
                "deleteOne",
                "findOneAndDelete",
                "findOneAndRemove",
                "remove"
            ]);
        },
        function(t760, e466, r338) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n199(t761, e467) {
                var r339 = "undefined" != typeof Symbol && t761[Symbol.iterator] || t761["@@iterator"];
                if (!r339) {
                    if (Array.isArray(t761) || (r339 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return i162(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i162(t, e);
                    })(t761)) || e467 && t761 && "number" == typeof t761.length) {
                        r339 && (t761 = r339);
                        var n = 0, o = function() {
                        };
                        return {
                            s: o,
                            n: function() {
                                return n >= t761.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t761[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: o
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r339 = r339.call(t761);
                    },
                    n: function() {
                        var t = r339.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r339.return || r339.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function i162(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            var o106 = r338(9), s87 = r338(7), a86 = r338(319), u80 = r338(158), h = r338(4), f = o106.CastError;
            function c(t, e) {
                this.enumValues = [], this.regExp = null, o106.call(this, t, e, "String");
            }
            /*!
 * ignore
 */ function l(t) {
                return this.castForQuery(t);
            }
            c.schemaName = "String", c.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ c.prototype = Object.create(o106.prototype), c.prototype.constructor = c, Object.defineProperty(c.prototype, "OptionsConstructor", {
                configurable: !1,
                enumerable: !1,
                writable: !1,
                value: a86
            }), /*!
 * ignore
 */ c._cast = u80, c.cast = function(t) {
                return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
            }, /*!
 * ignore
 */ c._defaultCaster = function(t) {
                if (null != t && "string" != typeof t) throw new Error;
                return t;
            }, c.get = o106.get, c.set = o106.set, /*!
 * ignore
 */ c._checkRequired = function(t) {
                return (t instanceof String || "string" == typeof t) && t.length;
            }, c.checkRequired = o106.checkRequired, c.prototype.enum = function() {
                if (this.enumValidator && (this.validators = this.validators.filter(function(t) {
                    return t.validator !== this.enumValidator;
                }, this), this.enumValidator = !1), void 0 === arguments[0] || !1 === arguments[0]) return this;
                var t762, e;
                h.isObject(arguments[0]) ? Array.isArray(arguments[0].values) ? (t762 = arguments[0].values, e = arguments[0].message) : (t762 = h.object.vals(arguments[0]), e = s87.messages.String.enum) : (t762 = arguments, e = s87.messages.String.enum);
                var r, i = n199(t762);
                try {
                    for(i.s(); !(r = i.n()).done;){
                        var o = r.value;
                        void 0 !== o && this.enumValues.push(this.cast(o));
                    }
                } catch (t763) {
                    i.e(t763);
                } finally{
                    i.f();
                }
                var a = this.enumValues;
                return this.enumValidator = function(t) {
                    return void 0 === t || ~a.indexOf(t);
                }, this.validators.push({
                    validator: this.enumValidator,
                    message: e,
                    type: "enum",
                    enumValues: a
                }), this;
            }, c.prototype.lowercase = function(t764) {
                var e = this;
                return arguments.length > 0 && !t764 ? this : this.set(function(t) {
                    return "string" != typeof t && (t = e.cast(t)), t ? t.toLowerCase() : t;
                });
            }, c.prototype.uppercase = function(t765) {
                var e = this;
                return arguments.length > 0 && !t765 ? this : this.set(function(t) {
                    return "string" != typeof t && (t = e.cast(t)), t ? t.toUpperCase() : t;
                });
            }, c.prototype.trim = function(t766) {
                var e = this;
                return arguments.length > 0 && !t766 ? this : this.set(function(t) {
                    return "string" != typeof t && (t = e.cast(t)), t ? t.trim() : t;
                });
            }, c.prototype.minlength = function(t767, e468) {
                if (this.minlengthValidator && (this.validators = this.validators.filter(function(t) {
                    return t.validator !== this.minlengthValidator;
                }, this)), null != t767) {
                    var r = e468 || s87.messages.String.minlength;
                    r = r.replace(/{MINLENGTH}/, t767), this.validators.push({
                        validator: this.minlengthValidator = function(e) {
                            return null === e || e.length >= t767;
                        },
                        message: r,
                        type: "minlength",
                        minlength: t767
                    });
                }
                return this;
            }, c.prototype.minLength = c.prototype.minlength, c.prototype.maxlength = function(t768, e469) {
                if (this.maxlengthValidator && (this.validators = this.validators.filter(function(t) {
                    return t.validator !== this.maxlengthValidator;
                }, this)), null != t768) {
                    var r = e469 || s87.messages.String.maxlength;
                    r = r.replace(/{MAXLENGTH}/, t768), this.validators.push({
                        validator: this.maxlengthValidator = function(e) {
                            return null === e || e.length <= t768;
                        },
                        message: r,
                        type: "maxlength",
                        maxlength: t768
                    });
                }
                return this;
            }, c.prototype.maxLength = c.prototype.maxlength, c.prototype.match = function(t, e470) {
                var r = e470 || s87.messages.String.match;
                return this.validators.push({
                    validator: function(e) {
                        return !!t && (t.lastIndex = 0, null == e || "" === e || t.test(e));
                    },
                    message: r,
                    type: "regexp",
                    regexp: t
                }), this;
            }, c.prototype.checkRequired = function(t, e) {
                return o106._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : c.checkRequired())(t);
            }, c.prototype.cast = function(t, e, r) {
                if (o106._isRef(this, t, e, r)) return "string" == typeof t ? t : this._castRef(t, e, r);
                var n;
                n = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : c.cast();
                try {
                    return n(t);
                } catch (e471) {
                    throw new f("string", t, this.path, null, this);
                }
            };
            var d = h.options(o106.prototype.$conditionalHandlers, {
                $all: function(t769) {
                    var e = this;
                    return Array.isArray(t769) ? t769.map(function(t) {
                        return e.castForQuery(t);
                    }) : [
                        this.castForQuery(t769)
                    ];
                },
                $gt: l,
                $gte: l,
                $lt: l,
                $lte: l,
                $options: String,
                $regex: l,
                $not: l
            });
            Object.defineProperty(c.prototype, "$conditionalHandlers", {
                configurable: !1,
                enumerable: !1,
                writable: !1,
                value: Object.freeze(d)
            }), c.prototype.castForQuery = function(t, e) {
                var r;
                if (2 === arguments.length) {
                    if (!(r = this.$conditionalHandlers[t])) throw new Error("Can't use " + t + " with String.");
                    return r.call(this, e);
                }
                return e = t, "[object RegExp]" === Object.prototype.toString.call(e) ? e : this._castForQuery(e);
            }, /*!
 * Module exports.
 */ t760.exports = c;
        },
        function(t770, e472, r340) {
            "use strict";
            function n200(t771) {
                return (n200 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t771);
            }
            function i163(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function s(t772, e473) {
                return (s = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t772, e473);
            }
            function a(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = h50(t);
                    if (e) {
                        var i = h50(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return u81(this, r);
                };
            }
            function u81(t773, e) {
                if (e && ("object" === n200(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t773);
            }
            function h50(t774) {
                return (h50 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t774);
            }
            var f = function(t775) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && s(t, e);
                }(h, t775);
                var e474, r, n, u = a(h);
                function h() {
                    return o(this, h), u.apply(this, arguments);
                }
                return e474 = h, r && i163(e474.prototype, r), n && i163(e474, n), Object.defineProperty(e474, "prototype", {
                    writable: !1
                }), e474;
            }(r340(15)), c = r340(16);
            Object.defineProperty(f.prototype, "enum", c), Object.defineProperty(f.prototype, "match", c), Object.defineProperty(f.prototype, "lowercase", c), Object.defineProperty(f.prototype, "trim", c), Object.defineProperty(f.prototype, "uppercase", c), Object.defineProperty(f.prototype, "minLength", c), Object.defineProperty(f.prototype, "minlength", c), Object.defineProperty(f.prototype, "maxLength", c), Object.defineProperty(f.prototype, "maxlength", c), Object.defineProperty(f.prototype, "populate", c), /*!
 * ignore
 */ t770.exports = f;
        },
        function(t776, e475, r341) {
            "use strict";
            function n201(t777) {
                return (n201 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t777);
            }
            function i164(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function s(t778, e476) {
                return (s = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t778, e476);
            }
            function a(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = h51(t);
                    if (e) {
                        var i = h51(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return u82(this, r);
                };
            }
            function u82(t779, e) {
                if (e && ("object" === n201(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t779);
            }
            function h51(t780) {
                return (h51 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t780);
            }
            var f = function(t781) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && s(t, e);
                }(h, t781);
                var e477, r, n, u = a(h);
                function h() {
                    return o(this, h), u.apply(this, arguments);
                }
                return e477 = h, r && i164(e477.prototype, r), n && i164(e477, n), Object.defineProperty(e477, "prototype", {
                    writable: !1
                }), e477;
            }(r341(15)), c = r341(16);
            Object.defineProperty(f.prototype, "min", c), Object.defineProperty(f.prototype, "max", c), Object.defineProperty(f.prototype, "enum", c), Object.defineProperty(f.prototype, "populate", c), /*!
 * ignore
 */ t776.exports = f;
        },
        function(t782, e478, r342) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n = r342(20), i = r342(9), o = r342(84), s = r342(4);
            function a(t, e) {
                i.call(this, t, e, "Boolean");
            }
            a.schemaName = "Boolean", a.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ a.prototype = Object.create(i.prototype), a.prototype.constructor = a, /*!
 * ignore
 */ a._cast = o, a.set = i.set, a.cast = function(t) {
                return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
            }, /*!
 * ignore
 */ a._defaultCaster = function(t) {
                if (null != t && "boolean" != typeof t) throw new Error;
                return t;
            }, /*!
 * ignore
 */ a._checkRequired = function(t) {
                return !0 === t || !1 === t;
            }, a.checkRequired = i.checkRequired, a.prototype.checkRequired = function(t) {
                return this.constructor._checkRequired(t);
            }, Object.defineProperty(a, "convertToTrue", {
                get: function() {
                    return o.convertToTrue;
                },
                set: function(t) {
                    o.convertToTrue = t;
                }
            }), Object.defineProperty(a, "convertToFalse", {
                get: function() {
                    return o.convertToFalse;
                },
                set: function(t) {
                    o.convertToFalse = t;
                }
            }), a.prototype.cast = function(t) {
                var e;
                e = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : a.cast();
                try {
                    return e(t);
                } catch (e479) {
                    throw new n("Boolean", t, this.path, e479, this);
                }
            }, a.$conditionalHandlers = s.options(i.prototype.$conditionalHandlers, {
            }), a.prototype.castForQuery = function(t, e) {
                var r;
                return 2 === arguments.length ? (r = a.$conditionalHandlers[t]) ? r.call(this, e) : this._castForQuery(e) : this._castForQuery(t);
            }, a.prototype._castNullish = function(t) {
                if (void 0 === t) return t;
                var e = "function" == typeof this.constructor.cast ? this.constructor.cast() : a.cast();
                return null == e ? t : !(e.convertToFalse instanceof Set && e.convertToFalse.has(t)) && (!!(e.convertToTrue instanceof Set && e.convertToTrue.has(t)) || t);
            }, /*!
 * Module exports.
 */ t782.exports = a;
        },
        function(t783, e480, r343) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n202, i165, o107 = r343(88), s88 = r343(20), a87 = r343(12).EventEmitter, u83 = r343(329), h52 = r343(9), f48 = r343(172), c34 = r343(173), l31 = r343(8), d = r343(4), p = r343(174), y17 = r343(1).arrayAtomicsSymbol, m17 = r343(1).arrayPathSymbol, b = r343(1).documentArrayParent;
            function v(t784, e481, r344, n) {
                null != n && null != n._id ? e481 = c34(e481, n) : null != r344 && null != r344._id && (e481 = c34(e481, r344));
                var i = g13(e481, r344);
                i.prototype.$basePath = t784, o107.call(this, t784, i, r344), this.schema = e481, this.schemaOptions = n || {
                }, this.$isMongooseDocumentArray = !0, this.Constructor = i, i.base = e481.base;
                var s = this.defaultValue;
                "defaultValue" in this && void 0 === s || this.default(function() {
                    var t = s.call(this);
                    return null == t || Array.isArray(t) || (t = [
                        t
                    ]), t;
                });
                var a = this;
                this.$embeddedSchemaType = new h52(t784 + ".$", {
                    required: this && this.schemaOptions && this.schemaOptions.required || !1
                }), this.$embeddedSchemaType.cast = function(t, e, r) {
                    return a.cast(t, e, r)[0];
                }, this.$embeddedSchemaType.$isMongooseDocumentArrayElement = !0, this.$embeddedSchemaType.caster = this.Constructor, this.$embeddedSchemaType.schema = this.schema;
            }
            /*!
 * Ignore
 */ function g13(t, e, n) {
                function o() {
                    i165.apply(this, arguments), this.$session(this.ownerDocument().$session());
                }
                i165 || (i165 = r343(46)), t._preCompile();
                var s = null != n ? n.prototype : i165.prototype;
                for(var u in o.prototype = Object.create(s), o.prototype.$__setSchema(t), o.schema = t, o.prototype.constructor = o, o.$isArraySubdocument = !0, o.events = new a87, t.methods)o.prototype[u] = t.methods[u];
                for(var h in t.statics)o[h] = t.statics[h];
                for(var f in a87.prototype)o[f] = a87.prototype[f];
                return o.options = e, o;
            }
            /*!
 * Scopes paths selected in a query to this array.
 * Necessary for proper default application of subdocument values.
 *
 * @param {DocumentArrayPath} array - the array to scope `fields` paths
 * @param {Object|undefined} fields - the root fields selected in the query
 * @param {Boolean|undefined} init - if we are being created part of a query result
 */ function w(t, e, r) {
                if (r && e) {
                    for(var n, i, o, s = t.path + ".", a = Object.keys(e), u = a.length, h = {
                    }; u--;)if ((i = a[u]).startsWith(s)) {
                        if ("$" === (o = i.substring(s.length))) continue;
                        o.startsWith("$.") && (o = o.substring(2)), n || (n = !0), h[o] = e[i];
                    }
                    return n && h || void 0;
                }
            }
            v.schemaName = "DocumentArray", v.options = {
                castNonArrays: !0
            }, /*!
 * Inherits from ArrayType.
 */ v.prototype = Object.create(o107.prototype), v.prototype.constructor = v, v.prototype.OptionsConstructor = u83, v.prototype.discriminator = function(t, e, r) {
                "function" == typeof t && (t = d.getFunctionName(t)), r = r || {
                };
                var n = d.isPOJO(r) ? r.value : r, i = "boolean" != typeof r.clone || r.clone;
                e.instanceOfSchema && i && (e = e.clone());
                var o = g13(e = f48(this.casterConstructor, t, e, n), null, this.casterConstructor);
                o.baseCasterConstructor = this.casterConstructor;
                try {
                    Object.defineProperty(o, "name", {
                        value: t
                    });
                } catch (t785) {
                }
                return this.casterConstructor.discriminators[t] = o, this.casterConstructor.discriminators[t];
            }, v.prototype.doValidate = function(t786, e, o, s) {
                n202 || (n202 = r343(27));
                var a = this;
                try {
                    h52.prototype.doValidate.call(this, t786, function(r) {
                        if (r) return e(r);
                        var u, h = t786 && t786.length;
                        if (!h) return e();
                        if (s && s.updateValidator) return e();
                        d.isMongooseDocumentArray(t786) || (t786 = new n202(t786, a.path, o));
                        function f(t) {
                            null != t && (u = t), --h || e(u);
                        }
                        for(var c = 0, l = h; c < l; ++c){
                            var y = t786[c];
                            if (null != y) {
                                if (!(y instanceof i165)) {
                                    var m = p(a.casterConstructor, t786[c]);
                                    y = t786[c] = new m(y, t786, void 0, void 0, c);
                                }
                                null == s || !s.validateModifiedOnly || y.$isModified() ? y.$__validate(f) : --h || e(u);
                            } else --h || e(u);
                        }
                    }, o);
                } catch (t) {
                    return e(t);
                }
            }, v.prototype.doValidateSync = function(t, e, r) {
                var n = h52.prototype.doValidateSync.call(this, t, e);
                if (null != n) return n;
                var o = t && t.length, s = null;
                if (o) {
                    for(var a = 0, u = o; a < u; ++a){
                        var f = t[a];
                        if (f) {
                            if (!(f instanceof i165)) {
                                var c = p(this.casterConstructor, t[a]);
                                f = t[a] = new c(f, t, void 0, void 0, a);
                            }
                            if (null == r || !r.validateModifiedOnly || f.$isModified()) {
                                var l = f.validateSync();
                                l && null == s && (s = l);
                            }
                        }
                    }
                    return s;
                }
            }, /*!
 * ignore
 */ v.prototype.getDefault = function(t) {
                var e = "function" == typeof this.defaultValue ? this.defaultValue.call(t) : this.defaultValue;
                if (null == e) return e;
                n202 || (n202 = r343(27)), Array.isArray(e) || (e = [
                    e
                ]), e = new n202(e, this.path, t);
                for(var i = 0; i < e.length; ++i){
                    var o = new (p(this.casterConstructor, e[i]))({
                    }, e, void 0, void 0, i);
                    o.$init(e[i]), o.isNew = !0, Object.assign(o.$__.activePaths.default, o.$__.activePaths.init), o.$__.activePaths.init = {
                    }, e[i] = o;
                }
                return e;
            }, v.prototype.cast = function(t, e, o, a, u) {
                if (n202 || (n202 = r343(27)), null != t && null != t[m17] && t === a) return t;
                var h, f, c = {
                    transform: !1,
                    virtuals: !1
                };
                if (u = u || {
                }, !Array.isArray(t)) {
                    if (!o && !v.options.castNonArrays) throw new s88("DocumentArray", l31.inspect(t), this.path, null, this);
                    return e && o && e.markModified(this.path), this.cast([
                        t
                    ], e, o, a, u);
                }
                u.skipDocumentArrayCast && !d.isMongooseDocumentArray(t) || (t = new n202(t, this.path, e)), null != a && (t[y17] = a[y17] || {
                }), null != u.arrayPathIndex && (t[m17] = this.path + "." + u.arrayPathIndex);
                for(var g = d.isMongooseDocumentArray(t) ? t.__array : t, _ = g.length, M = {
                    skipId: !0,
                    willInit: !0
                }, S = 0; S < _; ++S)if (g[S]) {
                    var O = p(this.casterConstructor, g[S]);
                    if (!g[S].$__ || g[S] instanceof O || (g[S] = g[S].toObject({
                        transform: !1,
                        virtuals: g[S].schema === O.schema
                    })), g[S] instanceof i165) {
                        if (g[S][b] !== e) {
                            if (o) {
                                var A = new O(null, t, M, h, S);
                                g[S] = A.$init(g[S]);
                            } else {
                                var E = new O(g[S], t, void 0, void 0, S);
                                g[S] = E;
                            }
                        }
                        null == g[S].__index && g[S].$setIndex(S);
                    } else if (null != g[S]) {
                        if (o) e ? h || (h = w(this, e.$__.selected, o)) : h = !0, f = new O(null, t, M, h, S), g[S] = f.$init(g[S]);
                        else if (a && "function" == typeof a.id && (f = a.id(g[S]._id)), a && f && d.deepEqual(f.toObject(c), g[S])) f.set(g[S]), g[S] = f;
                        else try {
                            f = new O(g[S], t, void 0, void 0, S), g[S] = f;
                        } catch (e) {
                            var x = l31.inspect(g[S]);
                            throw new s88("embedded", x, t[m17], e, this);
                        }
                    }
                }
                return t;
            }, /*!
 * ignore
 */ v.prototype.clone = function() {
                var t = Object.assign({
                }, this.options), e = new this.constructor(this.path, this.schema, t, this.schemaOptions);
                return e.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e.requiredValidator = this.requiredValidator), e.Constructor.discriminators = Object.assign({
                }, this.Constructor.discriminators), e;
            }, /*!
 * ignore
 */ v.prototype.applyGetters = function(t, e) {
                return h52.prototype.applyGetters.call(this, t, e);
            }, v.defaultOptions = {
            }, v.set = h52.set, /*!
 * Module exports.
 */ t783.exports = v;
        },
        function(t787, e482, r345) {
            "use strict";
            function n203(t788) {
                return (n203 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t788);
            }
            function i166(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function s(t789, e483) {
                return (s = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t789, e483);
            }
            function a(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = h53(t);
                    if (e) {
                        var i = h53(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return u84(this, r);
                };
            }
            function u84(t790, e) {
                if (e && ("object" === n203(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t790);
            }
            function h53(t791) {
                return (h53 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t791);
            }
            var f = function(t792) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && s(t, e);
                }(h, t792);
                var e484, r, n, u = a(h);
                function h() {
                    return o(this, h), u.apply(this, arguments);
                }
                return e484 = h, r && i166(e484.prototype, r), n && i166(e484, n), Object.defineProperty(e484, "prototype", {
                    writable: !1
                }), e484;
            }(r345(15)), c = r345(16);
            Object.defineProperty(f.prototype, "enum", c), Object.defineProperty(f.prototype, "of", c), /*!
 * ignore
 */ t787.exports = f;
        },
        function(t793, e485, r346) {
            "use strict";
            t793.exports = function t(e) {
                if (!Array.isArray(e)) return {
                    min: 0,
                    max: 0,
                    containsNonArrayItem: !0
                };
                if (0 === e.length) return {
                    min: 1,
                    max: 1,
                    containsNonArrayItem: !1
                };
                if (1 === e.length && !Array.isArray(e[0])) return {
                    min: 1,
                    max: 1,
                    containsNonArrayItem: !1
                };
                for(var r = t(e[0]), n = 1; n < e.length; ++n){
                    var i = t(e[n]);
                    i.min < r.min && (r.min = i.min), i.max > r.max && (r.max = i.max), r.containsNonArrayItem = r.containsNonArrayItem || i.containsNonArrayItem;
                }
                return r.min = r.min + 1, r.max = r.max + 1, r;
            };
        },
        function(t794, e486, r347) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n204(t795, e487) {
                var r348 = "undefined" != typeof Symbol && t795[Symbol.iterator] || t795["@@iterator"];
                if (!r348) {
                    if (Array.isArray(t795) || (r348 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return i167(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i167(t, e);
                    })(t795)) || e487 && t795 && "number" == typeof t795.length) {
                        r348 && (t795 = r348);
                        var n = 0, o = function() {
                        };
                        return {
                            s: o,
                            n: function() {
                                return n >= t795.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t795[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: o
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r348 = r348.call(t795);
                    },
                    n: function() {
                        var t = r348.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r348.return || r348.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function i167(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            function o108(t796) {
                return (o108 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t796);
            }
            var s89 = r347(20), a88 = r347(44), u85 = r347(87), h = r347(326), f = r347(327), c = r347(14), l = r347(22), d = r347(162), p = r347(164), y = r347(8), m = r347(33), b = r347(52), v = [
                "Polygon",
                "MultiPolygon"
            ];
            function g(t, e, r) {
                if (Array.isArray(t)) t.forEach(function(n, i) {
                    if (Array.isArray(n) || m(n)) return g(n, e, r);
                    t[i] = e.castForQueryWrapper({
                        val: n,
                        context: r
                    });
                });
                else for(var n205 = Object.keys(t), i = n205.length; i--;){
                    var o = n205[i], s = t[o];
                    Array.isArray(s) || m(s) ? (g(s, e, r), t[o] = s) : t[o] = e.castForQuery({
                        val: s,
                        context: r
                    });
                }
            }
            t794.exports = function t(e, r, i, w) {
                if (Array.isArray(r)) throw new Error("Query filter must be an object, got an array ", y.inspect(r));
                if (null == r) return r;
                null != e && null != e.discriminators && null != r[e.options.discriminatorKey] && (e = d(e, r[e.options.discriminatorKey]) || e);
                var _, M, S, O, A, E, x = Object.keys(r), k = x.length;
                for(i = i || {
                }; k--;)if (E = r[O = x[k]], "$or" === O || "$nor" === O || "$and" === O) {
                    if (!Array.isArray(E)) throw new s89("Array", E, O);
                    for(var j = 0; j < E.length; ++j){
                        if (null == E[j] || "object" !== o108(E[j])) throw new s89("Object", E[j], O + "." + j);
                        E[j] = t(e, E[j], i, w);
                    }
                } else {
                    if ("$where" === O) {
                        if ("string" !== (A = o108(E)) && "function" !== A) throw new Error("Must have a string or function for $where");
                        "function" === A && (r[O] = E.toString());
                        continue;
                    }
                    if ("$expr" === O) {
                        E = h(E, e);
                        continue;
                    }
                    if ("$elemMatch" === O) E = t(e, E, i, w);
                    else if ("$text" === O) E = f(E, O);
                    else {
                        if (!e) continue;
                        if (!(M = e.path(O))) for(var $ = O.split("."), P = $.length; P--;){
                            var R = $.slice(0, P).join("."), B = $.slice(P).join("."), T = e.path(R), I = T && T.schema && T.schema.options && T.schema.options.discriminatorKey;
                            if (null != T && null != (T.schema && T.schema.discriminators) && null != I && B !== I) {
                                var N = c(r, R + "." + I);
                                null != N && (M = T.schema.discriminators[N].path(B));
                            }
                        }
                        if (M) {
                            if (null == E) continue;
                            if ("Object" === l(E)) {
                                if (Object.keys(E).some(p)) for(var D = Object.keys(E), C = void 0, L = D.length; L--;)if (S = E[C = D[L]], "$not" === C) {
                                    if (S && M) {
                                        if ((_ = Object.keys(S)).length && p(_[0])) for(var q in S)S[q] = M.castForQueryWrapper({
                                            $conditional: q,
                                            val: S[q],
                                            context: w
                                        });
                                        else E[C] = M.castForQueryWrapper({
                                            $conditional: C,
                                            val: S,
                                            context: w
                                        });
                                        continue;
                                    }
                                } else E[C] = M.castForQueryWrapper({
                                    $conditional: C,
                                    val: S,
                                    context: w
                                });
                                else r[O] = M.castForQueryWrapper({
                                    val: E,
                                    context: w
                                });
                            } else if (Array.isArray(E) && -1 === [
                                "Buffer",
                                "Array"
                            ].indexOf(M.instance)) {
                                var U, F = [], z = n204(E);
                                try {
                                    for(z.s(); !(U = z.n()).done;){
                                        var V = U.value;
                                        F.push(M.castForQueryWrapper({
                                            val: V,
                                            context: w
                                        }));
                                    }
                                } catch (t) {
                                    z.e(t);
                                } finally{
                                    z.f();
                                }
                                r[O] = {
                                    $in: F
                                };
                            } else r[O] = M.castForQueryWrapper({
                                val: E,
                                context: w
                            });
                        } else {
                            for(var K = O.split("."), H = K.length, Z = void 0, W = void 0, J = void 0; (H--) && (Z = K.slice(0, H).join("."), !(M = e.path(Z))););
                            if (M) {
                                if (M.caster && M.caster.schema) {
                                    (J = {
                                    })[W = K.slice(H).join(".")] = E;
                                    var Y = t(M.caster.schema, J, i, w)[W];
                                    void 0 === Y ? delete r[O] : r[O] = Y;
                                } else r[O] = E;
                                continue;
                            }
                            if (m(E)) {
                                var Q = "";
                                if (E.$near ? Q = "$near" : E.$nearSphere ? Q = "$nearSphere" : E.$within ? Q = "$within" : E.$geoIntersects ? Q = "$geoIntersects" : E.$geoWithin && (Q = "$geoWithin"), Q) {
                                    var G = new u85.Number("__QueryCasting__"), X = E[Q];
                                    if (null != E.$maxDistance && (E.$maxDistance = G.castForQueryWrapper({
                                        val: E.$maxDistance,
                                        context: w
                                    })), null != E.$minDistance && (E.$minDistance = G.castForQueryWrapper({
                                        val: E.$minDistance,
                                        context: w
                                    })), "$within" === Q) {
                                        var tt = X.$center || X.$centerSphere || X.$box || X.$polygon;
                                        if (!tt) throw new Error("Bad $within parameter: " + JSON.stringify(E));
                                        X = tt;
                                    } else if ("$near" === Q && "string" == typeof X.type && Array.isArray(X.coordinates)) X = X.coordinates;
                                    else if (("$near" === Q || "$nearSphere" === Q || "$geoIntersects" === Q) && X.$geometry && "string" == typeof X.$geometry.type && Array.isArray(X.$geometry.coordinates)) null != X.$maxDistance && (X.$maxDistance = G.castForQueryWrapper({
                                        val: X.$maxDistance,
                                        context: w
                                    })), null != X.$minDistance && (X.$minDistance = G.castForQueryWrapper({
                                        val: X.$minDistance,
                                        context: w
                                    })), b(X.$geometry) && (X.$geometry = X.$geometry.toObject({
                                        transform: !1,
                                        virtuals: !1
                                    })), X = X.$geometry.coordinates;
                                    else if ("$geoWithin" === Q) {
                                        if (X.$geometry) {
                                            b(X.$geometry) && (X.$geometry = X.$geometry.toObject({
                                                virtuals: !1
                                            }));
                                            var et = X.$geometry.type;
                                            if (-1 === v.indexOf(et)) throw new Error('Invalid geoJSON type for $geoWithin "' + et + '", must be "Polygon" or "MultiPolygon"');
                                            X = X.$geometry.coordinates;
                                        } else X = X.$box || X.$polygon || X.$center || X.$centerSphere, b(X) && (X = X.toObject({
                                            virtuals: !1
                                        }));
                                    }
                                    g(X, G, w);
                                    continue;
                                }
                            }
                            if (e.nested[O]) continue;
                            var rt = "strict" in i ? i.strict : e.options.strict, nt = "strictQuery" in i ? i.strictQuery : "strict" in i ? i.strict : "strict" in e._userProvidedOptions ? e._userProvidedOptions.strict : e.options.strictQuery;
                            if (i.upsert && rt) {
                                if ("throw" === rt) throw new a88(O);
                                throw new a88(O, 'Path "' + O + '" is not in schema, strict mode is `true`, and upsert is `true`.');
                            }
                            if ("throw" === nt) throw new a88(O, 'Path "' + O + "\" is not in schema and strictQuery is 'throw'.");
                            nt && delete r[O];
                        }
                    }
                }
                return r;
            };
        },
        function(t797, e488, r349) {
            "use strict";
            function n206(t798) {
                return (n206 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t798);
            }
            var i168 = r349(20), o = r349(44), s90 = r349(160), a89 = new Set([
                "$and",
                "$or",
                "$not"
            ]), u86 = new Set([
                "$cmp",
                "$eq",
                "$lt",
                "$lte",
                "$gt",
                "$gte"
            ]), h54 = new Set([
                "$multiply",
                "$divide",
                "$log",
                "$mod",
                "$trunc",
                "$avg",
                "$max",
                "$min",
                "$stdDevPop",
                "$stdDevSamp",
                "$sum"
            ]), f49 = new Set([
                "$abs",
                "$exp",
                "$ceil",
                "$floor",
                "$ln",
                "$log10",
                "$round",
                "$sqrt",
                "$sin",
                "$cos",
                "$tan",
                "$asin",
                "$acos",
                "$atan",
                "$atan2",
                "$asinh",
                "$acosh",
                "$atanh",
                "$sinh",
                "$cosh",
                "$tanh",
                "$degreesToRadians",
                "$radiansToDegrees"
            ]), c = new Set([
                "$arrayElemAt",
                "$first",
                "$last"
            ]), l = new Set([
                "$year",
                "$month",
                "$week",
                "$dayOfMonth",
                "$dayOfYear",
                "$hour",
                "$minute",
                "$second",
                "$isoDayOfWeek",
                "$isoWeekYear",
                "$isoWeek",
                "$millisecond"
            ]);
            function d(t799, e489, r350) {
                if (b(t799)) return t799;
                null != t799.$cond ? Array.isArray(t799.$cond) ? t799.$cond = t799.$cond.map(function(t) {
                    return d(t, e489, r350);
                }) : (t799.$cond.if = d(t799.$cond.if, e489, r350), t799.$cond.then = d(t799.$cond.then, e489, r350), t799.$cond.else = d(t799.$cond.else, e489, r350)) : null != t799.$ifNull ? t799.$ifNull.map(function(t) {
                    return d(t, e489, r350);
                }) : null != t799.$switch && (t799.branches.map(function(t) {
                    return d(t, e489, r350);
                }), t799.default = d(t799.default, e489, r350));
                for(var n207 = 0, i169 = Object.keys(t799); n207 < i169.length; n207++){
                    var s = i169[n207];
                    a89.has(s) ? t799[s] = t799[s].map(function(t) {
                        return d(t, e489, r350);
                    }) : u86.has(s) ? t799[s] = m18(t799[s], e489, r350) : h54.has(s) ? t799[s] = y18(t799[s]) : f49.has(s) && (t799[s] = p21(t799[s]));
                }
                return t799.$in && (t799.$in = (function(t, e, r) {
                    var n = t[1];
                    if (!b(n)) return t;
                    var i = t[0], s = e.path(n.slice(1));
                    if (null === s) {
                        if (!1 === r) return t;
                        if ("throw" === r) throw new o("$in");
                        return;
                    }
                    if (!s.$isMongooseArray) throw new Error("Path must be an array for $in");
                    return [
                        s.$isMongooseDocumentArray ? s.$embeddedSchemaType.cast(i) : s.caster.cast(i),
                        n
                    ];
                })(t799.$in, e489, r350)), t799.$size && (t799.$size = p21(t799.$size)), (function(t) {
                    for(var e = Object.keys(t), r = 0, n = e.length; r < n; ++r)void 0 === t[e[r]] && delete t[e[r]];
                })(t799), t799;
            }
            function p21(t) {
                if (!v(t)) return t;
                try {
                    return s90(t);
                } catch (e) {
                    throw new i168("Number", t);
                }
            }
            function y18(t800) {
                if (!Array.isArray(t800)) {
                    if (!v(t800)) return t800;
                    try {
                        return s90(t800);
                    } catch (e) {
                        throw new i168("Number", t800);
                    }
                }
                return t800.map(function(t) {
                    if (!v(t)) return t;
                    try {
                        return s90(t);
                    } catch (e) {
                        throw new i168("Number", t);
                    }
                });
            }
            function m18(t, e, r) {
                if (!Array.isArray(t) || 2 !== t.length) throw new Error("Comparison operator must be an array of length 2");
                t[0] = d(t[0], e, r);
                var a = t[0];
                if (v(t[1])) {
                    var u = null, h = null, f = null;
                    if (b(a)) u = a.slice(1), h = e.path(u);
                    else if ("object" === n206(a) && null != a) for(var p = 0, y = Object.keys(a); p < y.length; p++){
                        var m = y[p];
                        l.has(m) && b(a[m]) ? (u = a[m].slice(1) + "." + m, f = s90) : c.has(m) && b(a[m]) && (u = a[m].slice(1) + "." + m, null != (h = e.path(a[m].slice(1))) && (h.$isMongooseDocumentArray ? h = h.$embeddedSchemaType : h.$isMongooseArray && (h = h.caster)));
                    }
                    var g = "object" === n206(t[1]) && null != t[1] && null != t[1].$literal;
                    if (null != h) t[1] = g ? {
                        $literal: h.cast(t[1].$literal)
                    } : h.cast(t[1]);
                    else if (null != f) {
                        if (g) try {
                            t[1] = {
                                $literal: f(t[1].$literal)
                            };
                        } catch (e) {
                            throw new i168(f.name.replace(/^cast/, ""), t[1], u + ".$literal");
                        }
                        else try {
                            t[1] = f(t[1]);
                        } catch (e490) {
                            throw new i168(f.name.replace(/^cast/, ""), t[1], u);
                        }
                    } else {
                        if (null != u && !0 === r) return;
                        if (null != u && "throw" === r) throw new o(u);
                    }
                } else t[1] = d(t[1]);
                return t;
            }
            function b(t) {
                return "string" == typeof t && "$" === t[0];
            }
            function v(t801) {
                return ("string" != typeof t801 || "$" !== t801[0]) && ("object" !== n206(t801) || null === t801 || !Object.keys(t801).find(function(t) {
                    return "$" === t[0];
                }) || null != t801.$literal);
            }
            t797.exports = function(t, e, r) {
                if ("object" !== n206(t) || null === t) throw new Error("`$expr` must be an object");
                return d(t, e, r);
            };
        },
        function(t802, e491, r) {
            "use strict";
            function n(t803) {
                return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t803);
            }
            var i = r(20), o = r(84), s = r(158);
            /*!
 * Casts val to an object suitable for `$text`. Throws an error if the object
 * can't be casted.
 *
 * @param {Any} val value to cast
 * @param {String} [path] path to associate with any errors that occured
 * @return {Object} casted object
 * @see https://docs.mongodb.com/manual/reference/operator/query/text/
 * @api private
 */ t802.exports = function(t, e) {
                if (null == t || "object" !== n(t)) throw new i("$text", t, e);
                return null != t.$search && (t.$search = s(t.$search, e + ".$search")), null != t.$language && (t.$language = s(t.$language, e + ".$language")), null != t.$caseSensitive && (t.$caseSensitive = o(t.$caseSensitive, e + ".$castSensitive")), null != t.$diacriticSensitive && (t.$diacriticSensitive = o(t.$diacriticSensitive, e + ".$diacriticSensitive")), t;
            };
        },
        function(t804, e492, r351) {
            "use strict";
            (function(e493) {
                function n208(t805, e494) {
                    var r352 = "undefined" != typeof Symbol && t805[Symbol.iterator] || t805["@@iterator"];
                    if (!r352) {
                        if (Array.isArray(t805) || (r352 = (function(t, e) {
                            if (!t) return;
                            if ("string" == typeof t) return i170(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === r && t.constructor && (r = t.constructor.name);
                            if ("Map" === r || "Set" === r) return Array.from(t);
                            if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i170(t, e);
                        })(t805)) || e494 && t805 && "number" == typeof t805.length) {
                            r352 && (t805 = r352);
                            var n = 0, o = function() {
                            };
                            return {
                                s: o,
                                n: function() {
                                    return n >= t805.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t805[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: o
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var s, a = !0, u = !1;
                    return {
                        s: function() {
                            r352 = r352.call(t805);
                        },
                        n: function() {
                            var t = r352.next();
                            return a = t.done, t;
                        },
                        e: function(t) {
                            u = !0, s = t;
                        },
                        f: function() {
                            try {
                                a || null == r352.return || r352.return();
                            } finally{
                                if (u) throw s;
                            }
                        }
                    };
                }
                function i170(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var o109 = r351(89), s91 = r351(13), a90 = r351(18), u87 = r351(169), h55 = r351(57), f50 = r351(34).internalToObjectOptions, c = r351(4), l = r351(1).arrayParentSymbol, d = r351(1).arrayPathSymbol, p = r351(1).arraySchemaSymbol, y = r351(1).documentArrayParent, m = {
                    /*!
   * ignore
   */ toBSON: function() {
                        return this.toObject(f50);
                    },
                    _cast: function(t, r) {
                        if (null == this[p]) return t;
                        var n = this[p].casterConstructor;
                        if ((n.$isMongooseDocumentArray ? c.isMongooseDocumentArray(t) : t instanceof n) || t && t.constructor && t.constructor.baseCasterConstructor === n) return t[y] && t.__parentArray || (t[y] = this[l], t.__parentArray = this), t.$setIndex(r), t;
                        if (null == t) return null;
                        if ((e493.isBuffer(t) || t instanceof a90 || !c.isObject(t)) && (t = {
                            _id: t
                        }), t && n.discriminators && n.schema && n.schema.options && n.schema.options.discriminatorKey) {
                            if ("string" == typeof t[n.schema.options.discriminatorKey] && n.discriminators[t[n.schema.options.discriminatorKey]]) n = n.discriminators[t[n.schema.options.discriminatorKey]];
                            else {
                                var i = h55(n.discriminators, t[n.schema.options.discriminatorKey]);
                                i && (n = i);
                            }
                        }
                        if (n.$isMongooseDocumentArray) return n.cast(t, this, void 0, void 0, r);
                        var o = new n(t, this, void 0, void 0, r);
                        return o.isNew = !0, o;
                    },
                    id: function(t) {
                        var e, r, i;
                        try {
                            e = u87(t).toString();
                        } catch (t806) {
                            e = null;
                        }
                        var o, h = n208(this);
                        try {
                            for(h.s(); !(o = h.n()).done;){
                                var f = o.value;
                                if (f && null != (i = f.get("_id"))) {
                                    if (i instanceof s91) {
                                        if (r || (r = String(t)), r == i._id) return f;
                                    } else if (t instanceof a90 || i instanceof a90) {
                                        if (e == i) return f;
                                    } else if (t == i || c.deepEqual(t, i)) return f;
                                }
                            }
                        } catch (t807) {
                            h.e(t807);
                        } finally{
                            h.f();
                        }
                        return null;
                    },
                    toObject: function(t) {
                        return [].concat(this.map(function(e) {
                            return null == e ? null : "function" != typeof e.toObject ? e : e.toObject(t);
                        }));
                    },
                    $toObject: function() {
                        return this.constructor.prototype.toObject.apply(this, arguments);
                    },
                    push: function() {
                        var t = o109.push.apply(this, arguments);
                        return b(this), t;
                    },
                    pull: function() {
                        var t = o109.pull.apply(this, arguments);
                        return b(this), t;
                    },
                    /*!
   * Wraps [`Array#shift`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift) with proper change tracking.
   */ shift: function() {
                        var t = o109.shift.apply(this, arguments);
                        return b(this), t;
                    },
                    /*!
   * Wraps [`Array#splice`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice) with proper change tracking and casting.
   */ splice: function() {
                        var t = o109.splice.apply(this, arguments);
                        return b(this), t;
                    },
                    inspect: function() {
                        return this.toObject();
                    },
                    create: function(t) {
                        var e = this[p].casterConstructor;
                        if (t && e.discriminators && e.schema && e.schema.options && e.schema.options.discriminatorKey) {
                            if ("string" == typeof t[e.schema.options.discriminatorKey] && e.discriminators[t[e.schema.options.discriminatorKey]]) e = e.discriminators[t[e.schema.options.discriminatorKey]];
                            else {
                                var r = h55(e.discriminators, t[e.schema.options.discriminatorKey]);
                                r && (e = r);
                            }
                        }
                        return new e(t, this);
                    },
                    /*!
   * ignore
   */ notify: function(t) {
                        var e = this;
                        return function r(n, i) {
                            for(var o = (i = i || e).length; o--;)if (null != i[o]) {
                                switch(t){
                                    case "save":
                                        n = e[o];
                                }
                                c.isMongooseArray(i[o]) ? r(n, i[o]) : i[o] && i[o].emit(t, n);
                            }
                        };
                    },
                    set: function(t, e, r) {
                        var n = this.__array;
                        if (r) return n[t] = e, this;
                        var i = m._cast.call(this, e, t);
                        return n[t] = i, m._markModified.call(this, t), this;
                    },
                    _markModified: function(t, e) {
                        var r, n = this[l];
                        if (n) {
                            if (r = this[d], arguments.length) {
                                if (null != e) {
                                    var i = t.__index;
                                    r = r + "." + i + "." + e;
                                } else r = r + "." + t;
                            }
                            if (null != r && r.endsWith(".$")) return this;
                            n.markModified(r, 0 !== arguments.length ? t : n);
                        }
                        return this;
                    }
                };
                /*!
 * If this is a document array, each element may contain single
 * populated paths, so we need to modify the top-level document's
 * populated cache. See gh-8247, gh-8265.
 */ function b(t808) {
                    var e495 = t808[l];
                    if (e495 && null != e495.$__.populated) {
                        var r, i171 = n208(Object.keys(e495.$__.populated).filter(function(e) {
                            return e.startsWith(t808[d] + ".");
                        }));
                        try {
                            var o = function() {
                                var n = r.value, i = n.slice((t808[d] + ".").length);
                                if (!Array.isArray(e495.$__.populated[n].value)) return "continue";
                                e495.$__.populated[n].value = t808.map(function(t) {
                                    return t.$populated(i);
                                });
                            };
                            for(i171.s(); !(r = i171.n()).done;)o();
                        } catch (t) {
                            i171.e(t);
                        } finally{
                            i171.f();
                        }
                    }
                }
                t804.exports = m;
            }).call(this, r351(3).Buffer);
        },
        function(t809, e496, r353) {
            "use strict";
            function n209(t810) {
                return (n209 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t810);
            }
            function i173(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function s(t811, e497) {
                return (s = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t811, e497);
            }
            function a(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = h56(t);
                    if (e) {
                        var i = h56(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return u88(this, r);
                };
            }
            function u88(t812, e) {
                if (e && ("object" === n209(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t812);
            }
            function h56(t813) {
                return (h56 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t813);
            }
            var f = function(t814) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && s(t, e);
                }(h, t814);
                var e498, r, n, u = a(h);
                function h() {
                    return o(this, h), u.apply(this, arguments);
                }
                return e498 = h, r && i173(e498.prototype, r), n && i173(e498, n), Object.defineProperty(e498, "prototype", {
                    writable: !1
                }), e498;
            }(r353(15)), c = r353(16);
            Object.defineProperty(f.prototype, "excludeIndexes", c), Object.defineProperty(f.prototype, "_id", c), /*!
 * ignore
 */ t809.exports = f;
        },
        function(t815, e499, r354) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n210(t816) {
                return (n210 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t816);
            }
            var i174, o110 = r354(20), s92 = r354(12).EventEmitter, a = r354(154), u89 = r354(331), h57 = r354(9), f51 = r354(83), c35 = r354(56).castToNumber, l = r354(172), d = r354(165), p = r354(174), y = r354(173), m = r354(34).internalToObjectOptions, b = r354(4);
            function v(t, e, r) {
                t = y(t, r), this.caster = g(t), this.caster.path = e, this.caster.prototype.$basePath = e, this.schema = t, this.$isSingleNested = !0, h57.call(this, e, r, "Embedded");
            }
            /*!
 * ignore
 */ /*!
 * ignore
 */ function g(t817, e) {
                i174 || (i174 = r354(90));
                var n211 = function(t818, e, r) {
                    var n = this;
                    this.$__parent = r, i174.apply(this, arguments), this.$session(this.ownerDocument().$session()), r && (r.$on("save", function() {
                        n.emit("save", n), n.constructor.emit("save", n);
                    }), r.$on("isNew", function(t) {
                        n.isNew = t, n.emit("isNew", t), n.constructor.emit("isNew", t);
                    }));
                };
                t817._preCompile();
                var o = null != e ? e.prototype : i174.prototype;
                for(var a in (n211.prototype = Object.create(o)).$__setSchema(t817), n211.prototype.constructor = n211, n211.schema = t817, n211.$isSingleNested = !0, n211.events = new s92, n211.prototype.toBSON = function() {
                    return this.toObject(m);
                }, t817.methods)n211.prototype[a] = t817.methods[a];
                for(var u in t817.statics)n211[u] = t817.statics[u];
                for(var h in s92.prototype)n211[h] = s92.prototype[h];
                return n211;
            }
            /*!
 * Special case for when users use a common location schema to represent
 * locations for use with $geoWithin.
 * https://docs.mongodb.org/manual/reference/operator/query/geoWithin/
 *
 * @param {Object} val
 * @api private
 */ t815.exports = v, v.prototype = Object.create(h57.prototype), v.prototype.constructor = v, v.prototype.OptionsConstructor = u89, v.prototype.$conditionalHandlers.$geoWithin = function(t) {
                return {
                    $geometry: this.castForQuery(t.$geometry)
                };
            }, /*!
 * ignore
 */ v.prototype.$conditionalHandlers.$near = v.prototype.$conditionalHandlers.$nearSphere = d.cast$near, v.prototype.$conditionalHandlers.$within = v.prototype.$conditionalHandlers.$geoWithin = d.cast$within, v.prototype.$conditionalHandlers.$geoIntersects = d.cast$geoIntersects, v.prototype.$conditionalHandlers.$minDistance = c35, v.prototype.$conditionalHandlers.$maxDistance = c35, v.prototype.$conditionalHandlers.$exists = f51, v.prototype.cast = function(t819, e500, r, i, o) {
                if (t819 && t819.$isSingleNested && t819.parent === e500) return t819;
                if (null != t819 && ("object" !== n210(t819) || Array.isArray(t819))) throw new a(this.path, t819);
                var s, u = p(this.caster, t819), h = e500 && e500.$__ && e500.$__.selected || {
                }, f = this.path, c = Object.keys(h).reduce(function(t, e) {
                    return e.startsWith(f + ".") && (t[e.substring(f.length + 1)] = h[e]), t;
                }, {
                });
                return o = Object.assign({
                }, o, {
                    priorDoc: i
                }), r ? ((s = new u(void 0, c, e500)).$init(t819), s) : 0 === Object.keys(t819).length ? new u({
                }, c, e500, void 0, o) : new u(t819, c, e500, void 0, o);
            }, v.prototype.castForQuery = function(t, e, r) {
                var n;
                if (2 === arguments.length) {
                    if (!(n = this.$conditionalHandlers[t])) throw new Error("Can't use " + t);
                    return n.call(this, e);
                }
                if (null == (e = t)) return e;
                this.options.runSetters && (e = this._applySetters(e));
                var i = p(this.caster, e), s = null != r && null != r.strict ? r.strict : void 0;
                try {
                    e = new i(e, s);
                } catch (t820) {
                    if (!(t820 instanceof o110)) throw new o110("Embedded", e, this.path, t820, this);
                    throw t820;
                }
                return e;
            }, v.prototype.doValidate = function(t, e, r355, n) {
                var i = p(this.caster, t);
                if (!t || t instanceof i || (t = new i(t, null, r355)), n && n.skipSchemaValidators) return t.validate(e);
                h57.prototype.doValidate.call(this, t, function(r) {
                    return r ? e(r) : t ? void t.validate(e) : e(null);
                }, r355, n);
            }, v.prototype.doValidateSync = function(t, e, r) {
                if (!r || !r.skipSchemaValidators) {
                    var n = h57.prototype.doValidateSync.call(this, t, e);
                    if (n) return n;
                }
                if (t) return t.validateSync();
            }, v.prototype.discriminator = function(t, e, r) {
                r = r || {
                };
                var n = b.isPOJO(r) ? r.value : r, i = "boolean" != typeof r.clone || r.clone;
                return e.instanceOfSchema && i && (e = e.clone()), e = l(this.caster, t, e, n), this.caster.discriminators[t] = g(e, this.caster), this.caster.discriminators[t];
            }, v.defaultOptions = {
            }, v.set = h57.set, /*!
 * ignore
 */ v.prototype.clone = function() {
                var t = Object.assign({
                }, this.options), e = new this.constructor(this.schema, this.path, t);
                return e.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e.requiredValidator = this.requiredValidator), e.caster.discriminators = Object.assign({
                }, this.caster.discriminators), e;
            };
        },
        function(t821, e501, r356) {
            "use strict";
            function n212(t822) {
                return (n212 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t822);
            }
            function i175(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function s(t823, e502) {
                return (s = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t823, e502);
            }
            function a(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = h58(t);
                    if (e) {
                        var i = h58(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return u90(this, r);
                };
            }
            function u90(t824, e) {
                if (e && ("object" === n212(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t824);
            }
            function h58(t825) {
                return (h58 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t825);
            }
            var f = function(t826) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && s(t, e);
                }(h, t826);
                var e503, r, n, u = a(h);
                function h() {
                    return o(this, h), u.apply(this, arguments);
                }
                return e503 = h, r && i175(e503.prototype, r), n && i175(e503, n), Object.defineProperty(e503, "prototype", {
                    writable: !1
                }), e503;
            }(r356(15)), c = r356(16);
            Object.defineProperty(f.prototype, "_id", c), t821.exports = f;
        },
        function(t827, e504, r357) {
            "use strict";
            (function(e505) {
                /*!
 * Module dependencies.
 */ function n213(t828) {
                    return (n213 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t828);
                }
                var i = r357(168), o111 = r357(333), s = r357(9), a91 = r357(161), u = r357(4), h = i.Binary, f = s.CastError;
                function c36(t, e) {
                    s.call(this, t, e, "Buffer");
                }
                /*!
 * ignore
 */ function l(t) {
                    return this.castForQuery(t);
                }
                c36.schemaName = "Buffer", c36.defaultOptions = {
                }, /*!
 * Inherits from SchemaType.
 */ c36.prototype = Object.create(s.prototype), c36.prototype.constructor = c36, c36.prototype.OptionsConstructor = o111, /*!
 * ignore
 */ c36._checkRequired = function(t) {
                    return !(!t || !t.length);
                }, c36.set = s.set, c36.checkRequired = s.checkRequired, c36.prototype.checkRequired = function(t, e) {
                    return s._isRef(this, t, e, !0) ? !!t : this.constructor._checkRequired(t);
                }, c36.prototype.cast = function(t, r, o) {
                    var a;
                    if (s._isRef(this, t, r, o)) {
                        if (t && t.isMongooseBuffer) return t;
                        if (e505.isBuffer(t)) return t && t.isMongooseBuffer || (t = new i(t, [
                            this.path,
                            r
                        ]), null != this.options.subtype && (t._subtype = this.options.subtype)), t;
                        if (t instanceof h) {
                            if (a = new i(t.value(!0), [
                                this.path,
                                r
                            ]), "number" != typeof t.sub_type) throw new f("Buffer", t, this.path, null, this);
                            return a._subtype = t.sub_type, a;
                        }
                        if (null == t || u.isNonBuiltinObject(t)) return this._castRef(t, r, o);
                    }
                    if (t && t._id && (t = t._id), t && t.isMongooseBuffer) return t;
                    if (e505.isBuffer(t)) return t && t.isMongooseBuffer || (t = new i(t, [
                        this.path,
                        r
                    ]), null != this.options.subtype && (t._subtype = this.options.subtype)), t;
                    if (t instanceof h) {
                        if (a = new i(t.value(!0), [
                            this.path,
                            r
                        ]), "number" != typeof t.sub_type) throw new f("Buffer", t, this.path, null, this);
                        return a._subtype = t.sub_type, a;
                    }
                    if (null === t) return t;
                    var c = n213(t);
                    if ("string" === c || "number" === c || Array.isArray(t) || "object" === c && "Buffer" === t.type && Array.isArray(t.data)) return "number" === c && (t = [
                        t
                    ]), a = new i(t, [
                        this.path,
                        r
                    ]), null != this.options.subtype && (a._subtype = this.options.subtype), a;
                    throw new f("Buffer", t, this.path, null, this);
                }, c36.prototype.subtype = function(t) {
                    return this.options.subtype = t, this;
                }, c36.prototype.$conditionalHandlers = u.options(s.prototype.$conditionalHandlers, {
                    $bitsAllClear: a91,
                    $bitsAnyClear: a91,
                    $bitsAllSet: a91,
                    $bitsAnySet: a91,
                    $gt: l,
                    $gte: l,
                    $lt: l,
                    $lte: l
                }), c36.prototype.castForQuery = function(t, e) {
                    var r;
                    if (2 === arguments.length) {
                        if (!(r = this.$conditionalHandlers[t])) throw new Error("Can't use " + t + " with Buffer.");
                        return r.call(this, e);
                    }
                    e = t;
                    var n = this._castForQuery(e);
                    return n ? n.toObject({
                        transform: !1,
                        virtuals: !1
                    }) : n;
                }, /*!
 * Module exports.
 */ t827.exports = c36;
            }).call(this, r357(3).Buffer);
        },
        function(t829, e506, r358) {
            "use strict";
            function n214(t830) {
                return (n214 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t830);
            }
            function i176(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function s(t831, e507) {
                return (s = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t831, e507);
            }
            function a(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = h59(t);
                    if (e) {
                        var i = h59(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return u91(this, r);
                };
            }
            function u91(t832, e) {
                if (e && ("object" === n214(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t832);
            }
            function h59(t833) {
                return (h59 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t833);
            }
            var f = function(t834) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && s(t, e);
                }(h, t834);
                var e508, r, n, u = a(h);
                function h() {
                    return o(this, h), u.apply(this, arguments);
                }
                return e508 = h, r && i176(e508.prototype, r), n && i176(e508, n), Object.defineProperty(e508, "prototype", {
                    writable: !1
                }), e508;
            }(r358(15)), c = r358(16);
            Object.defineProperty(f.prototype, "subtype", c), /*!
 * ignore
 */ t829.exports = f;
        },
        function(t835, e509, r359) {
            "use strict";
            /*!
 * Module requirements.
 */ var n215 = r359(7), i177 = r359(335), o = r359(9), s = r359(336), a = r359(22), u = r359(4), h = o.CastError;
            function f(t, e) {
                o.call(this, t, e, "Date");
            }
            /*!
 * Date Query casting.
 *
 * @api private
 */ function c(t) {
                return this.cast(t);
            }
            f.schemaName = "Date", f.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ f.prototype = Object.create(o.prototype), f.prototype.constructor = f, f.prototype.OptionsConstructor = i177, /*!
 * ignore
 */ f._cast = s, f.set = o.set, f.cast = function(t) {
                return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
            }, /*!
 * ignore
 */ f._defaultCaster = function(t) {
                if (null != t && !(t instanceof Date)) throw new Error;
                return t;
            }, f.prototype.expires = function(t) {
                return "Object" !== a(this._index) && (this._index = {
                }), this._index.expires = t, u.expires(this._index), this;
            }, /*!
 * ignore
 */ f._checkRequired = function(t) {
                return t instanceof Date;
            }, f.checkRequired = o.checkRequired, f.prototype.checkRequired = function(t, e) {
                return o._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : f.checkRequired())(t);
            }, f.prototype.min = function(t836, e510) {
                if (this.minValidator && (this.validators = this.validators.filter(function(t) {
                    return t.validator !== this.minValidator;
                }, this)), t836) {
                    var r360 = e510 || n215.messages.Date.min;
                    "string" == typeof r360 && (r360 = r360.replace(/{MIN}/, t836 === Date.now ? "Date.now()" : t836.toString()));
                    var i = this;
                    this.validators.push({
                        validator: this.minValidator = function(e) {
                            var r = t836;
                            "function" == typeof t836 && t836 !== Date.now && (r = r.call(this));
                            var n = r === Date.now ? r() : i.cast(r);
                            return null === e || e.valueOf() >= n.valueOf();
                        },
                        message: r360,
                        type: "min",
                        min: t836
                    });
                }
                return this;
            }, f.prototype.max = function(t837, e511) {
                if (this.maxValidator && (this.validators = this.validators.filter(function(t) {
                    return t.validator !== this.maxValidator;
                }, this)), t837) {
                    var r362 = e511 || n215.messages.Date.max;
                    "string" == typeof r362 && (r362 = r362.replace(/{MAX}/, t837 === Date.now ? "Date.now()" : t837.toString()));
                    var i = this;
                    this.validators.push({
                        validator: this.maxValidator = function(e) {
                            var r = t837;
                            "function" == typeof r && r !== Date.now && (r = r.call(this));
                            var n = r === Date.now ? r() : i.cast(r);
                            return null === e || e.valueOf() <= n.valueOf();
                        },
                        message: r362,
                        type: "max",
                        max: t837
                    });
                }
                return this;
            }, f.prototype.cast = function(t) {
                var e;
                e = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : f.cast();
                try {
                    return e(t);
                } catch (e512) {
                    throw new h("date", t, this.path, e512, this);
                }
            }, f.prototype.$conditionalHandlers = u.options(o.prototype.$conditionalHandlers, {
                $gt: c,
                $gte: c,
                $lt: c,
                $lte: c
            }), f.prototype.castForQuery = function(t, e) {
                if (2 !== arguments.length) return this._castForQuery(t);
                var r = this.$conditionalHandlers[t];
                if (!r) throw new Error("Can't use " + t + " with Date.");
                return r.call(this, e);
            }, /*!
 * Module exports.
 */ t835.exports = f;
        },
        function(t838, e513, r364) {
            "use strict";
            function n216(t839) {
                return (n216 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t839);
            }
            function i178(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function s(t840, e514) {
                return (s = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t840, e514);
            }
            function a(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = h60(t);
                    if (e) {
                        var i = h60(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return u92(this, r);
                };
            }
            function u92(t841, e) {
                if (e && ("object" === n216(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t841);
            }
            function h60(t842) {
                return (h60 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t842);
            }
            var f = function(t843) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && s(t, e);
                }(h, t843);
                var e515, r, n, u = a(h);
                function h() {
                    return o(this, h), u.apply(this, arguments);
                }
                return e515 = h, r && i178(e515.prototype, r), n && i178(e515, n), Object.defineProperty(e515, "prototype", {
                    writable: !1
                }), e515;
            }(r364(15)), c = r364(16);
            Object.defineProperty(f.prototype, "min", c), Object.defineProperty(f.prototype, "max", c), Object.defineProperty(f.prototype, "expires", c), /*!
 * ignore
 */ t838.exports = f;
        },
        function(t844, e516, r) {
            "use strict";
            var n = r(43);
            t844.exports = function(t) {
                var e;
                return null == t || "" === t ? null : t instanceof Date ? (n.ok(!isNaN(t.valueOf())), t) : (n.ok("boolean" != typeof t), e = t instanceof Number || "number" == typeof t ? new Date(t) : "string" == typeof t && !isNaN(Number(t)) && (Number(t) >= 275761 || Number(t) < -271820) ? new Date(Number(t)) : "function" == typeof t.valueOf ? new Date(t.valueOf()) : new Date(t), isNaN(e.valueOf()) ? void n.ok(!1) : e);
            };
        },
        function(t845, e517, r365) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n217, i = r365(338), o = r365(9), s = r365(169), a = r365(22), u = r365(18), h = r365(4), f = o.CastError;
            function c(t, e) {
                var r = "string" == typeof t && 24 === t.length && /^[a-f0-9]+$/i.test(t), n = e && e.suppressWarning;
                !r && void 0 !== t || n || h.warn("mongoose: To create a new ObjectId please try `Mongoose.Types.ObjectId` instead of using `Mongoose.Schema.ObjectId`. Set the `suppressWarning` option if you're trying to create a hex char path in your schema."), o.call(this, t, e, "ObjectID");
            }
            /*!
 * ignore
 */ function l(t) {
                return this.cast(t);
            }
            /*!
 * ignore
 */ function d() {
                return new u;
            }
            function p(t) {
                if (n217 || (n217 = r365(13)), this instanceof n217) {
                    if (void 0 === t) {
                        var e = new u;
                        return this.$__._id = e, e;
                    }
                    this.$__._id = t;
                }
                return t;
            }
            /*!
 * Module exports.
 */ c.schemaName = "ObjectId", c.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ c.prototype = Object.create(o.prototype), c.prototype.constructor = c, c.prototype.OptionsConstructor = i, c.get = o.get, c.set = o.set, c.prototype.auto = function(t) {
                return t && (this.default(d), this.set(p)), this;
            }, /*!
 * ignore
 */ c._checkRequired = function(t) {
                return t instanceof u;
            }, /*!
 * ignore
 */ c._cast = s, c.cast = function(t) {
                return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
            }, /*!
 * ignore
 */ c._defaultCaster = function(t) {
                if (!(t instanceof u)) throw new Error(t + " is not an instance of ObjectId");
                return t;
            }, c.checkRequired = o.checkRequired, c.prototype.checkRequired = function(t, e) {
                return o._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : c.checkRequired())(t);
            }, c.prototype.cast = function(t, e, r) {
                if (o._isRef(this, t, e, r)) {
                    if (t instanceof u) return t;
                    if ("objectid" === (a(t) || "").toLowerCase()) return new u(t.toHexString());
                    if (null == t || h.isNonBuiltinObject(t)) return this._castRef(t, e, r);
                }
                var n;
                n = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : c.cast();
                try {
                    return n(t);
                } catch (e518) {
                    throw new f("ObjectId", t, this.path, e518, this);
                }
            }, c.prototype.$conditionalHandlers = h.options(o.prototype.$conditionalHandlers, {
                $gt: l,
                $gte: l,
                $lt: l,
                $lte: l
            }), d.$runBeforeSetters = !0, t845.exports = c;
        },
        function(t846, e519, r366) {
            "use strict";
            function n218(t847) {
                return (n218 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t847);
            }
            function i179(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function s(t848, e520) {
                return (s = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t848, e520);
            }
            function a(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = h61(t);
                    if (e) {
                        var i = h61(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return u93(this, r);
                };
            }
            function u93(t849, e) {
                if (e && ("object" === n218(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t849);
            }
            function h61(t850) {
                return (h61 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t850);
            }
            var f = function(t851) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && s(t, e);
                }(h, t851);
                var e521, r, n, u = a(h);
                function h() {
                    return o(this, h), u.apply(this, arguments);
                }
                return e521 = h, r && i179(e521.prototype, r), n && i179(e521, n), Object.defineProperty(e521, "prototype", {
                    writable: !1
                }), e521;
            }(r366(15)), c = r366(16);
            Object.defineProperty(f.prototype, "auto", c), Object.defineProperty(f.prototype, "populate", c), /*!
 * ignore
 */ t846.exports = f;
        },
        function(t852, e522, r367) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n = r367(9), i = n.CastError, o = r367(32), s93 = r367(340), a = r367(4);
            function u(t, e) {
                n.call(this, t, e, "Decimal128");
            }
            /*!
 * ignore
 */ function h(t) {
                return this.cast(t);
            }
            u.schemaName = "Decimal128", u.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ u.prototype = Object.create(n.prototype), u.prototype.constructor = u, /*!
 * ignore
 */ u._cast = s93, u.set = n.set, u.cast = function(t) {
                return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
            }, /*!
 * ignore
 */ u._defaultCaster = function(t) {
                if (null != t && !(t instanceof o)) throw new Error;
                return t;
            }, /*!
 * ignore
 */ u._checkRequired = function(t) {
                return t instanceof o;
            }, u.checkRequired = n.checkRequired, u.prototype.checkRequired = function(t, e) {
                return n._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : u.checkRequired())(t);
            }, u.prototype.cast = function(t, e, r) {
                if (n._isRef(this, t, e, r)) return t instanceof o ? t : this._castRef(t, e, r);
                var s;
                s = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : u.cast();
                try {
                    return s(t);
                } catch (e523) {
                    throw new i("Decimal128", t, this.path, e523, this);
                }
            }, u.prototype.$conditionalHandlers = a.options(n.prototype.$conditionalHandlers, {
                $gt: h,
                $gte: h,
                $lt: h,
                $lte: h
            }), /*!
 * Module exports.
 */ t852.exports = u;
        },
        function(t853, e524, r) {
            "use strict";
            (function(e) {
                function n(t854) {
                    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t854);
                }
                var i = r(32), o = r(43);
                t853.exports = function(t) {
                    return null == t ? t : "object" === n(t) && "string" == typeof t.$numberDecimal ? i.fromString(t.$numberDecimal) : t instanceof i ? t : "string" == typeof t ? i.fromString(t) : e.isBuffer(t) ? new i(t) : "number" == typeof t ? i.fromString(String(t)) : "function" == typeof t.valueOf && "string" == typeof t.valueOf() ? i.fromString(t.valueOf()) : void o.ok(!1);
                };
            }).call(this, r(3).Buffer);
        },
        function(t855, e525, r368) {
            "use strict";
            (function(e526) {
                /*!
 * ignore
 */ function n219(t856) {
                    return (n219 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t856);
                }
                function i180(t857, e527) {
                    var r369 = "undefined" != typeof Symbol && t857[Symbol.iterator] || t857["@@iterator"];
                    if (!r369) {
                        if (Array.isArray(t857) || (r369 = (function(t, e) {
                            if (!t) return;
                            if ("string" == typeof t) return o112(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === r && t.constructor && (r = t.constructor.name);
                            if ("Map" === r || "Set" === r) return Array.from(t);
                            if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return o112(t, e);
                        })(t857)) || e527 && t857 && "number" == typeof t857.length) {
                            r369 && (t857 = r369);
                            var n = 0, i = function() {
                            };
                            return {
                                s: i,
                                n: function() {
                                    return n >= t857.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t857[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: i
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var s, a = !0, u = !1;
                    return {
                        s: function() {
                            r369 = r369.call(t857);
                        },
                        n: function() {
                            var t = r369.next();
                            return a = t.done, t;
                        },
                        e: function(t) {
                            u = !0, s = t;
                        },
                        f: function() {
                            try {
                                a || null == r369.return || r369.return();
                            } finally{
                                if (u) throw s;
                            }
                        }
                    };
                }
                function o112(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function s94(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                function a92() {
                    return (a92 = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(t, e, r) {
                        var n = u94(t, e);
                        if (n) {
                            var i = Object.getOwnPropertyDescriptor(n, e);
                            return i.get ? i.get.call(arguments.length < 3 ? t : r) : i.value;
                        }
                    }).apply(this, arguments);
                }
                function u94(t, e) {
                    for(; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = l32(t)););
                    return t;
                }
                function h62(t858, e528) {
                    return (h62 = Object.setPrototypeOf || function(t, e) {
                        return t.__proto__ = e, t;
                    })(t858, e528);
                }
                function f52(t) {
                    var e = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                        if (Reflect.construct.sham) return !1;
                        if ("function" == typeof Proxy) return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                            })), !0;
                        } catch (t) {
                            return !1;
                        }
                    }();
                    return function() {
                        var r, n = l32(t);
                        if (e) {
                            var i = l32(this).constructor;
                            r = Reflect.construct(n, arguments, i);
                        } else r = n.apply(this, arguments);
                        return c37(this, r);
                    };
                }
                function c37(t859, e) {
                    if (e && ("object" === n219(e) || "function" == typeof e)) return e;
                    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                    return (function(t) {
                        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return t;
                    })(t859);
                }
                function l32(t860) {
                    return (l32 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    })(t860);
                }
                var d = r368(170), p22 = r368(342), y19 = r368(9), m = function(t861) {
                    !function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && h62(t, e);
                    }(c38, t861);
                    var r370, n220, o113, u95 = f52(c38);
                    function c38(t862, e529) {
                        var r;
                        return (function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        })(this, c38), (r = u95.call(this, t862, e529, "Map")).$isSchemaMap = !0, r;
                    }
                    return r370 = c38, n220 = [
                        {
                            key: "set",
                            value: function(t, e) {
                                return y19.set(t, e);
                            }
                        },
                        {
                            key: "cast",
                            value: function(t, r, n) {
                                if (t instanceof d) return t;
                                var o = this.path;
                                if (n) {
                                    var s = new d({
                                    }, o, r, this.$__schemaType);
                                    if (t instanceof e526.Map) {
                                        var a, u = i180(t.keys());
                                        try {
                                            for(u.s(); !(a = u.n()).done;){
                                                var h = a.value, f = t.get(h);
                                                f = null == f ? s.$__schemaType._castNullish(f) : s.$__schemaType.cast(f, r, !0, null, {
                                                    path: o + "." + h
                                                }), s.$init(h, f);
                                            }
                                        } catch (t) {
                                            u.e(t);
                                        } finally{
                                            u.f();
                                        }
                                    } else for(var c = 0, l = Object.keys(t); c < l.length; c++){
                                        var p = l[c], y = t[p];
                                        y = null == y ? s.$__schemaType._castNullish(y) : s.$__schemaType.cast(y, r, !0, null, {
                                            path: o + "." + p
                                        }), s.$init(p, y);
                                    }
                                    return s;
                                }
                                return new d(t, o, r, this.$__schemaType);
                            }
                        },
                        {
                            key: "clone",
                            value: function() {
                                var t = a92(l32(c38.prototype), "clone", this).call(this);
                                return null != this.$__schemaType && (t.$__schemaType = this.$__schemaType.clone()), t;
                            }
                        }
                    ], s94(r370.prototype, n220), o113 && s94(r370, o113), Object.defineProperty(r370, "prototype", {
                        writable: !1
                    }), c38;
                }(y19);
                m.prototype.OptionsConstructor = p22, m.defaultOptions = {
                }, t855.exports = m;
            }).call(this, r368(6));
        },
        function(t863, e530, r371) {
            "use strict";
            function n221(t864) {
                return (n221 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t864);
            }
            function i181(t, e) {
                for(var r = 0; r < e.length; r++){
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                }
            }
            function o(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function s(t865, e531) {
                return (s = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t;
                })(t865, e531);
            }
            function a(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t) {
                        return !1;
                    }
                }();
                return function() {
                    var r, n = h63(t);
                    if (e) {
                        var i = h63(this).constructor;
                        r = Reflect.construct(n, arguments, i);
                    } else r = n.apply(this, arguments);
                    return u96(this, r);
                };
            }
            function u96(t866, e) {
                if (e && ("object" === n221(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                })(t866);
            }
            function h63(t867) {
                return (h63 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                })(t867);
            }
            var f = function(t868) {
                !function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e && s(t, e);
                }(h, t868);
                var e532, r, n, u = a(h);
                function h() {
                    return o(this, h), u.apply(this, arguments);
                }
                return e532 = h, r && i181(e532.prototype, r), n && i181(e532, n), Object.defineProperty(e532, "prototype", {
                    writable: !1
                }), e532;
            }(r371(15)), c = r371(16);
            Object.defineProperty(f.prototype, "of", c), t863.exports = f;
        },
        function(t869, e533, r372) {
            "use strict";
            /*!
 * Creates an object that precomputes whether a given path has child fields in
 * the projection.
 *
 * ####Example:
 *     const res = hasIncludedChildren({ 'a.b.c': 0 });
 *     res.a; // 1
 *     res['a.b']; // 1
 *     res['a.b.c']; // 1
 *     res['a.c']; // undefined
 */ t869.exports = function(t) {
                for(var e = {
                }, r = 0, n = Object.keys(t); r < n.length; r++){
                    var i = n[r];
                    if (-1 !== i.indexOf(".")) for(var o = i.split("."), s = o[0], a = 0; a < o.length; ++a)e[s] = 1, a + 1 < o.length && (s = s + "." + o[a + 1]);
                    else e[i] = 1;
                }
                return e;
            };
        },
        function(t870, e534, r373) {
            "use strict";
            (function(t871) {
                /*!
 * Module dependencies.
 */ function n222(t872) {
                    return (n222 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    })(t872);
                }
                var i182 = r373(25).get().Binary, o114 = r373(32), s95 = r373(18), a = r373(52);
                /*!
 * ignore
 */ function u(e) {
                    return e && "object" === n222(e) && !(e instanceof Date) && !(e instanceof s95) && (!Array.isArray(e) || 0 !== e.length) && !(e instanceof t871) && !(e instanceof o114) && !(e instanceof i182);
                }
                e534.flatten = /*!
 * ignore
 */ function e(r, n, i, o) {
                    var s;
                    s = r && a(r) && !t871.isBuffer(r) ? Object.keys(r.toObject({
                        transform: !1,
                        virtuals: !1
                    }) || {
                    }) : Object.keys(r || {
                    });
                    var h = s.length, f = {
                    };
                    n = n ? n + "." : "";
                    for(var c = 0; c < h; ++c){
                        var l = s[c], d = r[l];
                        f[n + l] = d;
                        var p = o && o.path && o.path(n + l), y = o && o.nested && o.nested[n + l];
                        if (!p || "Mixed" !== p.instance) {
                            if (u(d)) {
                                if (i && i.skipArrays && Array.isArray(d)) continue;
                                var m = e(d, n + l, i, o);
                                for(var b in m)f[b] = m[b];
                                Array.isArray(d) && (f[n + l] = d);
                            }
                            if (y) for(var v = Object.keys(o.paths), g = 0, w = v; g < w.length; g++){
                                var _ = w[g];
                                _.startsWith(n + l + ".") && !f.hasOwnProperty(_) && (f[_] = void 0);
                            }
                        }
                    }
                    return f;
                }, e534.modifiedPaths = function e(r, n, i) {
                    var o = Object.keys(r || {
                    }), s = o.length;
                    i = i || {
                    }, n = n ? n + "." : "";
                    for(var h = 0; h < s; ++h){
                        var f = o[h], c = r[f], l = n + f;
                        if (i[l] = !0, -1 !== l.indexOf(".")) for(var d = l.split("."), p = d[0], y = 1; y < d.length; ++y)i[p] = !0, p += "." + d[y];
                        !t871.isBuffer(c) && a(c) && (c = c.toObject({
                            transform: !1,
                            virtuals: !1
                        })), u(c) && e(c, n + f, i);
                    }
                    return i;
                };
            }).call(this, r373(3).Buffer);
        },
        function(t873, e535, r374) {
            "use strict";
            function n(t874) {
                return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t874);
            }
            var i = r374(19), o = r374(346), s = r374(8);
            t873.exports = function t(e) {
                if (null != e && "object" === n(e) && !Array.isArray(e) && !e.$__) for(var r = 0, a = Object.keys(e); r < a.length; r++){
                    var u = a[r], h = e[u];
                    if (-1 === u.indexOf(".")) t(e[u]);
                    else try {
                        delete e[u], o(e, u, h);
                    } catch (t) {
                        if (!(t instanceof TypeError)) throw t;
                        throw new i('Conflicting dotted paths when setting document path, key: "'.concat(u, '", value: ').concat(s.inspect(h)));
                    }
                }
            };
        },
        function(t875, e536, r375) {
            "use strict";
            function n223(t876, e537) {
                var r376 = "undefined" != typeof Symbol && t876[Symbol.iterator] || t876["@@iterator"];
                if (!r376) {
                    if (Array.isArray(t876) || (r376 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return i183(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i183(t, e);
                    })(t876)) || e537 && t876 && "number" == typeof t876.length) {
                        r376 && (t876 = r376);
                        var n = 0, o = function() {
                        };
                        return {
                            s: o,
                            n: function() {
                                return n >= t876.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t876[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: o
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r376 = r376.call(t876);
                    },
                    n: function() {
                        var t = r376.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r376.return || r376.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function i183(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            t875.exports = function(t, e, r) {
                if (-1 !== e.indexOf(".")) {
                    var i, o = e.split("."), s = o.pop(), a = t, u = n223(o);
                    try {
                        for(u.s(); !(i = u.n()).done;){
                            var h = i.value;
                            null == a[h] && (a[h] = {
                            }), a = a[h];
                        }
                    } catch (t) {
                        u.e(t);
                    } finally{
                        u.f();
                    }
                    a[s] = r;
                } else t[e] = r;
            };
        },
        function(t877, e538, r377) {
            "use strict";
            var n = r377(14), i = r377(162);
            /*!
 * Like `schema.path()`, except with a document, because impossible to
 * determine path type without knowing the embedded discriminator key.
 */ t877.exports = function t(e, r, o) {
                for(var s = (o = o || {
                }).typeOnly, a = -1 === r.indexOf(".") ? [
                    r
                ] : r.split("."), u = null, h = "adhocOrUndefined", f = i(e.schema, e.get(e.schema.options.discriminatorKey)) || e.schema, c = 0; c < a.length; ++c){
                    var l = a.slice(0, c + 1).join(".");
                    if (null != (u = f.path(l))) {
                        if ("Mixed" === u.instance) return s ? "real" : u;
                        if (h = f.pathType(l), (u.$isSingleNested || u.$isMongooseDocumentArrayElement) && null != u.schema.discriminators) {
                            var d = u.schema.discriminators, p = e.get(l + "." + n(u, "schema.options.discriminatorKey"));
                            if (null == p || null == d[p]) continue;
                            var y = a.slice(c + 1).join(".");
                            return t(e.get(l), y, o);
                        }
                    } else h = "adhocOrUndefined";
                }
                return s ? h : u;
            };
        },
        function(t878, e539, r378) {
            "use strict";
            function n224(t879, e540) {
                var r379 = "undefined" != typeof Symbol && t879[Symbol.iterator] || t879["@@iterator"];
                if (!r379) {
                    if (Array.isArray(t879) || (r379 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return i184(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i184(t, e);
                    })(t879)) || e540 && t879 && "number" == typeof t879.length) {
                        r379 && (t879 = r379);
                        var n = 0, o = function() {
                        };
                        return {
                            s: o,
                            n: function() {
                                return n >= t879.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t879[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: o
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r379 = r379.call(t879);
                    },
                    n: function() {
                        var t = r379.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r379.return || r379.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function i184(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            var o115 = r378(14);
            t878.exports = function(t, e, r) {
                var i, s = null != r ? Object.keys(o115(t.tree, r, {
                })) : Object.keys(t.tree), a = new Set(Object.keys(e));
                if (a.size > 1) {
                    i = new Set;
                    var u, h = n224(s);
                    try {
                        for(h.s(); !(u = h.n()).done;){
                            var f = u.value;
                            a.has(f) && i.add(f);
                        }
                    } catch (t) {
                        h.e(t);
                    } finally{
                        h.f();
                    }
                    var c, l = n224(a);
                    try {
                        for(l.s(); !(c = l.n()).done;){
                            var d = c.value;
                            i.has(d) || i.add(d);
                        }
                    } catch (t880) {
                        l.e(t880);
                    } finally{
                        l.f();
                    }
                    i = Array.from(i);
                } else i = Array.from(a);
                return i;
            };
        },
        function(t881, e541, r380) {
            "use strict";
            function n(t882) {
                return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t882);
            }
            var i = r380(92);
            /*!
 * ignore
 */ t881.exports = function t(e) {
                if (null == e) return null;
                var r = Object.keys(e), o = r.length, s = null;
                if (1 === o && "_id" === r[0]) s = !e._id;
                else for(; o--;){
                    var a = r[o];
                    if ("_id" !== a && i(e[a])) {
                        s = null != e[a] && "object" === n(e[a]) ? t(e[a]) : !e[a];
                        break;
                    }
                }
                return s;
            };
        },
        function(t883, e542, r381) {
            "use strict";
            function n225(t884, e543) {
                var r382 = "undefined" != typeof Symbol && t884[Symbol.iterator] || t884["@@iterator"];
                if (!r382) {
                    if (Array.isArray(t884) || (r382 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return i(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
                    })(t884)) || e543 && t884 && "number" == typeof t884.length) {
                        r382 && (t884 = r382);
                        var n = 0, o = function() {
                        };
                        return {
                            s: o,
                            n: function() {
                                return n >= t884.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t884[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: o
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r382 = r382.call(t884);
                    },
                    n: function() {
                        var t = r382.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r382.return || r382.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function i(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            var o116 = r381(4);
            /*!
 * If populating a path within a document array, make sure each
 * subdoc within the array knows its subpaths are populated.
 *
 * ####Example:
 *     const doc = await Article.findOne().populate('comments.author');
 *     doc.comments[0].populated('author'); // Should be set
 */ t883.exports = function(t, e) {
                if (null != t._id && null != e && 0 !== e.length) {
                    var r, i = String(t._id), s = n225(e);
                    try {
                        for(s.s(); !(r = s.n()).done;){
                            var a = r.value;
                            if (!a.isVirtual) for(var u = a.path.split("."), h = 0; h < u.length - 1; ++h){
                                var f = u.slice(0, h + 1).join("."), c = u.slice(h + 1).join("."), l = t.get(f);
                                if (null != l && o116.isMongooseDocumentArray(l)) {
                                    for(var d = 0; d < l.length; ++d)l[d].populated(c, null == a._docs[i] ? void 0 : a._docs[i][d], a);
                                    break;
                                }
                            }
                        }
                    } catch (t) {
                        s.e(t);
                    } finally{
                        s.f();
                    }
                }
            };
        },
        function(t885, e544, r383) {
            "use strict";
            /*!
 * Module dependencies
 */ function n226(t886) {
                return (n226 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t886);
            }
            function i185(t887, e545) {
                var r384 = "undefined" != typeof Symbol && t887[Symbol.iterator] || t887["@@iterator"];
                if (!r384) {
                    if (Array.isArray(t887) || (r384 = (function(t, e) {
                        if (!t) return;
                        if ("string" == typeof t) return o117(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        "Object" === r && t.constructor && (r = t.constructor.name);
                        if ("Map" === r || "Set" === r) return Array.from(t);
                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return o117(t, e);
                    })(t887)) || e545 && t887 && "number" == typeof t887.length) {
                        r384 && (t887 = r384);
                        var n = 0, i = function() {
                        };
                        return {
                            s: i,
                            n: function() {
                                return n >= t887.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t887[n++]
                                };
                            },
                            e: function(t) {
                                throw t;
                            },
                            f: i
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r384 = r384.call(t887);
                    },
                    n: function() {
                        var t = r384.next();
                        return a = t.done, t;
                    },
                    e: function(t) {
                        u = !0, s = t;
                    },
                    f: function() {
                        try {
                            a || null == r384.return || r384.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function o117(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];
                return n;
            }
            var s96 = r383(352), a93 = r383(14), u97 = r383(57), h64 = r383(92), f53 = r383(41);
            /*!
 * Set each path query option to lean
 *
 * @param {Object} option
 */ function c39(t888) {
                return function(e) {
                    e.options || (e.options = {
                    }), null != t888 && Array.isArray(t888.virtuals) && ((t888 = Object.assign({
                    }, t888)).virtuals = t888.virtuals.filter(function(t) {
                        return "string" == typeof t && t.startsWith(e.path + ".");
                    }).map(function(t) {
                        return t.slice(e.path.length + 1);
                    })), e.options.lean = t888;
                };
            }
            /*!
 * Handle the `WriteOpResult` from the server
 */ /*!
 * Prepare a set of path options for query population.
 *
 * @param {Query} query
 * @param {Object} options
 * @return {Array}
 */ e544.preparePopulationOptions = function(t889, e546) {
                var r = t889.options.populate, n = Object.keys(r).reduce(function(t, e) {
                    return t.concat([
                        r[e]
                    ]);
                }, []);
                return null != e546.lean && n.filter(function(t) {
                    return null == (t && t.options && t.options.lean);
                }).forEach(c39(e546.lean)), n.forEach(function(e) {
                    e._localModel = t889.model;
                }), n;
            }, /*!
 * Prepare a set of path options for query population. This is the MongooseQuery
 * version
 *
 * @param {Query} query
 * @param {Object} options
 * @return {Array}
 */ e544.preparePopulationOptionsMQ = function(t890, e547) {
                var r = t890._mongooseOptions.populate, n = Object.keys(r).reduce(function(t, e) {
                    return t.concat([
                        r[e]
                    ]);
                }, []);
                null != e547.lean && n.filter(function(t) {
                    return null == (t && t.options && t.options.lean);
                }).forEach(c39(e547.lean));
                var i = t890 && t890.options && t890.options.session || null;
                null != i && n.forEach(function(t) {
                    null != t.options ? "session" in t.options || (t.options.session = i) : t.options = {
                        session: i
                    };
                });
                var o = t890._fieldsForExec();
                return n.forEach(function(t) {
                    t._queryProjection = o;
                }), n.forEach(function(e) {
                    e._localModel = t890.model;
                }), n;
            }, /*!
 * If the document is a mapped discriminator type, it returns a model instance for that type, otherwise,
 * it returns an instance of the given model.
 *
 * @param {Model}  model
 * @param {Object} doc
 * @param {Object} fields
 *
 * @return {Document}
 */ e544.createModel = function(t, r, n, i, o) {
                t.hooks.execPreSync("createModel", r);
                var s = t.schema ? t.schema.discriminatorMapping : null, a = s && s.isRoot ? s.key : null, h = r[a];
                if (a && h && t.discriminators) {
                    var c = t.discriminators[h] || u97(t.discriminators, h);
                    if (c) {
                        var l = f53(i);
                        return e544.applyPaths(l, c.schema), new c(void 0, l, !0);
                    }
                }
                var d = {
                    skipId: !0,
                    isNew: !1,
                    willInit: !0
                };
                return null != o && "defaults" in o && (d.defaults = o.defaults), new t(void 0, n, d);
            }, /*!
 * ignore
 */ e544.applyPaths = function(t, e548) {
                var r, o118, u98;
                if (t) {
                    for(u98 = (o118 = Object.keys(t)).length; u98--;)if ("+" !== o118[u98][0]) {
                        var f = t[o118[u98]];
                        if (h64(f)) {
                            r = !f;
                            break;
                        }
                    }
                }
                var c = [], l = [], d22 = [];
                switch((function e(n227, i) {
                    if (i || (i = ""), -1 !== d22.indexOf(n227)) return [];
                    d22.push(n227);
                    var o = [];
                    return n227.eachPath(function(n, a) {
                        i && (n = i + "." + n);
                        var u = E(n, a);
                        if (null != u || Array.isArray(a) || !a.$isMongooseArray || a.$isMongooseDocumentArray || (u = E(n, a.caster)), null != u && o.push(u), a.schema) {
                            var h = e(a.schema, n);
                            !1 === r && s96(t, n, a.schema, c, h);
                        }
                    }), d22.pop(), o;
                })(e548), r){
                    case !0:
                        var p23, y20 = i185(l);
                        try {
                            for(y20.s(); !(p23 = y20.n()).done;){
                                var m = p23.value;
                                t[m] = 0;
                            }
                        } catch (t891) {
                            y20.e(t891);
                        } finally{
                            y20.f();
                        }
                        break;
                    case !1:
                        e548 && e548.paths._id && e548.paths._id.options && !1 === e548.paths._id.options.select && (t._id = 0);
                        var b, v = i185(c);
                        try {
                            for(v.s(); !(b = v.n()).done;){
                                var g = b.value;
                                t[g] = t[g] || 1;
                            }
                        } catch (t892) {
                            v.e(t892);
                        } finally{
                            v.f();
                        }
                        break;
                    case void 0:
                        if (null == t) break;
                        for(var w = 0, _ = Object.keys(t || {
                        }); w < _.length; w++){
                            var M = _[w];
                            M.startsWith("+") && delete t[M];
                        }
                        var S, O = i185(l);
                        try {
                            for(O.s(); !(S = O.n()).done;){
                                var A = S.value;
                                t[A] = 0;
                            }
                        } catch (t893) {
                            O.e(t893);
                        } finally{
                            O.f();
                        }
                }
                function E(e, i) {
                    var s = "+" + e, u = t && s in t;
                    if (u && delete t[s], "boolean" == typeof i.selected) {
                        if (u) return delete t[s], void (!1 === r && o118.length > 1 && !~o118.indexOf(e) && (t[e] = 1));
                        for(var h = e.split("."), f = "", d = 0; d < h.length; ++d)if (f += f.length ? "." + h[d] : h[d], -1 !== l.indexOf(f)) return;
                        if (!r && i && i.options && i.options.$skipDiscriminatorCheck) for(var p = "", y = 0; y < h.length; ++y){
                            p += (0 === p.length ? "" : ".") + h[y];
                            var m = a93(t, p, !1) || a93(t, p + ".$", !1);
                            if (m && "object" !== n226(m)) return;
                        }
                        return (i.selected ? c : l).push(e), e;
                    }
                }
            }, e544.handleDeleteWriteOpResult = function(t) {
                return function(e, r) {
                    if (e) return t(e);
                    var n = Object.assign({
                    }, r.result);
                    return null != (r && r.result && r.result.n || null) && (n.deletedCount = r.result.n), null != r.deletedCount && (n.deletedCount = r.deletedCount), t(null, n);
                };
            };
        },
        function(t894, e549, r385) {
            "use strict";
            t894.exports = function(t895, e, r386, n, i) {
                var o = Object.keys(t895).reduce(function(t, r) {
                    return t || r.startsWith(e + ".");
                }, !1), s = e + "." + r386.options.discriminatorKey;
                o || 1 !== i.length || i[0] !== s || n.splice(n.indexOf(s), 1);
            };
        },
        function(t896, e, r) {
            "use strict";
            function n(t897) {
                return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t;
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                })(t897);
            }
            t896.exports = function(t) {
                return !!t && ("object" === n(t) || "function" == typeof t) && "function" == typeof t.then;
            };
        },
        function(t898, e550, r387) {
            "use strict";
            var n = /\./g;
            t898.exports = function(t) {
                if (-1 === t.indexOf(".")) return [
                    t
                ];
                for(var e = t.split(n), r = e.length, i = new Array(r), o = "", s = 0; s < r; ++s)o += 0 !== o.length ? "." + e[s] : e[s], i[s] = o;
                return i;
            };
        },
        function(t899, e551, r388) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n = r388(13), i186 = r388(12).EventEmitter, o = r388(7), s = r388(85), a = r388(18), u99 = o.ValidationError, h = r388(157), f = r388(33);
            function c(t, e, r, i, u) {
                if (!(this instanceof c)) return new c(t, e, r, i, u);
                if (f(e) && !e.instanceOfSchema && (e = new s(e)), e = this.schema || e, !this.schema && e.options._id && void 0 === (t = t || {
                })._id && (t._id = new a), !e) throw new o.MissingSchemaError;
                for(var l in this.$__setSchema(e), n.call(this, t, r, i, u), h(this, e, {
                    decorateDoc: !0
                }), e.methods)this[l] = e.methods[l];
                for(var d in e.statics)this[d] = e.statics[d];
            }
            /*!
 * Inherit from the NodeJS document
 */ c.prototype = Object.create(n.prototype), c.prototype.constructor = c, /*!
 * ignore
 */ c.events = new i186, /*!
 * Browser doc exposes the event emitter API
 */ c.$emitter = new i186, [
                "on",
                "once",
                "emit",
                "listeners",
                "removeListener",
                "setMaxListeners",
                "removeAllListeners",
                "addListener"
            ].forEach(function(t) {
                c[t] = function() {
                    return c.$emitter[t].apply(c.$emitter, arguments);
                };
            }), /*!
 * Module exports.
 */ c.ValidationError = u99, t899.exports = c;
        }
    ]);
});

},{}]},["emU3S","j1F46","hD4hw"], "hD4hw", "parcelRequiredaf3")

//# sourceMappingURL=index.379dd93c.js.map
